var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/API.html",[0,0.246,1,1.383]],["body/classes/API.html",[0,0.457,1,2.792,2,0.882,3,0.114,4,0.053,5,0.077,6,5.284,7,3.123,8,0.077,9,0.232,10,0.345,11,2.017,12,2.477,13,0.247,14,3.339,15,5.036,16,0.199,17,0.474,18,1.434,19,1.892,20,0.38,21,3.863,22,0.44,23,0.233,24,6.539,25,0.302,26,0.011,27,0.302,28,5.035,29,0.715,30,5.035,31,5.035,32,5.065,33,5.035,34,5.028,35,5.035,36,1.993,37,5.035,38,1.114,39,0.365,40,0.261,41,1.702,42,0.549,43,2.505,44,2.505,45,2.34,46,1.872,47,2.109,48,1.58,49,1.872,50,0.789,51,1.818,52,1.533,53,0.18,54,2.055,55,4.277,56,4.277,57,4.056,58,3.123,59,1.997,60,0.553,61,0.749,62,1.717,63,3.491,64,3.491,65,2.842,66,3.491,67,3.491,68,3.491,69,1.084,70,3.491,71,1.818,72,3.491,73,3.491,74,3.491,75,3.491,76,2.294,77,3.692,78,3.537,79,4.277,80,3.268,81,1.38,82,3.123,83,4.056,84,3.491,85,1.249,86,3.491,87,3.491,88,3.491,89,0.982,90,1.537,91,1.929,92,3.491,93,3.491,94,4.535,95,4.535,96,1.624,97,3.491,98,3.491,99,4.056,100,3.491,101,3.491,102,0.997,103,1.008,104,3.491,105,3.491,106,3.491,107,3.491,108,3.491,109,3.491,110,3.537,111,3.491,112,2.432,113,2.261,114,2.782,115,2.936,116,3.397,117,3.397,118,3.268,119,2.615,120,2.615,121,2.615,122,3.491,123,2.723,124,3.491,125,2.425,126,2.425,127,3.293,128,2.187,129,3.491,130,1.624,131,0.789,132,3.491,133,2.615,134,2.34,135,2.615,136,2.425,137,2.516,138,2.615,139,2.664,140,3.491,141,3.491,142,4.291,143,3.123,144,3.15,145,4.277,146,4.056,147,5.065,148,5.065,149,4.535,150,4.75,151,4.535,152,3.491,153,1.31,154,3.498,155,3.491,156,3.491,157,3.491,158,3.491,159,3.123,160,3.491,161,3.491,162,3.491,163,3.491,164,3.491,165,0.006,166,0.007,167,0.006]],["title/classes/APIDefinition.html",[0,0.246,168,1.346]],["body/classes/APIDefinition.html",[0,0.401,1,2.458,2,0.978,3,0.126,4,0.058,5,0.085,8,0.085,9,0.247,10,0.347,13,0.257,16,0.192,17,0.506,18,1.531,19,2.021,22,0.44,23,0.235,25,0.323,26,0.011,27,0.323,36,2.091,38,0.951,39,0.506,40,0.183,53,0.158,60,0.529,61,0.699,65,3.943,153,1.19,165,0.006,166,0.008,167,0.006,168,2.742,169,6.884,170,2.007,171,4.466,172,1.162,173,4.985,174,6.703,175,5.588,176,5.582,177,5.582,178,5.582,179,5.582,180,5.582,181,5.582,182,2.845,183,5.582,184,5.174,185,2.674,186,1.415,187,0.692,188,6.142,189,4.909,190,2.274,191,6.142,192,4.909,193,6.142,194,4.909,195,2.92,196,2.274,197,4.909,198,4.909,199,3.154,200,1.492,201,0.925,202,1.705,203,4.466,204,4.135,205,4.909,206,3.298,207,2.204,208,2.204,209,6.142,210,4.909,211,4.909,212,4.909,213,2.758,214,4.909,215,4.909,216,2.274,217,4.909,218,4.909,219,4.909,220,4.909,221,3.253,222,3.151,223,7.232,224,3.871,225,2.688,226,3.871,227,2.506,228,3.871,229,3.651,230,3.871,231,3.871,232,4.909,233,4.909,234,2.274,235,2.274,236,4.909,237,4.135,238,4.909,239,4.466,240,4.909,241,4.909,242,6.142,243,1.959,244,4.909,245,4.909,246,4.909,247,4.909,248,4.909,249,4.909]],["title/injectables/APIGatewayService.html",[41,1.116,82,2.66]],["body/injectables/APIGatewayService.html",[0,0.455,1,2.765,3,0.112,4,0.052,5,0.076,6,5.213,7,3.081,8,0.076,9,0.23,10,0.339,11,1.782,12,1.694,13,0.24,14,2.815,15,3.444,16,0.196,17,0.47,18,1.428,20,0.375,21,2.934,22,0.443,23,0.229,25,0.333,26,0.011,27,0.333,29,0.753,32,4.921,34,4.719,36,1.778,38,0.846,39,0.47,40,0.26,41,1.687,42,0.542,43,2.93,44,2.483,45,2.308,46,1.847,47,2.327,48,1.558,49,1.847,50,0.779,51,1.793,52,1.675,53,0.179,54,2.044,55,4.239,56,4.239,57,4.02,58,3.081,59,1.979,60,0.55,61,0.746,62,1.694,63,3.444,64,3.444,65,2.804,66,3.444,67,3.444,68,3.444,69,1.075,70,3.444,71,1.793,72,3.444,73,3.444,74,3.444,75,3.444,76,2.683,77,3.659,78,3.506,79,4.239,80,3.239,81,1.368,82,4.02,83,4.744,84,4.494,85,1.37,86,5.003,87,5.003,88,5.003,89,0.968,90,1.979,91,2.764,92,4.494,93,5.003,94,5.303,95,5.303,96,1.602,97,4.494,98,3.444,99,4.02,100,3.444,101,3.444,102,0.988,103,0.995,104,3.444,105,3.444,106,3.444,107,3.444,108,3.444,109,3.444,110,3.506,111,3.444,112,2.41,113,2.23,114,2.764,115,2.91,116,3.367,117,3.367,118,3.239,119,2.58,120,2.58,121,2.58,122,3.444,123,2.686,124,3.444,125,2.392,126,2.392,127,3.248,128,2.815,129,3.444,130,1.602,131,0.779,132,4.494,133,2.58,134,2.308,135,2.58,136,2.392,137,2.482,138,2.58,139,2.64,140,3.444,141,3.444,142,4.262,143,3.081,144,3.122,145,4.239,146,4.02,147,5.046,148,5.046,149,4.494,150,4.719,151,4.494,152,3.444,153,1.303,154,3.475,155,3.444,156,3.444,157,3.444,158,3.444,159,3.081,160,3.444,161,3.444,162,3.444,163,3.444,164,3.444,165,0.006,166,0.007,167,0.006,250,2.58,251,5.7,252,6.481,253,3.248,254,6.481,255,4.966,256,4.966,257,4.966,258,4.966,259,1.164,260,0.715,261,4.966]],["title/classes/APIPolicy.html",[0,0.246,32,2.66]],["body/classes/APIPolicy.html",[0,0.464,1,2.771,2,0.923,3,0.119,4,0.055,5,0.08,6,4.179,7,3.271,8,0.08,10,0.34,11,1.834,12,1.798,13,0.224,14,2.926,15,3.656,16,0.187,17,0.488,18,1.455,19,1.949,21,3.115,22,0.437,23,0.146,25,0.244,26,0.011,27,0.244,29,0.664,32,5.212,34,4.855,36,2.037,38,1.148,39,0.382,40,0.265,41,1.754,42,0.575,43,2.581,44,2.581,45,2.451,46,1.961,47,2.173,48,1.655,49,1.961,50,0.827,51,1.904,52,1.567,53,0.183,54,2.09,55,4.406,56,4.406,57,4.179,58,3.271,59,2.057,60,0.561,61,0.758,62,1.798,63,3.656,64,3.656,65,2.977,66,3.656,67,3.656,68,3.656,69,1.117,70,3.656,71,1.904,72,3.656,73,3.656,74,3.656,75,3.656,76,2.364,77,3.803,78,3.644,79,4.406,80,3.367,81,1.422,82,3.271,83,4.179,84,3.656,85,1.267,86,3.656,87,3.656,88,3.656,89,1.028,90,1.61,91,2.02,92,3.656,93,3.656,94,4.672,95,4.672,96,1.701,97,3.656,98,3.656,99,4.179,100,3.656,101,3.656,102,1.027,103,1.056,104,3.656,105,3.656,106,3.656,107,3.656,108,3.656,109,3.656,110,3.644,111,3.656,112,2.505,113,2.368,114,2.844,115,3.025,116,3.499,117,3.499,118,3.367,119,2.739,120,2.739,121,2.739,122,3.656,123,2.852,124,3.656,125,2.539,126,2.539,127,3.449,128,2.29,129,3.656,130,1.701,131,0.827,132,3.656,133,2.739,134,2.451,135,2.739,136,2.539,137,2.635,138,2.739,139,2.744,140,3.656,141,3.656,142,4.386,143,3.271,144,3.245,145,4.406,146,4.179,147,5.128,148,5.128,149,4.672,150,4.855,151,4.672,152,3.656,153,1.333,154,3.576,155,3.656,156,3.656,157,3.656,158,3.656,159,3.271,160,3.656,161,3.656,162,3.656,163,3.656,164,3.656,165,0.006,166,0.008,167,0.006,262,5.272]],["title/components/AboutComponent.html",[263,0.565,264,1.241]],["body/components/AboutComponent.html",[0,0.314,3,0.124,4,0.057,5,0.121,8,0.083,9,0.244,10,0.288,13,0.256,16,0.156,17,0.5,20,0.414,23,0.209,25,0.253,26,0.01,27,0.253,38,0.933,39,0.397,40,0.226,42,0.597,53,0.124,81,1.674,165,0.006,166,0.008,167,0.006,172,1.152,187,1.013,200,1.844,201,1.405,263,0.995,264,2.295,265,2.165,266,1.463,267,1.718,268,1.766,269,4.816,270,1.503,271,2.156,272,2.422,273,2.288,274,6.9,275,5.67,276,7.932,277,4.816,278,4.336,279,5.476,280,5.476,281,1.576,282,5.476,283,1.628,284,3.091,285,1.718,286,2.737,287,2.637,288,1.978,289,1.618,290,3.235,291,4.816,292,5.476,293,6.9,294,7.932,295,6.9,296,3.895,297,5.112,298,4.076,299,6.9,300,6.9,301,6.9,302,5.112,303,1.844,304,6.069,305,4.28,306,5.112,307,5.112,308,1.672,309,2.226,310,2.107,311,1.187,312,1.142,313,1.766,314,1.766,315,1.585,316,1.766,317,1.585,318,2.56,319,1.718,320,2.692,321,1.585,322,1.718,323,1.585,324,1.718,325,1.766,326,1.628,327,1.766,328,1.628,329,1.766,330,1.585,331,1.766,332,1.585,333,1.766,334,1.628,335,1.766,336,1.585,337,1.628,338,1.766,339,1.628,340,2.226,341,1.628,342,2.226,343,1.585,344,1.766,345,1.628,346,2.051,347,1.766,348,1.628,349,2.186,350,1.766,351,1.585,352,1.766,353,1.585,354,1.766,355,1.585,356,1.718,357,1.628,358,1.503,359,1.766,360,1.585,361,2.226,362,1.628,363,1.628,364,2.226,365,1.766,366,1.585,367,1.585,368,1.766,369,1.628,370,1.471,371,1.628,372,1.766,373,1.585,374,1.585,375,1.766,376,1.585,377,1.766,378,1.628,379,1.766,380,1.585,381,1.585,382,1.628,383,1.766,384,1.585,385,1.766,386,1.628,387,1.585,388,1.766,389,1.585,390,1.766,391,1.585,392,1.766,393,1.585,394,1.766,395,1.585,396,1.766,397,1.585,398,1.766,399,1.585,400,1.718,401,1.585,402,1.628,403,1.766,404,1.503,405,1.425,406,1.766,407,1.543,408,1.766,409,1.503,410,1.997,411,1.766,412,1.503,413,1.766,414,1.503,415,1.672,416,1.766]],["title/classes/Action.html",[0,0.246,417,1.463]],["body/classes/Action.html",[0,0.422,2,0.446,3,0.09,4,0.07,5,0.098,8,0.039,9,0.142,10,0.35,11,1.22,12,1.909,13,0.256,16,0.187,17,0.29,18,1.425,19,1.158,20,0.529,22,0.448,23,0.217,25,0.118,26,0.011,27,0.118,29,0.762,36,1.92,38,0.434,39,0.358,40,0.162,50,1.197,53,0.172,54,0.68,59,1.972,60,0.577,61,0.815,62,0.868,69,1.245,71,1.445,76,1.404,81,0.538,102,0.985,103,1.294,131,1.316,153,1.226,165,0.003,166,0.005,167,0.003,168,1.55,170,0.581,172,1.03,182,1.037,185,1.965,186,0.646,187,0.754,190,2.752,195,1.532,196,1.037,200,1.726,201,0.422,202,2.198,207,1.005,208,1.951,213,1.005,216,1.037,221,1.037,234,1.629,235,1.629,243,0.893,260,1.007,289,0.597,303,1.87,312,0.972,370,0.458,417,2.386,418,1.005,419,2.354,420,4,421,4,422,4,423,4,424,4,425,4,426,4,427,1.893,428,2.022,429,2.354,430,4,431,2.546,432,2.546,433,2.546,434,2.546,435,2.546,436,2.546,437,2.546,438,2.546,439,2.546,440,2.546,441,2.546,442,2.546,443,0.68,444,0.799,445,1.713,446,2.018,447,1.737,448,1.737,449,1.106,450,1.005,451,1.106,452,1.106,453,1.106,454,1.106,455,1.106,456,2.012,457,1.532,458,2.354,459,2.354,460,1.951,461,2.077,462,2.077,463,2.75,464,1.106,465,1.106,466,1.106,467,1.07,468,1.532,469,2.354,470,1.532,471,2.077,472,1.737,473,1.629,474,1.106,475,1.106,476,1.106,477,1.106,478,1.106,479,1.106,480,1.106,481,1.106,482,1.106,483,1.106,484,1.106,485,1.682,486,1.106,487,2.146,488,3.126,489,2.432,490,1.737,491,1.737,492,1.737,493,1.106,494,1.251,495,3.096,496,1.106,497,1.106,498,2.146,499,1.106,500,1.106,501,1.737,502,1.737,503,2.934,504,0.799,505,1.784,506,2.28,507,2.146,508,2.146,509,2.643,510,2.146,511,2.146,512,2.146,513,2.146,514,2.146,515,2.146,516,2.479,517,1.106,518,1.682,519,1.737,520,1.737,521,1.106,522,1.106,523,1.106,524,1.106,525,1.106,526,1.106,527,1.106,528,1.106,529,1.106,530,2.934,531,1.106,532,1.106,533,1.106,534,1.737,535,1.106,536,1.737,537,1.07,538,1.106,539,1.737,540,1.106,541,1.106,542,1.106,543,1.106,544,1.106,545,1.106,546,1.106,547,2.083,548,0.867,549,1.106,550,1.106,551,1.629,552,1.106,553,1.106,554,1.07,555,1.106,556,1.106,557,1.106,558,1.106,559,1.106,560,1.737,561,1.737,562,1.737,563,1.106,564,1.106,565,1.106,566,1.106,567,1.106,568,1.106,569,1.106,570,2.146,571,1.106,572,1.106,573,1.106,574,1.106,575,1.106,576,1.106,577,1.106,578,1.106,579,1.106,580,1.737,581,1.106,582,1.106,583,1.106,584,1.106,585,1.106,586,1.106,587,1.106,588,1.106,589,1.106,590,2.146,591,1.106,592,1.737,593,1.106,594,1.737,595,1.737,596,2.146,597,1.737,598,1.737,599,1.106,600,1.737,601,2.198,602,1.106,603,2.432,604,1.737,605,1.737,606,1.737,607,1.106,608,1.106,609,1.005,610,1.757,611,1.106,612,1.532,613,1.07,614,1.106,615,1.106,616,1.106,617,1.07,618,1.106,619,1.106,620,1.106,621,1.682,622,1.106,623,1.106,624,1.106,625,2.146,626,1.106,627,1.106,628,1.106,629,1.106,630,1.106,631,1.106,632,1.106,633,1.106,634,1.106,635,1.106,636,1.106,637,1.106,638,1.106,639,1.106,640,1.106,641,1.737,642,1.106,643,1.737,644,1.682,645,1.106,646,0.92,647,1.106,648,1.037,649,1.106,650,1.106,651,1.106,652,0.844,653,1.737,654,1.005,655,1.005,656,2.012,657,1.07,658,1.07,659,1.037,660,1.07,661,1.106,662,1.106,663,1.106,664,1.106,665,1.106,666,1.734,667,0.868,668,1.106,669,1.106,670,1.106,671,1.106,672,1.106,673,1.106,674,1.106,675,1.106,676,1.106,677,1.106,678,1.106,679,1.106,680,1.106,681,0.844,682,1.106,683,1.037,684,1.106,685,1.963,686,1.07,687,1.106,688,1.106,689,1.106,690,1.106,691,1.037,692,2.42,693,1.07,694,0.868,695,1.106,696,1.106,697,1.106,698,1.106,699,1.106,700,1.106,701,1.685,702,1.106,703,1.106,704,1.737,705,1.07,706,2.432,707,1.106,708,1.106,709,1.629,710,2.934,711,1.737,712,1.106,713,1.737,714,1.737,715,1.737,716,1.106,717,0.947,718,1.629,719,1.737,720,1.737,721,1.106,722,1.106,723,0.975,724,1.106,725,1.737,726,1.106,727,1.106,728,1.106,729,1.106,730,1.106,731,1.106,732,1.106,733,1.106,734,1.106,735,1.106,736,1.106,737,1.106,738,1.737,739,2.198,740,1.07,741,1.629,742,1.893,743,1.106,744,1.106,745,1.106,746,1.106,747,1.106,748,1.106,749,1.106,750,1.037,751,1.037,752,1.682,753,1.106,754,1.106,755,1.106,756,1.106,757,1.07,758,1.106,759,1.106,760,1.106,761,1.07,762,1.106,763,1.106,764,1.106,765,1.106,766,1.106,767,1.106,768,1.106,769,1.106,770,1.106,771,1.106,772,1.106,773,1.106,774,1.106,775,1.106,776,1.106,777,2.403,778,2.432,779,1.638,780,2.146,781,2.643,782,2.643,783,1.737,784,1.488,785,1.682,786,1.682,787,1.106,788,1.106,789,1.127,790,1.58,791,1.58,792,1.106,793,1.037,794,1.364,795,2.146,796,1.629,797,1.07,798,1.963,799,1.106,800,1.106,801,1.106,802,1.106,803,1.106,804,1.106,805,1.07,806,1.106,807,1.106,808,1.106,809,1.106,810,1.106,811,1.106,812,1.07,813,2.146,814,1.106,815,1.106,816,1.106,817,1.106,818,1.106,819,1.106,820,1.106,821,1.106,822,1.106,823,1.106,824,1.106,825,1.106,826,1.106,827,1.106,828,1.106,829,1.106,830,1.106,831,1.106,832,1.106,833,1.005,834,1.037,835,1.106,836,1.106,837,1.07,838,1.106,839,1.106,840,1.07,841,1.106,842,1.07,843,1.106,844,1.07,845,1.106,846,1.07,847,1.106,848,1.106,849,1.106,850,1.106,851,1.106,852,1.106,853,1.106,854,1.106,855,1.106,856,1.106,857,1.67,858,1.106,859,1.106,860,1.106,861,1.106,862,1.106,863,1.106,864,1.106,865,1.629,866,1.106,867,1.58,868,1.037,869,0.947,870,1.682,871,1.07,872,1.07,873,1.07,874,1.07,875,1.07,876,1.07,877,1.106,878,0.947,879,1.106,880,1.106]],["title/classes/Action-1.html",[0,0.205,103,0.715,417,1.218]],["body/classes/Action-1.html",[0,0.327,2,0.719,3,0.093,4,0.043,5,0.062,8,0.062,9,0.202,10,0.345,11,1.408,13,0.232,16,0.182,20,0.31,22,0.432,23,0.205,25,0.19,26,0.011,27,0.19,40,0.264,42,0.447,53,0.129,60,0.516,61,0.817,69,0.68,78,2.219,81,1.569,85,1.166,89,0.8,102,0.625,103,1.311,123,2.219,131,1.027,136,1.976,139,3.134,153,1.206,154,3.153,165,0.007,166,0.006,167,0.005,185,1.44,186,1.04,187,1.013,200,2.056,201,0.68,202,1.999,224,4.54,225,3.407,226,3.952,227,2.559,228,3.952,230,3.952,231,4.54,263,0.751,271,0.962,273,1.36,283,1.219,285,1.287,297,4.85,298,4.179,303,1.891,312,0.591,318,1.187,336,1.187,349,1.187,351,1.187,356,2.055,382,1.694,417,2.691,445,2.268,494,0.844,548,0.889,652,2.171,709,1.671,777,3.116,789,1.156,791,1.62,857,1.126,881,5.66,882,3.039,883,5.698,884,5.698,885,4.102,886,1.694,887,3.082,888,3.435,889,2.823,890,3.58,891,2.183,892,1.482,893,5.012,894,3.608,895,3.608,896,3.608,897,3.282,898,2.745,899,2.219,900,2.219,901,2.683,902,3.282,903,4.102,904,3.608,905,3.608,906,3.608,907,6.547,908,6.222,909,4.102,910,4.102,911,4.102,912,5.238,913,4.102,914,4.102,915,4.102,916,2.424,917,2.131,918,2.131,919,3.282,920,3.608,921,3.282,922,4.102,923,3.608,924,4.102,925,2.845,926,3.608,927,2.316,928,3.608,929,4.102,930,1.253,931,6.128,932,4.102,933,4.627,934,6.547,935,4.85,936,5.698,937,4.85,938,4.102,939,5.758,940,5.698,941,2.545,942,4.102,943,4.102,944,4.102,945,5.012,946,3.608,947,4.102,948,3.608,949,2.683,950,4.102,951,4.102,952,4.102,953,4.102,954,6.547,955,5.698,956,3.608,957,4.102,958,4.102,959,4.102,960,4.102,961,4.102,962,5.032,963,5.758,964,4.282,965,5.238,966,5.012,967,3.727,968,3.952,969,5.012,970,3.727,971,8.272,972,6.547,973,7.185,974,4.612,975,5.012,976,3.535,977,5.698,978,4.102,979,6.547,980,5.012,981,5.698,982,4.102,983,5.012,984,4.102,985,3.282,986,3.608,987,5.758,988,2.545,989,4.559,990,4.102,991,5.66,992,7.074,993,4.102,994,4.102,995,7.47,996,4.102,997,4.102,998,4.102,999,4.102,1000,4.102,1001,4.102,1002,4.102,1003,5.507,1004,3.608,1005,4.221,1006,4.102,1007,4.221,1008,5.012,1009,4.102,1010,3.282,1011,3.282,1012,4.102,1013,3.608,1014,5.758,1015,3.952,1016,4.102,1017,3.608,1018,4.102,1019,4.102,1020,2.683,1021,4.102,1022,3.608,1023,5.698,1024,4.102,1025,5.758,1026,4.102,1027,5.698,1028,4.772,1029,4.102,1030,4.102,1031,4.102,1032,5.698,1033,5.012,1034,4.221,1035,4.559,1036,4.102,1037,4.102,1038,4.102,1039,3.608,1040,4.102,1041,4.102,1042,3.608,1043,4.102,1044,4.102]],["title/components/ActionComponent.html",[263,0.565,315,1.241]],["body/components/ActionComponent.html",[0,0.214,1,2.616,3,0.084,4,0.039,5,0.103,8,0.057,9,0.189,10,0.347,13,0.232,16,0.198,17,0.386,20,0.282,22,0.376,23,0.245,25,0.172,26,0.011,27,0.172,29,0.735,39,0.569,40,0.262,42,0.407,53,0.084,60,0.555,61,0.658,69,1.237,76,1.87,77,3.009,78,2.883,80,2.664,81,1.575,85,1.3,89,0.728,102,0.569,131,0.585,165,0.004,166,0.006,167,0.004,172,0.948,187,0.889,201,1.19,204,3.949,225,2.567,259,1.59,260,1.266,263,0.819,264,1.08,265,1.673,266,0.997,267,1.171,268,1.204,270,1.024,271,2.124,272,1.628,273,1.768,278,1.938,281,1.639,283,1.109,285,1.171,286,1.865,287,1.797,288,2.246,303,1.662,308,1.14,309,1.719,310,1.628,311,0.809,312,1.074,313,1.204,314,1.204,315,1.963,316,1.204,317,1.08,318,2.42,319,1.171,320,2.407,321,1.08,322,1.171,323,1.08,324,1.171,325,1.204,326,1.109,327,1.204,328,1.109,329,1.204,330,1.08,331,1.204,332,1.08,333,1.204,334,1.109,335,1.204,336,1.08,337,1.109,338,1.204,339,1.109,340,1.719,341,1.109,342,1.719,343,1.08,344,1.204,345,1.109,346,1.584,347,1.204,348,1.109,349,1.799,350,1.204,351,1.08,352,1.204,353,1.08,354,1.204,355,1.08,356,1.171,357,1.109,358,1.024,359,1.204,360,1.08,361,1.719,362,1.109,363,1.109,364,1.719,365,1.204,366,1.08,367,1.08,368,1.204,369,1.109,370,1.291,371,1.109,372,1.204,373,1.08,374,1.08,375,1.204,376,1.08,377,1.204,378,1.109,379,1.204,380,1.08,381,1.08,382,1.109,383,1.204,384,1.08,385,1.204,386,1.109,387,1.08,388,1.204,389,1.08,390,1.204,391,1.08,392,1.204,393,1.08,394,1.204,395,1.08,396,1.204,397,1.08,398,1.204,399,1.08,400,1.171,401,1.08,402,1.109,403,1.204,404,1.024,405,0.971,406,1.204,407,1.051,408,1.204,409,1.024,410,1.542,411,1.204,412,1.024,413,1.204,414,1.024,415,1.14,416,1.204,417,2.766,427,2.382,428,1.925,494,1.534,548,1.155,779,2.812,786,3.137,789,1.502,796,2.171,797,2.241,798,2.407,857,1.706,886,1.848,887,3.364,888,2.852,889,2.38,890,2.567,891,1.43,892,1.348,908,4.688,912,4.265,930,2.071,931,3.949,941,4.208,1020,4.067,1045,3.282,1046,5.33,1047,4.975,1048,6.783,1049,6.218,1050,6.218,1051,6.783,1052,6.783,1053,4.975,1054,6.783,1055,6.218,1056,4.067,1057,6.783,1058,6.783,1059,6.218,1060,6.783,1061,6.783,1062,5.025,1063,5.427,1064,6.783,1065,5.427,1066,6.783,1067,5.427,1068,2.567,1069,3.009,1070,2.588,1071,2.599,1072,5.33,1073,2.883,1074,3.731,1075,3.731,1076,3.731,1077,3.731,1078,3.731,1079,3.731,1080,3.731,1081,3.731,1082,3.731,1083,3.731,1084,3.731,1085,3.731,1086,3.69,1087,3.731,1088,5.125,1089,5.966,1090,5.025,1091,5.966,1092,5.33,1093,5.33,1094,6.783,1095,6.783,1096,5.427,1097,3.731,1098,4.704,1099,6.783,1100,6.783,1101,3.731,1102,3.731,1103,3.731,1104,4.265,1105,3.731,1106,3.731,1107,5.33,1108,5.33,1109,3.731,1110,2.312,1111,3.731,1112,3.731,1113,3.731,1114,3.731,1115,3.731,1116,3.731,1117,2.019,1118,1.309,1119,2.019,1120,1.938,1121,2.019,1122,2.019,1123,2.019,1124,2.205,1125,2.019,1126,1.309,1127,2.986,1128,1.938,1129,2.986,1130,4.265,1131,3.731,1132,3.731,1133,6.783,1134,6.218,1135,4.975,1136,3.731,1137,3.731,1138,6.218,1139,3.731,1140,5.33,1141,2.986,1142,3.731,1143,5.33,1144,3.731,1145,3.731,1146,3.731,1147,3.731,1148,5.33,1149,5.469,1150,5.33,1151,5.33,1152,5.33,1153,5.33,1154,5.33,1155,2.986,1156,5.33,1157,5.33,1158,5.33,1159,5.33,1160,5.33,1161,5.33,1162,3.731,1163,3.731,1164,2.986,1165,2.986,1166,2.986,1167,3.731,1168,3.731,1169,3.731,1170,3.731,1171,3.731,1172,3.731,1173,3.731,1174,5.33,1175,3.731,1176,3.731,1177,3.731,1178,5.33,1179,3.731,1180,3.731,1181,3.731,1182,3.731,1183,3.731,1184,3.731,1185,3.731,1186,3.731,1187,3.731,1188,5.33,1189,2.764,1190,3.731,1191,5.33,1192,5.33,1193,5.33,1194,5.33]],["title/interfaces/ActionsComponent.html",[504,1.346,1195,2.66]],["body/interfaces/ActionsComponent.html",[0,0.392,3,0.154,4,0.071,5,0.104,8,0.104,9,0.279,16,0.154,26,0.01,40,0.259,42,0.745,53,0.178,165,0.008,166,0.009,167,0.008,172,1.042,271,1.602,289,1.602,311,1.71,370,1.23,414,1.875,415,2.087,504,2.145,1195,4.893,1196,4.739,1197,4.239,1198,5.468,1199,5.927,1200,4.44,1201,5.158,1202,3.697,1203,3.858]],["title/components/ApiGatewayInstallerComponent.html",[263,0.565,317,1.241]],["body/components/ApiGatewayInstallerComponent.html",[0,0.25,1,1.914,3,0.098,4,0.045,5,0.126,8,0.066,9,0.239,10,0.343,13,0.25,14,2.933,16,0.191,17,0.43,22,0.405,23,0.237,25,0.312,26,0.01,27,0.312,29,0.665,39,0.55,40,0.238,42,0.475,50,0.931,53,0.098,59,1.812,60,0.595,81,1.531,85,1.228,118,3.625,165,0.005,166,0.007,167,0.005,172,0.663,187,0.899,201,1.388,263,0.89,264,1.259,265,2.119,266,1.163,267,1.366,268,1.404,270,1.194,271,2.138,272,1.812,273,1.968,281,1.734,283,1.294,285,1.366,298,2.571,308,1.329,309,1.914,310,1.812,311,0.943,312,1.044,313,1.404,314,1.404,315,1.259,316,1.404,317,2.099,318,2.508,319,2.119,320,2.527,321,1.259,322,1.366,323,1.259,324,1.366,325,1.404,326,1.294,327,1.404,328,1.294,329,1.404,330,1.259,331,1.404,332,1.259,333,1.404,334,1.294,335,1.404,336,1.259,337,1.294,338,1.404,339,1.294,340,1.914,341,1.294,342,1.914,343,1.259,344,1.404,345,1.294,346,1.764,347,1.404,348,1.294,349,1.954,350,1.404,351,1.259,352,1.404,353,1.259,354,1.404,355,1.259,356,1.366,357,1.294,358,1.194,359,1.404,360,1.259,361,1.914,362,1.294,363,1.294,364,1.914,365,1.404,366,1.259,367,1.259,368,1.404,369,1.294,370,1.366,371,1.294,372,1.404,373,1.259,374,1.259,375,1.404,376,1.259,377,1.404,378,1.294,379,1.404,380,1.259,381,1.259,382,1.294,383,1.404,384,1.259,385,1.404,386,1.294,387,1.259,388,1.404,389,1.259,390,1.404,391,1.259,392,1.404,393,1.259,394,1.404,395,1.259,396,1.404,397,1.259,398,1.404,399,1.259,400,1.366,401,1.259,402,1.294,403,1.404,404,1.194,405,1.133,406,1.404,407,1.226,408,1.404,409,1.194,410,1.717,411,1.404,412,1.194,413,1.404,414,1.194,415,1.329,416,1.404,457,1.667,463,2.881,505,2.439,548,1.286,601,2.062,646,2.143,654,2.864,656,1.773,789,2.044,886,1.294,889,1.527,918,3.508,930,2.215,933,3.882,1071,1.667,1086,3.552,1090,5.003,1110,2.913,1118,1.527,1126,1.527,1204,7.583,1205,2.846,1206,3.375,1207,3.35,1208,5.934,1209,4.115,1210,6.753,1211,6.753,1212,5.403,1213,6.753,1214,6.753,1215,4.115,1216,3.882,1217,5.373,1218,3.882,1219,4.748,1220,6.379,1221,4.352,1222,3.482,1223,3.35,1224,4.352,1225,2.7,1226,4.352,1227,3.35,1228,4.352,1229,3.224,1230,3.224,1231,3.482,1232,4.352,1233,3.139,1234,3.018,1235,3.827,1236,3.224,1237,3.224,1238,1.954,1239,2.023,1240,2.846,1241,2.457,1242,3.018,1243,3.224,1244,4.748,1245,3.482,1246,5.934,1247,4.352,1248,5.934,1249,4.352,1250,5.934,1251,4.352,1252,5.934,1253,4.352,1254,3.482,1255,3.482,1256,4.352,1257,4.352,1258,4.352,1259,4.352,1260,5.934,1261,6.753,1262,3.018,1263,4.352,1264,4.352,1265,4.352,1266,4.352,1267,4.352,1268,4.352,1269,4.352,1270,3.224,1271,3.018,1272,3.018,1273,3.018,1274,3.018,1275,3.018,1276,4.352,1277,2.846,1278,3.018,1279,3.018,1280,4.396,1281,3.018,1282,3.224,1283,2.846,1284,3.018,1285,4.352,1286,4.352,1287,4.352,1288,4.352,1289,4.352,1290,4.352,1291,4.352,1292,4.352,1293,4.352,1294,4.352,1295,4.352,1296,4.352,1297,5.939,1298,4.352,1299,4.352,1300,4.352,1301,4.352,1302,4.352,1303,4.352,1304,6.379,1305,4.352,1306,4.352,1307,4.352,1308,4.352,1309,4.352,1310,4.352,1311,4.352,1312,4.352,1313,4.352,1314,7.253,1315,4.352,1316,4.352,1317,4.352,1318,4.352,1319,4.352,1320,4.352,1321,4.352,1322,4.352,1323,4.352,1324,4.352,1325,4.352,1326,4.352,1327,4.352,1328,4.352,1329,3.506,1330,3.827,1331,3.482,1332,3.827,1333,3.827,1334,3.882]],["title/components/ApiMicroGatewayInstallerComponent.html",[263,0.565,321,1.241]],["body/components/ApiMicroGatewayInstallerComponent.html",[0,0.199,1,1.63,3,0.078,4,0.036,5,0.128,8,0.053,9,0.179,10,0.343,13,0.244,14,2.59,16,0.192,17,0.366,20,0.262,22,0.404,23,0.24,25,0.322,26,0.011,27,0.322,29,0.686,39,0.578,40,0.229,42,0.378,50,0.792,52,1.625,53,0.078,60,0.591,61,0.463,69,0.575,81,1.384,85,1.353,89,0.676,131,0.543,134,2.349,165,0.004,166,0.006,167,0.004,172,0.528,187,0.812,201,1.406,259,1.185,260,0.727,263,0.786,264,1.003,265,2.187,266,0.926,267,1.088,268,1.118,270,0.951,271,2.116,272,1.543,273,1.676,281,1.793,283,1.03,285,1.088,298,3.524,308,1.058,309,1.63,310,1.543,311,0.751,312,0.944,313,1.118,314,1.118,315,1.003,316,1.118,317,1.003,318,2.425,319,1.088,320,2.347,321,1.897,322,2.057,323,1.003,324,1.088,325,1.118,326,1.03,327,1.118,328,1.03,329,1.118,330,1.003,331,1.118,332,1.003,333,1.118,334,1.03,335,1.118,336,1.003,337,1.03,338,1.118,339,1.03,340,1.63,341,1.03,342,1.63,343,1.003,344,1.118,345,1.03,346,1.502,347,1.118,348,1.03,349,2.174,350,1.118,351,1.003,352,1.118,353,1.003,354,1.118,355,1.003,356,1.088,357,1.03,358,0.951,359,1.118,360,1.003,361,1.63,362,1.03,363,1.03,364,1.63,365,1.118,366,1.003,367,1.003,368,1.118,369,1.03,370,1.309,371,1.03,372,1.118,373,1.003,374,1.003,375,1.118,376,1.003,377,1.118,378,1.03,379,1.118,380,1.003,381,1.003,382,1.03,383,1.118,384,1.003,385,1.118,386,1.03,387,1.003,388,1.118,389,1.003,390,1.118,391,1.003,392,1.118,393,1.003,394,1.118,395,1.003,396,1.118,397,1.003,398,1.118,399,1.003,400,1.088,401,1.003,402,1.03,403,1.118,404,0.951,405,0.902,406,1.118,407,0.977,408,1.118,409,0.951,410,1.462,411,1.118,412,0.951,413,1.118,414,0.951,415,1.058,416,1.118,463,2.944,467,1.457,494,1.039,495,2.756,505,2.154,548,1.095,601,2.002,644,3.237,646,2.517,652,1.149,789,1.681,790,1.369,886,1.03,889,1.216,918,3.098,930,2.002,933,3.305,937,5.39,1071,1.328,1086,3.524,1090,6.056,1110,2.706,1118,1.216,1126,1.216,1205,2.267,1206,2.981,1207,4.346,1209,3.505,1212,4.772,1215,3.505,1216,3.305,1218,3.305,1219,4.043,1222,2.773,1223,2.853,1225,2.15,1227,2.853,1229,2.568,1230,2.568,1231,2.773,1233,2.772,1234,2.404,1236,2.568,1237,2.568,1238,1.556,1239,1.611,1240,2.267,1241,1.957,1242,2.404,1244,4.772,1245,2.773,1254,2.773,1255,2.773,1262,2.404,1270,4.419,1271,2.404,1272,2.404,1273,3.505,1274,2.404,1275,2.404,1277,3.901,1278,4.136,1279,4.136,1280,6.056,1281,5.045,1282,2.568,1283,2.267,1284,3.505,1329,2.986,1331,2.773,1334,4.287,1335,7.662,1336,5.054,1337,5.964,1338,5.964,1339,5.964,1340,5.964,1341,5.964,1342,5.964,1343,5.246,1344,5.246,1345,6.555,1346,5.054,1347,6.555,1348,6.555,1349,6.555,1350,6.555,1351,3.466,1352,3.276,1353,5.054,1354,3.305,1355,3.466,1356,3.466,1357,3.048,1358,3.466,1359,5.054,1360,3.466,1361,3.466,1362,3.466,1363,3.466,1364,3.466,1365,3.466,1366,3.048,1367,2.568,1368,3.048,1369,3.048,1370,2.048,1371,3.048,1372,3.048,1373,2.773,1374,3.048,1375,3.466,1376,5.054,1377,3.466,1378,3.466,1379,5.054,1380,5.054,1381,5.054,1382,3.466,1383,5.246,1384,3.466,1385,3.466,1386,5.964,1387,3.466,1388,5.054,1389,3.466,1390,5.054,1391,3.466,1392,5.054,1393,3.466,1394,3.466,1395,3.466,1396,3.466,1397,3.466,1398,4.445,1399,3.466,1400,3.466,1401,3.466,1402,3.466,1403,3.466,1404,3.466,1405,3.466,1406,3.466,1407,3.466,1408,3.048,1409,3.466,1410,3.048,1411,3.466,1412,3.466,1413,3.466,1414,3.466,1415,3.466,1416,3.466,1417,3.466,1418,3.466,1419,3.466,1420,3.466,1421,3.466,1422,3.466,1423,6.129,1424,3.048,1425,4.043,1426,4.445,1427,3.048,1428,3.048,1429,3.048,1430,3.048,1431,3.048,1432,5.964,1433,5.054,1434,5.054,1435,3.466,1436,3.048,1437,2.568,1438,3.048,1439,2.773,1440,3.466,1441,3.466,1442,2.773,1443,3.466,1444,5.054,1445,3.466,1446,3.466,1447,2.568,1448,5.045,1449,3.466,1450,3.466,1451,5.964,1452,6.555,1453,3.466,1454,3.466,1455,5.964,1456,3.466,1457,3.466,1458,3.466,1459,3.466,1460,3.466,1461,3.466,1462,3.466,1463,3.466,1464,3.466,1465,3.466,1466,3.466,1467,5.054,1468,3.466,1469,3.466,1470,3.466,1471,3.466,1472,3.466,1473,3.466,1474,3.466,1475,3.466,1476,3.466,1477,3.466,1478,3.466,1479,3.466,1480,5.054,1481,5.054,1482,5.054,1483,4.445,1484,5.054,1485,5.054,1486,5.054,1487,5.054,1488,7.276,1489,5.054,1490,3.466,1491,5.054,1492,3.466,1493,5.054,1494,3.466,1495,4.445,1496,3.466,1497,3.466,1498,3.466,1499,2.773,1500,3.466,1501,3.048,1502,3.466,1503,5.964,1504,3.466,1505,3.466,1506,3.466,1507,5.964,1508,3.466,1509,3.466,1510,3.466,1511,3.466,1512,3.466,1513,3.466,1514,2.773,1515,3.466,1516,3.466,1517,5.964,1518,3.466,1519,3.466,1520,3.466,1521,3.466,1522,3.466,1523,3.466,1524,3.466,1525,3.466,1526,3.466,1527,3.466,1528,2.15,1529,3.466,1530,3.466,1531,3.466,1532,5.054]],["title/components/ApiPortalInstallerComponent.html",[263,0.565,323,1.241]],["body/components/ApiPortalInstallerComponent.html",[0,0.266,1,2.249,3,0.105,4,0.048,5,0.129,8,0.071,9,0.219,10,0.341,13,0.253,14,3.028,16,0.187,17,0.449,22,0.411,23,0.234,25,0.322,26,0.01,27,0.322,29,0.687,39,0.562,40,0.244,42,0.505,50,0.971,53,0.105,60,0.574,81,1.571,85,1.251,165,0.005,166,0.007,167,0.005,172,0.706,187,0.922,201,1.372,206,2.737,263,0.918,264,1.341,265,2.188,266,1.238,267,1.454,268,1.495,270,1.271,271,2.144,272,1.891,273,2.053,281,1.771,283,1.377,285,1.454,298,2.737,308,1.415,309,1.997,310,1.891,311,1.004,312,1.071,313,1.495,314,1.495,315,1.341,316,1.495,317,1.341,318,2.528,319,1.454,320,2.574,321,1.341,322,1.454,323,2.153,324,2.188,325,1.495,326,1.377,327,1.495,328,1.377,329,1.495,330,1.341,331,1.495,332,1.341,333,1.495,334,1.377,335,1.495,336,1.341,337,1.377,338,1.495,339,1.377,340,1.997,341,1.377,342,1.997,343,1.341,344,1.495,345,1.377,346,1.84,347,1.495,348,1.377,349,2.018,350,1.495,351,1.341,352,1.495,353,1.341,354,1.495,355,1.341,356,1.454,357,1.377,358,1.271,359,1.495,360,1.341,361,1.997,362,1.377,363,1.377,364,1.997,365,1.495,366,1.341,367,1.341,368,1.495,369,1.377,370,1.396,371,1.377,372,1.495,373,1.341,374,1.341,375,1.495,376,1.341,377,1.495,378,1.377,379,1.495,380,1.341,381,1.341,382,1.377,383,1.495,384,1.341,385,1.495,386,1.377,387,1.341,388,1.495,389,1.341,390,1.495,391,1.341,392,1.495,393,1.341,394,1.495,395,1.341,396,1.495,397,1.341,398,1.495,399,1.341,400,1.454,401,1.341,402,1.377,403,1.495,404,1.271,405,1.206,406,1.495,407,1.306,408,1.495,409,1.271,410,1.792,411,1.495,412,1.271,413,1.495,414,1.271,415,1.415,416,1.495,463,2.721,470,1.775,505,2.518,547,1.997,548,1.342,601,2.129,646,2.236,656,1.887,789,1.306,886,1.377,889,1.626,918,3.622,930,2.273,933,4.049,1071,1.775,1086,3.26,1096,6.205,1110,2.967,1118,1.626,1126,1.626,1205,3.031,1206,3.485,1207,3.495,1209,4.293,1212,5.579,1215,4.293,1216,4.049,1217,5.513,1218,4.049,1219,4.954,1220,6.545,1223,3.495,1225,2.874,1227,3.495,1229,3.433,1230,3.433,1233,3.241,1234,3.213,1236,3.433,1237,3.433,1238,2.081,1239,2.154,1240,3.031,1241,2.616,1242,3.213,1243,3.433,1244,4.954,1245,3.707,1254,3.707,1255,3.707,1262,3.213,1270,3.433,1271,3.213,1272,3.213,1273,3.213,1274,3.213,1275,3.213,1277,4.049,1278,3.213,1279,3.213,1280,4.587,1281,3.213,1282,3.433,1283,3.031,1284,3.213,1329,3.658,1330,4.075,1331,3.707,1332,4.075,1333,4.075,1334,4.049,1367,3.433,1398,5.445,1423,6.821,1424,4.075,1427,4.075,1428,4.075,1429,4.075,1430,4.075,1431,4.075,1436,4.075,1437,3.433,1438,4.075,1533,7.51,1534,6.191,1535,6.972,1536,4.634,1537,4.634,1538,4.634,1539,4.634,1540,6.191,1541,4.634,1542,4.634,1543,6.972,1544,4.634,1545,4.634,1546,4.634,1547,4.634,1548,4.634,1549,4.075,1550,4.634,1551,3.433,1552,4.634,1553,2.737,1554,4.634,1555,4.634,1556,4.634,1557,4.634,1558,4.075,1559,3.707,1560,3.433,1561,3.707,1562,4.634,1563,4.634,1564,4.634,1565,4.634,1566,4.634]],["title/modules/AppModule.html",[1567,3.431,1568,3.177]],["body/modules/AppModule.html",[0,0.17,3,0.067,4,0.057,5,0.069,19,0.859,20,0.224,22,0.382,26,0.011,38,1.42,40,0.297,42,0.324,46,1.104,50,0.466,52,1.622,53,0.067,60,0.206,61,0.691,69,1.14,81,1.379,85,0.466,139,1.21,165,0.003,166,0.005,167,0.003,170,1.387,172,0.687,187,0.885,200,0.794,201,1.083,263,1.104,264,2.129,267,0.932,288,1.072,303,0.794,305,1.842,308,0.907,315,1.989,317,2.129,321,2.129,323,2.129,326,2.352,328,2.043,330,2.067,332,2.129,334,2.187,336,2.129,337,2.123,339,2.043,341,2.043,343,1.989,345,2.043,346,1.618,348,2.043,351,1.989,353,2.129,355,2.129,357,2.187,360,2.129,362,2.187,363,2.187,366,2.129,367,1.989,369,2.123,371,2.187,373,2.129,374,2.067,376,2.129,378,2.123,380,2.259,381,2.129,384,1.989,386,2.123,387,2.129,389,1.989,391,1.989,393,2.067,395,2.067,397,2.067,399,2.129,401,1.989,402,0.883,405,1.789,407,1.937,409,1.667,412,1.667,414,1.886,667,2.873,723,1.138,784,2.259,789,2.164,798,1.959,869,1.675,892,1.072,896,2.612,898,3.311,899,1.606,900,3.718,901,1.942,1098,2.059,1118,1.042,1207,3.88,1241,1.676,1352,3.435,1370,1.754,1567,2.376,1568,6.792,1569,2.376,1570,1.842,1571,4.787,1572,4.787,1573,4.787,1574,3.962,1575,2.612,1576,2.612,1577,2.612,1578,2.612,1579,3.718,1580,3.718,1581,3.311,1582,3.571,1583,4.264,1584,4.767,1585,3.962,1586,2.612,1587,2.2,1588,2.376,1589,4.505,1590,4.505,1591,3.604,1592,1.942,1593,4.505,1594,2.969,1595,4.505,1596,4.505,1597,3.604,1598,2.969,1599,5.442,1600,2.969,1601,2.376,1602,4.505,1603,2.969,1604,4.505,1605,2.969,1606,4.505,1607,2.969,1608,4.505,1609,4.505,1610,4.505,1611,2.969,1612,2.969,1613,2.969,1614,2.969,1615,2.612,1616,4.505,1617,2.612,1618,2.612,1619,2.969,1620,2.612,1621,4.861,1622,2.612,1623,2.969,1624,4.505,1625,2.376,1626,3.604,1627,2.969,1628,6.53,1629,2.969,1630,5.442,1631,2.969,1632,2.969,1633,4.505,1634,2.2,1635,2.612,1636,2.612,1637,2.969,1638,6.53,1639,2.969,1640,2.969,1641,2.969,1642,2.969,1643,2.969,1644,2.969,1645,2.969,1646,4.505,1647,1.835,1648,2.612,1649,5.743,1650,2.969,1651,2.969,1652,2.969,1653,2.969,1654,2.969,1655,5.442,1656,2.969,1657,2.969,1658,2.969,1659,2.969,1660,2.969,1661,4.505,1662,4.355,1663,2.612,1664,2.969,1665,2.969,1666,2.969,1667,2.969,1668,2.969,1669,4.505,1670,2.969,1671,2.969,1672,6.075,1673,2.969,1674,2.969,1675,2.969,1676,2.969,1677,2.612,1678,1.676,1679,2.376,1680,2.376,1681,2.059,1682,1.754,1683,3.604,1684,2.376,1685,2.969,1686,2.969,1687,4.505,1688,4.505,1689,4.787,1690,2.612,1691,4.787,1692,4.505,1693,2.612,1694,2.969,1695,4.505,1696,4.505,1697,4.505,1698,4.505,1699,4.505,1700,4.505,1701,4.505,1702,4.505,1703,4.505,1704,4.505,1705,4.505,1706,4.505,1707,4.505,1708,2.969,1709,4.505,1710,4.505,1711,2.969,1712,4.505,1713,2.969,1714,2.969,1715,4.505,1716,4.505,1717,2.969,1718,2.969,1719,4.505,1720,2.969,1721,4.505,1722,2.969,1723,4.505,1724,2.969,1725,2.969,1726,2.969,1727,4.505,1728,2.969,1729,2.969,1730,4.505,1731,4.505,1732,2.969,1733,4.505,1734,4.505,1735,4.505,1736,2.969,1737,4.505,1738,4.505,1739,2.969,1740,4.505,1741,4.505,1742,4.505,1743,4.505,1744,4.505,1745,4.505,1746,2.969,1747,4.505,1748,4.505,1749,4.505,1750,2.969,1751,2.969,1752,2.969,1753,2.969,1754,2.969,1755,2.969,1756,2.969,1757,4.505,1758,2.969,1759,2.969,1760,4.505,1761,2.612,1762,2.969,1763,2.969,1764,2.969,1765,5.225,1766,6.669,1767,2.969,1768,2.969,1769,2.969,1770,4.529,1771,4.051,1772,4.787,1773,4.787,1774,2.969,1775,6.136,1776,5.5,1777,5.343,1778,5.343,1779,6.045,1780,2.376,1781,5.343,1782,2.612,1783,2.612,1784,2.2,1785,2.612,1786,2.612,1787,2.059,1788,2.612,1789,2.059,1790,2.376,1791,2.612,1792,2.376,1793,2.059,1794,4.505,1795,4.505,1796,4.505,1797,4.505,1798,4.505,1799,4.505,1800,4.505,1801,4.505,1802,4.505,1803,4.505,1804,4.505,1805,4.505,1806,4.505,1807,5.442,1808,4.505,1809,4.505,1810,4.505,1811,4.505,1812,4.505,1813,4.505,1814,4.505,1815,4.505,1816,4.505,1817,4.505,1818,4.505,1819,4.505,1820,4.505,1821,4.505,1822,4.505,1823,4.505,1824,4.505,1825,4.505,1826,5.442,1827,4.505,1828,4.505,1829,2.969,1830,2.969,1831,2.969,1832,2.969,1833,2.969,1834,2.969,1835,2.969,1836,2.969,1837,2.969,1838,6.53,1839,5.442,1840,2.969,1841,2.969,1842,2.969,1843,2.969,1844,4.505,1845,2.969,1846,2.969,1847,4.505,1848,2.969,1849,2.969]],["title/classes/AppPage.html",[0,0.246,1850,3.431]],["body/classes/AppPage.html",[0,0.394,2,1.203,3,0.155,4,0.072,5,0.105,8,0.105,17,0.573,23,0.219,26,0.01,39,0.573,40,0.225,53,0.155,61,0.725,165,0.008,166,0.009,167,0.008,310,2.097,1592,4.492,1850,6.329,1851,6.04,1852,8.56,1853,8.56,1854,6.868,1855,6.868,1856,6.04,1857,6.868,1858,6.868,1859,6.04,1860,6.868]],["title/classes/Arg.html",[0,0.246,685,1.383]],["body/classes/Arg.html",[0,0.424,2,0.451,3,0.091,4,0.077,5,0.099,8,0.039,9,0.143,10,0.349,11,1.229,12,0.878,13,0.258,16,0.184,17,0.292,18,1.428,20,0.513,22,0.448,23,0.194,25,0.186,26,0.011,27,0.186,29,0.754,36,1.861,39,0.186,40,0.163,50,1.2,53,0.173,54,0.688,59,1.982,60,0.578,61,0.816,62,0.878,69,1.249,71,1.457,76,1.416,102,0.989,103,1.3,131,1.318,153,1.231,165,0.003,166,0.005,167,0.003,168,1.561,170,0.588,172,1.034,175,3.228,182,1.643,184,1.907,185,1.976,186,0.653,187,0.758,190,2.763,195,1.546,196,1.049,200,1.734,201,0.427,202,2.37,207,1.017,208,1.965,213,1.017,216,1.049,221,1.049,234,1.643,235,1.643,243,0.903,259,0.603,260,1.039,289,0.603,303,1.877,312,0.976,370,0.463,417,2.213,418,1.017,419,1.696,427,0.986,428,1.457,429,1.082,443,0.688,444,0.808,445,1.72,446,2.029,447,1.752,448,1.752,449,1.118,450,1.017,451,1.118,452,1.118,453,1.118,454,1.118,455,1.118,456,2.294,457,1.546,458,2.368,459,2.368,460,1.965,461,2.092,462,2.092,463,2.755,464,1.118,465,1.118,466,1.118,467,2.572,468,2.158,469,2.572,470,1.546,471,2.572,472,1.752,473,1.643,474,1.118,475,1.118,476,1.118,477,1.118,478,1.118,479,1.118,480,1.118,481,1.118,482,1.118,483,1.118,484,1.118,485,1.696,486,1.118,487,2.161,488,3.136,489,2.446,490,1.752,491,1.752,492,1.752,493,1.118,494,1.258,495,3.106,496,1.118,497,1.118,498,2.161,499,1.118,500,1.118,501,1.752,502,1.752,503,2.946,504,0.808,505,1.797,506,2.294,507,2.161,508,2.161,509,2.657,510,2.161,511,2.161,512,2.161,513,2.161,514,2.161,515,2.161,516,2.492,517,2.161,518,1.696,519,1.752,520,1.752,521,1.118,522,1.118,523,1.118,524,1.118,525,1.118,526,1.118,527,1.118,528,1.118,529,1.118,530,2.946,531,1.118,532,1.118,533,1.118,534,1.752,535,1.118,536,1.752,537,1.082,538,1.118,539,1.752,540,1.118,541,1.118,542,1.118,543,1.118,544,1.118,545,1.118,546,1.118,547,2.093,548,0.874,549,1.118,550,1.118,551,1.643,552,1.118,553,1.118,554,1.082,555,1.118,556,1.118,557,1.118,558,1.118,559,1.118,560,1.752,561,1.752,562,1.752,563,1.118,564,1.118,565,1.118,566,1.118,567,1.118,568,1.118,569,1.118,570,2.161,571,1.118,572,1.118,573,1.118,574,1.118,575,1.118,576,1.118,577,1.118,578,1.118,579,1.118,580,1.752,581,1.118,582,1.118,583,1.118,584,1.118,585,1.118,586,1.118,587,1.118,588,1.118,589,1.118,590,2.161,591,1.118,592,1.752,593,1.118,594,1.752,595,1.752,596,2.161,597,1.752,598,1.752,599,1.118,600,1.752,601,2.205,602,1.118,603,2.446,604,1.752,605,1.752,606,1.752,607,1.118,608,1.118,609,1.017,610,1.768,611,1.118,612,1.546,613,1.082,614,1.118,615,1.118,616,1.118,617,1.082,618,1.118,619,1.118,620,1.118,621,1.696,622,1.118,623,1.118,624,1.118,625,2.161,626,1.118,627,1.118,628,1.118,629,1.118,630,1.118,631,1.118,632,1.118,633,1.118,634,1.118,635,1.118,636,1.118,637,1.118,638,1.118,639,1.118,640,1.118,641,1.752,642,1.118,643,1.752,644,1.696,645,1.118,646,0.93,647,1.118,648,1.049,649,1.118,650,1.118,651,1.118,652,0.854,653,1.752,654,1.017,655,1.017,656,2.027,657,1.082,658,1.082,659,1.049,660,1.082,661,1.118,662,1.118,663,1.118,664,1.118,665,1.118,666,1.746,667,0.878,668,1.118,669,1.118,670,1.118,671,1.118,672,1.118,673,1.118,674,1.118,675,1.118,676,1.118,677,1.118,678,1.118,679,1.118,680,1.118,681,0.854,682,1.118,683,1.049,684,1.118,685,2.188,686,1.082,687,1.118,688,1.118,689,1.118,690,1.118,691,1.049,692,2.423,693,1.082,694,0.878,695,1.118,696,1.118,697,1.118,698,1.118,699,1.118,700,1.118,701,1.697,702,1.118,703,1.118,704,1.752,705,1.082,706,2.446,707,1.118,708,1.118,709,1.643,710,2.946,711,1.752,712,1.118,713,1.752,714,1.752,715,1.752,716,1.118,717,0.957,718,1.643,719,1.752,720,1.752,721,1.118,722,1.118,723,0.986,724,1.118,725,1.752,726,1.118,727,1.118,728,1.118,729,1.118,730,1.118,731,1.118,732,1.118,733,1.118,734,1.118,735,1.118,736,1.118,737,1.118,738,1.752,739,2.209,740,1.082,741,1.643,742,1.906,743,1.118,744,1.118,745,1.118,746,1.118,747,1.118,748,1.118,749,1.118,750,1.049,751,1.049,752,1.696,753,1.118,754,1.118,755,1.118,756,1.118,757,1.082,758,1.118,759,1.118,760,1.118,761,1.082,762,1.118,763,1.118,764,1.118,765,1.118,766,1.118,767,1.118,768,1.118,769,1.118,770,1.118,771,1.118,772,1.118,773,1.118,774,1.118,775,1.118,776,1.118,777,2.416,778,2.446,779,1.65,780,2.161,781,2.657,782,2.657,783,1.752,784,1.5,785,1.696,786,1.696,787,1.118,788,1.118,789,1.137,790,1.593,791,1.593,792,1.118,793,1.049,794,1.376,795,2.161,796,1.643,797,1.082,798,1.973,799,1.118,800,1.118,801,1.118,802,1.118,803,1.118,804,1.118,805,1.082,806,1.118,807,1.118,808,1.118,809,1.118,810,1.118,811,1.118,812,1.082,813,2.161,814,1.118,815,1.118,816,1.118,817,1.118,818,1.118,819,1.118,820,1.118,821,1.118,822,1.118,823,1.118,824,1.118,825,1.118,826,1.118,827,1.118,828,1.118,829,1.118,830,1.118,831,1.118,832,1.118,833,1.017,834,1.049,835,1.118,836,1.118,837,1.082,838,1.118,839,1.118,840,1.082,841,1.118,842,1.082,843,1.118,844,1.082,845,1.118,846,1.082,847,1.118,848,1.118,849,1.118,850,1.118,851,1.118,852,1.118,853,1.118,854,1.118,855,1.118,856,1.118,857,1.678,858,1.118,859,1.118,860,1.118,861,1.118,862,1.118,863,1.118,864,1.118,865,1.643,866,1.118,867,1.593,868,1.049,869,0.957,870,1.696,871,1.082,872,1.082,873,1.082,874,1.082,875,1.082,876,1.082,877,1.118,878,0.957,879,1.118,880,1.118,1861,2.574,1862,4.035,1863,2.574,1864,4.976,1865,2.574,1866,2.574]],["title/classes/ArgDisplayType.html",[0,0.246,516,1.747]],["body/classes/ArgDisplayType.html",[0,0.422,2,0.444,3,0.09,4,0.07,5,0.098,8,0.039,9,0.141,10,0.35,11,1.218,12,0.865,13,0.261,16,0.186,17,0.289,18,1.45,19,1.155,20,0.51,22,0.448,23,0.207,25,0.258,26,0.011,27,0.258,29,0.78,36,1.851,39,0.405,40,0.162,50,1.253,53,0.172,54,0.678,59,1.97,60,0.577,61,0.815,62,0.865,69,1.264,71,1.441,76,1.4,102,0.983,103,1.292,131,1.316,153,1.225,165,0.003,166,0.005,167,0.003,168,1.547,170,0.58,172,1.029,182,1.034,185,1.961,186,0.643,187,0.753,190,2.748,195,1.528,196,1.034,200,1.724,201,0.421,202,2.291,207,1.576,208,1.947,213,1.002,216,1.034,221,1.034,234,1.625,235,1.625,243,0.89,259,0.935,260,1.059,289,0.595,303,1.868,312,0.971,370,0.457,417,2.2,418,1.002,419,1.677,427,0.972,428,1.441,429,1.067,443,0.678,444,0.796,445,1.711,446,2.015,447,1.733,448,1.733,449,1.102,450,1.002,451,1.102,452,1.102,453,1.102,454,1.102,455,1.102,456,2.276,457,1.528,458,2.35,459,2.35,460,1.947,461,2.073,462,2.073,463,2.748,464,1.102,465,1.102,466,1.102,467,1.067,468,2.141,469,2.554,470,2.141,471,2.712,472,2.141,473,1.625,474,1.102,475,1.102,476,1.102,477,1.102,478,1.102,479,1.102,480,1.102,481,1.102,482,1.102,483,1.102,484,1.102,485,1.677,486,1.102,487,2.141,488,3.122,489,2.427,490,1.733,491,1.733,492,1.733,493,1.102,494,1.249,495,3.252,496,1.102,497,1.102,498,2.141,499,1.102,500,1.102,501,2.141,502,1.733,503,3.195,504,0.796,505,1.78,506,2.276,507,2.141,508,2.141,509,2.639,510,2.141,511,2.141,512,2.141,513,2.141,514,2.141,515,2.141,516,2.847,517,2.141,518,1.677,519,1.733,520,1.733,521,1.102,522,1.102,523,1.102,524,1.102,525,1.102,526,1.102,527,1.102,528,1.102,529,1.102,530,2.93,531,1.102,532,1.102,533,1.102,534,1.733,535,1.102,536,1.733,537,1.067,538,1.102,539,1.733,540,1.102,541,1.733,542,1.102,543,1.102,544,1.102,545,1.102,546,1.102,547,2.08,548,0.865,549,1.102,550,1.102,551,1.625,552,1.102,553,1.102,554,1.067,555,1.102,556,1.102,557,1.102,558,1.102,559,1.102,560,1.733,561,1.733,562,1.733,563,1.102,564,1.102,565,1.102,566,1.102,567,1.102,568,1.102,569,1.102,570,2.141,571,1.102,572,1.102,573,1.102,574,1.102,575,1.102,576,1.102,577,1.102,578,1.102,579,1.102,580,1.733,581,1.102,582,1.102,583,1.102,584,1.102,585,1.102,586,1.102,587,1.102,588,1.102,589,1.102,590,2.141,591,1.102,592,1.733,593,1.102,594,1.733,595,1.733,596,2.141,597,1.733,598,1.733,599,1.102,600,1.733,601,2.195,602,1.102,603,2.427,604,1.733,605,1.733,606,1.733,607,1.102,608,1.102,609,1.002,610,1.754,611,1.102,612,1.528,613,1.067,614,1.102,615,1.102,616,1.102,617,1.067,618,1.102,619,1.102,620,1.102,621,1.677,622,1.102,623,1.102,624,1.102,625,2.141,626,1.102,627,1.102,628,1.102,629,1.102,630,1.102,631,1.102,632,1.102,633,1.102,634,1.102,635,1.102,636,1.102,637,1.102,638,1.102,639,1.102,640,1.102,641,1.733,642,1.102,643,1.733,644,1.677,645,1.102,646,0.916,647,1.102,648,1.034,649,1.102,650,1.102,651,1.102,652,1.323,653,1.733,654,1.002,655,1.002,656,2.008,657,1.067,658,1.067,659,1.034,660,1.067,661,1.102,662,1.102,663,1.102,664,1.102,665,1.102,666,1.73,667,0.865,668,1.102,669,1.102,670,1.102,671,1.102,672,1.102,673,1.102,674,1.102,675,1.102,676,1.102,677,1.102,678,1.102,679,1.102,680,1.102,681,0.842,682,1.102,683,1.034,684,1.102,685,1.96,686,1.067,687,1.102,688,1.102,689,1.102,690,1.102,691,1.034,692,2.419,693,1.067,694,0.865,695,1.102,696,1.102,697,1.102,698,1.102,699,1.102,700,1.102,701,1.681,702,1.102,703,1.102,704,1.733,705,1.067,706,2.427,707,1.102,708,1.102,709,1.625,710,2.93,711,1.733,712,1.102,713,1.733,714,1.733,715,1.733,716,1.102,717,0.944,718,1.625,719,1.733,720,1.733,721,1.102,722,1.102,723,0.972,724,1.102,725,1.733,726,1.102,727,1.102,728,1.102,729,1.102,730,1.102,731,1.102,732,1.102,733,1.102,734,1.102,735,1.102,736,1.102,737,1.102,738,1.733,739,2.194,740,1.067,741,1.625,742,1.889,743,1.102,744,1.102,745,1.102,746,1.102,747,1.102,748,1.102,749,1.102,750,1.034,751,1.034,752,1.677,753,1.102,754,1.102,755,1.102,756,1.102,757,1.067,758,1.102,759,1.102,760,1.102,761,1.067,762,1.102,763,1.102,764,1.102,765,1.102,766,1.102,767,1.102,768,1.102,769,1.102,770,1.102,771,1.102,772,1.102,773,1.102,774,1.102,775,1.102,776,1.102,777,2.399,778,2.427,779,1.635,780,2.141,781,2.639,782,2.639,783,1.733,784,1.484,785,1.677,786,1.677,787,1.102,788,1.102,789,1.124,790,1.576,791,1.576,792,1.102,793,1.034,794,1.361,795,2.141,796,1.625,797,1.067,798,1.96,799,1.102,800,1.102,801,1.102,802,1.102,803,1.102,804,1.102,805,1.067,806,1.102,807,1.102,808,1.102,809,1.102,810,1.102,811,1.102,812,1.067,813,2.141,814,1.102,815,1.102,816,1.102,817,1.102,818,1.102,819,1.102,820,1.102,821,1.102,822,1.102,823,1.102,824,1.102,825,1.102,826,1.102,827,1.102,828,1.102,829,1.102,830,1.102,831,1.102,832,1.102,833,1.002,834,1.034,835,1.102,836,1.102,837,1.067,838,1.102,839,1.102,840,1.067,841,1.102,842,1.067,843,1.102,844,1.067,845,1.102,846,1.067,847,1.102,848,1.102,849,1.102,850,1.102,851,1.102,852,1.102,853,1.102,854,1.102,855,1.102,856,1.102,857,1.667,858,1.102,859,1.102,860,1.102,861,1.102,862,1.102,863,1.102,864,1.102,865,1.625,866,1.102,867,1.576,868,1.034,869,0.944,870,1.677,871,1.067,872,1.067,873,1.067,874,1.067,875,1.067,876,1.067,877,1.102,878,0.944,879,1.102,880,1.102,1867,3.99,1868,3.509,1869,3.99,1870,2.538,1871,2.538,1872,2.538,1873,2.538,1874,2.538,1875,2.538,1876,2.538,1877,2.538,1878,2.538]],["title/classes/Authentication.html",[0,0.246,1879,3.177]],["body/classes/Authentication.html",[0,0.426,2,0.457,3,0.092,4,0.071,5,0.099,8,0.04,9,0.145,10,0.349,11,1.241,12,0.891,13,0.257,16,0.182,17,0.296,18,1.433,19,1.181,20,0.533,22,0.448,23,0.17,25,0.121,26,0.011,27,0.121,29,0.757,36,1.937,38,0.445,39,0.189,40,0.165,50,1.204,53,0.174,54,0.698,59,1.994,60,0.579,61,0.816,62,0.891,69,1.253,71,1.474,76,1.432,102,0.995,103,1.307,131,1.321,144,1.966,153,1.236,165,0.003,166,0.005,167,0.003,168,1.576,170,0.597,172,1.04,182,1.064,185,1.992,186,0.662,187,0.763,190,2.778,195,1.563,196,1.064,200,1.745,201,0.433,202,2.215,207,1.031,208,1.983,213,1.031,216,1.064,221,1.064,234,1.662,235,1.662,243,0.917,260,1.016,289,0.612,303,1.886,312,0.982,370,0.47,417,2.227,418,1.031,419,1.716,427,1.001,428,1.474,429,1.098,443,0.698,444,0.82,445,1.73,446,2.043,447,1.772,448,1.772,449,1.134,450,1.031,451,1.134,452,1.134,453,1.134,454,1.134,455,1.134,456,2.046,457,1.563,458,2.387,459,2.387,460,2.432,461,2.112,462,2.112,463,2.763,464,1.134,465,1.134,466,1.134,467,1.098,468,1.563,469,2.387,470,1.563,471,2.112,472,1.772,473,1.662,474,1.134,475,1.134,476,1.134,477,1.134,478,1.134,479,1.134,480,1.134,481,1.134,482,1.134,483,1.134,484,1.134,485,1.716,486,1.134,487,2.181,488,3.151,489,2.466,490,1.772,491,1.772,492,1.772,493,1.134,494,1.267,495,3.119,496,1.134,497,1.134,498,2.181,499,1.134,500,1.134,501,1.772,502,1.772,503,2.962,504,0.82,505,1.814,506,2.313,507,2.181,508,2.181,509,2.675,510,2.181,511,2.181,512,2.181,513,2.181,514,2.181,515,2.181,516,2.509,517,1.134,518,1.716,519,1.772,520,1.772,521,1.134,522,1.134,523,1.134,524,1.134,525,1.134,526,1.134,527,1.134,528,1.134,529,1.134,530,2.962,531,1.134,532,1.134,533,1.134,534,1.772,535,1.134,536,1.772,537,1.098,538,1.134,539,1.772,540,1.134,541,1.134,542,1.134,543,1.134,544,1.134,545,1.134,546,1.134,547,2.106,548,0.884,549,1.134,550,1.134,551,1.662,552,1.134,553,1.134,554,1.098,555,1.134,556,1.134,557,1.134,558,1.134,559,1.134,560,1.772,561,1.772,562,1.772,563,1.134,564,1.134,565,1.134,566,1.134,567,1.134,568,1.134,569,1.134,570,2.181,571,1.134,572,1.134,573,1.134,574,1.134,575,1.134,576,1.134,577,1.134,578,1.134,579,1.134,580,1.772,581,1.134,582,1.134,583,1.134,584,1.134,585,1.134,586,1.134,587,1.134,588,1.134,589,1.134,590,2.181,591,1.134,592,1.772,593,1.134,594,1.772,595,1.772,596,2.181,597,1.772,598,1.772,599,1.134,600,1.772,601,2.215,602,1.134,603,2.466,604,1.772,605,1.772,606,1.772,607,1.134,608,1.134,609,1.031,610,1.782,611,1.134,612,1.563,613,1.098,614,1.134,615,1.134,616,1.134,617,1.098,618,1.134,619,1.134,620,1.134,621,1.716,622,1.134,623,1.134,624,1.134,625,2.181,626,1.134,627,1.134,628,1.134,629,1.134,630,1.134,631,1.134,632,1.134,633,1.134,634,1.134,635,1.134,636,1.134,637,1.134,638,1.134,639,1.134,640,1.134,641,1.772,642,1.134,643,1.772,644,1.716,645,1.134,646,0.943,647,1.134,648,1.064,649,1.134,650,1.134,651,1.134,652,0.866,653,1.772,654,1.031,655,1.031,656,2.046,657,1.098,658,1.098,659,1.064,660,1.098,661,1.134,662,1.134,663,1.134,664,1.134,665,1.134,666,1.762,667,0.891,668,1.134,669,1.134,670,1.134,671,1.134,672,1.134,673,1.134,674,1.134,675,1.134,676,1.134,677,1.134,678,1.134,679,1.134,680,1.134,681,0.866,682,1.134,683,1.064,684,1.134,685,1.987,686,1.098,687,1.134,688,1.134,689,1.134,690,1.134,691,1.064,692,2.426,693,1.098,694,0.891,695,1.134,696,1.134,697,1.134,698,1.134,699,1.134,700,1.134,701,1.713,702,1.134,703,1.134,704,1.772,705,1.098,706,2.466,707,1.134,708,1.134,709,1.662,710,2.962,711,1.772,712,1.134,713,1.772,714,1.772,715,1.772,716,1.134,717,0.971,718,1.662,719,1.772,720,1.772,721,1.134,722,1.134,723,1.001,724,1.134,725,1.772,726,1.134,727,1.134,728,1.134,729,1.134,730,1.134,731,1.134,732,1.134,733,1.134,734,1.134,735,1.134,736,1.134,737,1.134,738,1.772,739,2.224,740,1.098,741,1.662,742,1.924,743,1.134,744,1.134,745,1.134,746,1.134,747,1.134,748,1.134,749,1.134,750,1.064,751,1.064,752,1.716,753,1.134,754,1.134,755,1.134,756,1.134,757,1.098,758,1.134,759,1.134,760,1.134,761,1.098,762,1.134,763,1.134,764,1.134,765,1.134,766,1.134,767,1.134,768,1.134,769,1.134,770,1.134,771,1.134,772,1.134,773,1.134,774,1.134,775,1.134,776,1.134,777,2.432,778,2.466,779,1.666,780,2.181,781,2.675,782,2.675,783,1.772,784,1.518,785,1.716,786,1.716,787,1.134,788,1.134,789,1.15,790,1.612,791,1.612,792,1.134,793,1.064,794,1.392,795,2.181,796,1.662,797,1.098,798,1.987,799,1.134,800,1.134,801,1.134,802,1.134,803,1.134,804,1.134,805,1.098,806,1.134,807,1.134,808,1.134,809,1.134,810,1.134,811,1.134,812,1.098,813,2.181,814,1.134,815,1.134,816,1.134,817,1.134,818,1.134,819,1.134,820,1.134,821,1.134,822,1.134,823,1.134,824,1.134,825,1.134,826,1.134,827,1.134,828,1.134,829,1.134,830,1.134,831,1.134,832,1.134,833,1.031,834,1.064,835,1.134,836,1.134,837,1.098,838,1.134,839,1.134,840,1.098,841,1.134,842,1.098,843,1.134,844,1.098,845,1.134,846,1.098,847,1.134,848,1.134,849,1.134,850,1.134,851,1.134,852,1.134,853,1.134,854,1.134,855,1.134,856,1.134,857,1.69,858,1.134,859,1.134,860,1.134,861,1.134,862,1.134,863,1.134,864,1.134,865,1.662,866,1.134,867,1.612,868,1.064,869,0.971,870,1.716,871,1.098,872,1.098,873,1.098,874,1.098,875,1.098,876,1.098,877,1.134,878,0.971,879,1.134,880,1.134,1879,3.023,1880,4.081,1881,2.612,1882,2.612,1883,2.612]],["title/classes/BuildCommand.html",[0,0.246,463,1.463]],["body/classes/BuildCommand.html",[0,0.422,2,0.443,3,0.09,4,0.075,5,0.098,8,0.038,9,0.141,10,0.35,11,1.215,12,0.862,13,0.258,16,0.188,17,0.288,18,1.423,19,1.151,20,0.487,22,0.447,23,0.214,25,0.227,26,0.011,27,0.227,29,0.779,36,1.849,39,0.404,40,0.161,50,1.227,53,0.172,54,0.676,59,1.967,60,0.577,61,0.815,62,0.862,69,1.263,71,1.437,76,1.396,102,0.982,103,1.29,131,1.315,153,1.224,165,0.003,166,0.005,167,0.003,168,1.543,170,0.577,172,1.027,182,1.03,185,1.957,186,0.641,187,0.752,190,2.745,195,1.524,196,1.03,200,1.721,201,0.419,202,2.289,207,0.998,208,1.942,213,0.998,216,1.03,221,1.03,234,1.62,235,1.62,243,0.887,259,1.153,260,1.079,289,0.593,303,1.865,312,0.97,370,0.455,417,2.196,418,0.998,419,1.673,427,0.969,428,1.437,429,1.063,443,0.676,444,0.793,445,1.709,446,2.011,447,1.728,448,1.728,449,1.098,450,0.998,451,1.098,452,1.098,453,1.098,454,1.098,455,1.098,456,2.272,457,1.524,458,2.345,459,2.345,460,1.942,461,2.068,462,2.068,463,2.834,464,2.136,465,2.136,466,2.136,467,2.068,468,2.137,469,2.55,470,2.137,471,2.55,472,2.136,473,1.62,474,1.098,475,1.098,476,1.098,477,1.098,478,1.098,479,1.098,480,1.098,481,1.098,482,1.098,483,1.098,484,1.098,485,1.673,486,1.098,487,2.136,488,3.119,489,2.422,490,1.728,491,1.728,492,1.728,493,1.098,494,1.247,495,3.249,496,1.098,497,1.728,498,2.136,499,1.098,500,1.098,501,2.136,502,1.728,503,3.032,504,0.793,505,1.776,506,2.272,507,2.136,508,2.136,509,2.634,510,2.136,511,2.136,512,2.136,513,2.136,514,2.136,515,2.136,516,2.47,517,1.098,518,1.673,519,1.728,520,1.728,521,1.098,522,1.098,523,1.098,524,1.098,525,1.098,526,1.098,527,1.098,528,1.098,529,1.098,530,2.926,531,1.098,532,1.098,533,1.098,534,1.728,535,1.098,536,1.728,537,1.063,538,1.098,539,1.728,540,1.098,541,1.098,542,1.098,543,1.098,544,1.098,545,1.098,546,1.098,547,2.077,548,0.862,549,1.098,550,1.098,551,1.62,552,1.098,553,1.098,554,1.063,555,1.098,556,1.098,557,1.098,558,1.098,559,1.098,560,1.728,561,1.728,562,1.728,563,1.098,564,1.098,565,1.098,566,1.098,567,1.098,568,1.098,569,1.098,570,2.136,571,1.098,572,1.098,573,1.098,574,1.098,575,1.098,576,1.098,577,1.098,578,1.098,579,1.098,580,1.728,581,1.098,582,1.098,583,1.098,584,1.098,585,1.098,586,1.098,587,1.098,588,1.098,589,1.098,590,2.136,591,1.098,592,1.728,593,1.098,594,1.728,595,1.728,596,2.136,597,1.728,598,1.728,599,1.098,600,1.728,601,2.193,602,1.098,603,2.422,604,1.728,605,1.728,606,1.728,607,1.098,608,1.098,609,0.998,610,1.75,611,1.098,612,1.524,613,1.063,614,1.098,615,1.098,616,1.098,617,1.063,618,1.098,619,1.098,620,1.098,621,2.068,622,1.098,623,1.098,624,1.098,625,2.136,626,1.098,627,1.098,628,1.098,629,1.098,630,1.098,631,1.098,632,1.098,633,1.098,634,1.098,635,1.098,636,1.098,637,1.098,638,1.098,639,1.098,640,1.098,641,1.728,642,1.098,643,1.728,644,1.673,645,1.098,646,0.913,647,1.098,648,1.03,649,1.098,650,1.098,651,1.098,652,1.319,653,1.728,654,0.998,655,0.998,656,2.003,657,1.063,658,1.063,659,1.03,660,1.063,661,1.098,662,1.098,663,1.098,664,1.098,665,1.098,666,1.726,667,0.862,668,1.098,669,1.098,670,1.098,671,1.098,672,1.098,673,1.098,674,1.098,675,1.098,676,1.098,677,1.098,678,1.098,679,1.098,680,1.098,681,0.838,682,1.098,683,1.03,684,1.098,685,1.956,686,1.063,687,1.098,688,1.098,689,1.098,690,1.098,691,1.03,692,2.418,693,1.063,694,0.862,695,1.098,696,1.098,697,1.098,698,1.098,699,1.098,700,1.098,701,1.677,702,1.098,703,1.098,704,1.728,705,1.063,706,2.422,707,1.098,708,1.098,709,1.62,710,2.926,711,1.728,712,1.098,713,1.728,714,1.728,715,1.728,716,1.098,717,0.94,718,1.62,719,1.728,720,1.728,721,1.098,722,1.098,723,0.969,724,1.098,725,1.728,726,1.098,727,1.098,728,1.098,729,1.098,730,1.098,731,1.098,732,1.098,733,1.098,734,1.098,735,1.098,736,1.098,737,1.098,738,1.728,739,2.19,740,1.063,741,1.62,742,1.884,743,1.098,744,1.098,745,1.098,746,1.098,747,1.098,748,1.098,749,1.098,750,1.03,751,1.03,752,1.673,753,1.098,754,1.098,755,1.098,756,1.098,757,1.063,758,1.098,759,1.098,760,1.098,761,1.063,762,1.098,763,1.098,764,1.098,765,1.098,766,1.098,767,1.098,768,1.098,769,1.098,770,1.098,771,1.098,772,1.098,773,1.098,774,1.098,775,1.098,776,1.098,777,2.395,778,2.422,779,1.631,780,2.136,781,2.634,782,2.634,783,1.728,784,1.479,785,1.673,786,1.673,787,1.098,788,1.098,789,1.121,790,1.571,791,1.571,792,1.098,793,1.03,794,1.357,795,2.136,796,1.62,797,1.063,798,1.956,799,1.098,800,1.098,801,1.098,802,1.098,803,1.098,804,1.098,805,1.063,806,1.098,807,1.098,808,1.098,809,1.098,810,1.098,811,1.098,812,1.063,813,2.136,814,1.098,815,1.098,816,1.098,817,1.098,818,1.098,819,1.098,820,1.098,821,1.098,822,1.098,823,1.098,824,1.098,825,1.098,826,1.098,827,1.098,828,1.098,829,1.098,830,1.098,831,1.098,832,1.098,833,0.998,834,1.03,835,1.098,836,1.098,837,1.063,838,1.098,839,1.098,840,1.063,841,1.098,842,1.063,843,1.098,844,1.063,845,1.098,846,1.063,847,1.098,848,1.098,849,1.098,850,1.098,851,1.098,852,1.098,853,1.098,854,1.098,855,1.098,856,1.098,857,1.664,858,1.098,859,1.098,860,1.098,861,1.098,862,1.098,863,1.098,864,1.098,865,1.62,866,1.098,867,1.571,868,1.03,869,0.94,870,1.673,871,1.063,872,1.063,873,1.063,874,1.063,875,1.063,876,1.063,877,1.098,878,0.94,879,1.098,880,1.098,1868,3.499,1884,3.978,1885,2.528,1886,2.528,1887,2.528,1888,2.528,1889,2.528,1890,2.528,1891,2.528,1892,2.528,1893,2.528,1894,2.528,1895,2.528,1896,2.528,1897,2.528]],["title/components/BuildComponent.html",[263,0.565,330,1.241]],["body/components/BuildComponent.html",[0,0.246,3,0.097,4,0.045,5,0.11,8,0.089,9,0.208,10,0.344,13,0.252,16,0.18,17,0.426,19,1.7,20,0.324,23,0.235,25,0.31,26,0.01,27,0.31,29,0.71,39,0.547,40,0.262,42,0.468,52,1.594,53,0.097,69,0.711,81,1.522,85,0.921,89,0.837,90,2.047,102,1.33,103,1.512,139,3.312,153,1.229,154,2.83,165,0.005,166,0.007,167,0.005,172,0.654,186,1.088,187,1.008,201,1.368,259,1.378,260,0.846,263,0.883,264,1.241,265,1.844,266,1.146,267,1.346,268,1.384,270,1.177,271,2.137,272,1.794,273,1.949,281,1.725,283,1.275,285,1.346,288,1.549,296,4.403,302,4.353,308,1.31,309,1.895,310,1.794,311,0.93,312,1.038,313,1.384,314,1.384,315,1.241,316,1.384,317,1.241,318,2.475,319,1.346,320,2.516,321,1.241,322,1.346,323,1.241,324,1.346,325,1.384,326,1.275,327,1.384,328,1.275,329,1.384,330,2.086,331,1.384,332,1.241,333,1.384,334,1.275,335,1.384,336,1.241,337,1.275,338,1.384,339,1.275,340,1.895,341,1.275,342,1.895,343,1.241,344,1.384,345,1.275,346,1.747,347,1.384,348,1.275,349,2.311,350,1.384,351,1.241,352,1.384,353,1.241,354,1.384,355,1.241,356,1.346,357,1.275,358,1.177,359,1.384,360,1.241,361,1.895,362,1.275,363,1.275,364,1.895,365,1.384,366,1.241,367,1.241,368,1.384,369,1.275,370,1.359,371,1.275,372,1.384,373,1.241,374,1.241,375,1.384,376,1.241,377,1.384,378,1.275,379,1.384,380,1.241,381,1.241,382,1.275,383,1.384,384,1.241,385,1.384,386,1.275,387,1.241,388,1.384,389,1.241,390,1.384,391,1.241,392,1.384,393,1.241,394,1.384,395,1.241,396,1.384,397,1.241,398,1.384,399,1.241,400,1.346,401,1.241,402,1.275,403,1.384,404,1.177,405,1.117,406,1.384,407,1.209,408,1.384,409,1.177,410,1.7,411,1.384,412,1.177,413,1.384,414,1.177,415,1.31,416,1.384,445,1.915,457,1.643,468,2.568,717,2.185,723,2.251,779,1.422,865,1.747,886,1.275,889,1.505,891,2.762,892,1.549,898,3.473,899,2.32,916,2.534,927,3.317,930,2.202,935,5.341,964,3.843,967,2.806,968,4.648,970,4.384,974,4.509,976,2.661,988,4.472,1034,3.178,1121,2.32,1122,2.32,1123,2.32,1439,4.702,1448,4.075,1647,2.937,1766,5.363,1898,2.534,1899,3.773,1900,3.179,1901,6.703,1902,5.876,1903,6.703,1904,6.703,1905,6.703,1906,5.363,1907,6.703,1908,5.895,1909,5.876,1910,6.341,1911,6.341,1912,5.876,1913,2.975,1914,4.158,1915,5.876,1916,5.876,1917,4.289,1918,4.685,1919,4.289,1920,4.289,1921,4.289,1922,5.876,1923,4.289,1924,4.289,1925,4.289,1926,4.289,1927,4.289,1928,4.289,1929,2.144,1930,3.773,1931,4.289,1932,4.289,1933,4.289,1934,4.289,1935,4.289,1936,4.353,1937,3.178,1938,3.773,1939,4.353,1940,5.64,1941,3.773,1942,4.075,1943,5.595,1944,2.32,1945,5.168,1946,2.975,1947,2.975,1948,3.773,1949,3.773,1950,2.975,1951,4.289,1952,4.289,1953,6.642,1954,4.07,1955,3.773,1956,3.432,1957,3.773,1958,3.773,1959,4.075,1960,6.025,1961,4.353,1962,3.432,1963,3.784,1964,3.178,1965,5.341,1966,4.353,1967,5.168,1968,3.432,1969,4.075,1970,3.178,1971,2.806,1972,3.773,1973,3.432,1974,3.432,1975,3.773,1976,3.773,1977,3.432,1978,3.773,1979,3.432,1980,3.432,1981,3.773,1982,3.773,1983,3.773,1984,7.34,1985,5.168,1986,6.642,1987,5.168,1988,3.773,1989,3.773,1990,3.773,1991,3.432,1992,6.642,1993,6.642,1994,6.642,1995,3.773,1996,5.363,1997,5.168,1998,3.773]],["title/components/BuildExeComponent.html",[263,0.565,332,1.241]],["body/components/BuildExeComponent.html",[0,0.225,3,0.089,4,0.041,5,0.106,8,0.06,9,0.196,10,0.349,13,0.244,16,0.199,17,0.4,20,0.296,22,0.435,23,0.245,25,0.295,26,0.011,27,0.295,29,0.807,38,1.182,39,0.53,40,0.24,42,0.428,53,0.089,60,0.272,61,0.671,69,0.916,81,1.465,85,1.222,102,0.598,131,0.866,144,3.079,165,0.008,166,0.006,167,0.004,172,0.842,186,0.995,187,0.986,200,1.708,201,1.359,213,1.55,225,2.66,227,1.762,259,1.626,260,0.999,263,0.842,264,1.135,265,1.733,266,1.476,267,1.231,268,1.266,270,1.077,271,2.129,272,1.687,278,2.038,281,1.46,283,1.166,284,2.215,285,1.231,286,1.961,287,1.89,290,2.318,307,4.092,308,1.198,309,1.782,310,1.687,311,0.85,312,0.999,313,1.266,314,1.266,315,1.135,316,1.266,317,1.135,318,2.44,319,1.231,320,2.447,321,1.135,322,1.231,323,1.135,324,1.231,325,1.266,326,1.166,327,1.266,328,1.166,329,1.266,330,1.135,331,1.266,332,2.008,333,1.266,334,1.166,335,1.266,336,1.135,337,1.166,338,1.266,339,1.166,340,1.782,341,1.166,342,1.782,343,1.135,344,1.266,345,1.166,346,1.642,347,1.266,348,1.166,349,1.85,350,1.266,351,1.135,352,1.266,353,1.135,354,1.266,355,1.135,356,1.231,357,1.166,358,1.077,359,1.266,360,1.135,361,1.782,362,1.166,363,1.166,364,1.782,365,1.266,366,1.135,367,1.135,368,1.266,369,1.166,370,1.316,371,1.166,372,1.266,373,1.135,374,1.135,375,1.266,376,1.135,377,1.266,378,1.166,379,1.266,380,1.135,381,1.135,382,1.166,383,1.266,384,1.135,385,1.266,386,1.166,387,1.135,388,1.266,389,1.135,390,1.266,391,1.135,392,1.266,393,1.135,394,1.266,395,1.135,396,1.266,397,1.135,398,1.266,399,1.135,400,1.231,401,1.135,402,1.166,403,2.062,404,1.077,405,1.021,406,1.266,407,1.106,408,1.266,409,1.077,410,1.598,411,1.266,412,1.077,413,1.266,414,1.077,415,1.198,416,1.266,445,0.995,460,2.524,494,1.602,547,2.447,548,1.197,610,2.006,757,2.322,789,1.801,790,1.55,886,1.9,887,2.123,888,1.65,889,1.377,890,1.89,898,3.342,899,2.123,916,4.604,930,2.119,962,4.181,974,3.118,988,3.426,1005,4.092,1028,4.304,1126,1.377,1238,1.762,1914,3.965,1936,2.907,1950,4.811,1999,7.112,2000,3.451,2001,5.523,2002,6.392,2003,4.736,2004,5.622,2005,5.622,2006,4.736,2007,6.392,2008,5.622,2009,6.392,2010,5.622,2011,5.115,2012,5.551,2013,6.392,2014,6.392,2015,6.392,2016,6.392,2017,5.523,2018,6.938,2019,3.139,2020,5.523,2021,5.523,2022,3.924,2023,2.123,2024,3.924,2025,5.523,2026,3.924,2027,3.924,2028,3.924,2029,3.924,2030,3.924,2031,4.858,2032,3.83,2033,3.924,2034,3.924,2035,3.924,2036,3.924,2037,3.924,2038,2.988,2039,3.924,2040,3.924,2041,3.924,2042,3.924,2043,3.924,2044,4.433,2045,5.523,2046,3.924,2047,3.924,2048,3.458,2049,3.924,2050,3.924,2051,3.924,2052,3.924,2053,3.924,2054,3.924,2055,3.924,2056,3.139,2057,5.523,2058,6.938,2059,5.523,2060,3.924,2061,6.069,2062,5.523,2063,6.392,2064,5.523,2065,3.924,2066,5.523,2067,3.924,2068,5.523,2069,3.924,2070,3.924,2071,3.924,2072,6.392,2073,3.924,2074,3.924,2075,5.523,2076,3.924,2077,3.924,2078,3.924,2079,5.523,2080,3.924,2081,5.523,2082,4.858,2083,3.924,2084,3.924,2085,6.938,2086,3.924,2087,3.924,2088,6.938,2089,5.523,2090,3.924,2091,5.523,2092,5.523,2093,6.392,2094,3.924,2095,3.451,2096,5.523,2097,3.924,2098,3.924,2099,3.924,2100,3.924,2101,3.924,2102,3.451,2103,3.924,2104,3.924,2105,3.924,2106,3.924,2107,3.924,2108,3.924,2109,3.924,2110,3.924]],["title/classes/BuildImage.html",[0,0.246,2111,3.431]],["body/classes/BuildImage.html",[0,0.395,2,1.207,3,0.156,4,0.072,5,0.105,8,0.105,9,0.281,10,0.342,23,0.231,26,0.01,53,0.156,165,0.008,166,0.009,167,0.008,551,3.398,613,3.508,2111,6.341,2112,7.536,2113,5.513,2114,8.343,2115,6.89,2116,6.89,2117,6.89]],["title/directives/BuildImageChooseDirective.html",[311,0.929,405,1.116]],["body/directives/BuildImageChooseDirective.html",[0,0.44,3,0.147,4,0.068,5,0.099,8,0.099,9,0.289,10,0.32,13,0.197,14,2.83,16,0.173,20,0.492,22,0.412,23,0.212,25,0.301,26,0.01,27,0.301,29,0.642,40,0.276,42,0.711,50,1.022,53,0.19,165,0.007,166,0.009,167,0.007,186,1.652,187,1.043,270,1.788,271,1.798,289,1.798,311,1.663,404,1.788,405,1.997,445,1.652,504,2.407,547,2.474,610,2.407,1071,2.496,1088,3.849,1110,3.032,1118,2.286,1126,2.286,1201,5.52,1206,3.256,1223,3.678,1227,3.678,1233,3.565,1239,3.028,2118,5.654,2119,4.518,2120,5.73,2121,6.515,2122,6.515,2123,2.926,2124,4.518,2125,4.518,2126,4.518,2127,4.518]],["title/interfaces/BuildParams.html",[504,1.346,505,1.549]],["body/interfaces/BuildParams.html",[0,0.423,3,0.091,4,0.071,5,0.099,8,0.039,9,0.143,10,0.349,11,1.227,12,0.875,13,0.26,16,0.186,17,0.292,18,1.395,20,0.49,22,0.448,23,0.169,25,0.186,26,0.011,27,0.186,29,0.764,36,1.859,39,0.443,40,0.163,50,1.231,53,0.173,54,0.686,59,1.979,60,0.578,61,0.816,62,0.875,69,1.247,71,1.454,76,1.412,102,0.988,103,1.298,131,1.318,153,1.23,165,0.003,166,0.005,167,0.003,168,1.558,170,0.586,172,1.033,182,1.045,185,1.973,186,0.651,187,0.757,190,2.76,195,1.542,196,1.045,200,1.732,201,0.425,202,2.203,207,1.013,208,1.961,213,1.013,216,1.045,221,1.045,234,1.639,235,1.639,243,0.901,260,1.01,289,0.602,303,1.875,312,0.975,370,0.462,417,2.21,418,1.013,419,1.692,427,0.983,428,1.454,429,1.079,443,0.686,444,0.805,445,1.718,446,2.026,447,1.748,448,1.748,449,1.115,450,1.013,451,1.115,452,1.115,453,1.115,454,1.115,455,1.115,456,2.023,457,1.542,458,2.364,459,2.364,460,1.961,461,2.088,462,2.088,463,2.81,464,1.115,465,1.115,466,1.115,467,1.079,468,1.542,469,2.364,470,1.542,471,2.088,472,1.748,473,1.639,474,1.115,475,1.115,476,1.115,477,1.115,478,1.115,479,1.115,480,1.115,481,1.115,482,1.115,483,1.115,484,1.115,485,1.692,486,1.115,487,2.157,488,3.133,489,2.442,490,1.748,491,1.748,492,1.748,493,1.115,494,1.256,495,3.103,496,1.115,497,1.115,498,2.157,499,1.115,500,1.115,501,1.748,502,1.748,503,3.206,504,0.805,505,2.031,506,2.76,507,2.442,508,2.815,509,3.047,510,2.815,511,2.815,512,2.815,513,2.815,514,2.442,515,2.815,516,2.488,517,1.115,518,1.692,519,1.748,520,1.748,521,1.115,522,1.115,523,1.115,524,1.115,525,1.115,526,1.115,527,1.115,528,1.115,529,1.115,530,2.943,531,1.115,532,1.115,533,1.115,534,1.748,535,1.115,536,1.748,537,1.079,538,1.115,539,1.748,540,1.115,541,1.115,542,1.115,543,1.115,544,1.115,545,1.115,546,1.115,547,2.09,548,0.872,549,1.115,550,1.115,551,1.639,552,1.115,553,1.115,554,1.079,555,1.115,556,1.115,557,1.115,558,1.115,559,1.115,560,1.748,561,1.748,562,1.748,563,1.115,564,1.115,565,1.115,566,1.115,567,1.115,568,1.115,569,1.115,570,2.157,571,1.115,572,1.115,573,1.115,574,1.115,575,1.115,576,1.115,577,1.115,578,1.115,579,1.115,580,1.748,581,1.115,582,1.115,583,1.115,584,1.115,585,1.115,586,1.115,587,1.115,588,1.115,589,1.115,590,2.157,591,1.115,592,1.748,593,1.115,594,1.748,595,1.748,596,2.157,597,1.748,598,1.748,599,1.115,600,1.748,601,2.254,602,1.115,603,2.442,604,1.748,605,1.748,606,1.748,607,1.115,608,1.115,609,1.013,610,1.765,611,1.115,612,1.542,613,1.079,614,1.115,615,1.115,616,1.115,617,1.079,618,1.115,619,1.115,620,1.115,621,1.692,622,1.115,623,1.115,624,1.115,625,2.157,626,1.115,627,1.115,628,1.115,629,1.115,630,1.115,631,1.115,632,1.115,633,1.115,634,1.115,635,1.115,636,1.115,637,1.115,638,1.115,639,1.115,640,1.115,641,1.748,642,1.115,643,1.748,644,1.692,645,1.115,646,0.927,647,1.115,648,1.045,649,1.115,650,1.115,651,1.115,652,0.851,653,1.748,654,1.013,655,1.013,656,2.023,657,1.079,658,1.079,659,1.045,660,1.079,661,1.115,662,1.115,663,1.115,664,1.115,665,1.115,666,1.742,667,0.875,668,1.115,669,1.115,670,1.115,671,1.115,672,1.115,673,1.115,674,1.115,675,1.115,676,1.115,677,1.115,678,1.115,679,1.115,680,1.115,681,0.851,682,1.115,683,1.045,684,1.115,685,1.97,686,1.079,687,1.115,688,1.115,689,1.115,690,1.115,691,1.045,692,2.422,693,1.079,694,0.875,695,1.115,696,1.115,697,1.115,698,1.115,699,1.115,700,1.115,701,1.694,702,1.115,703,1.115,704,1.748,705,1.079,706,2.442,707,1.115,708,1.115,709,1.639,710,2.943,711,1.748,712,1.115,713,1.748,714,1.748,715,1.748,716,1.115,717,0.954,718,1.639,719,1.748,720,1.748,721,1.115,722,1.115,723,0.983,724,1.115,725,1.748,726,1.115,727,1.115,728,1.115,729,1.115,730,1.115,731,1.115,732,1.115,733,1.115,734,1.115,735,1.115,736,1.115,737,1.115,738,1.748,739,2.206,740,1.079,741,1.639,742,1.902,743,1.115,744,1.115,745,1.115,746,1.115,747,1.115,748,1.115,749,1.115,750,1.045,751,1.045,752,1.692,753,1.115,754,1.115,755,1.115,756,1.115,757,1.079,758,1.115,759,1.115,760,1.115,761,1.079,762,1.115,763,1.115,764,1.115,765,1.115,766,1.115,767,1.115,768,1.115,769,1.115,770,1.115,771,1.115,772,1.115,773,1.115,774,1.115,775,1.115,776,1.115,777,2.412,778,2.442,779,1.647,780,2.157,781,2.653,782,2.653,783,1.748,784,1.497,785,1.692,786,1.692,787,1.115,788,1.115,789,1.134,790,1.59,791,1.59,792,1.115,793,1.045,794,1.373,795,2.157,796,1.639,797,1.079,798,1.97,799,1.115,800,1.115,801,1.115,802,1.115,803,1.115,804,1.115,805,1.079,806,1.115,807,1.115,808,1.115,809,1.115,810,1.115,811,1.115,812,1.079,813,2.157,814,1.115,815,1.115,816,1.115,817,1.115,818,1.115,819,1.115,820,1.115,821,1.115,822,1.115,823,1.115,824,1.115,825,1.115,826,1.115,827,1.115,828,1.115,829,1.115,830,1.115,831,1.115,832,1.115,833,1.013,834,1.045,835,1.115,836,1.115,837,1.079,838,1.115,839,1.115,840,1.079,841,1.115,842,1.079,843,1.115,844,1.079,845,1.115,846,1.079,847,1.115,848,1.115,849,1.115,850,1.115,851,1.115,852,1.115,853,1.115,854,1.115,855,1.115,856,1.115,857,1.676,858,1.115,859,1.115,860,1.115,861,1.115,862,1.115,863,1.115,864,1.115,865,1.639,866,1.115,867,1.59,868,1.045,869,0.954,870,1.692,871,1.079,872,1.079,873,1.079,874,1.079,875,1.079,876,1.079,877,1.115,878,0.954,879,1.115,880,1.115,1196,1.78,2128,4.025,2129,4.025,2130,2.566,2131,2.566,2132,2.566,2133,2.566,2134,2.566]],["title/interfaces/BuilderComponent.html",[504,1.346,1206,2.143]],["body/interfaces/BuilderComponent.html",[0,0.436,3,0.145,4,0.067,5,0.098,8,0.098,9,0.287,10,0.289,13,0.229,14,3.636,16,0.189,17,0.55,22,0.425,23,0.21,25,0.351,26,0.01,27,0.351,29,0.797,39,0.55,40,0.275,42,0.699,50,1.004,53,0.189,165,0.007,166,0.009,167,0.007,186,1.624,187,1.038,271,1.502,289,1.78,311,1.646,405,1.667,445,1.624,504,2.383,547,2.45,610,2.01,646,2.313,1071,2.454,1088,3.784,1110,3.281,1118,2.248,1126,2.248,1196,4.442,1201,5.022,1206,3.796,1216,4.967,1218,4.967,1223,4.288,1225,3.973,1227,4.288,1233,3.891,1239,2.977,2118,5.614,2119,4.442,2123,2.876,2124,4.442,2125,4.442,2126,4.442,2127,4.442,2135,6.405,2136,6.405]],["title/classes/BuilderProperties.html",[0,0.246,1239,1.993]],["body/classes/BuilderProperties.html",[0,0.437,2,1.13,3,0.146,4,0.067,5,0.098,8,0.098,9,0.288,10,0.334,13,0.195,14,2.801,16,0.183,20,0.487,22,0.437,23,0.224,25,0.298,26,0.01,27,0.298,29,0.635,40,0.275,42,0.703,50,1.011,53,0.19,165,0.007,166,0.009,167,0.007,186,1.635,187,1.061,271,1.512,289,1.788,311,1.653,405,1.679,445,1.635,504,2.393,547,2.46,610,2.024,1071,2.471,1088,4.957,1110,3.019,1118,2.263,1126,2.263,1201,5.036,1206,3.224,1223,3.641,1227,3.641,1233,3.544,1239,3.544,2118,5.819,2119,4.473,2123,3.845,2124,4.473,2125,4.473,2126,4.473,2127,4.473,2137,6.45,2138,6.45,2139,7.626]],["title/directives/CancelCdkDrag.html",[311,0.929,407,1.208]],["body/directives/CancelCdkDrag.html",[0,0.373,3,0.147,4,0.068,5,0.099,8,0.099,9,0.271,13,0.231,16,0.184,17,0.555,20,0.491,23,0.237,25,0.354,26,0.01,27,0.354,39,0.59,40,0.213,42,0.708,53,0.147,69,1.077,165,0.007,166,0.009,167,0.007,270,1.782,271,1.795,281,1.959,285,2.555,310,2.487,311,1.659,404,1.782,407,2.158,548,1.659,886,2.42,930,2.568,2023,3.513,2044,5.832,2140,5.712,2141,7.657,2142,7.657,2143,6.728,2144,6.126,2145,7.657,2146,5.197,2147,7.657,2148,8.143,2149,6.495,2150,6.495,2151,6.495,2152,7.657,2153,6.495,2154,6.495,2155,6.495,2156,6.495,2157,8.143,2158,6.495,2159,6.495]],["title/classes/CommitInfo.html",[0,0.246,2160,2.805]],["body/classes/CommitInfo.html",[0,0.414,2,0.753,3,0.133,4,0.087,5,0.065,8,0.065,9,0.208,10,0.343,11,1.062,13,0.178,16,0.189,17,0.426,18,1.464,19,1.703,20,0.507,22,0.444,23,0.225,25,0.199,26,0.011,27,0.199,29,0.423,36,1.615,38,1.003,39,0.311,40,0.267,41,1.532,42,0.469,43,2.254,44,2.764,46,1.598,47,2.438,48,1.349,49,1.598,50,0.674,51,1.552,52,1.416,53,0.171,54,1.149,60,0.524,61,0.808,85,1.342,89,0.838,90,1.313,91,1.647,96,2.438,102,0.897,103,1.445,112,3.069,113,3.013,114,2.99,115,3.013,123,3.63,128,3.47,130,1.386,131,0.674,133,2.233,134,1.998,135,2.233,136,2.07,137,2.148,138,2.233,139,2.397,153,1.288,165,0.005,166,0.007,167,0.005,170,0.982,199,2.985,222,2.427,259,1.008,260,0.619,266,2.206,289,1.379,312,0.619,358,1.841,443,1.149,667,2.288,681,1.425,692,2.033,694,2.578,701,2.775,739,2.125,949,2.811,1028,4.162,1128,2.233,1528,2.666,1553,2.539,1580,2.325,1918,4.957,1929,2.148,1944,2.325,2123,3.013,2160,5.226,2161,5.398,2162,2.811,2163,4.971,2164,3.964,2165,4.971,2166,5.884,2167,4.298,2168,4.298,2169,4.298,2170,4.389,2171,4.298,2172,4.298,2173,4.298,2174,2.325,2175,3.322,2176,2.325,2177,2.325,2178,3.476,2179,3.057,2180,3.65,2181,3.964,2182,4.081,2183,4.081,2184,3.65,2185,2.981,2186,2.811,2187,4.162,2188,3.184,2189,3.184,2190,3.184,2191,3.184,2192,3.184,2193,3.184,2194,3.184,2195,3.184,2196,3.184,2197,3.184,2198,3.184,2199,3.184,2200,3.184,2201,3.184,2202,3.184,2203,3.184,2204,3.184,2205,3.184,2206,3.184,2207,3.184,2208,3.184,2209,3.184,2210,3.184,2211,3.184,2212,3.184,2213,3.184,2214,3.184,2215,3.184,2216,3.184,2217,2.666,2218,3.184,2219,2.811,2220,3.184,2221,2.811,2222,3.184,2223,3.184,2224,2.427,2225,3.65,2226,5.346,2227,3.184,2228,5.105,2229,2.811,2230,4.359,2231,2.811,2232,4.943,2233,2.811,2234,5.782,2235,2.811,2236,4.359,2237,3.184,2238,3.184,2239,3.184,2240,3.184,2241,2.666,2242,3.184,2243,3.184,2244,4.476,2245,3.184,2246,4.971,2247,4.971,2248,3.184,2249,4.359,2250,3.184,2251,3.184,2252,3.486,2253,3.184,2254,3.184,2255,5.92,2256,4.081,2257,4.359,2258,3.184,2259,3.184,2260,3.184,2261,3.184,2262,3.184,2263,4.359,2264,4.971,2265,4.971,2266,4.359,2267,1.867,2268,2.642,2269,3.184,2270,3.184,2271,4.359,2272,3.184,2273,3.184,2274,3.184,2275,3.184,2276,3.184,2277,3.184,2278,3.184,2279,4.359,2280,4.359,2281,3.184,2282,3.184,2283,3.184,2284,3.184,2285,3.184,2286,3.184,2287,3.184,2288,2.811,2289,3.184,2290,2.666,2291,3.184,2292,3.184,2293,3.184,2294,3.184,2295,3.65,2296,3.184,2297,3.184,2298,4.359,2299,3.184,2300,4.359,2301,3.184,2302,3.184,2303,3.184]],["title/injectables/ContainerTemplates.html",[41,1.116,900,2.32]],["body/injectables/ContainerTemplates.html",[0,0.287,1,2.63,3,0.113,4,0.052,5,0.076,8,0.076,9,0.231,10,0.333,13,0.251,16,0.192,17,0.472,18,1.597,20,0.378,22,0.44,23,0.235,25,0.384,26,0.01,27,0.384,39,0.591,40,0.261,41,1.696,42,0.546,47,2.565,48,1.57,53,0.113,61,0.703,83,4.041,85,1.021,89,0.976,102,1.169,103,1.45,131,0.785,153,1.234,165,0.006,166,0.007,167,0.006,172,0.763,186,1.269,187,0.986,250,2.6,259,1.527,260,0.938,266,2.249,281,1.143,302,4.825,303,2.337,312,0.938,319,2.044,322,2.044,324,2.044,370,1.467,400,2.044,419,2.739,445,2.067,494,1.029,554,3.045,601,1.528,655,1.976,666,1.756,685,1.614,789,1.41,840,2.739,842,2.739,844,2.739,846,2.739,857,1.373,900,3.524,1090,5.682,1096,5.212,1126,1.756,1297,5.729,1448,5.837,1579,4.149,1647,3.321,1682,2.957,2048,4.149,2304,4.402,2305,7.242,2306,6.369,2307,6.514,2308,6.514,2309,5.729,2310,6.514,2311,5.729,2312,6.514,2313,5.005,2314,6.514,2315,4.517,2316,6.514,2317,5.005,2318,6.514,2319,5.005,2320,5.005,2321,5.005,2322,6.514,2323,7.242,2324,5.005,2325,6.514,2326,5.005,2327,5.729,2328,6.514,2329,5.005,2330,7.17,2331,6.514,2332,7.67,2333,5.729,2334,6.746,2335,5.729,2336,6.514,2337,6.514,2338,6.514,2339,6.514,2340,6.514,2341,6.514,2342,6.514,2343,5.729,2344,5.212,2345,5.729,2346,6.514,2347,6.514,2348,6.514,2349,6.514,2350,6.514,2351,6.514,2352,5.005,2353,4.825,2354,5.005,2355,6.514,2356,5.005,2357,5.005,2358,6.514,2359,5.005,2360,5.005,2361,4.402,2362,4.402,2363,3.708,2364,7.242,2365,5.005,2366,4.004,2367,5.005,2368,5.005,2369,5.005,2370,6.514,2371,5.005,2372,6.514,2373,5.005,2374,6.514,2375,4.004,2376,5.005,2377,6.514,2378,6.746,2379,5.005,2380,5.729,2381,6.514,2382,6.514,2383,5.005,2384,5.005,2385,7.242,2386,5.005,2387,5.005,2388,5.005,2389,5.005,2390,5.005,2391,5.005,2392,5.005,2393,5.005,2394,5.005,2395,4.402]],["title/classes/DependencyWrapper.html",[0,0.246,2396,2.974]],["body/classes/DependencyWrapper.html",[0,0.418,2,0.887,3,0.148,4,0.08,5,0.077,8,0.077,9,0.233,10,0.34,13,0.22,16,0.191,18,0.912,22,0.441,23,0.181,26,0.011,29,0.499,40,0.28,41,1.709,42,0.552,43,2.515,44,3.133,45,2.354,46,1.884,47,2.638,48,1.589,49,1.884,50,0.794,51,1.829,52,1.538,53,0.165,59,2.224,60,0.554,61,0.813,85,1.142,89,0.988,90,1.547,91,1.94,96,2.575,112,3.271,114,3.296,126,2.44,128,3.467,130,2.575,131,1.208,165,0.006,166,0.007,167,0.006,170,1.157,199,3.397,206,2.992,312,0.729,443,1.354,444,1.589,446,1.68,857,1.39,1126,1.777,1570,5.235,1582,2.631,2175,3.706,2176,2.74,2177,2.74,2224,2.86,2252,4.147,2267,3.736,2268,3.46,2396,4.553,2397,3.752,2398,5.065,2399,5.065,2400,4.553,2401,2.86,2402,3.752,2403,3.142,2404,3.142,2405,3.513,2406,3.752,2407,3.752,2408,2.631,2409,4.053,2410,4.053,2411,6.387,2412,5.536,2413,5.536,2414,6.101,2415,6.165,2416,4.863,2417,5.396,2418,4.053,2419,4.053,2420,3.752,2421,3.752,2422,3.752,2423,4.053,2424,5.828,2425,4.053,2426,4.053,2427,4.053,2428,4.053,2429,4.053,2430,4.053,2431,4.053,2432,3.706,2433,4.053,2434,4.053,2435,4.053,2436,6.544,2437,4.053,2438,4.053,2439,3.752,2440,4.053,2441,3.513,2442,4.053,2443,4.053,2444,4.053,2445,4.053]],["title/classes/Deployment.html",[0,0.246,172,0.654]],["body/classes/Deployment.html",[0,0.421,2,0.44,3,0.089,4,0.07,5,0.098,8,0.038,9,0.14,10,0.35,11,1.21,12,0.857,13,0.26,16,0.19,17,0.287,18,1.421,19,1.146,20,0.526,22,0.448,23,0.22,25,0.257,26,0.011,27,0.257,29,0.749,36,1.911,38,0.428,39,0.438,40,0.161,50,1.193,53,0.172,54,0.672,59,1.962,60,0.576,61,0.814,62,0.857,69,1.24,71,1.43,76,1.389,102,0.979,103,1.286,131,1.314,153,1.221,165,0.003,166,0.005,167,0.003,168,2.016,170,0.574,172,1.118,182,1.024,185,1.95,186,0.637,187,0.749,190,2.738,195,2.13,196,1.024,200,1.717,201,0.417,202,2.189,207,0.992,208,1.935,213,0.992,216,1.024,221,1.024,234,1.613,235,1.613,243,0.882,260,1.003,281,0.904,289,0.589,303,2.033,312,0.968,370,0.452,417,2.191,418,0.992,419,1.665,427,0.963,428,1.43,429,1.057,443,0.672,444,0.789,445,1.705,446,2.005,447,1.72,448,1.72,449,1.092,450,0.992,451,1.092,452,1.092,453,1.092,454,1.092,455,1.092,456,1.996,457,1.517,458,2.337,459,2.337,460,1.935,461,2.06,462,2.06,463,2.743,464,1.092,465,1.092,466,1.092,467,1.057,468,1.517,469,2.337,470,1.517,471,2.06,472,1.72,473,1.613,474,1.092,475,1.092,476,1.092,477,1.092,478,1.092,479,1.092,480,1.092,481,1.092,482,1.092,483,1.092,484,1.092,485,1.665,486,1.092,487,2.128,488,3.113,489,2.414,490,1.72,491,1.72,492,1.72,493,1.092,494,1.243,495,3.244,496,1.092,497,1.092,498,2.128,499,1.092,500,1.092,501,1.72,502,1.72,503,2.92,504,0.789,505,1.769,506,2.264,507,2.128,508,2.128,509,2.92,510,2.128,511,2.128,512,2.128,513,2.128,514,2.128,515,2.128,516,2.463,517,1.092,518,1.665,519,1.72,520,1.72,521,1.092,522,1.092,523,1.092,524,1.092,525,1.092,526,1.092,527,1.092,528,1.092,529,1.092,530,2.92,531,1.092,532,1.092,533,1.092,534,1.72,535,1.092,536,1.72,537,1.057,538,1.092,539,1.72,540,1.092,541,1.092,542,1.092,543,1.092,544,1.092,545,1.092,546,1.092,547,2.072,548,0.858,549,1.092,550,1.092,551,1.613,552,1.092,553,1.092,554,1.057,555,1.092,556,1.092,557,1.092,558,1.092,559,1.092,560,1.72,561,1.72,562,1.72,563,1.092,564,1.092,565,1.092,566,1.092,567,1.092,568,1.092,569,1.092,570,2.128,571,1.092,572,1.092,573,1.092,574,1.092,575,1.092,576,1.092,577,1.092,578,1.092,579,1.092,580,1.72,581,1.092,582,1.092,583,1.092,584,1.092,585,1.092,586,1.092,587,1.092,588,1.092,589,1.092,590,2.128,591,1.092,592,1.72,593,1.092,594,1.72,595,1.72,596,2.128,597,1.72,598,1.72,599,1.092,600,1.72,601,2.189,602,1.092,603,2.414,604,1.72,605,1.72,606,1.72,607,1.092,608,1.092,609,0.992,610,1.744,611,1.092,612,1.517,613,1.057,614,1.092,615,1.092,616,1.092,617,1.057,618,1.092,619,1.092,620,1.092,621,1.665,622,1.092,623,1.092,624,1.092,625,2.128,626,1.092,627,1.092,628,1.092,629,1.092,630,1.092,631,1.092,632,1.092,633,1.092,634,1.092,635,1.092,636,1.092,637,1.092,638,1.092,639,1.092,640,1.092,641,1.72,642,1.092,643,1.72,644,1.665,645,1.092,646,0.908,647,1.092,648,1.024,649,1.092,650,1.092,651,1.092,652,0.833,653,2.414,654,0.992,655,0.992,656,1.996,657,1.057,658,1.057,659,1.024,660,1.057,661,1.092,662,1.092,663,1.092,664,1.092,665,1.092,666,1.719,667,0.857,668,1.092,669,1.092,670,1.092,671,1.092,672,1.092,673,1.092,674,1.092,675,1.092,676,1.092,677,1.092,678,1.092,679,1.092,680,1.092,681,0.833,682,1.092,683,1.024,684,1.092,685,1.951,686,1.057,687,1.092,688,1.092,689,1.092,690,1.092,691,1.024,692,2.416,693,1.057,694,0.857,695,1.092,696,1.092,697,1.092,698,1.092,699,1.092,700,1.092,701,1.671,702,1.092,703,1.092,704,1.72,705,1.057,706,2.414,707,1.092,708,1.092,709,1.613,710,2.92,711,1.72,712,1.092,713,1.72,714,1.72,715,1.72,716,1.092,717,0.935,718,1.613,719,1.72,720,1.72,721,1.092,722,1.092,723,0.963,724,1.092,725,1.72,726,1.092,727,1.092,728,1.092,729,1.092,730,1.092,731,1.092,732,1.092,733,1.092,734,1.092,735,1.092,736,1.092,737,1.092,738,1.72,739,2.32,740,1.057,741,1.613,742,1.877,743,1.092,744,1.092,745,1.092,746,1.092,747,1.092,748,1.092,749,1.092,750,1.024,751,1.024,752,1.665,753,1.092,754,1.092,755,1.092,756,1.092,757,1.057,758,1.092,759,1.092,760,1.092,761,1.057,762,1.092,763,1.092,764,1.092,765,1.092,766,1.092,767,1.092,768,1.092,769,1.092,770,1.092,771,1.092,772,1.092,773,1.092,774,1.092,775,1.092,776,1.092,777,2.388,778,2.414,779,1.625,780,2.128,781,2.626,782,2.626,783,1.72,784,1.472,785,1.665,786,1.665,787,1.092,788,1.092,789,1.116,790,1.564,791,1.564,792,1.092,793,1.024,794,1.896,795,2.128,796,1.613,797,1.057,798,1.951,799,1.092,800,1.092,801,1.092,802,1.092,803,1.092,804,1.092,805,1.057,806,1.092,807,1.092,808,1.092,809,1.092,810,1.092,811,1.092,812,1.057,813,2.128,814,1.092,815,1.092,816,1.092,817,1.092,818,1.092,819,1.092,820,1.092,821,1.092,822,1.092,823,1.092,824,1.092,825,1.092,826,1.092,827,1.092,828,1.092,829,1.092,830,1.092,831,1.092,832,2.128,833,1.935,834,1.996,835,2.128,836,2.128,837,1.057,838,1.092,839,1.092,840,1.057,841,1.092,842,1.057,843,1.092,844,1.057,845,1.092,846,1.057,847,1.092,848,1.092,849,1.092,850,1.092,851,1.092,852,1.092,853,1.092,854,1.092,855,1.092,856,1.72,857,1.659,858,1.092,859,1.72,860,1.092,861,1.092,862,1.092,863,1.092,864,1.092,865,1.613,866,1.092,867,1.564,868,1.024,869,0.935,870,1.665,871,1.057,872,1.057,873,1.057,874,1.057,875,1.057,876,1.057,877,1.092,878,0.935,879,1.092,880,1.092,2446,3.959,2447,3.482,2448,3.482,2449,3.959,2450,2.513,2451,2.513,2452,2.513,2453,2.513,2454,2.513,2455,2.513,2456,2.513,2457,2.513,2458,2.513,2459,2.513,2460,2.513,2461,2.513,2462,2.513,2463,2.513,2464,2.513]],["title/components/DeploymentDetailsComponent.html",[263,0.565,343,1.241]],["body/components/DeploymentDetailsComponent.html",[0,0.316,3,0.125,4,0.058,5,0.121,8,0.084,10,0.312,13,0.259,16,0.157,17,0.502,22,0.339,23,0.209,26,0.01,29,0.683,39,0.399,40,0.269,42,0.601,52,1.463,53,0.125,61,0.506,81,1.678,165,0.006,166,0.008,167,0.006,172,1.308,187,0.939,201,1.358,202,2.116,263,0.998,264,1.595,265,2.174,266,1.473,267,1.73,268,1.778,270,1.512,271,2.157,272,2.116,273,2.298,283,1.638,308,1.683,309,2.235,310,2.116,311,1.195,312,1.144,313,1.778,314,1.778,315,1.595,316,1.778,317,1.595,318,2.58,319,1.73,320,2.697,321,1.595,322,1.73,323,1.595,324,1.73,325,1.778,326,1.638,327,1.778,328,1.638,329,1.778,330,1.595,331,1.778,332,1.595,333,1.778,334,1.638,335,1.778,336,1.595,337,1.638,338,1.778,339,1.638,340,2.235,341,1.638,342,2.235,343,2.301,344,1.778,345,1.638,346,2.059,347,1.778,348,1.638,349,2.193,350,1.778,351,1.595,352,1.778,353,1.595,354,1.778,355,1.595,356,1.73,357,1.638,358,1.512,359,1.778,360,1.595,361,2.235,362,1.638,363,1.638,364,2.235,365,1.778,366,1.595,367,1.595,368,1.778,369,1.638,370,1.474,371,1.638,372,1.778,373,1.595,374,1.595,375,1.778,376,1.595,377,1.778,378,1.638,379,1.778,380,1.595,381,1.595,382,1.638,383,1.778,384,1.595,385,1.778,386,1.638,387,1.595,388,1.778,389,1.595,390,1.778,391,1.595,392,1.778,393,1.595,394,1.778,395,1.595,396,1.778,397,1.595,398,1.778,399,1.595,400,1.73,401,1.595,402,1.638,403,1.778,404,1.512,405,1.435,406,1.778,407,1.553,408,1.778,409,1.512,410,2.005,411,1.778,412,1.512,413,1.778,414,1.512,415,1.683,416,1.778,692,2.419,889,2.659,891,2.112,892,1.991,1068,3.337,1200,3.937,1202,3.748,1203,3.112,1334,4.532,2465,6.992,2466,4.41,2467,6.929,2468,6.094,2469,7.578,2470,5.512,2471,5.512,2472,5.512,2473,3.112,2474,4.848,2475,5.544,2476,6.094]],["title/classes/DeploymentSet.html",[0,0.246,446,1.422]],["body/classes/DeploymentSet.html",[0,0.425,2,0.455,3,0.092,4,0.077,5,0.099,8,0.04,9,0.144,10,0.35,11,1.517,12,0.886,13,0.259,16,0.181,17,0.294,18,1.431,19,1.176,20,0.532,22,0.447,23,0.188,25,0.12,26,0.011,27,0.12,29,0.755,36,1.933,38,0.443,39,0.188,40,0.164,50,1.203,53,0.173,54,0.694,59,1.989,60,0.579,61,0.816,62,0.886,69,1.251,71,1.467,76,1.425,102,0.993,103,1.304,131,1.32,153,1.234,165,0.003,166,0.005,167,0.003,168,1.776,170,0.593,172,1.038,182,1.058,185,1.986,186,0.658,187,0.761,190,2.772,195,2.168,196,1.058,200,1.741,201,0.431,202,2.211,207,1.025,208,1.976,213,1.025,216,1.058,221,1.058,234,1.655,235,1.655,243,0.911,260,1.014,289,0.609,303,1.882,312,0.98,370,0.467,417,2.221,418,1.025,419,2.379,427,0.995,428,1.467,429,1.092,443,0.694,444,0.815,445,1.726,446,2.257,447,1.764,448,1.764,449,1.128,450,1.025,451,1.128,452,1.128,453,1.128,454,1.128,455,1.128,456,2.038,457,1.556,458,2.379,459,2.379,460,1.976,461,2.104,462,2.104,463,2.76,464,1.128,465,1.128,466,1.128,467,1.092,468,1.556,469,2.379,470,1.556,471,2.104,472,1.764,473,1.655,474,1.128,475,1.128,476,1.128,477,1.128,478,1.128,479,1.128,480,1.128,481,1.128,482,1.128,483,1.128,484,1.128,485,1.708,486,1.128,487,2.173,488,3.145,489,2.458,490,1.764,491,1.764,492,1.764,493,1.128,494,1.263,495,3.114,496,1.128,497,1.128,498,2.173,499,1.128,500,1.128,501,1.764,502,1.764,503,2.956,504,0.815,505,1.807,506,2.305,507,2.173,508,2.173,509,2.668,510,2.173,511,2.173,512,2.173,513,2.173,514,2.173,515,2.173,516,2.502,517,1.128,518,1.708,519,1.764,520,1.764,521,1.128,522,1.128,523,1.128,524,1.128,525,1.128,526,1.128,527,1.128,528,1.128,529,1.128,530,2.956,531,1.128,532,1.128,533,1.128,534,1.764,535,1.128,536,1.764,537,1.092,538,1.128,539,1.764,540,1.128,541,1.128,542,1.128,543,1.128,544,1.128,545,1.128,546,1.128,547,2.101,548,0.88,549,1.128,550,1.128,551,1.655,552,1.128,553,1.128,554,1.092,555,1.128,556,1.128,557,1.128,558,1.128,559,1.128,560,1.764,561,1.764,562,1.764,563,1.128,564,1.128,565,1.128,566,1.128,567,1.128,568,1.128,569,1.128,570,2.173,571,1.128,572,1.128,573,1.128,574,1.128,575,1.128,576,1.128,577,1.128,578,1.128,579,1.128,580,1.764,581,1.128,582,1.128,583,1.128,584,1.128,585,1.128,586,1.128,587,1.128,588,1.128,589,1.128,590,2.173,591,1.128,592,1.764,593,1.128,594,1.764,595,1.764,596,2.173,597,1.764,598,1.764,599,1.128,600,1.764,601,2.211,602,1.128,603,2.458,604,1.764,605,1.764,606,1.764,607,1.128,608,1.128,609,1.025,610,1.776,611,1.128,612,1.556,613,1.092,614,1.128,615,1.128,616,1.128,617,1.092,618,1.128,619,1.128,620,1.128,621,1.708,622,1.128,623,1.128,624,1.128,625,2.173,626,1.128,627,1.128,628,1.128,629,1.128,630,1.128,631,1.128,632,1.128,633,1.128,634,1.128,635,1.128,636,1.128,637,1.128,638,1.128,639,1.128,640,1.128,641,1.764,642,1.128,643,1.764,644,1.708,645,1.128,646,0.938,647,1.128,648,1.058,649,1.128,650,1.128,651,1.128,652,0.861,653,1.764,654,1.025,655,1.025,656,2.038,657,1.092,658,1.092,659,1.058,660,1.092,661,1.128,662,1.128,663,1.128,664,1.128,665,1.128,666,1.756,667,0.886,668,1.128,669,1.128,670,1.128,671,1.128,672,1.128,673,1.128,674,1.128,675,1.128,676,1.128,677,1.128,678,1.128,679,1.128,680,1.128,681,0.861,682,1.128,683,1.058,684,1.128,685,1.981,686,1.092,687,1.128,688,1.128,689,1.128,690,1.128,691,1.058,692,2.425,693,1.092,694,0.886,695,1.128,696,1.128,697,1.128,698,1.128,699,1.128,700,1.128,701,1.706,702,1.128,703,1.128,704,1.764,705,1.092,706,2.458,707,1.128,708,1.128,709,1.655,710,2.956,711,1.764,712,1.128,713,1.764,714,1.764,715,1.764,716,1.128,717,0.966,718,1.655,719,1.764,720,1.764,721,1.128,722,1.128,723,0.995,724,1.128,725,1.764,726,1.128,727,1.128,728,1.128,729,1.128,730,1.128,731,1.128,732,1.128,733,1.128,734,1.128,735,1.128,736,1.128,737,1.128,738,1.764,739,2.218,740,1.092,741,1.655,742,1.917,743,1.128,744,1.128,745,1.128,746,1.128,747,1.128,748,1.128,749,1.128,750,1.058,751,1.058,752,1.708,753,1.128,754,1.128,755,1.128,756,1.128,757,1.092,758,1.128,759,1.128,760,1.128,761,1.092,762,1.128,763,1.128,764,1.128,765,1.128,766,1.128,767,1.128,768,1.128,769,1.128,770,1.128,771,1.128,772,1.128,773,1.128,774,1.128,775,1.128,776,1.128,777,2.426,778,2.458,779,1.659,780,2.173,781,2.668,782,2.668,783,1.764,784,1.511,785,1.708,786,1.708,787,1.128,788,1.128,789,1.145,790,1.604,791,1.604,792,1.128,793,1.058,794,1.385,795,2.173,796,1.655,797,1.092,798,1.981,799,1.128,800,1.128,801,1.128,802,1.128,803,1.128,804,1.128,805,1.092,806,1.128,807,1.128,808,1.128,809,1.128,810,1.128,811,1.128,812,1.092,813,2.173,814,1.128,815,1.128,816,1.128,817,1.128,818,1.128,819,1.128,820,1.128,821,1.128,822,1.128,823,1.128,824,1.128,825,1.128,826,1.128,827,1.128,828,1.128,829,1.128,830,1.128,831,1.128,832,1.128,833,1.025,834,1.058,835,1.128,836,1.128,837,1.092,838,1.128,839,1.128,840,1.092,841,1.128,842,1.092,843,1.128,844,1.092,845,1.128,846,1.092,847,1.128,848,1.128,849,1.128,850,1.128,851,1.128,852,1.128,853,1.128,854,1.128,855,1.128,856,1.128,857,1.685,858,1.128,859,1.128,860,1.128,861,1.128,862,1.128,863,1.128,864,1.128,865,1.655,866,1.128,867,1.604,868,1.058,869,0.966,870,1.708,871,1.092,872,1.092,873,1.092,874,1.092,875,1.092,876,1.092,877,1.128,878,0.966,879,1.128,880,1.128,2477,4.062,2478,2.597,2479,2.597,2480,2.597,2481,2.597,2482,2.597]],["title/classes/DockerBuild.html",[0,0.246,683,1.747]],["body/classes/DockerBuild.html",[0,0.425,2,0.456,3,0.092,4,0.071,5,0.099,8,0.04,9,0.144,10,0.349,11,1.238,12,0.888,13,0.258,16,0.18,17,0.295,18,1.432,19,1.178,20,0.515,22,0.447,23,0.17,25,0.188,26,0.011,27,0.188,29,0.756,36,1.935,38,0.444,39,0.189,40,0.164,50,1.204,53,0.173,54,0.696,59,1.991,60,0.579,61,0.816,62,0.888,69,1.252,71,1.471,76,1.429,102,0.994,103,1.306,131,1.32,153,1.235,165,0.003,166,0.005,167,0.003,168,1.573,170,0.595,172,1.039,182,1.061,185,1.989,186,0.66,187,0.762,190,2.775,195,1.56,196,1.061,200,1.743,201,0.432,202,2.213,207,1.029,208,1.98,213,1.029,216,1.061,221,1.061,234,1.659,235,1.659,243,0.914,260,1.015,289,0.611,303,1.884,312,0.981,370,0.469,417,2.224,418,1.029,419,1.712,427,0.998,428,1.471,429,1.095,443,0.696,444,0.817,445,1.728,446,2.04,447,1.769,448,1.769,449,1.131,450,1.029,451,1.131,452,1.131,453,1.131,454,1.131,455,1.131,456,2.042,457,1.56,458,2.383,459,2.383,460,1.98,461,2.108,462,2.108,463,2.817,464,1.131,465,1.131,466,1.131,467,1.095,468,1.56,469,2.383,470,1.56,471,2.108,472,1.769,473,1.659,474,1.131,475,1.131,476,1.131,477,1.131,478,1.131,479,1.131,480,1.131,481,1.131,482,1.131,483,1.131,484,1.131,485,1.712,486,1.131,487,2.177,488,3.148,489,2.462,490,1.769,491,1.769,492,1.769,493,1.131,494,1.265,495,3.117,496,1.131,497,1.131,498,2.177,499,1.131,500,1.131,501,1.769,502,1.769,503,2.959,504,0.817,505,1.811,506,2.309,507,2.177,508,2.177,509,2.672,510,2.177,511,2.177,512,2.177,513,2.672,514,2.177,515,2.177,516,2.506,517,1.131,518,1.712,519,1.769,520,1.769,521,1.131,522,1.131,523,1.131,524,1.131,525,1.131,526,1.131,527,1.131,528,1.131,529,1.131,530,2.959,531,1.131,532,1.131,533,1.131,534,1.769,535,1.131,536,1.769,537,1.095,538,1.131,539,1.769,540,1.131,541,1.131,542,1.131,543,1.131,544,1.131,545,1.131,546,1.131,547,2.103,548,0.883,549,1.131,550,1.131,551,1.659,552,1.131,553,1.131,554,1.095,555,1.131,556,1.131,557,1.131,558,1.131,559,1.131,560,1.769,561,1.769,562,1.769,563,1.131,564,1.131,565,1.131,566,1.131,567,1.131,568,1.131,569,1.131,570,2.177,571,1.131,572,1.131,573,1.131,574,1.131,575,1.131,576,1.131,577,1.131,578,1.131,579,1.131,580,1.769,581,1.131,582,1.131,583,1.131,584,1.131,585,1.131,586,1.131,587,1.131,588,1.131,589,1.131,590,2.177,591,1.131,592,1.769,593,1.131,594,1.769,595,1.769,596,2.177,597,1.769,598,1.769,599,1.131,600,1.769,601,2.213,602,1.131,603,2.462,604,1.769,605,1.769,606,1.769,607,1.131,608,1.131,609,1.029,610,1.779,611,1.131,612,1.56,613,1.095,614,1.131,615,1.131,616,1.131,617,1.095,618,1.131,619,1.131,620,1.131,621,1.712,622,1.131,623,1.131,624,1.131,625,2.177,626,1.131,627,1.131,628,1.131,629,1.131,630,1.131,631,1.131,632,1.131,633,1.131,634,1.131,635,1.131,636,1.131,637,1.131,638,1.131,639,1.131,640,1.131,641,1.769,642,1.131,643,1.769,644,1.712,645,1.131,646,0.941,647,1.131,648,1.061,649,1.131,650,1.131,651,1.131,652,0.864,653,1.769,654,1.029,655,1.029,656,2.042,657,1.095,658,1.095,659,1.061,660,1.095,661,1.131,662,1.131,663,1.131,664,1.131,665,1.131,666,1.759,667,0.888,668,1.131,669,1.131,670,1.131,671,1.131,672,1.131,673,1.131,674,1.131,675,1.131,676,1.131,677,1.131,678,1.131,679,1.131,680,1.131,681,0.864,682,1.131,683,2.042,684,1.131,685,1.984,686,1.095,687,1.131,688,1.131,689,1.131,690,1.131,691,1.061,692,2.426,693,1.095,694,0.888,695,1.131,696,1.131,697,1.131,698,1.131,699,1.131,700,1.131,701,1.71,702,1.131,703,1.131,704,1.769,705,1.095,706,2.462,707,1.131,708,1.131,709,1.659,710,2.959,711,1.769,712,1.131,713,1.769,714,1.769,715,1.769,716,1.131,717,0.969,718,1.659,719,1.769,720,1.769,721,1.131,722,1.131,723,0.998,724,1.131,725,1.769,726,1.131,727,1.131,728,1.131,729,1.131,730,1.131,731,1.131,732,1.131,733,1.131,734,1.131,735,1.131,736,1.131,737,1.131,738,1.769,739,2.221,740,1.095,741,1.659,742,1.921,743,1.131,744,1.131,745,1.131,746,1.131,747,1.131,748,1.131,749,1.131,750,1.061,751,1.061,752,1.712,753,1.131,754,1.131,755,1.131,756,1.131,757,1.095,758,1.131,759,1.131,760,1.131,761,1.095,762,1.131,763,1.131,764,1.131,765,1.131,766,1.131,767,1.131,768,1.131,769,1.131,770,1.131,771,1.131,772,1.131,773,1.131,774,1.131,775,1.131,776,1.131,777,2.429,778,2.462,779,1.663,780,2.177,781,2.672,782,2.672,783,1.769,784,1.514,785,1.712,786,1.712,787,1.131,788,1.131,789,1.147,790,1.608,791,1.608,792,1.131,793,1.061,794,1.389,795,2.177,796,1.659,797,1.095,798,1.984,799,1.131,800,1.131,801,1.131,802,1.131,803,1.131,804,1.131,805,1.095,806,1.131,807,1.131,808,1.131,809,1.131,810,1.131,811,1.131,812,1.095,813,2.177,814,1.131,815,1.131,816,1.131,817,1.131,818,1.131,819,1.131,820,1.131,821,1.131,822,1.131,823,1.131,824,1.131,825,1.131,826,1.131,827,1.131,828,1.131,829,1.131,830,1.131,831,1.131,832,1.131,833,1.029,834,1.061,835,1.131,836,1.131,837,1.095,838,1.131,839,1.131,840,1.095,841,1.131,842,1.095,843,1.131,844,1.095,845,1.131,846,1.095,847,1.131,848,1.131,849,1.131,850,1.131,851,1.131,852,1.131,853,1.131,854,1.131,855,1.131,856,1.131,857,1.688,858,1.131,859,1.131,860,1.131,861,1.131,862,1.131,863,1.131,864,1.131,865,1.659,866,1.131,867,1.608,868,1.061,869,0.969,870,1.712,871,1.095,872,1.095,873,1.095,874,1.095,875,1.095,876,1.095,877,1.131,878,0.969,879,1.131,880,1.131,2483,3.258,2484,4.072,2485,2.605,2486,4.072,2487,2.605,2488,1.409,2489,2.605,2490,2.605,2491,2.605]],["title/classes/DockerContainer.html",[0,0.246,2492,3.177]],["body/classes/DockerContainer.html",[0,0.359,2,1.096,3,0.141,4,0.065,5,0.095,8,0.095,9,0.265,10,0.346,11,1.98,13,0.189,16,0.197,17,0.543,18,1.551,19,2.167,20,0.606,22,0.422,23,0.243,25,0.289,26,0.01,27,0.289,29,0.738,36,2.055,38,1.066,39,0.453,53,0.169,54,1.672,60,0.556,61,0.574,165,0.007,166,0.009,167,0.007,187,0.928,227,3.363,681,2.658,692,2.258,741,2.549,1010,5.006,1560,5.548,2184,4.646,2309,7.049,2492,6.387,2493,7.076,2494,5.006,2495,8.015,2496,5.938,2497,7.489,2498,6.795,2499,6.257,2500,6.257,2501,6.257,2502,6.257,2503,6.257,2504,6.257,2505,5.503,2506,6.413,2507,6.257,2508,6.257]],["title/components/DockerImageVersionsComponent.html",[263,0.565,353,1.241]],["body/components/DockerImageVersionsComponent.html",[0,0.272,3,0.107,4,0.05,5,0.114,8,0.072,9,0.223,10,0.344,13,0.254,16,0.19,17,0.456,20,0.358,22,0.368,23,0.24,25,0.326,26,0.01,27,0.326,29,0.619,38,1.332,39,0.582,40,0.256,42,0.517,53,0.107,60,0.489,61,0.647,81,1.586,85,1.106,139,1.932,153,1.072,165,0.005,166,0.007,167,0.005,172,0.723,185,1.665,186,1.203,187,1.113,200,2.008,201,1.296,259,1.112,260,0.683,263,0.929,264,1.373,265,1.973,266,1.268,267,1.489,268,1.53,270,1.302,271,2.146,272,1.92,273,2.085,281,1.716,283,1.41,284,2.678,285,1.489,287,2.285,288,1.713,290,3.715,297,4.659,298,3.715,307,5.951,308,1.449,309,2.028,310,1.92,311,1.028,312,1.081,313,1.53,314,1.53,315,1.373,316,1.53,317,1.373,318,2.535,319,1.489,320,2.591,321,1.373,322,1.489,323,1.373,324,1.489,325,1.53,326,1.41,327,1.53,328,1.41,329,1.53,330,1.373,331,1.53,332,1.373,333,1.53,334,1.41,335,1.53,336,1.373,337,1.41,338,1.53,339,1.41,340,2.028,341,1.41,342,2.028,343,1.373,344,1.53,345,1.41,346,1.869,347,1.53,348,1.41,349,2.324,350,1.53,351,1.82,352,1.53,353,2.174,354,1.53,355,1.373,356,1.489,357,1.41,358,1.302,359,1.53,360,1.373,361,2.028,362,1.41,363,1.41,364,2.028,365,1.53,366,1.373,367,1.373,368,1.53,369,1.41,370,1.407,371,1.41,372,1.53,373,1.373,374,1.373,375,1.53,376,1.373,377,1.53,378,1.41,379,1.53,380,1.373,381,1.373,382,1.41,383,1.53,384,1.373,385,1.53,386,1.41,387,1.373,388,1.53,389,1.373,390,1.53,391,1.373,392,1.53,393,1.373,394,1.53,395,1.373,396,1.53,397,1.373,398,1.53,399,1.373,400,1.489,401,1.373,402,1.41,403,1.53,404,1.302,405,1.235,406,1.53,407,1.337,408,1.53,409,1.302,410,1.82,411,1.53,412,1.302,413,1.53,414,1.302,415,1.449,416,1.53,445,2.136,881,6.98,886,1.41,888,3.158,889,2.475,890,3.029,891,2.994,892,1.713,897,3.796,904,5.531,912,5.032,918,3.665,919,5.644,920,6.204,923,6.204,926,6.204,930,2.294,933,3.103,1013,5.531,1014,6.204,1017,4.172,1068,3.029,1069,3.55,1662,3.796,1771,3.901,2006,4.659,2038,2.566,2509,4.172,2510,5.032,2511,6.289,2512,6.607,2513,6.607,2514,6.289,2515,6.01,2516,6.289,2517,6.289,2518,4.744,2519,4.744,2520,4.744,2521,4.744,2522,4.744,2523,5.531,2524,4.744,2525,4.744,2526,6.289,2527,4.744,2528,4.744,2529,6.289,2530,4.744,2531,4.744,2532,4.744,2533,4.744,2534,4.744,2535,4.744,2536,4.744,2537,4.744,2538,4.744,2539,4.744,2540,4.744,2541,3.55]],["title/components/EditContainerComponent.html",[263,0.565,355,1.241]],["body/components/EditContainerComponent.html",[0,0.296,1,1.153,3,0.117,4,0.037,5,0.101,8,0.054,9,0.183,10,0.347,13,0.229,16,0.193,17,0.374,20,0.27,22,0.413,23,0.239,25,0.165,26,0.011,27,0.165,29,0.695,38,1.253,39,0.374,40,0.263,42,0.39,53,0.117,60,0.591,61,0.695,69,1.387,77,2.018,78,1.933,80,1.786,81,1.489,85,1.289,89,0.697,102,0.925,131,0.81,142,2.111,165,0.006,166,0.006,167,0.004,168,1.622,170,0.816,172,1.014,187,0.752,201,1.17,259,0.838,260,0.514,263,0.876,264,1.034,265,1.622,266,0.955,267,1.121,268,1.153,270,0.981,271,2.121,272,1.578,273,2.013,275,4.892,277,3.143,278,3.665,281,1.18,283,1.062,284,2.018,285,1.121,286,2.583,287,1.721,288,2.192,289,0.838,290,3.053,303,2.307,308,1.091,309,1.667,310,1.578,311,0.775,312,1.058,313,1.153,314,1.153,315,1.034,316,1.153,317,1.034,318,2.401,319,1.121,320,2.372,321,1.034,322,1.121,323,1.034,324,1.121,325,1.153,326,1.062,327,1.153,328,1.062,329,1.153,330,1.034,331,1.153,332,1.034,333,1.153,334,1.062,335,1.153,336,1.034,337,1.062,338,1.153,339,1.062,340,1.667,341,1.062,342,1.667,343,1.034,344,1.153,345,1.062,346,1.977,347,1.153,348,1.062,349,2.128,350,1.153,351,1.034,352,1.153,353,1.034,354,1.153,355,1.924,356,1.905,357,1.062,358,0.981,359,1.153,360,1.034,361,1.667,362,1.062,363,1.062,364,1.667,365,1.153,366,1.034,367,1.034,368,1.153,369,1.062,370,1.27,371,1.062,372,1.153,373,1.034,374,1.034,375,1.153,376,1.034,377,1.153,378,1.062,379,1.153,380,1.034,381,1.034,382,1.062,383,1.153,384,1.034,385,1.153,386,1.062,387,1.034,388,1.153,389,1.756,390,1.153,391,1.034,392,1.153,393,1.034,394,1.153,395,1.034,396,1.153,397,1.034,398,1.153,399,1.034,400,1.121,401,1.034,402,1.062,403,1.153,404,0.981,405,0.93,406,1.153,407,1.007,408,1.153,409,0.981,410,1.495,411,1.153,412,0.981,413,1.153,414,0.981,415,1.578,416,1.153,417,2.648,443,0.955,470,1.369,494,1.72,506,2.472,548,0.775,601,1.854,654,1.411,655,2.041,681,1.185,717,1.329,789,1.456,798,2.372,857,1.665,886,1.536,887,2.795,888,2.552,889,2.13,890,2.489,891,1.369,892,1.291,930,1.091,941,2.217,976,2.217,1007,2.648,1047,2.859,1053,2.859,1056,2.338,1062,2.648,1063,2.859,1065,2.859,1067,2.859,1071,2.974,1073,1.933,1086,3.562,1110,2.82,1117,1.933,1118,1.254,1119,1.933,1120,1.857,1121,1.933,1122,1.933,1123,1.933,1124,2.111,1125,1.933,1126,1.254,1127,2.859,1128,1.857,1129,2.859,1135,4.856,1141,4.856,1165,4.134,1166,2.859,1189,5.226,1437,3.828,1789,2.478,1944,2.795,1954,2.018,1963,2.018,2023,1.933,2032,2.478,2038,1.933,2366,2.859,2542,2.859,2543,4.545,2544,4.545,2545,5.338,2546,5.849,2547,6.205,2548,5.849,2549,5.338,2550,5.849,2551,5.849,2552,5.338,2553,5.338,2554,5.338,2555,5.338,2556,5.849,2557,5.849,2558,5.167,2559,3.574,2560,3.574,2561,3.574,2562,3.574,2563,5.167,2564,3.574,2565,3.574,2566,3.574,2567,3.574,2568,3.574,2569,3.574,2570,3.574,2571,3.574,2572,3.574,2573,3.574,2574,3.574,2575,3.574,2576,3.143,2577,3.143,2578,3.143,2579,3.143,2580,3.143,2581,3.143,2582,3.143,2583,2.338,2584,3.143,2585,3.143,2586,4.545,2587,5.849,2588,5.849,2589,4.545,2590,4.545,2591,3.143,2592,3.143,2593,3.143,2594,2.018,2595,1.857,2596,4.545,2597,3.143,2598,3.143,2599,3.143,2600,3.143,2601,4.545,2602,3.143,2603,3.143,2604,3.143,2605,3.143,2606,3.143,2607,2.859,2608,3.143,2609,3.143,2610,3.143,2611,3.143,2612,4.545,2613,3.143,2614,3.143,2615,3.143,2616,3.143,2617,3.143,2618,3.143,2619,5.338,2620,3.143,2621,3.143,2622,4.545,2623,3.143,2624,4.545,2625,3.143,2626,4.545,2627,4.545,2628,4.545,2629,3.143,2630,4.545,2631,3.143,2632,3.143,2633,3.143,2634,3.143,2635,3.143,2636,3.143,2637,3.143,2638,3.143,2639,3.143,2640,3.143,2641,3.143,2642,3.143,2643,3.143,2644,3.143,2645,3.143,2646,3.143,2647,3.143,2648,4.545,2649,3.143,2650,6.828,2651,5.338,2652,3.143,2653,5.338,2654,3.143,2655,3.143,2656,3.143,2657,4.545,2658,3.143,2659,3.143,2660,2.859,2661,3.143,2662,3.143,2663,5.338,2664,6.205,2665,6.669,2666,4.545,2667,4.545,2668,4.545,2669,5.338,2670,3.143,2671,4.545,2672,4.545,2673,4.545,2674,3.143,2675,3.143,2676,3.143,2677,3.143,2678,3.143,2679,3.143,2680,3.143,2681,4.545,2682,4.545,2683,4.496,2684,4.545,2685,3.143,2686,3.143,2687,5.338,2688,4.856,2689,3.143,2690,3.143,2691,3.38,2692,2.338,2693,3.143,2694,3.143,2695,3.143,2696,3.143,2697,3.143,2698,4.134,2699,3.143,2700,2.478]],["title/classes/FileInfo.html",[0,0.246,2170,2.805]],["body/classes/FileInfo.html",[0,0.419,2,0.776,3,0.136,4,0.08,5,0.067,8,0.067,9,0.213,10,0.341,11,1.095,13,0.182,16,0.178,18,1.417,20,0.454,22,0.445,23,0.188,25,0.205,26,0.011,27,0.205,29,0.437,36,1.216,38,0.755,40,0.269,41,1.564,42,0.483,43,2.302,44,2.8,46,1.648,47,2.464,48,1.391,49,1.648,50,0.695,51,1.601,52,1.439,53,0.173,54,1.185,60,0.53,61,0.811,85,1.348,89,0.864,90,1.354,91,1.698,96,2.464,102,0.916,103,1.464,112,3.089,113,3.061,114,3.018,115,3.061,123,3.688,128,3.499,130,1.43,131,0.695,133,2.303,134,2.06,135,2.303,136,2.135,137,2.215,138,2.303,139,2.448,153,1.024,165,0.005,166,0.007,167,0.005,170,1.012,199,3.017,222,2.502,266,2.22,289,1.409,312,0.638,358,1.871,443,1.185,667,2.325,681,1.47,692,2.309,694,2.049,701,2.795,739,2.17,949,2.899,1028,2.75,1128,2.303,1528,2.75,1553,2.619,1580,2.398,1918,4.229,1929,2.215,1944,2.398,2123,3.061,2160,4.997,2161,4.78,2162,2.899,2163,3.284,2164,2.619,2165,3.284,2170,4.459,2174,2.398,2175,3.392,2176,2.398,2177,2.398,2178,3.55,2179,3.122,2180,3.727,2181,4.028,2182,4.728,2183,4.167,2184,3.727,2185,3.074,2186,4.78,2187,4.229,2188,3.284,2189,3.284,2190,3.284,2191,3.284,2192,3.284,2193,3.284,2194,3.284,2195,3.284,2196,3.284,2197,3.284,2198,3.284,2199,3.284,2200,3.284,2201,3.284,2202,3.284,2203,3.284,2204,3.284,2205,3.284,2206,3.284,2207,3.284,2208,3.284,2209,3.284,2210,3.284,2211,3.284,2212,3.284,2213,3.284,2214,3.284,2215,3.284,2216,3.284,2217,2.75,2218,3.284,2219,2.899,2220,3.284,2221,2.899,2222,3.284,2223,3.284,2224,2.502,2225,3.727,2226,5.414,2227,3.284,2228,5.152,2229,2.899,2230,4.452,2231,2.899,2232,4.997,2233,2.899,2234,5.835,2235,2.899,2236,4.452,2237,3.284,2238,3.284,2239,3.284,2240,3.284,2241,2.75,2242,3.284,2243,3.284,2244,4.534,2245,3.284,2246,5.05,2247,5.05,2248,3.284,2249,4.452,2250,3.284,2251,3.284,2252,3.541,2253,3.284,2254,3.284,2255,5.968,2256,4.167,2257,4.452,2258,3.284,2259,3.284,2260,3.284,2261,3.284,2262,3.284,2263,4.452,2264,5.05,2265,5.05,2266,4.452,2267,1.925,2268,2.698,2269,3.284,2270,3.284,2271,4.452,2272,3.284,2273,3.284,2274,3.284,2275,3.284,2276,3.284,2277,3.284,2278,3.284,2279,4.452,2280,4.452,2281,3.284,2282,3.284,2283,3.284,2284,3.284,2285,3.284,2286,3.284,2287,3.284,2288,2.899,2289,3.284,2290,2.75,2291,3.284,2292,3.284,2293,3.284,2294,3.284,2295,3.727,2296,3.284,2297,3.284,2298,4.452,2299,3.284,2300,4.452,2301,3.284,2302,3.284,2303,3.284,2701,4.433,2702,6.009,2703,4.433]],["title/classes/GitRepo.html",[0,0.246,2181,2.534]],["body/classes/GitRepo.html",[0,0.418,2,0.772,3,0.135,4,0.082,5,0.067,8,0.067,9,0.212,10,0.341,11,1.801,13,0.238,16,0.182,18,1.415,20,0.452,21,2.605,22,0.445,23,0.202,25,0.204,26,0.011,27,0.204,29,0.434,36,1.21,38,0.751,40,0.268,41,1.559,42,0.481,43,2.294,44,2.794,46,1.64,47,2.459,48,1.384,49,1.64,50,0.691,51,1.592,52,1.435,53,0.172,54,1.178,60,0.529,61,0.81,85,1.347,89,0.86,90,1.346,91,1.689,96,2.459,102,0.913,103,1.46,112,3.086,113,3.053,114,3.013,115,3.053,123,3.678,128,3.494,130,1.422,131,0.691,133,2.29,134,2.049,135,2.29,136,2.124,137,2.204,138,2.29,139,2.439,153,1.02,165,0.005,166,0.007,167,0.005,170,1.007,199,3.011,222,2.489,266,2.218,289,1.404,312,0.635,358,1.866,443,1.178,667,2.319,681,1.462,692,2.055,694,2.042,701,2.791,739,2.162,949,2.884,1028,2.735,1128,2.29,1528,2.735,1553,4.017,1580,2.385,1918,4.217,1929,2.204,1944,2.385,2123,3.053,2160,4.987,2161,4.987,2162,2.884,2163,3.266,2164,2.605,2165,3.266,2170,3.916,2174,2.385,2175,3.38,2176,2.385,2177,2.385,2178,3.537,2179,3.532,2180,3.714,2181,4.308,2182,4.152,2183,4.152,2184,3.714,2185,3.058,2186,2.884,2187,4.217,2188,3.266,2189,3.266,2190,3.266,2191,3.266,2192,3.266,2193,3.266,2194,3.266,2195,3.266,2196,3.266,2197,3.266,2198,3.266,2199,3.266,2200,3.266,2201,3.266,2202,3.266,2203,3.266,2204,3.266,2205,3.266,2206,3.266,2207,3.266,2208,3.266,2209,3.266,2210,3.266,2211,3.266,2212,3.266,2213,3.266,2214,3.266,2215,3.266,2216,3.266,2217,2.735,2218,3.266,2219,2.884,2220,3.266,2221,2.884,2222,3.266,2223,3.266,2224,2.489,2225,3.714,2226,5.403,2227,3.266,2228,5.144,2229,2.884,2230,4.436,2231,2.884,2232,4.987,2233,2.884,2234,5.826,2235,2.884,2236,4.436,2237,3.266,2238,3.266,2239,3.266,2240,3.266,2241,2.735,2242,3.266,2243,3.266,2244,4.524,2245,3.266,2246,5.037,2247,5.037,2248,3.266,2249,4.436,2250,3.266,2251,3.266,2252,3.532,2253,3.266,2254,3.266,2255,5.959,2256,4.152,2257,4.436,2258,3.266,2259,3.266,2260,3.266,2261,3.266,2262,3.266,2263,4.436,2264,5.037,2265,5.037,2266,4.436,2267,1.915,2268,2.689,2269,3.266,2270,3.266,2271,4.436,2272,3.266,2273,3.266,2274,3.266,2275,3.266,2276,3.266,2277,3.266,2278,3.266,2279,4.436,2280,4.436,2281,3.266,2282,3.266,2283,3.266,2284,3.266,2285,3.266,2286,3.266,2287,3.266,2288,2.884,2289,3.266,2290,2.735,2291,3.266,2292,3.266,2293,3.266,2294,3.266,2295,3.714,2296,3.266,2297,3.266,2298,4.436,2299,3.266,2300,4.436,2301,3.266,2302,3.266,2303,3.266,2704,5.987,2705,5.987]],["title/classes/GitSelectionModel.html",[0,0.246,2706,3.177]],["body/classes/GitSelectionModel.html",[0,0.349,1,1.454,2,0.79,3,0.137,4,0.084,5,0.069,8,0.069,9,0.215,10,0.344,13,0.184,14,1.958,16,0.155,17,0.44,20,0.52,22,0.403,23,0.203,25,0.281,26,0.011,27,0.281,29,0.599,38,0.768,39,0.44,40,0.279,42,0.492,50,0.707,52,1.452,53,0.137,60,0.561,61,0.675,69,1.14,85,1.359,89,0.879,90,1.377,102,1.171,130,2.374,131,0.707,144,2.172,153,1.036,165,0.005,166,0.007,167,0.005,170,1.388,187,0.559,199,3.249,200,1.205,201,0.748,202,1.377,225,3.701,243,1.582,263,0.594,281,1.388,283,1.34,285,1.415,288,1.628,312,0.649,358,1.887,443,1.205,444,1.415,450,1.781,494,1.58,659,1.837,667,1.538,701,2.073,718,1.837,857,1.237,869,2.261,886,1.34,887,2.439,888,3.459,889,1.582,890,3.545,930,1.377,941,2.797,1011,3.608,1015,4.769,1071,1.727,1086,1.896,1110,2.557,1118,1.582,1119,4.282,1120,2.342,1233,2.825,1238,2.025,1239,2.825,1241,2.545,1329,2.664,1580,3.288,1582,3.158,1647,1.837,1679,3.608,1680,3.608,1681,3.127,1787,3.127,1929,2.254,2011,3.608,2061,6.474,2179,3.572,2181,4.677,2219,2.949,2221,2.949,2228,3.976,2229,2.949,2231,3.976,2232,2.949,2233,3.976,2235,2.949,2267,3.337,2288,2.949,2401,2.545,2414,3.127,2441,3.127,2541,3.882,2691,2.949,2706,5.452,2707,6.148,2708,3.608,2709,4.864,2710,6.048,2711,6.079,2712,6.079,2713,5.346,2714,4.509,2715,5.346,2716,4.509,2717,4.503,2718,4.503,2719,3.34,2720,3.34,2721,6.048,2722,3.966,2723,5.346,2724,3.966,2725,3.966,2726,3.966,2727,3.966,2728,3.966,2729,3.608,2730,3.966,2731,3.608,2732,3.966,2733,3.608,2734,3.966,2735,3.966,2736,3.966,2737,3.966,2738,3.966,2739,3.966,2740,3.966,2741,3.966,2742,3.966,2743,5.502,2744,3.966,2745,3.966,2746,5.346,2747,3.966,2748,3.966,2749,3.966,2750,3.966,2751,3.966,2752,3.966,2753,5.346,2754,3.966,2755,3.966,2756,6.048,2757,5.346,2758,5.346,2759,3.966,2760,3.966,2761,3.966,2762,6.048,2763,3.966,2764,3.966,2765,5.346,2766,3.966,2767,5.346,2768,3.966,2769,3.966,2770,3.34,2771,5.346,2772,3.966,2773,5.346,2774,3.966,2775,5.346,2776,3.966,2777,3.966,2778,5.346,2779,3.966,2780,3.966,2781,3.966,2782,3.966,2783,3.966,2784,5.346,2785,3.966,2786,3.966,2787,3.966,2788,3.966,2789,5.346,2790,3.127,2791,5.346,2792,3.966,2793,3.966,2794,5.346,2795,3.966,2796,3.966,2797,3.966,2798,3.966,2799,6.473,2800,3.966,2801,3.966,2802,3.966,2803,3.966,2804,3.966,2805,3.608,2806,3.966,2807,2.928,2808,3.966,2809,3.966,2810,3.966,2811,3.608,2812,3.966,2813,6.048,2814,3.966,2815,3.966,2816,3.966,2817,3.34,2818,3.966,2819,3.966,2820,3.966,2821,3.966,2822,3.966,2823,3.966,2824,3.966,2825,3.966,2826,5.346,2827,5.346,2828,5.346,2829,3.966,2830,3.608,2831,3.966,2832,3.608,2833,3.966,2834,3.608,2835,3.966,2836,3.608,2837,3.966,2838,3.608,2839,3.966,2840,3.966,2841,3.966,2842,3.966,2843,5.346,2844,3.966,2845,3.966,2846,3.966,2847,3.966,2848,3.966,2849,5.346,2850,6.473,2851,3.608,2852,3.966,2853,3.966,2854,3.966,2855,3.966,2856,3.966,2857,3.966,2858,3.966,2859,3.608,2860,3.966]],["title/injectables/GitSourceService.html",[41,1.116,1580,2.32]],["body/injectables/GitSourceService.html",[0,0.391,3,0.121,4,0.092,5,0.057,8,0.057,9,0.19,10,0.34,11,0.929,13,0.238,16,0.199,17,0.388,18,1.536,20,0.405,22,0.447,23,0.242,25,0.356,26,0.011,27,0.356,29,0.615,36,1.032,38,0.641,39,0.57,40,0.258,41,1.395,42,0.41,43,2.608,44,2.608,46,1.399,47,2.583,48,1.18,49,1.399,50,0.59,51,1.358,52,1.519,53,0.163,54,1.005,60,0.499,61,0.796,85,1.403,89,0.734,90,1.637,91,2.393,96,2.413,102,0.817,103,1.363,112,2.978,113,2.805,114,2.866,115,2.805,123,3.379,128,3.57,130,1.213,131,0.59,133,1.954,134,1.748,135,1.954,136,1.812,137,1.88,138,1.954,139,2.184,153,0.914,165,0.004,166,0.006,167,0.004,170,0.859,199,3.163,222,2.124,250,1.954,253,2.46,259,1.754,260,1.077,266,2.14,289,1.257,312,0.541,358,1.975,443,1.005,667,2.322,681,1.247,692,1.918,694,1.828,701,2.911,739,1.936,949,2.46,1028,2.333,1128,1.954,1528,2.333,1553,2.222,1580,2.9,1918,3.875,1929,1.88,1944,2.035,2123,3.457,2160,4.893,2161,5.746,2162,2.46,2163,2.787,2164,2.222,2165,2.787,2170,3.506,2174,2.035,2175,3.844,2176,2.035,2177,2.035,2178,3.69,2179,2.785,2180,3.325,2181,4.022,2182,3.718,2183,3.718,2184,3.325,2185,2.609,2186,2.46,2187,3.875,2188,2.787,2189,2.787,2190,2.787,2191,2.787,2192,2.787,2193,2.787,2194,2.787,2195,2.787,2196,2.787,2197,2.787,2198,2.787,2199,2.787,2200,2.787,2201,2.787,2202,2.787,2203,2.787,2204,2.787,2205,4.627,2206,3.971,2207,4.627,2208,3.971,2209,4.627,2210,3.971,2211,4.627,2212,3.971,2213,4.627,2214,3.971,2215,4.627,2216,4.627,2217,3.875,2218,4.627,2219,4.085,2220,4.627,2221,4.085,2222,4.627,2223,4.627,2224,3.526,2225,3.325,2226,5.044,2227,2.787,2228,4.893,2229,2.46,2230,3.971,2231,2.46,2232,4.707,2233,2.46,2234,5.542,2235,2.46,2236,3.971,2237,2.787,2238,2.787,2239,2.787,2240,2.787,2241,2.333,2242,2.787,2243,3.971,2244,4.223,2245,2.787,2246,4.627,2247,4.627,2248,2.787,2249,3.971,2250,2.787,2251,2.787,2252,3.245,2253,2.787,2254,3.971,2255,6.151,2256,4.721,2257,3.971,2258,2.787,2259,2.787,2260,2.787,2261,2.787,2262,2.787,2263,3.971,2264,4.627,2265,4.627,2266,3.971,2267,1.634,2268,2.407,2269,2.787,2270,3.971,2271,3.971,2272,2.787,2273,2.787,2274,3.971,2275,2.787,2276,2.787,2277,3.971,2278,2.787,2279,3.971,2280,3.971,2281,2.787,2282,2.787,2283,2.787,2284,2.787,2285,2.787,2286,2.787,2287,2.787,2288,2.46,2289,2.787,2290,2.333,2291,3.971,2292,2.787,2293,2.787,2294,2.787,2295,3.325,2296,2.787,2297,2.787,2298,3.971,2299,2.787,2300,3.971,2301,2.787,2302,2.787,2303,5.044,2488,2.035,2731,4.289,2861,5.361,2862,5.361,2863,5.361,2864,5.361,2865,5.361,2866,5.361,2867,3.762,2868,3.762,2869,3.762,2870,3.762,2871,3.762,2872,3.762,2873,3.762,2874,3.762,2875,3.762,2876,3.762,2877,3.762,2878,3.762,2879,3.762,2880,3.762,2881,3.762,2882,3.762,2883,3.762,2884,3.762,2885,3.762,2886,3.762,2887,3.762,2888,3.762]],["title/components/HomeComponent.html",[263,0.565,360,1.241]],["body/components/HomeComponent.html",[0,0.198,3,0.078,4,0.073,5,0.1,8,0.052,9,0.178,10,0.341,13,0.251,16,0.157,17,0.365,19,1.457,20,0.26,22,0.395,23,0.238,25,0.302,26,0.011,27,0.302,29,0.496,38,0.588,39,0.617,40,0.238,42,0.376,52,1.583,53,0.078,61,0.638,69,0.572,81,1.779,85,1.347,89,0.672,90,1.816,102,0.767,103,0.69,131,0.541,137,2.516,139,2.05,144,1.66,153,1.376,154,3.612,165,0.004,166,0.006,167,0.008,172,1.06,187,1.022,201,1.367,204,3.729,206,4.707,263,0.783,264,0.998,265,1.58,266,0.921,267,1.082,268,1.112,270,0.946,271,2.115,272,1.537,273,1.669,275,2.391,278,2.615,281,1.899,283,1.025,284,1.946,285,1.082,286,1.723,287,1.66,288,1.245,289,0.808,290,2.037,291,3.032,296,2.842,297,2.554,302,5.695,304,4.427,305,3.123,308,1.053,309,1.624,310,1.537,311,0.747,312,0.941,313,1.112,314,1.112,315,0.998,316,1.112,317,0.998,318,2.386,319,1.082,320,2.342,321,0.998,322,1.082,323,0.998,324,1.082,325,1.112,326,1.025,327,1.112,328,1.025,329,1.112,330,0.998,331,1.112,332,0.998,333,1.112,334,1.025,335,1.112,336,0.998,337,1.025,338,1.112,339,1.025,340,1.624,341,1.025,342,1.624,343,0.998,344,1.112,345,1.025,346,1.496,347,1.112,348,1.025,349,2.386,350,1.112,351,0.998,352,1.112,353,0.998,354,1.112,355,0.998,356,1.082,357,1.025,358,0.946,359,1.112,360,2.101,361,1.624,362,1.025,363,1.025,364,1.624,365,1.112,366,0.998,367,0.998,368,1.112,369,1.025,370,1.251,371,1.025,372,1.112,373,0.998,374,0.998,375,1.112,376,0.998,377,1.112,378,1.025,379,1.112,380,0.998,381,0.998,382,1.025,383,1.112,384,0.998,385,1.112,386,1.025,387,0.998,388,1.112,389,0.998,390,1.112,391,0.998,392,1.112,393,0.998,394,1.112,395,0.998,396,1.112,397,0.998,398,1.112,399,0.998,400,1.082,401,0.998,402,1.025,403,1.112,404,0.946,405,0.897,406,1.112,407,0.971,408,1.112,409,0.946,410,1.457,411,1.112,412,0.946,413,1.112,414,0.946,415,1.053,416,1.112,428,1.818,429,2.116,468,2.782,494,0.709,548,1.091,612,1.928,717,1.872,779,2.168,784,2.7,789,2.166,794,1.717,796,2.05,886,1.767,891,2.505,892,1.245,902,2.758,916,3.513,927,3.357,930,1.997,935,3.729,945,3.032,964,5.128,965,6.46,968,4.123,970,3.889,974,4.558,985,4.028,988,4.056,989,4.028,1003,4.844,1015,3.491,1207,2.842,1439,4.028,1447,4.844,1448,5.331,1514,4.028,1592,2.255,1647,2.663,1765,5.81,1789,3.491,1790,4.028,1792,4.028,1898,2.037,1900,2.723,1910,5.75,1911,5.75,1936,3.729,1937,5.152,1940,4.534,1942,3.491,1943,5.38,1944,3.537,1946,5.036,1947,4.534,1954,3.357,1956,2.758,1959,4.534,1960,5.902,1961,5.152,1963,2.842,1964,3.729,1965,4.844,1966,5.152,1969,5.525,1970,4.844,1973,4.028,1974,2.758,1977,4.028,1979,2.758,1980,2.758,1991,2.758,1996,4.028,2267,2.84,2306,4.427,2541,2.842,2594,2.842,2595,2.615,2607,2.758,2807,2.425,2817,2.554,2889,3.032,2890,5.946,2891,5.034,2892,5.946,2893,5.034,2894,6.538,2895,6.538,2896,6.538,2897,6.538,2898,6.538,2899,6.538,2900,6.538,2901,6.538,2902,6.538,2903,6.538,2904,5.034,2905,6.538,2906,5.034,2907,6.538,2908,3.447,2909,6.538,2910,5.034,2911,5.034,2912,5.034,2913,3.447,2914,3.447,2915,3.447,2916,3.447,2917,3.447,2918,3.447,2919,3.447,2920,3.447,2921,3.447,2922,3.447,2923,3.447,2924,3.447,2925,3.447,2926,3.447,2927,5.034,2928,3.447,2929,3.447,2930,5.034,2931,3.447,2932,3.447,2933,3.032,2934,3.447,2935,3.447,2936,3.447,2937,4.427,2938,4.548,2939,3.447,2940,5.034,2941,3.447,2942,3.447,2943,3.447,2944,3.447,2945,3.447,2946,5.946,2947,3.447,2948,6.538,2949,5.034,2950,3.447,2951,3.447,2952,3.447,2953,3.447,2954,3.447,2955,3.447,2956,3.447,2957,3.447,2958,3.447,2959,3.447,2960,3.447,2961,4.427,2962,3.447,2963,3.447,2964,3.447,2965,6.538,2966,5.034,2967,7.262,2968,5.946,2969,5.034,2970,5.034,2971,3.447,2972,2.758,2973,5.034,2974,3.447,2975,3.447,2976,3.032,2977,3.447,2978,5.034,2979,3.447,2980,4.427,2981,3.447,2982,3.447,2983,3.447,2984,5.034,2985,4.427,2986,5.034,2987,5.034,2988,5.034,2989,5.034,2990,4.427,2991,5.034,2992,5.034,2993,5.034,2994,4.427,2995,5.034,2996,5.75,2997,5.034,2998,5.034,2999,5.034,3000,5.034,3001,5.034,3002,5.034,3003,4.427,3004,3.123,3005,3.729,3006,5.034,3007,4.427,3008,5.034,3009,5.034,3010,3.447,3011,5.034,3012,5.946,3013,3.447,3014,5.034,3015,5.946,3016,3.447,3017,3.447,3018,3.032,3019,5.034,3020,2.758,3021,5.034,3022,4.427,3023,5.034,3024,5.034,3025,3.447,3026,3.447,3027,3.447,3028,3.447,3029,3.447,3030,3.447,3031,3.447,3032,5.946,3033,3.447,3034,3.447,3035,3.447,3036,3.447,3037,3.447,3038,3.447,3039,3.447,3040,3.447,3041,3.447,3042,3.032,3043,3.032]],["title/classes/K8sDeployment.html",[0,0.246,2473,2.421]],["body/classes/K8sDeployment.html",[0,0.268,2,0.819,3,0.106,4,0.049,5,0.071,8,0.071,9,0.221,10,0.347,11,1.538,13,0.251,16,0.203,17,0.451,18,1.526,19,2.161,22,0.406,23,0.248,25,0.37,26,0.011,27,0.37,29,0.69,36,1.922,38,1.194,39,0.58,40,0.255,47,2.259,48,1.467,49,1.738,50,0.733,51,1.688,53,0.141,54,1.249,60,0.486,61,0.685,85,1.254,102,1.333,103,1.403,153,1.541,165,0.005,166,0.007,167,0.005,172,0.713,200,1.664,202,1.902,227,2.797,259,1.914,260,1.175,281,1.422,346,1.851,445,1.185,652,2.065,692,2.104,694,1.594,794,2.124,833,3.159,834,2.537,917,3.235,925,4.319,1200,4.615,1203,2.639,1581,3.597,1647,1.904,1678,2.639,2187,4.962,2473,4.61,2488,3.369,2709,4.983,3044,5.931,3045,3.741,3046,6.159,3047,8.612,3048,6.841,3049,8.612,3050,8.612,3051,4.983,3052,5.477,3053,5.477,3054,5.477,3055,5.087,3056,5.477,3057,6.228,3058,5.477,3059,4.138,3060,4.675,3061,4.675,3062,4.675,3063,4.675,3064,6.159,3065,6.228,3066,4.675,3067,4.675,3068,8.746,3069,4.675,3070,4.675,3071,4.675,3072,4.675,3073,4.675,3074,4.675,3075,4.675,3076,4.675,3077,4.675,3078,4.675,3079,4.675,3080,4.675,3081,4.675,3082,4.675,3083,6.228,3084,5.533,3085,4.675,3086,6.228,3087,4.675,3088,6.228,3089,4.675,3090,4.112,3091,4.675,3092,4.675,3093,2.9,3094,4.983,3095,5.477,3096,5.477,3097,5.477,3098,4.614,3099,4.675,3100,4.675,3101,4.675,3102,4.675,3103,4.675,3104,4.112,3105,4.675,3106,3.463,3107,4.675,3108,4.675,3109,4.675,3110,4.675,3111,4.675,3112,5.477,3113,4.675,3114,4.675,3115,4.675,3116,4.675,3117,4.675,3118,4.675,3119,4.675,3120,4.675,3121,4.675]],["title/classes/K8sDeploymentDefinition.html",[0,0.246,1200,2.228]],["body/classes/K8sDeploymentDefinition.html",[0,0.302,1,1.696,2,0.921,3,0.119,4,0.055,5,0.08,8,0.08,9,0.238,10,0.348,11,1.832,13,0.254,16,0.2,17,0.487,18,1.487,19,1.946,20,0.56,22,0.436,23,0.246,25,0.311,26,0.01,27,0.311,36,1.845,38,1.146,39,0.487,40,0.221,53,0.119,60,0.542,61,0.617,62,1.794,103,1.617,153,1.408,165,0.006,166,0.008,167,0.006,172,1.36,187,0.834,200,2.089,202,2.264,208,2.077,259,1.577,260,0.968,349,1.522,445,2.178,518,2.211,694,2.294,701,1.794,742,2.015,761,2.211,791,2.077,794,2.529,833,2.928,834,3.02,837,2.828,917,3.852,925,5.142,991,4.208,1200,4.291,1647,2.142,2180,4.172,2688,4.208,3044,6.186,3048,6.521,3051,5.933,3052,6.521,3053,6.521,3054,6.521,3058,5.915,3090,5.915,3112,4.625,3122,4.625,3123,6.725,3124,5.259,3125,5.259,3126,5.259,3127,5.259,3128,5.259,3129,5.259,3130,5.259,3131,5.259,3132,5.259,3133,5.259,3134,5.259,3135,5.259,3136,5.259,3137,5.259,3138,5.259,3139,5.259,3140,5.259,3141,5.259,3142,4.625,3143,5.915,3144,5.259,3145,5.915,3146,5.259,3147,5.259,3148,5.259,3149,5.259,3150,5.259,3151,5.259,3152,5.259,3153,5.259,3154,5.259,3155,5.259,3156,5.259,3157,5.259,3158,5.259,3159,5.259,3160,5.259,3161,5.259,3162,4.625,3163,4.625,3164,4.625,3165,5.259,3166,5.259,3167,5.259,3168,5.259,3169,4.208,3170,5.259,3171,5.259,3172,5.259,3173,5.259,3174,4.625,3175,5.259,3176,5.259,3177,5.259,3178,5.259,3179,5.259,3180,5.259,3181,5.259,3182,5.259,3183,6.725,3184,7.415,3185,5.259,3186,6.725,3187,5.259,3188,5.259,3189,6.725,3190,5.259,3191,5.259,3192,5.259,3193,5.259,3194,5.259,3195,5.259,3196,5.259]],["title/classes/K8sPod.html",[0,0.246,3059,2.534]],["body/classes/K8sPod.html",[0,0.323,2,0.985,3,0.127,4,0.059,5,0.086,8,0.086,9,0.249,10,0.344,11,1.889,13,0.242,16,0.195,17,0.508,18,1.512,19,2.03,22,0.418,23,0.238,25,0.26,26,0.011,27,0.26,36,1.925,38,0.958,39,0.407,40,0.23,53,0.159,54,1.503,60,0.487,61,0.516,69,1.163,147,3.488,165,0.006,166,0.008,167,0.006,202,2.335,227,3.596,259,1.645,260,1.01,303,1.503,349,1.627,485,2.364,537,2.364,652,2.327,666,1.973,692,2.155,694,2.393,742,2.154,750,2.29,752,2.364,793,2.858,794,2.608,1560,5.197,2180,4.352,2184,4.352,2492,6.105,2496,4.166,2498,4.499,2506,5.613,2700,3.899,3044,6.026,3051,6.119,3059,5.09,3093,3.488,3162,4.945,3163,4.945,3164,4.945,3174,4.945,3197,4.499,3198,7.647,3199,5.623,3200,5.623,3201,5.623,3202,5.623,3203,5.623,3204,5.623,3205,5.303,3206,6.725,3207,5.623,3208,5.623,3209,6.725,3210,5.623,3211,5.623,3212,5.623,3213,5.623,3214,8.749,3215,5.623,3216,5.623,3217,4.499,3218,5.623,3219,5.623,3220,5.613,3221,4.166,3222,4.166,3223,6.725,3224,5.623,3225,5.623,3226,5.623,3227,5.623,3228,5.623,3229,5.623,3230,5.623,3231,5.623,3232,5.623,3233,4.945,3234,5.623,3235,8.524,3236,5.623,3237,5.623,3238,5.623,3239,5.623,3240,7.016,3241,5.623,3242,5.623,3243,7.016,3244,5.623]],["title/injectables/K8sService.html",[41,1.116,1581,2.066]],["body/injectables/K8sService.html",[0,0.194,1,1.604,3,0.077,4,0.035,5,0.052,8,0.052,9,0.176,10,0.337,13,0.252,16,0.197,17,0.36,18,1.555,20,0.256,22,0.444,23,0.238,25,0.372,26,0.011,27,0.372,29,0.58,38,1.004,39,0.583,40,0.256,41,1.294,42,0.37,43,2.485,44,2.858,45,3.015,46,1.261,47,2.651,48,1.064,49,1.261,50,1.017,51,1.224,52,1.458,53,0.077,60,0.565,61,0.792,69,0.824,85,1.37,89,0.661,90,1.519,91,2.256,96,2.651,102,0.517,110,3.186,112,3.026,113,3.242,114,3.082,115,3.242,116,2.583,117,2.583,118,2.485,119,1.761,120,1.761,121,1.761,128,3.535,130,2.406,131,1.083,133,3.059,134,2.737,135,3.059,136,2.836,137,2.943,138,3.059,139,2.813,153,1.105,165,0.004,166,0.006,167,0.004,172,1.1,186,0.86,187,0.42,225,1.633,250,1.761,251,4.373,253,2.217,259,1.794,260,1.039,266,0.906,270,1.364,271,1.166,272,1.981,281,0.774,445,0.86,494,0.697,612,2.931,681,1.649,692,1.401,742,1.905,784,1.261,833,2.728,917,4.123,1200,4.487,1202,3.186,1203,1.914,1483,5.705,1581,2.395,1770,5.173,1771,3.653,1918,4.627,1929,1.694,1959,3.448,2174,1.834,2252,3.059,2256,4.498,2268,2.913,2290,2.103,2408,4.123,2432,3.325,2473,4.076,2475,5.526,2476,2.982,2488,3.186,2515,3.979,2834,3.979,3046,5.179,3059,3.832,3093,2.103,3104,2.982,3106,3.684,3142,4.373,3143,4.373,3245,2.982,3246,5.889,3247,5.889,3248,6.349,3249,5.889,3250,4.973,3251,4.973,3252,4.973,3253,4.973,3254,4.973,3255,4.973,3256,6.486,3257,4.973,3258,4.973,3259,3.39,3260,4.973,3261,4.973,3262,3.39,3263,4.973,3264,3.39,3265,4.973,3266,3.39,3267,4.973,3268,3.39,3269,4.973,3270,5.117,3271,3.39,3272,4.363,3273,4.973,3274,3.39,3275,4.973,3276,3.39,3277,4.973,3278,3.39,3279,3.39,3280,4.973,3281,3.39,3282,3.39,3283,3.39,3284,4.973,3285,3.39,3286,4.973,3287,3.39,3288,4.973,3289,3.39,3290,4.973,3291,3.39,3292,4.973,3293,4.973,3294,4.973,3295,4.973,3296,4.973,3297,4.973,3298,4.973,3299,4.973,3300,4.973,3301,4.973,3302,4.973,3303,4.973,3304,4.973,3305,6.486,3306,4.973,3307,4.973,3308,4.973,3309,3.39,3310,4.973,3311,3.39,3312,2.351,3313,3.39,3314,3.39,3315,3.39,3316,3.39,3317,3.39,3318,3.39,3319,3.39,3320,7.651,3321,2.982,3322,7.651,3323,3.39,3324,3.39,3325,3.39,3326,7.219,3327,5.776,3328,3.39,3329,3.39,3330,3.39,3331,3.39,3332,3.39,3333,3.39,3334,3.39,3335,3.39,3336,3.39,3337,2.982,3338,3.39,3339,3.39,3340,4.973,3341,6.907,3342,5.889,3343,3.39,3344,3.39,3345,2.982,3346,3.39,3347,3.39,3348,3.39,3349,3.39,3350,3.979,3351,4.973,3352,3.39,3353,3.39,3354,2.982,3355,4.973,3356,3.39,3357,2.712,3358,3.39,3359,3.39,3360,3.39,3361,3.39,3362,3.39,3363,3.39,3364,3.39,3365,3.39,3366,3.39,3367,3.39,3368,3.39,3369,3.39,3370,3.39,3371,3.39,3372,4.973,3373,3.39,3374,3.39,3375,2.982,3376,3.39,3377,3.39,3378,3.39,3379,5.889,3380,5.889,3381,3.39,3382,3.39,3383,3.39,3384,3.39,3385,3.39,3386,3.39,3387,4.973,3388,3.39,3389,3.39,3390,4.973,3391,4.973,3392,3.39,3393,3.39,3394,4.973,3395,3.39,3396,4.973,3397,3.39,3398,6.486,3399,3.979,3400,4.973,3401,3.39,3402,3.39,3403,3.39,3404,4.973,3405,3.39,3406,3.39,3407,3.39,3408,3.39,3409,3.39,3410,3.39,3411,3.39,3412,3.39,3413,3.39,3414,3.39,3415,3.39,3416,3.39,3417,3.39,3418,3.39,3419,5.889,3420,4.973,3421,4.973,3422,4.973]],["title/classes/LivePods.html",[0,0.246,3423,2.974]],["body/classes/LivePods.html",[0,0.385,2,0.918,3,0.118,4,0.055,5,0.08,8,0.08,9,0.238,10,0.34,13,0.236,16,0.194,17,0.486,20,0.396,22,0.42,23,0.243,25,0.361,26,0.011,27,0.361,29,0.769,38,0.893,39,0.608,40,0.243,47,2.662,48,1.645,53,0.152,60,0.364,61,0.679,69,1.113,85,1.42,89,1.022,102,1.129,103,1.563,153,1.43,165,0.006,166,0.008,167,0.006,229,3.429,259,1.736,260,1.066,281,1.691,289,1.229,312,0.966,427,2.99,494,1.697,652,2.226,918,4.055,1020,3.429,1128,3.487,1202,2.836,1581,3.76,1678,2.96,2353,4.972,2496,3.884,2594,2.96,2595,2.723,2700,3.636,3055,5.399,3059,5.174,3084,3.884,3093,4.164,3098,3.884,3106,3.884,3205,3.636,3221,3.884,3222,3.884,3423,5.134,3424,7.068,3425,4.195,3426,6.511,3427,6.511,3428,6.511,3429,6.511,3430,6.246,3431,6.712,3432,7.404,3433,6.712,3434,6.865,3435,6.712,3436,5.243,3437,6.865,3438,6.511,3439,4.843,3440,6.712,3441,5.903,3442,5.243,3443,5.243,3444,5.243,3445,5.243,3446,5.903,3447,7.381,3448,5.243,3449,5.243,3450,5.243,3451,5.903,3452,5.243,3453,5.243,3454,5.243,3455,5.903,3456,5.243,3457,3.636,3458,4.195,3459,4.611,3460,5.903,3461,4.611,3462,4.611,3463,5.903,3464,5.37,3465,4.611,3466,6.511,3467,4.611,3468,5.903,3469,4.611,3470,4.611,3471,4.611,3472,6.511,3473,6.511,3474,6.511,3475,4.611,3476,5.903,3477,4.611,3478,4.611,3479,4.611,3480,3.884,3481,4.611,3482,4.611,3483,4.611]],["title/classes/LivePodsCount.html",[0,0.246,3457,2.974]],["body/classes/LivePodsCount.html",[0,0.406,2,1,3,0.129,4,0.06,5,0.087,8,0.087,9,0.251,10,0.342,13,0.172,16,0.187,20,0.431,22,0.419,23,0.229,25,0.264,26,0.011,27,0.264,29,0.698,38,0.973,40,0.253,47,2.483,48,1.791,53,0.16,60,0.396,61,0.706,69,1.174,85,1.375,89,1.113,102,1.174,103,1.612,153,1.529,165,0.006,166,0.008,167,0.006,229,3.733,289,1.338,312,1.019,427,2.186,494,1.655,652,2.348,918,2.965,1020,3.733,1128,3.678,1202,3.087,1581,3.411,1678,3.222,2496,6.131,2594,3.222,2595,2.965,2700,5.739,3055,4.631,3059,4.889,3084,4.228,3093,3.54,3098,6.131,3106,4.228,3205,3.958,3221,4.228,3222,4.228,3423,4.91,3424,6.748,3425,4.566,3426,5.019,3427,5.019,3428,5.019,3429,5.019,3430,6.622,3434,5.019,3437,6.228,3438,5.019,3439,3.733,3441,5.019,3446,5.019,3447,6.771,3451,5.019,3455,5.019,3457,4.91,3458,4.566,3459,5.019,3460,6.228,3461,5.019,3462,5.019,3463,6.228,3464,5.666,3465,5.019,3466,6.771,3467,5.019,3468,6.228,3469,5.019,3470,5.019,3471,5.019,3472,6.771,3473,6.771,3474,6.771,3475,5.019,3476,6.228,3477,5.019,3478,5.019,3479,5.019,3480,4.228,3481,5.019,3482,5.019,3483,5.019,3484,5.707,3485,5.707,3486,8.05]],["title/components/MicroServiceInstallerComponent.html",[263,0.565,366,1.241]],["body/components/MicroServiceInstallerComponent.html",[0,0.193,3,0.076,4,0.035,5,0.136,8,0.051,9,0.229,10,0.34,13,0.252,14,2.544,16,0.192,17,0.358,20,0.254,22,0.421,23,0.238,25,0.36,26,0.011,27,0.36,29,0.791,39,0.582,40,0.236,42,0.366,50,0.774,53,0.076,60,0.582,61,0.592,81,1.363,85,1.353,89,0.655,103,1.173,131,1.128,134,2.722,150,2.197,165,0.004,166,0.006,167,0.004,172,0.512,187,0.8,201,1.372,259,1.158,260,0.711,263,0.772,264,0.972,265,2.026,266,0.898,267,1.054,268,1.083,270,0.922,271,2.113,272,1.508,273,1.638,281,1.809,298,2.918,308,1.026,309,1.593,310,1.508,311,0.728,312,0.93,313,1.083,314,1.083,315,0.972,316,1.083,317,0.972,318,2.413,319,1.054,320,2.321,321,0.972,322,1.054,323,0.972,324,1.054,325,1.083,326,0.998,327,1.083,328,0.998,329,1.083,330,0.972,331,1.083,332,0.972,333,1.083,334,0.998,335,1.083,336,0.972,337,0.998,338,1.083,339,0.998,340,1.593,341,0.998,342,1.593,343,0.972,344,1.083,345,0.998,346,1.468,347,1.083,348,0.998,349,1.695,350,1.083,351,0.972,352,1.083,353,0.972,354,1.083,355,0.972,356,1.054,357,0.998,358,0.922,359,1.083,360,0.972,361,1.593,362,0.998,363,0.998,364,2.083,365,1.083,366,1.869,367,0.972,368,1.083,369,0.998,370,1.445,371,0.998,372,1.083,373,0.972,374,0.972,375,1.083,376,0.972,377,1.083,378,0.998,379,1.083,380,0.972,381,0.972,382,0.998,383,1.083,384,0.972,385,1.083,386,0.998,387,0.972,388,1.083,389,0.972,390,1.083,391,0.972,392,1.083,393,0.972,394,1.083,395,0.972,396,1.083,397,0.972,398,1.083,399,0.972,400,1.054,401,0.972,402,0.998,403,1.083,404,0.922,405,0.874,406,1.083,407,0.946,408,1.083,409,0.922,410,1.429,411,1.083,412,0.922,413,1.083,414,0.922,415,1.026,416,1.083,456,1.368,463,2.909,469,2.893,547,1.889,548,1.07,646,2.332,648,1.368,779,2.142,789,1.392,886,1.741,930,1.972,1086,3.127,1089,5.151,1110,2.676,1118,1.179,1126,1.179,1205,2.197,1206,2.928,1207,3.307,1209,3.425,1215,3.425,1216,3.23,1217,4.784,1218,3.23,1222,2.687,1223,2.788,1225,2.084,1227,2.788,1230,2.488,1231,2.687,1233,2.722,1234,2.329,1235,2.954,1236,2.488,1239,1.561,1240,2.197,1241,1.896,1242,2.329,1243,2.488,1271,4.772,1272,4.772,1273,2.329,1274,4.99,1275,5.158,1277,3.23,1278,3.425,1279,3.425,1281,3.425,1283,4.865,1284,2.329,1304,4.344,1329,3.815,1352,3.228,1354,3.831,1367,2.488,1368,2.954,1369,4.344,1370,1.984,1373,3.952,1425,4.686,1426,5.151,1447,3.659,1448,4.772,1499,5.167,1579,3.493,1647,3.564,1682,1.984,1776,3.952,1936,3.659,2023,1.817,2186,2.197,2330,5.679,2334,7.061,2335,4.344,2343,6.052,2344,5.167,2345,7.061,2405,5.292,2691,4.224,2698,5.951,2859,2.687,2938,3.23,3004,3.064,3487,7.589,3488,4.939,3489,5.151,3490,5.857,3491,5.857,3492,5.857,3493,5.857,3494,5.857,3495,6.458,3496,4.939,3497,4.939,3498,4.939,3499,4.939,3500,4.939,3501,3.359,3502,4.939,3503,3.359,3504,4.939,3505,3.359,3506,4.939,3507,6.458,3508,3.359,3509,6.881,3510,3.359,3511,4.939,3512,3.359,3513,3.359,3514,3.359,3515,3.359,3516,4.939,3517,3.359,3518,4.939,3519,3.359,3520,4.939,3521,3.359,3522,5.857,3523,4.939,3524,4.939,3525,4.939,3526,5.857,3527,4.939,3528,3.359,3529,3.359,3530,5.857,3531,3.359,3532,5.857,3533,4.939,3534,7.195,3535,7.195,3536,5.857,3537,5.857,3538,3.359,3539,3.359,3540,3.359,3541,6.458,3542,3.359,3543,3.359,3544,3.359,3545,2.954,3546,3.359,3547,3.359,3548,3.359,3549,3.359,3550,6.458,3551,3.359,3552,3.359,3553,3.359,3554,3.359,3555,3.359,3556,3.359,3557,3.359,3558,6.881,3559,3.359,3560,6.881,3561,6.458,3562,6.881,3563,3.359,3564,3.359,3565,6.458,3566,3.359,3567,3.359,3568,3.359,3569,3.359,3570,3.359,3571,3.359,3572,3.359,3573,6.458,3574,3.359,3575,3.359,3576,3.359,3577,3.359,3578,3.359,3579,3.359,3580,3.359,3581,5.857,3582,3.359,3583,4.939,3584,3.359,3585,3.359,3586,3.359,3587,3.359,3588,3.359,3589,3.359,3590,3.359,3591,3.359,3592,3.359,3593,5.857,3594,5.857,3595,3.359,3596,5.857,3597,4.939,3598,3.359,3599,3.359,3600,3.359,3601,3.359,3602,3.359,3603,3.359,3604,4.939,3605,3.359,3606,3.359,3607,3.359,3608,4.939,3609,4.939,3610,3.659,3611,4.939,3612,4.344,3613,4.939,3614,4.939,3615,4.344,3616,4.939,3617,4.939,3618,3.952,3619,4.939,3620,4.939,3621,3.952]],["title/injectables/Ng2Uploader.html",[41,1.116,3622,2.805]],["body/injectables/Ng2Uploader.html",[0,0.319,3,0.089,4,0.041,5,0.128,8,0.106,9,0.197,11,1.373,13,0.236,16,0.201,17,0.403,21,2.339,22,0.43,23,0.247,25,0.361,26,0.011,27,0.361,29,0.87,38,1.095,39,0.601,40,0.13,41,1.447,42,0.432,53,0.126,60,0.509,61,0.698,62,1.35,69,1.418,96,2.072,102,1.062,103,0.793,125,1.907,130,1.277,131,1.365,153,1.4,154,3.094,159,2.456,165,0.004,166,0.006,167,0.005,243,1.389,250,2.057,259,2.041,260,1.253,281,1.963,296,2.235,473,1.613,494,1.748,692,1.566,878,2.59,888,2.701,1056,2.589,1442,4.447,2003,2.933,2012,4.447,2023,3.007,2164,2.339,2187,2.456,2770,4.118,3327,4.447,3622,3.636,3623,7.158,3624,2.933,3625,5.649,3626,5.649,3627,5.649,3628,5.649,3629,5.649,3630,5.649,3631,5.649,3632,5.649,3633,5.649,3634,5.649,3635,5.649,3636,5.649,3637,5.649,3638,5.649,3639,5.649,3640,5.649,3641,5.649,3642,5.649,3643,5.558,3644,6.423,3645,6.126,3646,6.423,3647,5.558,3648,5.558,3649,5.558,3650,5.558,3651,5.558,3652,6.126,3653,4.888,3654,5.649,3655,3.959,3656,3.959,3657,3.959,3658,3.959,3659,3.959,3660,3.959,3661,4.888,3662,3.959,3663,4.888,3664,3.959,3665,3.959,3666,3.959,3667,3.959,3668,4.888,3669,3.959,3670,4.888,3671,3.959,3672,3.959,3673,4.888,3674,3.959,3675,3.959,3676,3.959,3677,4.888,3678,3.959,3679,3.959,3680,3.959,3681,3.959,3682,3.959,3683,3.959,3684,3.959,3685,3.959,3686,3.959,3687,3.959,3688,4.447,3689,3.959,3690,3.959,3691,3.959,3692,3.959,3693,3.959,3694,3.959,3695,3.959,3696,4.118,3697,5.649,3698,4.888,3699,5.649,3700,4.201,3701,3.482,3702,3.482,3703,4.888,3704,4.118,3705,6.126,3706,6.126,3707,4.888,3708,4.888,3709,3.482,3710,3.482,3711,3.482,3712,3.482,3713,3.482,3714,3.482,3715,5.649,3716,4.888,3717,4.888,3718,4.888,3719,5.649,3720,4.888,3721,5.649,3722,4.888,3723,5.649,3724,4.888,3725,4.888,3726,4.888,3727,4.888,3728,4.888,3729,4.888,3730,4.888,3731,4.888,3732,4.888,3733,4.888,3734,4.888,3735,4.888,3736,4.888,3737,4.888,3738,4.888,3739,5.649,3740,4.888,3741,5.649,3742,4.888,3743,4.888,3744,4.888,3745,5.649,3746,4.888,3747,6.126,3748,4.888,3749,4.888,3750,4.888,3751,3.482,3752,3.482,3753,3.482,3754,3.482,3755,3.482,3756,3.482,3757,3.482,3758,3.168,3759,3.482,3760,5.649,3761,3.482,3762,3.482,3763,4.888,3764,3.482,3765,3.482,3766,3.482,3767,4.759,3768,3.482,3769,3.482,3770,3.482,3771,4.888,3772,3.482,3773,3.482,3774,6.126,3775,3.482,3776,3.482,3777,3.482,3778,3.482,3779,3.482,3780,3.482,3781,3.482,3782,3.482,3783,3.482,3784,3.482,3785,3.482,3786,3.482,3787,3.482,3788,3.482,3789,3.482,3790,3.482,3791,3.482,3792,3.482,3793,3.482,3794,3.482,3795,3.168,3796,3.482]],["title/directives/NgFileDrop.html",[311,0.929,409,1.177]],["body/directives/NgFileDrop.html",[0,0.353,3,0.139,4,0.064,5,0.136,8,0.094,9,0.263,10,0.282,13,0.186,16,0.191,17,0.538,20,0.465,22,0.302,23,0.237,25,0.285,26,0.01,27,0.285,38,1.05,39,0.446,40,0.243,42,0.672,53,0.139,60,0.552,125,3.98,165,0.007,166,0.008,167,0.007,259,1.444,260,0.887,270,1.69,271,1.739,281,1.694,289,1.444,311,1.608,402,2.456,404,1.69,409,2.036,410,2.304,494,1.637,888,3.555,1068,2.967,1069,3.478,1601,6.371,2044,5.865,2144,4.929,2146,6.612,2164,3.64,2186,4.029,2595,3.2,3622,5.405,3767,5.899,3797,6.951,3798,5.418,3799,7.268,3800,8.264,3801,7.42,3802,6.16,3803,6.16,3804,6.16,3805,6.16,3806,5.418,3807,4.929,3808,5.418,3809,6.16,3810,7.42,3811,6.16,3812,6.16,3813,6.16,3814,6.16,3815,7.962,3816,7.962,3817,6.16,3818,6.16,3819,6.16,3820,5.418,3821,5.418,3822,6.16,3823,7.42,3824,6.16]],["title/directives/NgFileSelect.html",[311,0.929,412,1.177]],["body/directives/NgFileSelect.html",[0,0.362,3,0.143,4,0.066,5,0.136,8,0.096,9,0.267,10,0.287,13,0.191,16,0.192,17,0.545,20,0.477,23,0.239,25,0.292,26,0.01,27,0.292,39,0.457,40,0.247,42,0.688,53,0.143,60,0.558,125,4.012,165,0.007,166,0.009,167,0.007,259,1.479,260,0.908,270,1.731,271,1.764,281,1.719,289,1.479,311,1.631,402,2.476,404,1.731,410,2.328,412,2.065,888,3.579,1020,4.127,1068,3.039,1069,3.562,2044,5.903,2144,5.048,2146,6.665,2164,3.727,2541,4.541,2595,3.277,2683,4.674,3622,5.448,3797,6.984,3799,7.326,3806,5.549,3807,5.048,3808,5.549,3820,5.549,3821,5.549,3825,5.549,3826,8.512,3827,7.526,3828,6.309,3829,6.309,3830,6.309,3831,6.309,3832,6.309,3833,6.309,3834,6.309]],["title/injectables/PackagesService.html",[41,1.116,1582,2.228]],["body/injectables/PackagesService.html",[0,0.4,3,0.14,4,0.083,5,0.071,8,0.106,9,0.219,10,0.341,13,0.26,16,0.197,17,0.449,18,1.255,20,0.35,22,0.446,23,0.229,25,0.377,26,0.011,27,0.377,29,0.687,39,0.578,40,0.275,41,1.612,42,0.506,43,2.852,44,3.057,45,2.155,46,1.724,47,2.755,48,1.455,49,1.724,50,0.727,51,1.674,52,1.637,53,0.158,59,2.13,60,0.538,61,0.804,85,1.216,89,0.904,90,1.891,91,2.672,96,2.502,112,3.234,114,3.245,126,2.233,128,3.466,130,2.502,131,1.167,165,0.005,166,0.007,167,0.005,170,1.059,199,3.311,206,2.739,250,2.408,253,3.032,259,1.087,260,0.667,312,0.667,443,1.239,444,1.455,446,1.537,857,1.272,1126,1.627,1570,4.95,1582,3.217,2175,4.202,2176,2.508,2177,2.508,2224,3.937,2252,4.029,2267,3.709,2268,3.343,2396,3.215,2397,3.435,2400,5.162,2401,2.617,2402,3.435,2403,2.876,2404,2.876,2405,3.215,2406,3.435,2407,5.167,2408,3.217,2409,4.955,2410,4.955,2411,6.206,2412,5.379,2413,5.379,2414,6.195,2415,5.956,2416,4.588,2417,5.167,2418,4.955,2419,3.709,2420,4.588,2421,3.435,2422,3.435,2423,4.955,2424,6.206,2425,3.709,2426,3.709,2427,4.955,2428,3.709,2429,3.709,2430,3.709,2431,3.709,2432,3.496,2433,3.709,2434,3.709,2435,4.955,2436,6.385,2437,3.709,2438,3.709,2439,3.435,2440,3.709,2441,3.215,2442,3.709,2443,3.709,2444,4.955,2445,3.709,2488,4.026,3835,6.193,3836,6.193,3837,5.447,3838,6.193,3839,6.193,3840,4.636,3841,4.636,3842,4.636,3843,4.636,3844,4.636,3845,4.636]],["title/classes/Payload.html",[0,0.246,110,2.32]],["body/classes/Payload.html",[0,0.323,2,0.987,3,0.127,4,0.059,5,0.117,8,0.086,9,0.249,10,0.339,13,0.212,16,0.19,17,0.509,18,1.513,19,2.034,20,0.578,22,0.442,23,0.243,25,0.325,26,0.01,27,0.325,39,0.609,53,0.173,54,1.878,59,2.146,60,0.391,61,0.771,85,1.102,96,2.267,110,4.663,130,2.267,165,0.006,166,0.008,167,0.006,173,5.394,779,1.87,878,2.613,925,6.133,1528,4.359,1647,3.425,2407,5.938,3846,4.511,3847,7.656,3848,7.656,3849,7.656,3850,7.656,3851,7.809,3852,5.623,3853,8.694,3854,7.027,3855,7.253,3856,5.638,3857,7.253,3858,5.638,3859,5.638,3860,5.638,3861,7.027,3862,5.638,3863,5.623,3864,5.638,3865,5.31,3866,5.638,3867,5.638,3868,5.638,3869,4.511,3870,6.734,3871,8.409,3872,7.027,3873,5.638,3874,5.638,3875,5.638,3876,5.638,3877,8.529,3878,5.638,3879,7.027,3880,5.638,3881,5.638,3882,5.638,3883,5.638,3884,5.638,3885,5.638,3886,5.638,3887,5.638,3888,7.027,3889,5.638,3890,5.638,3891,5.638,3892,5.638,3893,5.638]],["title/components/PodsListComponent.html",[263,0.565,367,1.241]],["body/components/PodsListComponent.html",[0,0.221,3,0.087,4,0.04,5,0.105,8,0.059,9,0.193,10,0.345,13,0.262,16,0.195,17,0.394,20,0.29,22,0.426,23,0.242,25,0.372,26,0.011,27,0.372,29,0.536,39,0.613,40,0.26,42,0.419,52,1.532,53,0.087,60,0.378,61,0.749,69,0.903,81,1.451,85,1.138,89,0.75,90,1.93,165,0.004,166,0.006,167,0.004,172,0.83,187,0.998,201,1.203,202,1.663,259,1.276,260,0.784,263,0.833,264,1.113,265,1.709,266,1.027,267,1.206,268,1.24,270,1.055,271,2.127,272,1.663,273,1.806,281,1.657,283,1.143,285,1.984,288,1.388,308,1.174,309,1.756,310,1.663,311,0.833,312,0.99,313,1.24,314,1.24,315,1.113,316,1.24,317,1.113,318,2.464,319,1.206,320,2.43,321,1.113,322,1.206,323,1.113,324,1.206,325,1.24,326,1.143,327,1.24,328,1.143,329,1.24,330,1.113,331,1.24,332,1.113,333,1.24,334,1.143,335,1.24,336,1.113,337,1.143,338,1.24,339,1.143,340,1.756,341,1.143,342,1.756,343,1.113,344,1.24,345,1.143,346,1.618,347,1.24,348,1.143,349,1.829,350,1.24,351,1.113,352,1.24,353,1.113,354,1.24,355,1.113,356,1.206,357,1.143,358,1.055,359,1.24,360,1.113,361,1.756,362,1.143,363,1.143,364,1.756,365,1.24,366,1.113,367,2.1,368,1.24,369,1.143,370,1.306,371,1.143,372,1.24,373,1.113,374,1.113,375,1.24,376,1.113,377,1.24,378,1.143,379,1.24,380,1.113,381,1.113,382,1.143,383,1.24,384,1.113,385,1.24,386,1.143,387,1.113,388,1.24,389,1.113,390,1.24,391,1.113,392,1.24,393,1.113,394,1.24,395,1.113,396,1.24,397,1.113,398,1.24,399,1.113,400,1.206,401,1.113,402,1.143,403,1.24,404,1.055,405,1.001,406,1.24,407,1.083,408,1.24,409,1.055,410,1.576,411,1.24,412,1.055,413,1.24,414,1.055,415,2.216,416,1.24,494,0.791,548,1.18,692,1.937,693,2.891,694,1.857,739,1.966,784,1.43,794,2.345,869,1.43,882,2.848,886,1.879,887,3.42,888,2.891,889,2.412,890,2.622,891,2.634,892,1.388,905,4.788,906,5.56,917,3.284,918,3.572,927,3.074,930,2.1,941,4.265,946,3.381,956,3.381,962,4.929,963,5.56,964,4.135,965,5.058,966,5.56,967,4.135,968,4.384,969,5.56,970,4.135,973,6.627,974,4.254,976,2.385,980,3.381,983,3.381,986,4.788,987,5.56,988,3.377,989,4.356,1035,3.076,1068,2.622,1069,3.074,1098,2.666,1202,2.945,1238,1.726,1551,5.093,1561,4.356,1581,3.311,1678,2.17,1775,4.683,1913,2.666,2038,2.08,2143,5.501,2473,4.608,2513,4.788,2523,4.788,2594,2.17,2595,1.997,2733,5.501,2976,3.381,3055,4.135,3059,5.059,3093,3.921,3094,3.076,3205,2.666,3206,3.381,3220,3.076,3221,2.848,3222,2.848,3223,3.381,3399,3.076,3423,4.384,3430,5.058,3457,2.666,3458,5.806,3464,3.076,3894,7.026,3895,5.445,3896,6.321,3897,4.384,3898,5.445,3899,5.445,3900,5.445,3901,5.445,3902,5.445,3903,5.445,3904,5.445,3905,5.56,3906,6.321,3907,6.321,3908,5.445,3909,3.845,3910,3.845,3911,3.845,3912,3.845,3913,5.445,3914,3.845,3915,3.845,3916,3.845,3917,5.445,3918,3.845,3919,5.445,3920,3.845,3921,3.845,3922,5.445,3923,3.845,3924,3.845,3925,3.845,3926,3.845,3927,3.845,3928,3.845,3929,5.445,3930,3.845,3931,5.445,3932,3.845,3933,3.845,3934,3.845,3935,7.257,3936,5.445,3937,4.033,3938,3.845,3939,4.356,3940,3.381,3941,3.845,3942,3.845,3943,5.445,3944,5.445,3945,3.845,3946,5.445,3947,3.845,3948,3.845,3949,3.845,3950,3.845,3951,3.845,3952,3.845,3953,3.845,3954,4.788,3955,3.845,3956,3.845,3957,3.845,3958,7.257,3959,3.845,3960,3.845,3961,5.445,3962,3.845,3963,3.845,3964,3.845,3965,3.845,3966,3.381,3967,3.845,3968,5.445,3969,5.445,3970,5.445,3971,5.445,3972,5.445,3973,5.445,3974,5.445]],["title/classes/Port.html",[0,0.246,601,1.31]],["body/classes/Port.html",[0,0.424,2,0.45,3,0.091,4,0.071,5,0.099,8,0.039,9,0.143,10,0.349,11,1.228,12,0.877,13,0.258,16,0.188,17,0.292,18,1.428,20,0.512,22,0.448,23,0.194,25,0.186,26,0.011,27,0.26,29,0.754,36,1.861,39,0.186,40,0.163,50,1.2,53,0.173,54,0.687,59,1.981,60,0.578,61,0.816,62,0.877,69,1.248,71,1.456,76,1.415,102,0.989,103,1.299,131,1.318,153,1.23,165,0.003,166,0.005,167,0.003,168,1.56,170,0.587,172,1.034,175,3.226,182,1.642,184,1.905,185,1.975,186,0.652,187,0.758,190,2.762,195,1.545,196,1.048,200,1.734,201,0.426,202,2.369,207,1.016,208,1.964,213,1.016,216,1.048,221,1.048,234,1.642,235,1.642,243,0.902,260,1.011,289,0.603,303,1.876,312,0.976,370,0.463,417,2.212,418,1.016,419,1.695,427,0.985,428,1.456,429,1.081,443,0.687,444,0.807,445,1.72,446,2.028,447,1.751,448,1.751,449,1.117,450,1.016,451,1.117,452,1.117,453,1.117,454,1.117,455,1.117,456,2.026,457,1.545,458,2.367,459,2.367,460,1.964,461,2.091,462,2.091,463,2.755,464,1.117,465,1.117,466,1.117,467,1.081,468,1.545,469,2.367,470,1.545,471,2.091,472,1.751,473,1.642,474,1.117,475,1.117,476,1.117,477,1.117,478,1.117,479,1.117,480,1.117,481,1.117,482,1.117,483,1.117,484,1.117,485,1.695,486,1.117,487,2.16,488,3.135,489,2.445,490,1.751,491,1.751,492,1.751,493,1.117,494,1.257,495,3.105,496,1.117,497,1.117,498,2.16,499,1.117,500,1.117,501,1.751,502,1.751,503,2.945,504,0.807,505,1.796,506,2.642,507,2.16,508,2.16,509,2.656,510,2.16,511,2.16,512,2.16,513,2.16,514,2.16,515,2.16,516,2.491,517,1.117,518,1.695,519,1.751,520,1.751,521,1.117,522,1.117,523,1.117,524,1.117,525,1.117,526,1.117,527,1.117,528,1.117,529,1.117,530,2.945,531,1.117,532,1.117,533,1.117,534,1.751,535,1.117,536,1.751,537,1.081,538,1.117,539,1.751,540,1.117,541,1.117,542,1.117,543,1.117,544,1.117,545,1.117,546,1.117,547,2.092,548,0.874,549,1.117,550,1.117,551,1.642,552,1.117,553,1.117,554,1.081,555,1.117,556,1.117,557,1.117,558,1.117,559,1.117,560,1.751,561,1.751,562,1.751,563,1.117,564,1.117,565,1.117,566,1.117,567,1.117,568,1.117,569,1.117,570,2.16,571,1.117,572,1.117,573,1.117,574,1.117,575,1.117,576,1.117,577,1.117,578,1.117,579,1.117,580,1.751,581,1.117,582,1.117,583,1.117,584,1.117,585,1.117,586,1.117,587,1.117,588,1.117,589,1.117,590,2.16,591,1.117,592,1.751,593,1.117,594,1.751,595,1.751,596,2.16,597,1.751,598,1.751,599,1.117,600,1.751,601,2.299,602,1.117,603,2.445,604,1.751,605,1.751,606,1.751,607,1.117,608,1.117,609,1.016,610,1.767,611,1.117,612,1.545,613,1.081,614,1.117,615,1.117,616,1.117,617,1.081,618,1.117,619,1.117,620,1.117,621,1.695,622,1.117,623,1.117,624,1.117,625,2.16,626,1.117,627,1.117,628,1.117,629,1.117,630,1.117,631,1.117,632,1.117,633,1.117,634,1.117,635,1.117,636,1.117,637,1.117,638,1.117,639,1.117,640,1.117,641,1.751,642,1.117,643,1.751,644,1.695,645,1.117,646,0.929,647,1.117,648,1.048,649,1.117,650,1.117,651,1.117,652,0.853,653,2.445,654,2.223,655,2.415,656,2.026,657,1.081,658,1.081,659,1.048,660,1.081,661,1.117,662,1.117,663,1.117,664,1.117,665,1.117,666,1.745,667,0.877,668,1.117,669,1.117,670,1.117,671,1.117,672,1.117,673,1.117,674,1.117,675,1.117,676,1.117,677,1.117,678,1.117,679,1.117,680,1.117,681,0.853,682,1.117,683,1.048,684,1.117,685,1.972,686,1.081,687,1.117,688,1.117,689,1.117,690,1.117,691,1.048,692,2.422,693,1.081,694,0.877,695,1.117,696,1.117,697,1.117,698,1.117,699,1.117,700,1.117,701,1.696,702,1.117,703,1.117,704,1.751,705,1.081,706,2.445,707,1.117,708,1.117,709,1.642,710,2.945,711,1.751,712,1.117,713,1.751,714,1.751,715,1.751,716,1.117,717,0.956,718,1.642,719,1.751,720,1.751,721,1.117,722,1.117,723,0.985,724,1.117,725,1.751,726,1.117,727,1.117,728,1.117,729,1.117,730,1.117,731,1.117,732,1.117,733,1.117,734,1.117,735,1.117,736,1.117,737,1.117,738,1.751,739,2.208,740,1.081,741,1.642,742,1.905,743,1.117,744,1.117,745,1.117,746,1.117,747,1.117,748,1.117,749,1.117,750,1.048,751,1.048,752,1.695,753,1.117,754,1.117,755,1.117,756,1.117,757,1.081,758,1.117,759,1.117,760,1.117,761,1.081,762,1.117,763,1.117,764,1.117,765,1.117,766,1.117,767,1.117,768,1.117,769,1.117,770,1.117,771,1.117,772,1.117,773,1.117,774,1.117,775,1.117,776,1.117,777,2.415,778,2.445,779,1.649,780,2.16,781,2.656,782,2.656,783,1.751,784,1.499,785,1.695,786,1.695,787,1.117,788,1.117,789,1.136,790,1.592,791,1.592,792,1.117,793,1.048,794,1.375,795,2.16,796,1.642,797,1.081,798,1.972,799,1.117,800,1.117,801,1.117,802,1.117,803,1.117,804,1.117,805,1.081,806,1.117,807,1.117,808,1.117,809,1.117,810,1.117,811,1.117,812,1.081,813,2.16,814,1.117,815,1.117,816,1.117,817,1.117,818,1.117,819,1.117,820,1.117,821,1.117,822,1.117,823,1.117,824,1.117,825,1.117,826,1.117,827,1.117,828,1.117,829,1.117,830,1.117,831,1.117,832,1.117,833,1.016,834,1.048,835,1.117,836,1.117,837,1.081,838,1.117,839,1.117,840,1.081,841,1.117,842,1.081,843,1.117,844,1.081,845,1.117,846,1.081,847,1.117,848,1.117,849,1.117,850,1.117,851,1.117,852,1.117,853,1.117,854,1.117,855,1.117,856,1.117,857,1.678,858,1.117,859,1.117,860,1.117,861,1.117,862,1.117,863,1.117,864,1.117,865,1.642,866,1.117,867,1.592,868,1.048,869,0.956,870,1.695,871,1.081,872,1.081,873,1.081,874,1.081,875,1.081,876,1.081,877,1.117,878,0.956,879,1.117,880,1.117,2488,1.391,3975,2.572,3976,4.032,3977,5.63,3978,2.572,3979,2.572]],["title/classes/Probe.html",[0,0.246,666,1.505]],["body/classes/Probe.html",[0,0.425,2,0.455,3,0.092,4,0.071,5,0.099,8,0.04,9,0.144,10,0.35,11,1.237,12,0.887,13,0.257,16,0.181,17,0.295,18,1.431,19,1.177,20,0.492,22,0.447,23,0.18,25,0.12,26,0.011,27,0.12,29,0.756,36,1.934,38,0.443,39,0.188,40,0.164,50,1.203,53,0.173,54,0.695,59,1.99,60,0.579,61,0.816,62,0.887,69,1.252,71,1.469,76,1.427,102,0.993,103,1.305,131,1.32,153,1.308,165,0.003,166,0.005,167,0.003,168,1.572,170,0.594,172,1.038,182,1.059,185,1.987,186,0.659,187,0.762,190,2.774,195,1.558,196,1.059,200,1.742,201,0.431,202,2.212,207,1.027,208,1.978,213,1.027,216,1.059,221,1.059,234,1.657,235,1.657,243,0.913,260,1.014,289,0.61,303,1.883,312,0.98,370,0.468,417,2.223,418,1.027,419,1.71,427,0.996,428,1.469,429,1.093,443,0.695,444,0.816,445,1.727,446,2.038,447,1.766,448,1.766,449,1.129,450,1.027,451,1.129,452,1.129,453,1.129,454,1.129,455,1.129,456,2.04,457,1.558,458,2.381,459,2.381,460,1.978,461,2.106,462,2.106,463,2.761,464,1.129,465,1.129,466,1.129,467,1.093,468,1.558,469,2.381,470,1.558,471,2.106,472,1.766,473,1.657,474,1.129,475,1.129,476,1.129,477,1.129,478,1.129,479,1.129,480,1.129,481,1.129,482,1.129,483,1.129,484,1.129,485,1.71,486,1.129,487,2.175,488,3.146,489,2.46,490,1.766,491,1.766,492,1.766,493,1.129,494,1.264,495,3.115,496,1.129,497,1.129,498,2.175,499,1.129,500,1.129,501,1.766,502,1.766,503,2.958,504,0.816,505,1.809,506,2.307,507,2.175,508,2.175,509,2.67,510,2.175,511,2.175,512,2.175,513,2.175,514,2.175,515,2.175,516,2.504,517,1.129,518,1.71,519,1.766,520,1.766,521,1.129,522,1.129,523,1.129,524,1.129,525,1.129,526,1.129,527,1.129,528,1.129,529,1.129,530,2.958,531,1.129,532,1.129,533,1.129,534,1.766,535,1.129,536,1.766,537,1.093,538,1.129,539,1.766,540,1.129,541,1.129,542,1.129,543,1.129,544,1.129,545,1.129,546,1.129,547,2.102,548,0.881,549,1.129,550,1.129,551,1.657,552,1.129,553,1.129,554,1.093,555,1.129,556,1.129,557,1.129,558,1.129,559,1.129,560,1.766,561,1.766,562,1.766,563,1.129,564,1.129,565,1.129,566,1.129,567,1.129,568,1.129,569,1.129,570,2.175,571,1.129,572,1.129,573,1.129,574,1.129,575,1.129,576,1.129,577,1.129,578,1.129,579,1.129,580,1.766,581,1.129,582,1.129,583,1.129,584,1.129,585,1.129,586,1.129,587,1.129,588,1.129,589,1.129,590,2.175,591,1.129,592,1.766,593,1.129,594,1.766,595,1.766,596,2.175,597,1.766,598,1.766,599,1.129,600,1.766,601,2.306,602,1.129,603,2.46,604,1.766,605,1.766,606,1.766,607,1.129,608,1.129,609,1.027,610,1.777,611,1.129,612,1.558,613,1.093,614,1.129,615,1.129,616,1.129,617,1.093,618,1.129,619,1.129,620,1.129,621,1.71,622,1.129,623,1.129,624,1.129,625,2.175,626,1.129,627,1.129,628,1.129,629,1.129,630,1.129,631,1.129,632,1.129,633,1.129,634,1.129,635,1.129,636,1.129,637,1.129,638,1.129,639,1.129,640,1.129,641,1.766,642,1.129,643,1.766,644,1.71,645,1.129,646,0.939,647,1.129,648,1.059,649,1.129,650,1.129,651,1.129,652,0.862,653,1.766,654,1.027,655,1.027,656,2.04,657,1.093,658,1.093,659,1.059,660,1.093,661,1.129,662,1.129,663,1.129,664,1.129,665,1.129,666,2.157,667,1.708,668,2.175,669,2.175,670,2.175,671,1.129,672,1.129,673,1.129,674,1.129,675,1.129,676,1.129,677,1.129,678,1.129,679,1.129,680,1.129,681,0.862,682,1.129,683,1.059,684,1.129,685,1.983,686,1.093,687,1.129,688,1.129,689,1.129,690,1.129,691,1.059,692,2.425,693,1.093,694,0.887,695,1.129,696,1.129,697,1.129,698,1.129,699,1.129,700,1.129,701,1.708,702,1.129,703,1.129,704,1.766,705,1.093,706,2.46,707,1.129,708,1.129,709,1.657,710,2.958,711,1.766,712,1.129,713,1.766,714,1.766,715,1.766,716,1.129,717,0.967,718,1.657,719,1.766,720,1.766,721,1.129,722,1.129,723,0.996,724,1.129,725,1.766,726,1.129,727,1.129,728,1.129,729,1.129,730,1.129,731,1.129,732,1.129,733,1.129,734,1.129,735,1.129,736,1.129,737,1.129,738,1.766,739,2.22,740,1.093,741,1.657,742,1.919,743,1.129,744,1.129,745,1.129,746,1.129,747,1.129,748,1.129,749,1.129,750,1.059,751,1.059,752,1.71,753,1.129,754,1.129,755,1.129,756,1.129,757,1.093,758,1.129,759,1.129,760,1.129,761,1.093,762,1.129,763,1.129,764,1.129,765,1.129,766,1.129,767,1.129,768,1.129,769,1.129,770,1.129,771,1.129,772,1.129,773,1.129,774,1.129,775,1.129,776,1.129,777,2.427,778,2.46,779,1.661,780,2.175,781,2.67,782,2.67,783,1.766,784,1.512,785,1.71,786,1.71,787,1.129,788,1.129,789,1.146,790,1.606,791,1.606,792,1.129,793,1.059,794,1.387,795,2.175,796,1.657,797,1.093,798,1.983,799,1.129,800,1.129,801,1.129,802,1.129,803,1.129,804,1.129,805,1.093,806,1.129,807,1.129,808,1.129,809,1.129,810,1.129,811,1.129,812,1.093,813,2.175,814,1.129,815,1.129,816,1.129,817,1.129,818,1.129,819,1.129,820,1.129,821,1.129,822,1.129,823,1.129,824,1.129,825,1.129,826,1.129,827,1.129,828,1.129,829,1.129,830,1.129,831,1.129,832,1.129,833,1.027,834,1.059,835,1.129,836,1.129,837,1.093,838,1.129,839,1.129,840,1.093,841,1.129,842,1.093,843,1.129,844,1.093,845,1.129,846,1.093,847,1.129,848,1.129,849,1.129,850,1.129,851,1.129,852,1.129,853,1.129,854,1.129,855,1.129,856,1.129,857,1.687,858,1.129,859,1.129,860,1.129,861,1.129,862,1.129,863,1.129,864,1.129,865,1.657,866,1.129,867,1.606,868,1.059,869,0.967,870,1.71,871,1.093,872,1.093,873,1.093,874,1.093,875,1.093,876,1.093,877,1.129,878,0.967,879,1.129,880,1.129,3980,2.601,3981,2.601,3982,2.601,3983,2.601,3984,2.601,3985,2.601]],["title/classes/Project.html",[0,0.246,3986,3.177]],["body/classes/Project.html",[0,0.426,2,0.457,3,0.092,4,0.071,5,0.099,8,0.04,9,0.145,10,0.349,11,1.24,12,0.891,13,0.259,16,0.178,17,0.296,18,1.433,19,1.181,20,0.533,22,0.447,23,0.17,25,0.121,26,0.011,27,0.121,29,0.757,36,1.936,38,0.445,39,0.189,40,0.165,50,1.204,53,0.174,54,0.698,59,1.994,60,0.579,61,0.816,62,0.891,69,1.253,71,1.473,76,1.432,102,0.995,103,1.307,131,1.321,153,1.236,165,0.003,166,0.005,167,0.003,168,1.576,170,0.596,172,1.04,182,1.064,185,1.992,186,0.662,187,0.763,190,2.778,195,1.563,196,1.064,200,1.745,201,0.433,202,2.215,207,1.031,208,1.983,213,1.031,216,1.064,221,1.064,234,1.662,235,1.662,243,0.916,260,1.016,289,0.612,303,1.886,312,0.982,370,0.47,417,2.226,418,1.031,419,1.715,427,1,428,1.473,429,1.098,443,0.698,444,0.819,445,1.729,446,2.042,447,1.772,448,1.772,449,1.134,450,1.031,451,1.134,452,1.134,453,1.134,454,1.134,455,1.134,456,2.045,457,1.563,458,2.387,459,2.387,460,1.983,461,2.111,462,2.111,463,2.763,464,1.134,465,1.134,466,1.134,467,1.098,468,1.563,469,2.387,470,1.563,471,2.111,472,1.772,473,1.662,474,1.134,475,1.134,476,1.134,477,1.134,478,1.134,479,1.134,480,1.134,481,1.134,482,1.134,483,1.134,484,1.134,485,1.715,486,1.134,487,2.181,488,3.15,489,2.465,490,1.772,491,1.772,492,1.772,493,1.134,494,1.266,495,3.119,496,1.134,497,1.134,498,2.181,499,1.134,500,1.134,501,1.772,502,1.772,503,2.962,504,0.819,505,1.813,506,2.312,507,2.181,508,2.181,509,2.675,510,2.181,511,2.181,512,2.181,513,2.181,514,2.181,515,2.181,516,2.508,517,1.134,518,1.715,519,1.772,520,1.772,521,1.134,522,1.134,523,1.134,524,1.134,525,1.134,526,1.134,527,1.134,528,1.134,529,1.134,530,2.962,531,1.134,532,1.134,533,1.134,534,1.772,535,1.134,536,1.772,537,1.098,538,1.134,539,1.772,540,1.134,541,1.134,542,1.134,543,1.134,544,1.134,545,1.134,546,1.134,547,2.106,548,0.884,549,1.134,550,1.134,551,1.662,552,1.134,553,1.134,554,1.098,555,1.134,556,1.134,557,1.134,558,1.134,559,1.134,560,1.772,561,1.772,562,1.772,563,1.134,564,1.134,565,1.134,566,1.134,567,1.134,568,1.134,569,1.134,570,2.181,571,1.134,572,1.134,573,1.134,574,1.134,575,1.134,576,1.134,577,1.134,578,1.134,579,1.134,580,1.772,581,1.134,582,1.134,583,1.134,584,1.134,585,1.134,586,1.134,587,1.134,588,1.134,589,1.134,590,2.181,591,1.134,592,1.772,593,1.134,594,1.772,595,1.772,596,2.181,597,1.772,598,1.772,599,1.134,600,1.772,601,2.215,602,1.134,603,2.465,604,1.772,605,1.772,606,1.772,607,1.134,608,1.134,609,1.031,610,1.781,611,1.134,612,1.563,613,1.098,614,1.134,615,1.134,616,1.134,617,1.098,618,1.134,619,1.134,620,1.134,621,1.715,622,1.134,623,1.134,624,1.134,625,2.181,626,1.134,627,1.134,628,1.134,629,1.134,630,1.134,631,1.134,632,1.134,633,1.134,634,1.134,635,1.134,636,1.134,637,1.134,638,1.134,639,1.134,640,1.134,641,1.772,642,1.134,643,1.772,644,1.715,645,1.134,646,0.943,647,1.134,648,1.064,649,1.134,650,1.134,651,1.134,652,0.866,653,1.772,654,1.031,655,1.031,656,2.045,657,1.098,658,1.098,659,1.064,660,1.098,661,1.134,662,1.134,663,1.134,664,1.134,665,1.134,666,1.762,667,0.891,668,1.134,669,1.134,670,1.134,671,1.134,672,1.134,673,1.134,674,1.134,675,1.134,676,1.134,677,1.134,678,1.134,679,1.134,680,1.134,681,0.866,682,1.134,683,1.064,684,1.134,685,1.986,686,1.098,687,1.134,688,1.134,689,1.134,690,1.134,691,1.064,692,2.426,693,1.098,694,0.891,695,1.134,696,1.134,697,1.134,698,1.134,699,1.134,700,1.134,701,1.713,702,1.134,703,1.134,704,1.772,705,1.098,706,2.465,707,1.134,708,1.134,709,1.662,710,2.962,711,1.772,712,1.134,713,1.772,714,1.772,715,1.772,716,1.134,717,0.971,718,1.662,719,1.772,720,1.772,721,1.134,722,1.134,723,1,724,1.134,725,1.772,726,1.134,727,1.134,728,1.134,729,1.134,730,1.134,731,1.134,732,1.134,733,1.134,734,1.134,735,1.134,736,1.134,737,1.134,738,1.772,739,2.224,740,1.098,741,1.662,742,1.924,743,1.134,744,1.134,745,1.134,746,1.134,747,1.134,748,1.134,749,1.134,750,1.064,751,1.064,752,1.715,753,1.134,754,1.134,755,1.134,756,1.134,757,1.098,758,1.134,759,1.134,760,1.134,761,1.098,762,1.134,763,1.134,764,1.134,765,1.134,766,1.134,767,1.134,768,1.134,769,1.134,770,1.134,771,1.134,772,1.134,773,1.134,774,1.134,775,1.134,776,1.134,777,2.432,778,2.465,779,1.665,780,2.181,781,2.675,782,2.675,783,1.772,784,1.517,785,1.715,786,1.715,787,1.134,788,1.134,789,1.599,790,1.611,791,1.611,792,1.134,793,1.064,794,1.391,795,2.181,796,1.662,797,1.098,798,2.106,799,1.134,800,1.134,801,1.134,802,1.134,803,1.134,804,1.134,805,1.098,806,1.134,807,1.134,808,1.134,809,1.134,810,1.134,811,1.134,812,1.098,813,2.181,814,1.134,815,1.134,816,1.134,817,1.134,818,1.134,819,1.134,820,1.134,821,1.134,822,1.134,823,1.134,824,1.134,825,1.134,826,1.134,827,1.134,828,1.134,829,1.134,830,1.134,831,1.134,832,1.134,833,1.031,834,1.064,835,1.134,836,1.134,837,1.098,838,1.134,839,1.134,840,1.098,841,1.134,842,1.098,843,1.134,844,1.098,845,1.134,846,1.098,847,1.134,848,1.134,849,1.134,850,1.134,851,1.134,852,1.134,853,1.134,854,1.134,855,1.134,856,1.134,857,1.69,858,1.134,859,1.134,860,1.134,861,1.134,862,1.134,863,1.134,864,1.134,865,1.662,866,1.134,867,1.611,868,1.064,869,0.971,870,1.715,871,1.098,872,1.098,873,1.098,874,1.098,875,1.098,876,1.098,877,1.134,878,0.971,879,1.134,880,1.134,2048,1.412,3986,3.023,3987,4.08,3988,4.08,3989,2.611,3990,2.611,3991,2.611]],["title/interfaces/PropertiesChangedOwner.html",[504,1.346,1233,1.993]],["body/interfaces/PropertiesChangedOwner.html",[0,0.436,3,0.145,4,0.067,5,0.098,8,0.098,9,0.287,10,0.289,13,0.23,14,2.784,16,0.183,17,0.55,22,0.425,23,0.224,25,0.351,26,0.01,27,0.351,29,0.631,39,0.587,40,0.275,42,0.699,50,1.27,53,0.189,165,0.007,166,0.009,167,0.007,186,1.625,187,1.059,266,1.713,271,1.503,289,1.781,311,1.647,405,1.669,445,1.625,504,2.384,547,2.701,610,2.012,1071,2.456,1088,3.787,1110,3.011,1118,2.249,1126,2.249,1196,4.446,1201,5.023,1206,3.204,1223,3.619,1227,3.619,1233,3.764,1239,2.98,2118,5.807,2119,4.446,2123,2.879,2124,5.807,2125,5.269,2126,5.269,2127,5.616,3992,7.598,3993,7.598,3994,6.41,3995,6.41,3996,6.41]],["title/classes/RepoSettings.html",[0,0.246,2179,2.228]],["body/classes/RepoSettings.html",[0,0.398,1,1.477,2,0.802,3,0.104,4,0.048,5,0.07,8,0.07,9,0.218,10,0.347,13,0.24,16,0.18,18,1.431,20,0.346,22,0.445,23,0.205,25,0.212,26,0.011,27,0.212,29,0.73,38,0.781,40,0.253,41,1.599,42,0.5,43,2.354,44,2.656,45,2.129,46,1.703,47,2.236,48,1.437,49,1.703,50,0.718,51,1.654,52,1.631,53,0.167,54,1.224,60,0.536,61,0.757,69,1.019,85,1.162,89,0.893,91,1.755,96,1.982,102,1.129,112,2.755,113,2.759,114,3.047,115,3.326,116,3.848,117,3.848,118,3.702,119,3.191,120,3.191,121,3.191,125,2.959,126,2.206,130,1.477,131,1.354,153,0.781,165,0.005,166,0.007,167,0.005,207,1.809,227,2.759,289,1.074,303,1.224,318,1.325,370,0.824,685,1.982,857,1.902,891,2.354,892,1.654,917,3.191,1553,3.629,1971,2.996,2123,3.571,2174,2.478,2178,4.095,2179,4.013,2217,2.841,2225,4.3,2241,2.841,2244,4.595,2267,3.454,2268,2.057,2295,2.841,2401,2.586,2403,2.841,2404,2.841,2408,2.379,2432,2.586,2692,4.018,2790,3.176,2807,2.959,2938,4.018,3004,2.841,3005,3.393,3270,3.393,3272,3.393,3610,5.723,3700,2.996,3997,3.176,3998,4.58,3999,6.932,4000,3.665,4001,3.393,4002,3.393,4003,3.665,4004,3.665,4005,3.665,4006,3.665,4007,3.665,4008,3.665,4009,3.665,4010,3.665,4011,3.665,4012,3.665,4013,3.665,4014,3.393,4015,3.665,4016,3.665,4017,3.665,4018,3.665,4019,3.665,4020,3.665,4021,3.665,4022,3.665,4023,3.665,4024,3.665,4025,3.665,4026,3.665,4027,3.665,4028,3.665,4029,4.915,4030,4.915,4031,3.665,4032,3.665,4033,3.665,4034,4.915,4035,3.665,4036,3.665,4037,3.665,4038,3.665,4039,3.665,4040,3.665,4041,3.665,4042,3.665,4043,3.665,4044,3.665,4045,3.665,4046,4.915,4047,3.393,4048,3.665,4049,3.665,4050,3.665,4051,3.665,4052,6.181,4053,5.927,4054,4.551,4055,3.665,4056,5.546,4057,3.665,4058,4.915,4059,3.665,4060,4.915,4061,3.665,4062,3.665,4063,3.665,4064,3.393,4065,3.665,4066,3.665,4067,3.665,4068,3.665,4069,4.551,4070,4.915,4071,5.546,4072,5.546,4073,4.915,4074,4.915,4075,3.665,4076,5.546,4077,3.665,4078,3.665,4079,4.915,4080,4.551,4081,3.665,4082,4.915,4083,3.665,4084,4.551,4085,3.665,4086,4.915,4087,3.665,4088,3.665,4089,3.665,4090,3.665,4091,3.665,4092,3.665,4093,3.665,4094,3.665,4095,4.915,4096,4.915,4097,4.915,4098,3.665,4099,4.915,4100,3.665,4101,4.915,4102,4.915,4103,3.665,4104,4.915,4105,3.665,4106,4.915,4107,3.665,4108,4.915,4109,3.665,4110,4.915,4111,3.665,4112,4.915,4113,3.665,4114,4.915,4115,3.665,4116,4.915,4117,4.915,4118,3.665]],["title/injectables/ResourceService.html",[41,1.116,1352,2.143]],["body/injectables/ResourceService.html",[0,0.31,3,0.122,4,0.078,5,0.082,8,0.082,9,0.242,10,0.34,13,0.269,16,0.203,17,0.496,18,1.351,20,0.408,22,0.446,23,0.234,25,0.376,26,0.011,27,0.376,38,1.345,39,0.59,40,0.277,41,1.781,42,0.589,43,3.024,44,3.024,45,2.511,46,2.009,47,2.725,48,1.695,49,2.009,50,0.847,51,1.951,52,1.719,53,0.122,60,0.548,61,0.797,69,0.896,85,1.073,89,1.053,90,2.089,91,2.876,96,2.422,112,3.093,114,3.119,126,2.602,128,3.261,130,2.422,131,1.073,165,0.006,166,0.008,167,0.006,250,2.806,253,3.533,259,1.76,260,0.778,281,1.234,444,1.695,494,1.111,1352,3.419,2175,4.456,2176,2.922,2177,2.922,2224,4.238,2252,3.9,2268,3.072,2408,3.554,2412,5.206,2413,5.206,3758,5.473,3851,6.603,4119,4.751,4120,7.508,4121,6.841,4122,6.841,4123,7.892,4124,6.841,4125,6.841,4126,6.841,4127,6.841,4128,5.402,4129,6.841,4130,5.402,4131,5.402,4132,6.841,4133,5.402,4134,6.841,4135,5.402,4136,6.841,4137,7.892,4138,5.402,4139,5.402,4140,5.402,4141,7.508,4142,6.603,4143,5.402,4144,5.402,4145,5.402]],["title/classes/Result.html",[0,0.246,165,0.005]],["body/classes/Result.html",[0,0.264,2,0.535,3,0.069,4,0.058,5,0.046,8,0.046,9,0.163,10,0.336,13,0.092,16,0.18,18,1.335,20,0.231,22,0.443,23,0.17,25,0.141,26,0.011,27,0.305,29,0.801,38,0.784,40,0.258,41,1.197,42,0.333,43,1.762,44,2.36,45,1.419,46,1.135,47,2.751,48,0.958,49,1.135,50,1.249,51,1.102,52,0.971,53,0.125,54,0.816,60,0.537,61,0.829,69,1.152,85,1.337,89,0.595,90,0.932,91,1.17,96,2.646,102,1.157,112,3.276,113,1.371,114,2.12,115,2.066,116,2.39,117,2.39,118,2.299,119,1.586,120,1.586,121,1.586,125,3.183,126,3.183,127,4.03,128,3.589,130,2.132,131,1.275,133,2.39,134,2.138,135,2.39,136,2.216,137,2.299,138,2.39,139,2.509,144,2.216,165,0.007,166,0.005,167,0.003,186,0.774,187,0.686,200,2.128,201,0.918,222,3.478,237,2.262,243,1.071,260,0.887,289,0.716,303,1.856,312,0.439,349,1.602,382,0.907,427,1.17,444,0.958,445,2.163,460,1.816,494,0.946,547,2.132,551,3.022,601,0.932,609,2.433,610,2.074,652,1.525,657,1.283,658,2.327,660,1.283,739,1.661,740,1.934,741,1.243,750,1.243,751,1.243,779,1.012,789,1.296,794,1.888,812,1.283,867,1.206,868,1.243,869,1.135,870,1.934,871,1.283,872,1.283,873,1.283,874,1.283,875,1.283,898,1.47,937,2.262,991,3.68,1022,2.685,1025,4.045,1088,1.804,1126,1.614,1203,1.723,1207,3.125,1425,2.443,1501,5.813,1587,4.564,1647,2.254,1775,2.262,1784,2.262,1929,1.526,2004,5.418,2006,5.899,2008,5.418,2010,4.868,2048,2.994,2123,1.371,2174,1.651,2175,2.597,2176,1.651,2177,1.651,2224,1.723,2252,1.586,2268,2.968,2290,2.853,2353,3.408,2363,2.262,2375,2.443,2408,3.854,2432,4.367,2474,2.685,2488,2.488,2510,2.443,3084,4.564,3220,2.443,3233,2.685,3312,2.117,3337,2.685,3357,2.443,3375,2.685,3480,2.262,3621,4.929,3704,2.262,3795,2.443,3865,2.117,4014,4.896,4047,2.262,4142,2.685,4146,2.262,4147,6.609,4148,6.609,4149,3.053,4150,3.053,4151,5.535,4152,3.053,4153,3.408,4154,3.053,4155,5.418,4156,3.053,4157,3.053,4158,3.053,4159,3.053,4160,3.053,4161,3.053,4162,3.053,4163,3.053,4164,3.053,4165,3.053,4166,3.053,4167,3.053,4168,3.053,4169,3.053,4170,2.685,4171,3.053,4172,3.053,4173,3.053,4174,3.053,4175,2.685,4176,3.053,4177,3.053,4178,3.053,4179,6.11,4180,2.443,4181,4.6,4182,3.053,4183,3.053,4184,3.053,4185,4.6,4186,3.053,4187,3.053,4188,4.6,4189,6.804,4190,3.053,4191,3.053,4192,3.053,4193,3.053,4194,3.053,4195,3.053,4196,3.053,4197,3.053,4198,3.053,4199,3.053,4200,3.053,4201,4.6,4202,5.535,4203,3.053,4204,3.053,4205,3.053,4206,3.053,4207,3.053,4208,3.053,4209,3.053,4210,5.535,4211,6.161,4212,6.161,4213,4.6,4214,5.535,4215,3.053,4216,3.053,4217,3.053,4218,6.161,4219,4.6,4220,3.053,4221,4.6,4222,3.053,4223,6.161,4224,4.6,4225,3.053,4226,3.053,4227,3.053,4228,3.053,4229,3.053,4230,3.053,4231,3.053,4232,3.053,4233,3.053,4234,3.053,4235,2.685,4236,3.053,4237,3.053,4238,3.053,4239,3.053,4240,3.053,4241,3.053,4242,3.053,4243,4.6,4244,4.6,4245,6.161,4246,4.6,4247,3.053,4248,4.6,4249,5.535,4250,6.161,4251,6.161,4252,6.161,4253,3.053,4254,3.053,4255,4.6,4256,3.053,4257,4.6,4258,3.053,4259,7.209,4260,3.053,4261,5.535,4262,3.053,4263,4.6,4264,5.535,4265,3.053,4266,4.6,4267,4.6,4268,4.6,4269,5.535,4270,6.11,4271,3.053,4272,3.053,4273,3.053,4274,3.053,4275,3.053,4276,3.053,4277,3.053,4278,3.053,4279,4.6,4280,3.053,4281,3.053,4282,4.6,4283,5.535,4284,3.053,4285,3.053,4286,3.053,4287,3.053,4288,3.053,4289,3.053,4290,3.053,4291,3.053,4292,3.053,4293,3.053,4294,3.053,4295,4.6,4296,3.053,4297,4.6,4298,3.053,4299,3.053,4300,3.053,4301,4.6,4302,4.6,4303,3.053,4304,3.053,4305,3.053,4306,3.053,4307,3.053,4308,3.053,4309,4.6,4310,3.053,4311,3.053,4312,3.053,4313,3.053,4314,3.053,4315,3.053,4316,3.053,4317,3.053,4318,3.053,4319,3.053,4320,3.053,4321,3.053,4322,3.053,4323,3.053,4324,3.053,4325,3.053,4326,3.053,4327,3.053,4328,3.053,4329,3.053,4330,5.535,4331,3.053,4332,3.053,4333,3.053,4334,3.053,4335,3.053,4336,2.443,4337,3.053,4338,4.6,4339,3.053,4340,2.443,4341,3.053,4342,4.6,4343,5.535,4344,3.053,4345,3.053,4346,3.053,4347,4.6,4348,5.535,4349,3.053,4350,3.053,4351,3.053,4352,3.053,4353,3.053,4354,3.053,4355,3.053,4356,3.053,4357,3.053,4358,3.053,4359,3.053,4360,3.053,4361,3.053,4362,2.685,4363,4.6,4364,3.053,4365,3.053,4366,3.053]],["title/classes/RunSet.html",[0,0.246,2048,2.32]],["body/classes/RunSet.html",[0,0.422,2,0.444,3,0.09,4,0.07,5,0.098,8,0.039,9,0.141,10,0.35,11,1.5,12,0.865,13,0.26,16,0.189,17,0.289,18,1.424,19,1.154,20,0.528,22,0.448,23,0.211,25,0.258,26,0.011,27,0.258,29,0.751,36,1.917,38,0.432,39,0.405,40,0.162,50,1.196,53,0.172,54,0.678,59,1.969,60,0.577,61,0.815,62,0.865,69,1.244,71,1.44,76,1.399,102,0.983,103,1.291,131,1.316,153,1.225,165,0.003,166,0.005,167,0.003,168,1.546,170,0.579,172,1.121,182,1.033,185,1.96,186,0.643,187,0.753,190,2.748,195,1.528,196,1.033,200,1.723,201,0.42,202,2.29,207,1.001,208,1.946,213,1.001,216,1.033,221,1.033,234,1.624,235,1.624,243,0.89,260,1.006,289,0.595,303,2.038,312,0.971,370,0.456,417,2.199,418,1.001,419,1.677,427,0.972,428,1.44,429,1.066,443,0.678,444,0.796,445,1.71,446,2.014,447,1.732,448,1.732,449,1.101,450,1.001,451,1.101,452,1.101,453,1.101,454,1.101,455,1.101,456,2.007,457,1.528,458,2.349,459,2.349,460,1.946,461,2.072,462,2.072,463,2.748,464,1.101,465,1.101,466,1.101,467,1.066,468,1.528,469,2.349,470,1.528,471,2.072,472,1.732,473,1.624,474,1.101,475,1.101,476,1.101,477,1.101,478,1.101,479,1.101,480,1.101,481,1.101,482,1.101,483,1.101,484,1.101,485,1.677,486,1.101,487,2.14,488,3.122,489,2.426,490,1.732,491,1.732,492,1.732,493,1.101,494,1.249,495,3.093,496,1.101,497,1.101,498,2.14,499,1.101,500,1.101,501,1.732,502,1.732,503,2.93,504,0.796,505,1.78,506,2.276,507,2.14,508,2.14,509,2.638,510,2.14,511,2.14,512,2.14,513,2.14,514,2.14,515,2.14,516,2.474,517,1.101,518,1.677,519,1.732,520,1.732,521,1.101,522,1.101,523,1.101,524,1.101,525,1.101,526,1.101,527,1.101,528,1.101,529,1.101,530,2.93,531,1.101,532,1.101,533,1.101,534,1.732,535,1.101,536,1.732,537,1.066,538,1.101,539,1.732,540,1.101,541,1.101,542,1.101,543,1.101,544,1.101,545,1.101,546,1.101,547,2.08,548,0.864,549,1.101,550,1.101,551,1.624,552,1.101,553,1.101,554,1.066,555,1.101,556,1.101,557,1.101,558,1.101,559,1.101,560,1.732,561,1.732,562,1.732,563,1.101,564,1.101,565,1.101,566,1.101,567,1.101,568,1.101,569,1.101,570,2.14,571,1.101,572,1.101,573,1.101,574,1.101,575,1.101,576,1.101,577,1.101,578,1.101,579,1.101,580,1.732,581,1.101,582,1.101,583,1.101,584,1.101,585,1.101,586,1.101,587,1.101,588,1.101,589,1.101,590,2.14,591,1.101,592,1.732,593,1.101,594,1.732,595,1.732,596,2.14,597,1.732,598,1.732,599,1.101,600,1.732,601,2.195,602,1.101,603,2.426,604,1.732,605,1.732,606,1.732,607,1.101,608,1.101,609,1.001,610,1.906,611,1.101,612,2.14,613,1.066,614,1.101,615,1.101,616,1.101,617,1.066,618,1.101,619,1.101,620,1.101,621,1.677,622,1.101,623,1.101,624,1.101,625,2.14,626,1.101,627,1.101,628,1.101,629,1.101,630,1.101,631,1.101,632,1.101,633,1.101,634,1.101,635,1.101,636,1.101,637,1.101,638,1.101,639,1.101,640,1.101,641,1.732,642,1.101,643,1.732,644,1.677,645,1.101,646,0.916,647,1.101,648,1.033,649,1.101,650,1.101,651,1.101,652,0.841,653,1.732,654,1.001,655,1.001,656,2.007,657,1.066,658,1.066,659,1.033,660,1.066,661,1.101,662,1.101,663,1.101,664,1.101,665,1.101,666,1.729,667,0.865,668,1.101,669,1.101,670,1.101,671,1.101,672,1.101,673,1.101,674,1.101,675,1.101,676,1.101,677,1.101,678,1.101,679,1.101,680,1.101,681,0.841,682,1.101,683,1.033,684,1.101,685,1.959,686,1.066,687,1.101,688,1.101,689,1.101,690,1.101,691,1.033,692,2.419,693,1.066,694,0.865,695,1.101,696,1.101,697,1.101,698,1.101,699,1.101,700,1.101,701,1.681,702,1.101,703,1.101,704,1.732,705,1.066,706,2.426,707,1.101,708,1.101,709,1.624,710,2.93,711,1.732,712,1.101,713,1.732,714,1.732,715,1.732,716,1.101,717,0.943,718,1.624,719,1.732,720,1.732,721,1.101,722,1.101,723,0.972,724,1.101,725,1.732,726,1.101,727,1.101,728,1.101,729,1.101,730,1.101,731,1.101,732,1.101,733,1.101,734,1.101,735,1.101,736,1.101,737,1.101,738,1.732,739,2.193,740,1.066,741,1.624,742,1.888,743,1.101,744,1.101,745,1.101,746,1.101,747,1.101,748,1.101,749,1.101,750,1.033,751,1.033,752,1.677,753,1.101,754,1.101,755,1.101,756,1.101,757,1.066,758,1.101,759,1.101,760,1.101,761,1.066,762,1.101,763,1.101,764,1.101,765,1.101,766,1.101,767,1.101,768,1.101,769,1.101,770,1.101,771,1.101,772,1.101,773,1.101,774,1.101,775,1.101,776,1.101,777,2.398,778,2.426,779,1.634,780,2.14,781,2.638,782,2.638,783,1.732,784,1.483,785,1.677,786,1.677,787,1.101,788,1.101,789,1.124,790,1.575,791,2.206,792,1.101,793,1.033,794,1.36,795,2.14,796,1.624,797,1.066,798,1.959,799,1.101,800,2.14,801,1.101,802,1.101,803,1.101,804,1.101,805,1.066,806,1.101,807,1.101,808,1.101,809,1.101,810,1.101,811,1.101,812,1.066,813,2.14,814,1.101,815,1.101,816,1.101,817,1.101,818,1.101,819,1.101,820,1.101,821,1.101,822,1.101,823,1.101,824,1.101,825,1.101,826,1.101,827,1.101,828,1.101,829,1.101,830,1.101,831,1.101,832,1.101,833,1.001,834,1.033,835,1.101,836,1.101,837,1.066,838,1.101,839,1.101,840,1.066,841,1.101,842,1.066,843,1.101,844,1.066,845,1.101,846,1.066,847,1.101,848,1.101,849,1.101,850,1.101,851,1.101,852,1.101,853,1.101,854,1.101,855,1.101,856,1.101,857,1.667,858,1.101,859,1.101,860,1.101,861,1.101,862,1.101,863,1.101,864,1.732,865,1.624,866,1.101,867,1.575,868,1.033,869,0.943,870,1.677,871,1.066,872,1.066,873,1.066,874,1.066,875,1.066,876,1.066,877,1.101,878,0.943,879,1.101,880,1.101,917,2.072,2048,2.157,2488,1.372,4367,3.507,4368,3.988,4369,3.988,4370,3.988,4371,3.988,4372,2.536,4373,2.536,4374,2.536,4375,2.536,4376,2.536,4377,2.536,4378,2.536,4379,2.536,4380,2.536,4381,2.536,4382,2.536,4383,2.536]],["title/directives/RuntimeActionsDirective.html",[311,0.929,414,1.177]],["body/directives/RuntimeActionsDirective.html",[0,0.386,3,0.152,4,0.07,5,0.102,8,0.102,9,0.277,10,0.298,13,0.203,16,0.177,20,0.508,23,0.216,25,0.311,26,0.01,27,0.311,40,0.256,42,0.733,53,0.177,165,0.008,166,0.009,167,0.008,172,1.025,270,1.845,271,1.832,289,1.576,311,1.694,370,1.406,404,1.845,414,2.144,415,2.386,504,2.11,1195,4.171,1197,5.124,1198,5.38,1199,4.663,1200,4.059,1201,5.546,1202,3.637,1203,3.796,2120,5.914,4384,6.724,4385,6.724]],["title/components/RuntimeDetailsComponent.html",[263,0.565,373,1.241]],["body/components/RuntimeDetailsComponent.html",[0,0.257,3,0.101,4,0.047,5,0.112,8,0.068,9,0.214,10,0.341,13,0.251,16,0.196,17,0.438,20,0.338,22,0.359,23,0.24,25,0.316,26,0.01,27,0.316,29,0.596,39,0.572,40,0.276,42,0.488,52,1.618,53,0.101,81,1.549,85,1.319,89,0.872,90,2.091,103,1.211,165,0.005,166,0.007,167,0.005,172,1.231,187,0.849,201,1.27,259,1.049,260,0.644,263,0.902,264,1.294,265,1.897,266,1.195,267,1.404,268,1.443,270,1.227,271,2.139,272,1.846,273,2.005,281,1.804,283,1.33,288,1.615,296,2.525,303,1.195,308,1.366,309,1.95,310,1.846,311,0.969,312,1.056,313,1.443,314,1.443,315,2.123,316,1.443,317,1.294,318,2.491,319,1.404,320,2.547,321,1.294,322,1.404,323,1.294,324,1.404,325,1.443,326,1.33,327,1.443,328,1.33,329,1.443,330,1.294,331,1.443,332,1.294,333,1.443,334,1.33,335,1.443,336,1.294,337,1.33,338,1.443,339,1.33,340,1.95,341,1.33,342,1.95,343,1.294,344,1.443,345,1.33,346,1.797,347,1.443,348,1.33,349,1.982,350,1.443,351,1.294,352,1.443,353,1.294,354,1.443,355,1.294,356,1.404,357,1.33,358,1.227,359,1.443,360,1.294,361,1.95,362,1.33,363,1.33,364,1.95,365,1.443,366,1.294,367,1.294,368,1.443,369,1.33,370,1.514,371,1.33,372,1.443,373,2.217,374,1.294,375,1.443,376,2.217,377,1.443,378,1.33,379,1.443,380,1.982,381,1.294,382,1.33,383,1.443,384,1.294,385,1.443,386,1.33,387,1.294,388,1.443,389,1.294,390,1.443,391,1.294,392,1.443,393,1.294,394,1.443,395,1.294,396,1.443,397,1.294,398,1.443,399,1.294,400,1.404,401,1.294,402,1.33,403,1.443,404,1.227,405,1.164,406,1.443,407,1.26,408,1.443,409,1.227,410,1.75,411,1.443,412,1.227,413,1.443,414,2.013,415,2.24,416,1.443,470,2.316,548,1.31,612,2.624,652,1.483,805,1.88,886,2.036,889,2.403,891,2.81,892,1.615,916,4.527,917,3.558,927,3.413,930,2.24,1068,2.912,1195,2.775,1197,5.418,1199,4.749,1200,3.981,1201,2.775,1202,3.27,1203,2.525,1238,2.009,1334,3.954,1581,3.533,1634,3.314,1635,3.934,1636,3.934,1678,2.525,1770,3.102,1771,2.775,1898,2.642,1900,3.27,1906,5.48,1913,3.102,1963,2.525,2023,3.27,2038,3.27,2466,3.579,2468,5.317,2473,2.525,2475,4.837,2541,3.413,2594,2.525,2595,2.324,2817,5.435,3055,3.954,3056,5.317,3169,3.579,3439,4.48,3897,3.102,3905,6.452,3940,5.317,3966,5.317,4386,5.677,4387,6.849,4388,6.849,4389,6.046,4390,7.336,4391,6.849,4392,6.452,4393,7.101,4394,6.046,4395,4.473,4396,4.473,4397,4.473,4398,6.046,4399,4.473,4400,4.473,4401,4.473,4402,4.473,4403,6.046,4404,4.473,4405,6.046,4406,4.473,4407,4.473,4408,4.473,4409,6.023,4410,6.046,4411,4.473,4412,4.473,4413,4.473,4414,4.473,4415,4.473,4416,4.473,4417,7.663,4418,4.473,4419,6.046,4420,5.317,4421,4.473,4422,4.473,4423,4.473,4424,4.473,4425,4.473,4426,4.473,4427,4.473,4428,4.473,4429,4.473,4430,4.473,4431,4.473,4432,4.473,4433,3.934,4434,3.934,4435,4.473,4436,6.046]],["title/components/RuntimeK8sComponent.html",[263,0.565,374,1.241]],["body/components/RuntimeK8sComponent.html",[0,0.276,3,0.109,4,0.05,5,0.115,8,0.073,9,0.225,10,0.336,13,0.26,16,0.171,17,0.46,20,0.363,22,0.395,23,0.223,25,0.222,26,0.01,27,0.222,39,0.46,40,0.258,42,0.525,52,1.657,53,0.109,81,1.594,85,0.754,89,0.938,90,1.938,102,0.733,153,0.82,154,3.057,165,0.005,166,0.007,167,0.005,172,0.733,187,0.88,201,1.302,253,3.146,263,0.936,264,1.392,265,1.991,266,1.285,267,1.509,268,1.551,270,1.32,271,2.147,272,1.938,273,2.104,281,1.449,283,1.43,288,1.737,296,2.715,305,3.936,308,1.469,309,2.047,310,1.938,311,1.042,312,1.087,313,1.551,314,1.551,315,1.392,316,1.551,317,1.392,318,2.517,319,1.509,320,2.601,321,1.392,322,1.509,323,1.392,324,1.509,325,1.551,326,1.43,327,1.551,328,1.43,329,1.551,330,1.392,331,1.551,332,1.392,333,1.551,334,1.43,335,1.551,336,1.392,337,1.43,338,1.551,339,1.43,340,2.047,341,1.43,342,2.047,343,1.392,344,1.551,345,1.43,346,2.245,347,1.551,348,1.43,349,2.055,350,1.551,351,1.392,352,1.551,353,1.392,354,1.551,355,1.392,356,1.509,357,1.43,358,1.32,359,1.551,360,1.392,361,2.047,362,1.43,363,1.43,364,2.047,365,1.551,366,1.392,367,1.392,368,1.551,369,1.43,370,1.48,371,1.43,372,1.551,373,1.392,374,2.186,375,1.551,376,1.392,377,1.551,378,1.43,379,1.551,380,1.392,381,1.392,382,1.43,383,1.551,384,1.392,385,1.551,386,1.43,387,1.392,388,1.551,389,1.392,390,1.551,391,1.392,392,1.551,393,1.392,394,1.551,395,1.392,396,1.551,397,1.392,398,1.551,399,1.392,400,1.509,401,1.392,402,1.43,403,1.551,404,1.32,405,1.252,406,1.551,407,1.355,408,1.551,409,1.32,410,1.836,411,1.551,412,1.32,413,1.551,414,1.32,415,1.469,416,1.551,468,2.721,548,1.375,612,2.431,681,1.595,717,2.36,723,2.431,779,1.595,886,2.111,916,2.841,917,3.69,930,2.306,964,4.151,967,3.146,968,4.925,970,4.645,974,4.642,976,2.983,988,4.685,1121,2.601,1122,2.601,1123,2.601,1197,5.101,1581,3.638,1678,2.715,1898,2.841,1900,3.433,1929,2.404,1937,3.563,1938,4.23,1939,4.701,1940,4.925,1941,4.23,1942,3.335,1943,5.816,1944,2.601,1945,5.581,1946,3.335,1947,3.335,1948,4.23,1949,4.23,1953,6.905,1954,4.01,1955,4.23,1956,3.848,1957,4.23,1958,4.23,1959,3.335,1960,6.183,1961,4.701,1962,3.848,1963,3.583,1964,3.563,1965,5.595,1966,4.701,1967,5.581,1968,3.848,1969,4.401,1970,3.563,1971,3.146,1972,4.23,1973,3.848,1974,3.848,1975,4.23,2541,3.583,2980,5.581,3169,5.683,3248,6.246,3321,5.581,3439,4.645,4386,5.816,4437,4.23,4438,7.102,4439,6.346,4440,7.102,4441,7.552,4442,6.346,4443,4.809,4444,4.809,4445,4.809,4446,4.809,4447,6.346,4448,7.102,4449,4.809,4450,4.809,4451,4.809,4452,4.809,4453,4.809,4454,4.809,4455,4.809,4456,4.809,4457,4.809,4458,4.809,4459,4.809,4460,6.346]],["title/components/RuntimeScaleComponent.html",[263,0.565,376,1.241]],["body/components/RuntimeScaleComponent.html",[0,0.284,3,0.112,4,0.052,5,0.116,8,0.075,9,0.229,10,0.338,13,0.257,16,0.187,17,0.468,20,0.374,23,0.232,25,0.333,26,0.01,27,0.333,29,0.637,39,0.522,40,0.279,42,0.54,52,1.365,53,0.112,69,0.82,81,1.612,85,0.776,89,0.965,153,1.102,165,0.007,166,0.007,167,0.006,172,1.098,187,0.893,201,1.314,225,2.383,259,1.516,260,0.931,263,0.949,264,1.432,265,2.029,266,1.322,267,1.553,268,1.596,270,1.358,271,2.149,272,1.975,273,2.144,281,1.645,283,1.471,288,1.787,308,1.511,309,2.086,310,1.975,311,1.072,312,1.099,313,1.596,314,1.596,315,1.432,316,1.596,317,1.432,318,2.548,319,1.553,320,2.621,321,1.432,322,1.553,323,1.432,324,1.553,325,1.596,326,1.471,327,1.596,328,1.471,329,1.596,330,1.432,331,1.596,332,1.432,333,1.596,334,1.471,335,1.596,336,1.432,337,1.471,338,1.596,339,1.471,340,2.086,341,1.471,342,2.086,343,1.432,344,1.596,345,1.471,346,1.922,347,1.596,348,1.471,349,2.084,350,1.596,351,1.432,352,1.596,353,1.432,354,1.596,355,1.432,356,1.553,357,1.471,358,1.358,359,1.596,360,1.432,361,2.086,362,1.471,363,1.471,364,2.086,365,1.596,366,1.432,367,1.432,368,1.596,369,1.471,370,1.511,371,1.471,372,1.596,373,1.432,374,1.432,375,1.596,376,2.21,377,1.596,378,1.471,379,1.596,380,1.432,381,1.432,382,1.471,383,1.596,384,1.432,385,1.596,386,1.471,387,1.432,388,1.596,389,1.432,390,1.596,391,1.432,392,1.596,393,1.432,394,1.596,395,1.432,396,1.596,397,1.432,398,1.596,399,1.432,400,1.553,401,1.432,402,1.471,403,1.596,404,1.358,405,1.288,406,1.596,407,1.394,408,1.596,409,1.358,410,1.871,411,1.596,412,1.358,413,1.596,414,1.358,415,1.511,416,1.596,494,1.481,548,1.401,886,2.141,889,2.269,891,1.896,892,1.787,893,6.717,894,4.352,895,4.352,921,5.762,928,5.687,930,2.332,1033,5.687,1034,4.79,1068,3.114,1125,4.286,1195,4.468,1197,5.267,1199,4.995,1200,3.741,1202,3.498,1203,2.794,1238,2.222,1581,3.678,1634,3.666,1678,2.794,1770,4.484,1771,4.737,2023,3.498,2038,2.677,2473,2.794,3093,4.011,3439,4.711,3937,4.79,4386,4.79,4409,4.352,4461,4.352,4462,6.466,4463,7.202,4464,6.334,4465,6.466,4466,4.948,4467,6.466,4468,4.948,4469,4.948,4470,6.466,4471,4.948,4472,6.466,4473,4.948,4474,4.948,4475,5.687,4476,4.948,4477,5.687,4478,6.466,4479,6.466,4480,4.352,4481,5.687,4482,4.948,4483,4.948,4484,4.948,4485,6.466,4486,4.352,4487,6.466,4488,6.466,4489,5.687]],["title/components/RuntimeUpdateComponent.html",[263,0.565,380,1.241]],["body/components/RuntimeUpdateComponent.html",[0,0.249,3,0.098,4,0.045,5,0.11,8,0.066,9,0.21,10,0.341,13,0.253,16,0.192,17,0.429,20,0.328,22,0.213,23,0.241,25,0.335,26,0.011,27,0.335,29,0.803,38,0.739,39,0.58,40,0.274,42,0.473,53,0.098,69,1.118,81,1.529,85,1.351,89,0.846,131,0.68,136,3.247,139,2.951,165,0.005,166,0.007,167,0.005,172,1.028,186,1.1,187,1.011,200,1.159,201,1.257,259,1.388,260,0.852,263,0.888,264,1.255,265,1.858,266,1.159,267,1.361,268,1.399,270,1.19,271,2.136,272,1.808,273,1.964,281,1.829,283,1.29,285,1.361,286,3.621,288,1.567,296,2.449,308,1.325,309,1.91,310,1.808,311,0.94,312,1.091,313,1.399,314,1.399,315,1.255,316,1.399,317,1.255,318,2.479,319,1.361,320,2.524,321,1.255,322,1.361,323,1.255,324,1.361,325,1.399,326,1.29,327,1.399,328,1.29,329,1.399,330,1.255,331,1.399,332,1.255,333,1.399,334,1.29,335,1.399,336,1.255,337,1.29,338,1.399,339,1.29,340,1.91,341,1.29,342,1.91,343,1.255,344,1.399,345,1.29,346,1.76,347,1.399,348,1.29,349,1.951,350,1.399,351,1.255,352,1.399,353,1.714,354,1.399,355,1.255,356,1.361,357,1.29,358,1.19,359,1.399,360,1.255,361,1.91,362,1.29,363,1.29,364,1.91,365,1.399,366,1.255,367,1.255,368,1.399,369,1.29,370,1.408,371,1.29,372,1.399,373,1.255,374,1.255,375,1.399,376,1.255,377,1.399,378,1.29,379,1.399,380,2.194,381,1.255,382,1.29,383,1.399,384,1.255,385,1.399,386,1.29,387,1.255,388,1.399,389,1.255,390,1.399,391,1.255,392,1.399,393,1.255,394,1.399,395,1.255,396,1.399,397,1.255,398,1.399,399,1.255,400,1.361,401,1.255,402,1.29,403,1.399,404,1.19,405,1.129,406,1.399,407,1.222,408,1.399,409,1.19,410,1.714,411,1.399,412,1.19,413,1.399,414,1.19,415,1.325,416,1.399,417,2.586,445,1.984,494,1.736,548,1.283,742,2.269,886,2.004,889,2.078,898,3.489,899,2.347,918,2.254,919,3.471,921,4.738,930,2.212,939,3.816,995,5.208,1042,5.208,1068,2.852,1091,6.883,1125,4.473,1128,2.254,1195,4.182,1197,5.418,1199,4.676,1200,3.502,1202,3.203,1203,2.449,1238,1.948,1581,3.489,1634,3.214,1662,3.471,1663,3.816,1678,2.449,1771,3.673,1898,2.563,1900,3.203,1914,3.673,1954,2.449,1963,3.343,2038,3.203,2363,3.214,2473,2.449,2512,5.93,2515,4.738,2594,2.449,3312,3.009,3439,4.41,3897,3.009,3937,5.366,4386,5.617,4464,5.93,4477,5.208,4480,3.816,4481,5.93,4490,3.816,4491,6.742,4492,5.922,4493,6.742,4494,6.742,4495,6.742,4496,6.742,4497,7.244,4498,7.244,4499,5.922,4500,5.922,4501,4.338,4502,6.742,4503,5.922,4504,4.338,4505,4.338,4506,4.338,4507,5.922,4508,4.338,4509,5.922,4510,4.338,4511,4.338,4512,4.338,4513,4.338,4514,4.338,4515,4.338,4516,4.338,4517,4.338,4518,5.922,4519,4.338,4520,4.338,4521,5.922,4522,5.922,4523,4.338,4524,5.922,4525,4.338,4526,4.338,4527,4.338,4528,4.338,4529,4.338,4530,5.208,4531,4.338,4532,4.338,4533,4.338,4534,4.338,4535,6.742,4536,7.244,4537,4.338,4538,5.208,4539,4.338,4540,4.338,4541,4.338,4542,4.338,4543,4.338,4544,4.338,4545,5.922,4546,4.338,4547,5.922,4548,4.338,4549,4.338]],["title/components/SagImageAlerterComponent.html",[263,0.565,381,1.241]],["body/components/SagImageAlerterComponent.html",[0,0.246,3,0.097,4,0.055,5,0.102,8,0.042,9,0.152,10,0.344,11,0.689,13,0.248,16,0.133,17,0.311,20,0.211,22,0.426,23,0.163,25,0.129,26,0.011,27,0.129,29,0.66,38,1.143,39,0.202,40,0.275,42,0.304,50,0.673,52,1.105,53,0.097,60,0.576,61,0.8,69,1.252,81,1.241,85,1.327,89,0.544,90,0.851,102,0.798,103,1.271,131,1.205,144,1.343,153,0.731,165,0.008,166,0.005,167,0.003,168,0.875,170,0.637,172,0.425,186,0.707,187,1.057,199,1.101,200,0.745,201,1.31,202,0.851,225,1.343,263,0.774,264,0.807,265,1.347,266,1.147,267,0.875,268,0.899,270,0.765,271,2.092,272,1.311,273,0.924,275,2.977,278,1.448,283,0.829,284,1.574,285,0.875,286,2.145,287,1.343,288,1.89,290,1.647,308,0.851,309,1.384,310,1.311,311,0.604,312,1.038,313,0.899,314,0.899,315,0.807,316,0.899,317,0.807,318,2.286,319,0.875,320,2.163,321,1.242,322,0.875,323,0.807,324,0.875,325,0.899,326,0.829,327,0.899,328,0.829,329,0.899,330,0.807,331,0.899,332,1.242,333,0.899,334,1.276,335,0.899,336,0.807,337,0.829,338,0.899,339,0.829,340,1.384,341,0.829,342,1.384,343,0.807,344,0.899,345,0.829,346,1.276,347,0.899,348,0.829,349,1.94,350,0.899,351,0.807,352,0.899,353,0.807,354,0.899,355,0.807,356,0.875,357,0.829,358,0.765,359,0.899,360,0.807,361,1.384,362,0.829,363,1.276,364,1.384,365,0.899,366,0.807,367,0.807,368,0.899,369,0.829,370,1.142,371,0.829,372,0.899,373,0.807,374,0.807,375,0.899,376,0.807,377,0.899,378,0.829,379,0.899,380,0.807,381,1.701,382,1.556,383,0.899,384,0.807,385,0.899,386,0.829,387,0.807,388,0.899,389,0.807,390,0.899,391,0.807,392,0.899,393,0.807,394,0.899,395,0.807,396,0.899,397,0.807,398,0.899,399,0.807,400,0.875,401,0.807,402,0.829,403,0.899,404,0.765,405,1.362,406,0.899,407,0.785,408,0.899,409,0.765,410,1.242,411,0.899,412,0.765,413,0.899,414,0.765,415,0.851,416,0.899,443,0.745,444,0.875,445,2.025,446,0.924,463,1.785,471,2.2,494,1.604,547,1.384,548,0.604,610,2.192,621,1.172,648,1.135,652,1.423,701,2.005,705,2.2,709,1.135,751,1.135,791,2.648,857,1.178,886,1.276,889,0.978,891,1.068,892,1.007,898,2.067,899,1.508,930,0.851,935,3.18,948,2.452,1010,2.23,1039,4.603,1062,2.065,1071,1.644,1073,1.508,1086,3.543,1110,2.598,1117,1.508,1118,0.978,1119,3.18,1120,1.448,1121,1.508,1122,1.508,1123,1.508,1124,1.647,1125,3.434,1126,0.978,1128,2.23,1164,5.365,1189,5.917,1206,2.145,1233,1.995,1238,1.252,1239,1.995,1240,1.823,1241,1.574,1283,1.823,1343,3.775,1344,2.452,1352,2.145,1354,1.823,1370,1.647,1371,3.775,1372,4.603,1373,3.434,1374,3.775,1383,3.775,1408,2.452,1410,2.452,1514,5.365,1559,4.188,1579,2.322,1591,2.23,1592,1.823,1647,1.135,1648,2.452,1649,2.452,1677,2.452,1682,1.647,1784,4.355,1787,3.63,1859,2.452,1900,1.508,1908,2.452,1914,1.729,1929,1.393,1930,2.452,1954,2.423,1963,2.423,1999,5.079,2003,3.877,2006,3.18,2012,2.23,2019,2.23,2038,1.508,2056,2.23,2082,3.775,2095,2.452,2102,2.452,2123,2.35,2124,1.933,2125,1.933,2126,1.933,2127,3.63,2311,2.452,2315,1.933,2363,2.065,2510,3.434,2541,1.574,2583,1.823,2807,2.067,2830,4.188,2938,3.423,2985,2.452,2990,4.603,3004,3.247,3020,2.23,3312,2.977,3489,2.452,3545,7.025,3621,2.23,3704,2.065,3937,3.18,3954,2.452,4180,2.23,4336,2.23,4340,2.23,4367,2.452,4392,3.775,4393,4.603,4433,2.452,4434,2.452,4486,2.452,4530,3.775,4538,2.452,4550,2.452,4551,4.292,4552,5.234,4553,5.234,4554,5.234,4555,5.234,4556,5.234,4557,5.234,4558,4.292,4559,5.234,4560,4.603,4561,5.234,4562,5.879,4563,4.292,4564,2.788,4565,2.788,4566,2.788,4567,4.292,4568,2.788,4569,2.788,4570,2.788,4571,4.292,4572,2.788,4573,2.788,4574,2.788,4575,2.788,4576,2.788,4577,2.788,4578,2.788,4579,2.788,4580,2.788,4581,2.788,4582,2.788,4583,2.788,4584,2.788,4585,2.788,4586,2.788,4587,4.292,4588,4.292,4589,4.292,4590,4.292,4591,4.292,4592,4.292,4593,4.292,4594,4.292,4595,4.292,4596,4.292,4597,4.292,4598,4.292,4599,2.788,4600,2.788,4601,2.788,4602,2.788,4603,2.788,4604,2.788,4605,2.788,4606,2.452,4607,3.775,4608,3.775,4609,2.788,4610,5.234,4611,2.788,4612,2.788,4613,2.788,4614,2.788,4615,2.788,4616,2.23,4617,2.788,4618,2.788,4619,2.788,4620,2.788,4621,2.788,4622,3.434,4623,2.788,4624,2.788,4625,2.788,4626,4.292,4627,2.788,4628,2.788,4629,2.788,4630,2.788,4631,2.788,4632,2.788,4633,2.788,4634,2.788,4635,7.687,4636,4.292,4637,4.292,4638,4.292,4639,4.292,4640,4.292,4641,2.788,4642,4.292,4643,2.788,4644,4.292,4645,4.292,4646,4.292,4647,4.292,4648,2.788,4649,4.292,4650,4.292,4651,4.292,4652,2.788,4653,4.292,4654,2.788,4655,2.788,4656,2.788,4657,2.788,4658,2.788,4659,2.788,4660,2.788,4661,2.788,4662,2.788,4663,2.788,4664,2.788,4665,4.292,4666,2.788,4667,2.788,4668,2.788,4669,4.292,4670,2.788,4671,2.788,4672,2.788,4673,5.879,4674,2.788,4675,5.234,4676,2.788,4677,4.292,4678,6.985,4679,6.985,4680,4.292,4681,5.234,4682,2.788,4683,2.788,4684,2.788,4685,2.788,4686,5.234,4687,2.788,4688,2.788,4689,4.292,4690,2.788,4691,2.788,4692,2.788,4693,2.788,4694,2.788,4695,5.234,4696,2.788,4697,2.788,4698,2.788,4699,4.292,4700,6.705,4701,5.879,4702,2.788,4703,2.788,4704,2.788,4705,2.788,4706,2.788,4707,2.788,4708,4.292,4709,2.788,4710,2.788,4711,2.788,4712,2.788,4713,2.788,4714,2.788,4715,2.788,4716,2.788,4717,5.234,4718,2.788,4719,4.292,4720,2.788,4721,2.788,4722,2.788,4723,2.788,4724,2.788,4725,2.788,4726,2.788,4727,2.788,4728,5.234,4729,2.788,4730,2.788,4731,2.788,4732,2.788,4733,2.788,4734,2.788,4735,2.788,4736,4.292,4737,4.292,4738,4.292,4739,2.788,4740,2.788,4741,2.788,4742,4.292,4743,2.788,4744,2.788,4745,2.788,4746,2.788,4747,2.788,4748,2.788,4749,2.788,4750,2.788,4751,2.788,4752,2.788,4753,2.788,4754,2.788,4755,2.788,4756,2.788,4757,2.788,4758,2.788,4759,2.788,4760,2.788,4761,2.788,4762,4.292,4763,2.788,4764,2.788,4765,2.788,4766,6.348,4767,2.788,4768,2.788,4769,2.788,4770,2.788,4771,2.788,4772,2.788,4773,2.788,4774,5.234,4775,2.788,4776,2.788,4777,2.788,4778,2.788,4779,2.788,4780,5.234,4781,4.292,4782,2.788,4783,4.292,4784,2.788,4785,4.292,4786,2.788,4787,2.788,4788,2.788,4789,2.788,4790,2.788,4791,4.292,4792,2.788,4793,2.788,4794,2.788,4795,2.788,4796,2.788,4797,2.788,4798,2.788,4799,2.788,4800,2.788,4801,2.788,4802,2.788,4803,2.788,4804,2.788,4805,2.788,4806,2.788,4807,2.788,4808,2.788,4809,2.788,4810,2.788,4811,2.788,4812,4.292,4813,2.788,4814,2.788,4815,2.788,4816,4.292,4817,4.292,4818,5.234,4819,2.788,4820,4.292,4821,4.292,4822,2.788,4823,2.788,4824,2.788,4825,2.788,4826,2.788,4827,2.788,4828,2.788,4829,2.788,4830,4.292,4831,2.788,4832,2.788,4833,2.788,4834,2.788]],["title/classes/Scope.html",[0,0.246,148,2.66]],["body/classes/Scope.html",[0,0.464,1,2.772,2,0.925,3,0.119,4,0.055,5,0.08,6,4.608,7,3.275,8,0.08,9,0.239,10,0.34,11,1.835,12,1.8,13,0.204,14,2.928,15,3.661,16,0.19,18,1.337,21,3.119,22,0.438,23,0.186,26,0.011,29,0.664,32,5.016,34,4.858,36,1.85,38,0.9,40,0.265,41,1.755,42,0.576,43,2.583,44,2.583,45,2.454,46,1.963,47,2.175,48,1.657,49,1.963,50,0.828,51,1.907,52,1.568,53,0.183,54,2.091,55,4.41,56,4.41,57,4.182,58,3.275,59,2.059,60,0.561,61,0.758,62,1.8,63,3.661,64,3.661,65,2.98,66,3.661,67,3.661,68,3.661,69,1.118,70,3.661,71,1.907,72,3.661,73,3.661,74,3.661,75,3.661,76,2.366,77,3.806,78,3.647,79,4.41,80,3.37,81,1.423,82,3.275,83,4.182,84,3.661,85,1.268,86,3.661,87,3.661,88,3.661,89,1.03,90,1.612,91,2.022,92,3.661,93,3.661,94,4.675,95,4.675,96,1.703,97,3.661,98,3.661,99,4.182,100,3.661,101,3.661,102,1.028,103,1.057,104,3.661,105,3.661,106,3.661,107,3.661,108,3.661,109,3.661,110,3.647,111,3.661,112,2.507,113,2.371,114,2.846,115,3.027,116,3.502,117,3.502,118,3.37,119,2.742,120,2.742,121,2.742,122,3.661,123,2.856,124,3.661,125,2.543,126,2.543,127,3.453,128,2.293,129,3.661,130,1.703,131,0.828,132,3.661,133,2.742,134,2.454,135,2.742,136,2.543,137,2.639,138,2.742,139,2.746,140,3.661,141,3.661,142,4.388,143,3.275,144,3.247,145,4.41,146,4.182,147,5.13,148,5.214,149,5.427,150,5.289,151,4.675,152,3.661,153,1.334,154,3.578,155,3.661,156,3.661,157,3.661,158,3.661,159,3.275,160,3.661,161,3.661,162,3.661,163,3.661,164,3.661,165,0.006,166,0.008,167,0.006,4835,5.279,4836,5.279]],["title/classes/SearchObj.html",[0,0.246,99,2.66]],["body/classes/SearchObj.html",[0,0.456,1,2.744,2,0.875,3,0.113,4,0.052,5,0.076,6,5.277,7,3.101,8,0.076,9,0.231,10,0.345,11,1.788,12,1.705,13,0.232,14,2.827,15,3.466,16,0.2,17,0.472,18,1.302,20,0.378,21,2.953,22,0.438,23,0.233,25,0.301,26,0.011,27,0.301,29,0.641,32,4.931,34,4.734,36,1.786,38,0.852,39,0.362,40,0.261,41,1.694,42,0.545,43,2.493,44,2.493,45,2.323,46,1.859,47,2.099,48,1.569,49,1.859,50,0.784,51,1.805,52,1.528,53,0.18,54,2.049,55,4.257,56,4.257,57,4.037,58,3.101,59,1.988,60,0.552,61,0.747,62,1.705,63,3.466,64,3.466,65,2.822,66,3.466,67,3.466,68,3.466,69,1.079,70,3.466,71,1.805,72,3.466,73,3.466,74,3.466,75,3.466,76,2.284,77,3.674,78,3.521,79,4.257,80,3.253,81,1.374,82,3.101,83,4.037,84,3.466,85,1.247,86,3.466,87,3.466,88,3.466,89,0.975,90,1.526,91,1.915,92,3.466,93,3.466,94,4.514,95,4.514,96,1.612,97,3.466,98,3.466,99,4.489,100,3.466,101,3.466,102,0.992,103,1.001,104,3.466,105,3.466,106,3.466,107,3.466,108,3.466,109,3.466,110,3.521,111,3.466,112,2.42,113,2.245,114,2.773,115,2.923,116,3.381,117,3.381,118,3.253,119,2.597,120,2.597,121,2.597,122,3.466,123,2.704,124,3.466,125,2.408,126,2.408,127,3.269,128,2.171,129,3.466,130,1.612,131,0.784,132,3.466,133,2.597,134,2.323,135,2.597,136,2.408,137,2.498,138,2.597,139,2.651,140,3.466,141,3.466,142,4.276,143,3.101,144,3.135,145,4.257,146,4.037,147,5.424,148,5.277,149,5.019,150,5.2,151,5.513,152,5.019,153,1.463,154,3.997,155,4.514,156,3.466,157,3.466,158,3.466,159,3.101,160,3.466,161,4.514,162,3.466,163,3.466,164,3.466,165,0.006,166,0.007,167,0.006,281,1.142,4837,6.509,4838,6.509,4839,4.999,4840,4.999,4841,4.999,4842,4.999,4843,4.999,4844,4.999]],["title/classes/Server.html",[0,0.246,2807,2.066]],["body/classes/Server.html",[0,0.426,2,0.459,3,0.092,4,0.071,5,0.1,8,0.04,9,0.145,10,0.349,11,1.243,12,0.893,13,0.259,16,0.176,17,0.296,18,1.434,19,1.184,20,0.534,22,0.447,23,0.157,25,0.121,26,0.011,27,0.121,29,0.757,36,1.939,38,0.446,39,0.19,40,0.165,50,1.205,53,0.174,54,0.7,59,1.996,60,0.58,61,0.817,62,0.893,69,1.254,71,1.477,76,1.435,102,0.996,103,1.309,131,1.321,153,1.237,165,0.003,166,0.005,167,0.003,168,1.579,170,0.598,172,1.041,182,1.067,185,1.995,186,0.664,187,0.764,190,2.781,195,1.567,196,1.067,200,1.747,201,0.434,202,2.217,207,1.034,208,1.987,213,1.034,216,1.067,221,1.067,234,1.666,235,1.666,243,0.919,260,1.017,289,0.614,303,1.888,312,0.983,370,0.471,417,2.229,418,1.034,419,1.72,427,1.003,428,1.477,429,1.101,443,0.7,444,0.822,445,1.731,446,2.045,447,1.776,448,1.776,449,1.138,450,1.034,451,1.138,452,1.138,453,1.138,454,1.138,455,1.138,456,2.049,457,1.567,458,2.391,459,2.391,460,1.987,461,2.115,462,2.115,463,2.764,464,1.138,465,1.138,466,1.138,467,1.101,468,1.567,469,2.391,470,1.567,471,2.115,472,1.776,473,1.666,474,1.138,475,1.138,476,1.138,477,1.138,478,1.138,479,1.138,480,1.138,481,1.138,482,1.138,483,1.138,484,1.138,485,1.72,486,1.138,487,2.185,488,3.153,489,2.47,490,1.776,491,1.776,492,1.776,493,1.138,494,1.268,495,3.122,496,1.138,497,1.138,498,2.185,499,1.138,500,1.138,501,1.776,502,1.776,503,2.966,504,0.822,505,1.817,506,2.316,507,2.185,508,2.185,509,2.679,510,2.185,511,2.185,512,2.185,513,2.185,514,2.185,515,2.185,516,2.512,517,1.138,518,1.72,519,1.776,520,1.776,521,1.138,522,1.138,523,1.138,524,1.138,525,1.138,526,1.138,527,1.138,528,1.138,529,1.138,530,2.966,531,1.138,532,1.138,533,1.138,534,1.776,535,1.138,536,1.776,537,1.101,538,1.138,539,1.776,540,1.138,541,1.138,542,1.138,543,1.138,544,1.138,545,1.138,546,1.138,547,2.108,548,0.886,549,1.138,550,1.138,551,1.666,552,1.138,553,1.138,554,1.101,555,1.138,556,1.138,557,1.138,558,1.138,559,1.138,560,1.776,561,1.776,562,1.776,563,1.138,564,1.138,565,1.138,566,1.138,567,1.138,568,1.138,569,1.138,570,2.185,571,1.138,572,1.138,573,1.138,574,1.138,575,1.138,576,1.138,577,1.138,578,1.138,579,1.138,580,1.776,581,1.138,582,1.138,583,1.138,584,1.138,585,1.138,586,1.138,587,1.138,588,1.138,589,1.138,590,2.185,591,1.138,592,1.776,593,1.138,594,1.776,595,1.776,596,2.185,597,1.776,598,1.776,599,1.138,600,1.776,601,2.217,602,1.138,603,2.47,604,1.776,605,1.776,606,1.776,607,1.138,608,1.138,609,1.034,610,1.784,611,1.138,612,1.567,613,1.101,614,1.138,615,1.138,616,1.138,617,1.101,618,1.138,619,1.138,620,1.138,621,1.72,622,1.138,623,1.138,624,1.138,625,2.185,626,1.138,627,1.138,628,1.138,629,1.138,630,1.138,631,1.138,632,1.138,633,1.138,634,1.138,635,1.138,636,1.138,637,1.138,638,1.138,639,1.138,640,1.138,641,1.776,642,1.138,643,1.776,644,1.72,645,1.138,646,0.946,647,1.138,648,1.067,649,1.138,650,1.138,651,1.138,652,0.869,653,1.776,654,1.034,655,1.034,656,2.049,657,1.101,658,1.101,659,1.067,660,1.101,661,1.138,662,1.138,663,1.138,664,1.138,665,1.138,666,1.766,667,0.893,668,1.138,669,1.138,670,1.138,671,1.138,672,1.138,673,1.138,674,1.138,675,1.138,676,1.138,677,1.138,678,1.138,679,1.138,680,1.138,681,0.869,682,1.138,683,1.067,684,1.138,685,1.989,686,1.101,687,1.138,688,1.138,689,1.138,690,1.138,691,1.067,692,2.427,693,1.101,694,0.893,695,1.138,696,1.138,697,1.138,698,1.138,699,1.138,700,1.138,701,1.716,702,1.138,703,1.138,704,1.776,705,1.101,706,2.47,707,1.138,708,1.138,709,1.666,710,2.966,711,1.776,712,1.138,713,1.776,714,1.776,715,1.776,716,1.138,717,0.974,718,1.666,719,1.776,720,1.776,721,1.138,722,1.138,723,1.003,724,1.138,725,1.776,726,1.138,727,1.138,728,1.138,729,1.138,730,1.138,731,1.138,732,1.138,733,1.138,734,1.138,735,1.138,736,1.138,737,1.138,738,1.776,739,2.227,740,1.101,741,1.666,742,1.928,743,1.138,744,1.138,745,1.138,746,1.138,747,1.138,748,1.138,749,1.138,750,1.067,751,1.067,752,1.72,753,1.138,754,1.138,755,1.138,756,1.138,757,1.101,758,1.138,759,1.138,760,1.138,761,1.101,762,1.138,763,1.138,764,1.138,765,1.138,766,1.138,767,1.138,768,1.138,769,1.138,770,1.138,771,1.138,772,1.138,773,1.138,774,1.138,775,1.138,776,1.138,777,2.436,778,2.47,779,1.669,780,2.185,781,2.679,782,2.679,783,1.776,784,1.521,785,1.72,786,1.72,787,1.138,788,1.138,789,1.152,790,1.615,791,1.615,792,1.138,793,1.067,794,1.395,795,2.185,796,1.666,797,1.101,798,1.989,799,1.138,800,1.138,801,1.138,802,1.138,803,1.138,804,1.138,805,1.101,806,1.138,807,1.138,808,1.138,809,1.138,810,1.138,811,1.138,812,1.101,813,2.185,814,1.138,815,1.138,816,1.138,817,1.138,818,1.138,819,1.138,820,1.138,821,1.138,822,1.138,823,1.138,824,1.138,825,1.138,826,1.138,827,1.138,828,1.138,829,1.138,830,1.138,831,1.138,832,1.138,833,1.034,834,1.067,835,1.138,836,1.138,837,1.101,838,1.138,839,1.138,840,1.101,841,1.138,842,1.101,843,1.138,844,1.101,845,1.138,846,1.101,847,1.138,848,1.138,849,1.138,850,1.138,851,1.138,852,1.138,853,1.138,854,1.138,855,1.138,856,1.138,857,1.692,858,1.138,859,1.138,860,1.138,861,1.138,862,1.138,863,1.138,864,1.138,865,1.666,866,1.138,867,1.615,868,1.067,869,0.974,870,1.72,871,1.101,872,1.101,873,1.101,874,1.101,875,1.101,876,1.101,877,1.138,878,0.974,879,1.138,880,1.138,1879,3.727,2807,1.97,4845,4.09,4846,2.619,4847,2.619]],["title/classes/ServiceInfo.html",[0,0.246,4848,3.431]],["body/classes/ServiceInfo.html",[0,0.337,2,0.75,3,0.133,4,0.07,5,0.065,8,0.065,9,0.208,10,0.348,13,0.177,16,0.151,22,0.382,23,0.209,26,0.011,29,0.768,40,0.289,42,0.467,52,1.414,53,0.133,59,1.793,60,0.564,61,0.789,69,0.71,81,1.716,85,1.293,89,0.835,90,1.308,102,0.895,103,1.176,131,1.252,134,1.991,165,0.005,166,0.007,167,0.005,168,1.344,170,0.978,173,4.38,185,1.503,186,1.086,187,0.531,195,1.641,199,3.354,200,1.145,224,4.071,225,2.063,226,4.644,227,1.923,228,2.97,230,4.644,231,4.644,237,3.173,239,3.427,263,0.773,271,1.004,273,1.42,278,2.225,283,1.273,285,1.344,286,2.934,287,2.063,288,1.547,303,1.569,393,1.239,428,2.602,443,1.145,444,1.344,445,1.086,446,1.42,494,1.207,548,0.928,601,1.308,610,1.344,666,1.503,685,1.381,692,1.207,777,3.21,789,1.207,798,1.381,857,1.838,886,1.745,891,2.249,892,1.547,898,2.827,899,2.317,900,2.317,901,2.801,927,2.418,930,1.308,949,2.801,1003,5.592,1004,3.767,1005,3.173,1007,4.349,1008,3.767,1071,2.249,1073,2.317,1086,2.816,1088,3.468,1110,2.679,1117,2.317,1118,1.503,1119,2.317,1120,2.225,1121,2.317,1122,2.317,1123,2.317,1124,2.53,1125,2.317,1126,1.503,1238,1.923,1352,2.934,1354,2.801,1370,2.53,1579,3.175,1582,2.225,1583,3.641,1647,1.745,1681,2.97,1682,2.53,1683,3.427,1684,3.427,1793,2.97,1900,2.317,1906,3.427,1914,2.657,1971,3.839,2032,2.97,2048,2.317,2267,1.86,2315,2.97,2583,2.801,2717,4.961,2718,4.961,2719,3.173,2729,3.427,2811,3.427,2836,3.427,2838,3.427,3767,3.173,4054,4.349,4064,3.173,4336,3.427,4340,3.427,4848,6.795,4849,4.996,4850,3.767,4851,6.697,4852,4.283,4853,4.283,4854,5.116,4855,4.283,4856,5.163,4857,3.641,4858,4.697,4859,4.349,4860,4.283,4861,4.349,4862,4.283,4863,4.283,4864,4.283,4865,4.283,4866,4.283,4867,4.283,4868,4.283,4869,4.283,4870,4.283,4871,4.283,4872,4.283,4873,4.283,4874,4.283,4875,4.283,4876,4.283,4877,4.283,4878,4.283,4879,4.283,4880,4.283,4881,4.283,4882,4.283,4883,4.283,4884,4.283,4885,4.283,4886,4.283,4887,4.283,4888,4.283,4889,4.283,4890,3.767,4891,4.283,4892,4.283,4893,3.767,4894,4.283,4895,4.283,4896,5.87,4897,4.283,4898,5.87,4899,5.87,4900,5.87,4901,5.87,4902,4.283,4903,4.283,4904,4.283,4905,4.283,4906,4.283,4907,4.283,4908,4.283,4909,7.796,4910,4.283,4911,7.548,4912,4.283,4913,4.283,4914,4.283,4915,4.283,4916,4.283,4917,4.283,4918,4.283,4919,4.283,4920,4.283,4921,4.283,4922,4.283,4923,4.283,4924,4.283,4925,4.283,4926,4.283,4927,4.283,4928,4.283,4929,5.87,4930,6.697,4931,5.87,4932,6.697,4933,5.87,4934,5.87,4935,5.87,4936,4.283,4937,4.283,4938,4.283,4939,4.283,4940,4.283,4941,4.283,4942,4.283,4943,4.283,4944,4.283,4945,4.283,4946,4.283,4947,4.283,4948,3.767,4949,4.283,4950,5.87,4951,5.87,4952,4.283,4953,4.283,4954,4.283,4955,4.283,4956,4.283,4957,4.283,4958,4.283,4959,4.283,4960,4.283,4961,4.283,4962,4.283,4963,4.283,4964,4.283,4965,4.283,4966,5.87,4967,4.283,4968,4.283,4969,4.283,4970,4.283,4971,4.283,4972,5.87,4973,4.283,4974,7.205,4975,7.548,4976,4.283,4977,4.283,4978,5.87,4979,4.283,4980,4.283,4981,4.283,4982,5.87,4983,4.283,4984,4.283,4985,4.283,4986,4.283,4987,4.283,4988,4.283,4989,4.283,4990,4.283,4991,4.283,4992,4.283,4993,4.283,4994,4.283]],["title/components/ServicePropertiesComponent.html",[263,0.565,384,1.241]],["body/components/ServicePropertiesComponent.html",[0,0.251,3,0.099,4,0.046,5,0.111,8,0.067,9,0.211,10,0.345,13,0.25,16,0.194,17,0.431,20,0.33,22,0.356,23,0.239,25,0.202,26,0.01,27,0.202,39,0.317,40,0.272,42,0.477,47,1.41,48,1.372,50,0.686,51,1.579,52,1.605,53,0.099,60,0.557,69,1.122,81,1.534,85,0.934,89,0.853,90,2.067,102,0.667,103,1.192,146,3.693,153,1.015,165,0.005,166,0.007,167,0.005,172,1.196,187,0.839,201,1.261,203,4.763,259,1.396,260,0.857,263,0.892,264,1.265,265,1.868,266,1.169,267,1.372,268,1.41,270,1.2,271,2.139,272,1.818,273,1.974,281,0.999,283,1.3,285,1.372,305,4.508,308,1.335,309,1.92,310,1.818,311,0.948,312,1.046,313,1.41,314,1.41,315,1.265,316,1.41,317,1.265,318,2.482,319,1.372,320,2.53,321,1.265,322,1.372,323,1.265,324,1.372,325,1.41,326,1.3,327,1.41,328,1.3,329,1.41,330,1.265,331,1.41,332,1.265,333,1.41,334,1.3,335,1.41,336,1.265,337,1.3,338,1.41,339,1.3,340,1.92,341,1.3,342,1.92,343,1.265,344,1.41,345,1.3,346,2.16,347,1.41,348,1.3,349,1.959,350,1.41,351,1.265,352,1.41,353,1.265,354,1.41,355,1.265,356,1.372,357,1.3,358,1.2,359,1.41,360,1.265,361,1.92,362,1.3,363,1.3,364,1.92,365,1.41,366,1.265,367,1.265,368,1.41,369,1.3,370,1.368,371,1.3,372,1.41,373,1.265,374,1.265,375,1.41,376,1.265,377,1.41,378,1.3,379,1.41,380,1.265,381,1.265,382,1.3,383,1.41,384,2.103,385,1.41,386,1.3,387,1.265,388,1.41,389,1.265,390,1.41,391,1.265,392,1.41,393,1.265,394,1.41,395,1.265,396,1.41,397,1.265,398,1.41,399,1.265,400,1.372,401,1.265,402,1.3,403,1.41,404,1.2,405,1.138,406,1.41,407,1.232,408,1.41,409,1.2,410,1.723,411,1.41,412,1.2,413,1.41,414,1.2,415,1.335,416,1.41,457,1.675,494,1.224,548,1.29,617,2.503,686,2.503,691,2.757,794,2.03,886,2.012,888,3.055,889,2.089,890,2.867,891,2.784,892,1.579,918,2.271,927,3.822,930,2.219,962,4.428,1068,2.867,1069,3.361,1070,3.032,1071,2.784,1073,3.22,1086,3.645,1110,2.917,1117,2.365,1118,1.534,1120,2.271,1126,1.534,1164,3.498,1262,3.032,1277,3.894,1329,3.517,1647,2.757,1954,3.361,2344,4.763,2361,5.236,2362,5.954,2660,3.498,2683,4.41,2996,5.236,3042,5.236,3043,3.845,3055,4.753,4270,3.845,4489,5.236,4995,7.626,4996,3.845,4997,5.953,4998,5.953,4999,6.769,5000,6.769,5001,6.769,5002,6.769,5003,6.769,5004,6.769,5005,6.769,5006,6.769,5007,6.769,5008,6.769,5009,5.953,5010,4.372,5011,4.372,5012,4.372,5013,4.372,5014,4.372,5015,4.372,5016,4.372,5017,4.372,5018,5.953,5019,5.953,5020,4.372,5021,7.267,5022,4.372,5023,4.372,5024,4.372,5025,4.372,5026,4.372,5027,4.372,5028,3.845,5029,4.372,5030,4.372,5031,4.372,5032,3.498,5033,4.372,5034,4.372,5035,4.372,5036,4.372,5037,4.372,5038,4.372,5039,4.372,5040,4.372,5041,4.372,5042,5.953,5043,4.372,5044,5.953,5045,4.372,5046,5.953,5047,4.372,5048,5.953,5049,4.372,5050,5.953,5051,4.372,5052,5.953,5053,4.372,5054,4.372,5055,4.372,5056,4.372,5057,4.372,5058,4.372,5059,4.372,5060,4.372,5061,4.372,5062,4.372,5063,4.372,5064,4.372,5065,4.372,5066,4.372,5067,4.372,5068,4.372,5069,4.372,5070,4.372,5071,4.372,5072,4.372,5073,4.372,5074,4.372,5075,4.372,5076,4.372,5077,4.372,5078,4.372,5079,4.372,5080,4.372,5081,4.372,5082,4.372,5083,4.372,5084,4.372,5085,5.953,5086,5.953,5087,5.953,5088,5.953,5089,5.953,5090,5.953,5091,5.953,5092,5.953,5093,5.953,5094,5.953,5095,5.953,5096,5.953]],["title/injectables/Settings.html",[41,1.116,52,0.905]],["body/injectables/Settings.html",[0,0.379,1,1.344,3,0.094,4,0.043,5,0.063,8,0.063,9,0.204,10,0.348,13,0.239,16,0.196,17,0.417,18,1.542,20,0.315,22,0.444,23,0.241,25,0.345,26,0.011,27,0.345,29,0.795,38,0.981,39,0.574,40,0.245,41,1.499,42,0.454,43,2.728,44,2.529,45,1.936,46,1.549,47,2.411,48,1.307,49,1.549,50,0.653,51,1.504,52,1.632,53,0.161,54,1.113,60,0.519,61,0.741,69,0.955,85,1.326,89,0.812,91,2.206,96,1.858,102,1.085,112,2.648,113,2.586,114,2.961,115,3.198,116,3.699,117,3.699,118,3.559,119,2.992,120,2.992,121,2.992,125,2.774,126,2.006,130,1.344,131,1.335,153,0.71,165,0.005,166,0.007,167,0.005,227,2.586,250,2.164,259,1.669,260,1.025,281,1.507,289,0.977,303,1.113,318,1.205,370,0.75,685,2.297,857,1.811,891,2.863,892,1.504,917,3.429,1553,4.207,1971,2.725,2123,3.764,2174,2.253,2178,3.899,2179,3.699,2217,4.094,2225,4.094,2241,2.584,2244,4.417,2267,2.501,2268,1.871,2295,2.584,2401,2.352,2403,2.584,2404,2.584,2408,2.992,2432,2.352,2488,2.253,2692,3.767,2790,2.889,2807,2.774,2938,4.317,3004,2.584,3005,3.086,3270,3.086,3272,3.086,3610,3.086,3700,2.725,3997,2.889,4000,3.333,4001,3.086,4002,3.086,4003,3.333,4004,3.333,4005,3.333,4006,3.333,4007,3.333,4008,3.333,4009,3.333,4010,3.333,4011,3.333,4012,3.333,4013,3.333,4014,3.086,4015,3.333,4016,3.333,4017,3.333,4018,3.333,4019,3.333,4020,3.333,4021,3.333,4022,3.333,4023,3.333,4024,3.333,4025,3.333,4026,3.333,4027,3.333,4028,3.333,4029,5.697,4030,5.697,4031,4.608,4032,3.333,4033,3.333,4034,4.608,4035,5.281,4036,4.608,4037,3.333,4038,5.281,4039,5.281,4040,5.281,4041,5.281,4042,3.333,4043,5.281,4044,4.608,4045,3.333,4046,4.608,4047,3.086,4048,3.333,4049,3.333,4050,3.333,4051,4.608,4052,5.98,4053,5.697,4054,4.266,4055,4.608,4056,5.281,4057,4.608,4058,4.608,4059,5.697,4060,4.608,4061,3.333,4062,3.333,4063,3.333,4064,5.275,4065,3.333,4066,3.333,4067,3.333,4068,4.608,4069,4.266,4070,4.608,4071,5.281,4072,5.281,4073,4.608,4074,4.608,4075,3.333,4076,5.281,4077,3.333,4078,3.333,4079,4.608,4080,4.266,4081,3.333,4082,4.608,4083,3.333,4084,4.266,4085,3.333,4086,4.608,4087,3.333,4088,3.333,4089,3.333,4090,3.333,4091,3.333,4092,3.333,4093,3.333,4094,3.333,4095,4.608,4096,4.608,4097,4.608,4098,3.333,4099,4.608,4100,3.333,4101,4.608,4102,4.608,4103,3.333,4104,4.608,4105,3.333,4106,4.608,4107,3.333,4108,4.608,4109,3.333,4110,4.608,4111,3.333,4112,4.608,4113,3.333,4114,4.608,4115,3.333,4116,4.608,4117,4.608,4118,3.333,5097,5.759,5098,5.759,5099,5.759,5100,5.759,5101,3.333,5102,5.759,5103,4.166,5104,4.166,5105,4.166,5106,4.166,5107,4.166,5108,4.166,5109,4.166,5110,4.166,5111,4.166,5112,4.166,5113,4.166,5114,4.166,5115,4.166,5116,4.166,5117,4.166,5118,4.166]],["title/components/SimpleNameComponent.html",[263,0.565,387,1.241]],["body/components/SimpleNameComponent.html",[0,0.321,3,0.126,4,0.058,5,0.122,8,0.085,9,0.248,10,0.32,13,0.262,16,0.172,20,0.423,22,0.343,23,0.211,25,0.258,26,0.01,27,0.258,38,1.362,40,0.229,42,0.61,53,0.126,81,1.687,165,0.006,166,0.008,167,0.006,172,0.853,187,0.945,201,1.364,263,1.005,264,1.618,265,2.194,266,1.869,267,1.755,268,1.804,270,1.535,271,2.158,272,2.135,283,1.662,284,3.157,285,1.755,287,2.694,288,2.02,290,3.304,308,1.708,309,2.255,310,2.135,311,1.212,312,1.15,313,1.804,314,1.804,315,1.618,316,1.804,317,1.618,318,2.567,319,1.755,320,2.707,321,1.618,322,1.755,323,1.618,324,1.755,325,1.804,326,1.662,327,1.804,328,1.662,329,1.804,330,1.618,331,1.804,332,1.618,333,1.804,334,1.662,335,1.804,336,1.618,337,1.662,338,1.804,339,1.662,340,2.255,341,1.662,342,2.255,343,1.618,344,1.804,345,1.662,346,2.078,347,1.804,348,1.662,349,2.208,350,1.804,351,1.618,352,1.804,353,1.618,354,1.804,355,1.618,356,1.755,357,1.662,358,1.535,359,1.804,360,1.618,361,2.255,362,1.662,363,1.662,364,2.255,365,1.804,366,1.618,367,1.618,368,1.804,369,1.662,370,1.481,371,1.662,372,1.804,373,1.618,374,1.618,375,1.804,376,1.618,377,1.804,378,1.662,379,1.804,380,1.618,381,1.618,382,1.662,383,1.804,384,1.618,385,1.804,386,1.662,387,2.313,388,1.804,389,1.618,390,1.804,391,1.618,392,1.804,393,1.618,394,1.804,395,1.618,396,1.804,397,1.618,398,1.804,399,1.618,400,1.755,401,1.618,402,1.662,403,1.804,404,1.535,405,1.456,406,1.804,407,1.576,408,1.804,409,1.535,410,2.023,411,1.804,412,1.535,413,1.804,414,1.535,415,1.708,416,1.804,886,1.662,887,3.025,888,2.351,889,1.962,890,2.694,916,4.958,1149,6.709,2019,4.475,2038,3.025,2056,4.475,4420,4.919,5119,7.029,5120,4.919,5121,6.992,5122,7.628,5123,6.992,5124,5.593,5125,5.593]],["title/classes/Source.html",[0,0.246,4,0.045]],["body/classes/Source.html",[0,0.338,2,1.033,3,0.133,4,0.092,5,0.09,8,0.09,9,0.256,10,0.348,13,0.218,16,0.202,17,0.524,18,1.406,19,2.092,20,0.59,22,0.441,23,0.245,25,0.334,26,0.01,27,0.334,36,1.983,38,1.006,39,0.524,53,0.133,60,0.409,61,0.541,71,2.131,165,0.007,166,0.008,167,0.007,281,1.347,777,2.854,931,4.371,2401,4.411,2402,5.788,2403,4.847,2404,4.847,2405,5.419,2406,5.788,2743,4.721,3345,6.357,4069,4.371,4080,4.371,4084,4.371,5126,7.823,5127,5.189,5128,7.813,5129,7.228,5130,5.9,5131,5.9,5132,5.9,5133,5.9,5134,5.9,5135,5.9,5136,5.9,5137,5.9,5138,7.228,5139,5.9,5140,7.228,5141,7.228,5142,5.9,5143,5.9,5144,7.228,5145,7.228,5146,5.9,5147,7.228,5148,5.9,5149,7.228,5150,5.9,5151,7.228,5152,7.228,5153,5.9,5154,5.9,5155,5.9,5156,5.9,5157,5.9,5158,5.9,5159,5.9,5160,5.9,5161,5.9,5162,7.228,5163,5.9,5164,7.228,5165,5.9]],["title/classes/SourceWrapper.html",[0,0.246,2720,3.177]],["body/classes/SourceWrapper.html",[0,0.353,1,1.483,2,0.805,3,0.139,4,0.088,5,0.07,8,0.07,9,0.218,10,0.344,14,1.997,16,0.139,20,0.347,22,0.405,23,0.17,26,0.011,29,0.607,38,0.784,40,0.28,42,0.502,50,0.721,52,1.466,53,0.139,60,0.564,61,0.68,69,1.152,85,1.347,89,0.897,90,1.404,102,1.179,130,2.393,131,0.721,144,2.215,153,1.05,165,0.005,166,0.007,167,0.005,170,1.407,187,0.57,199,3.055,200,1.229,201,0.762,202,1.404,225,3.726,243,1.613,263,0.606,283,1.367,285,1.443,288,1.661,312,0.662,358,1.906,443,1.229,444,1.443,450,1.816,494,1.591,659,1.873,667,1.568,701,2.101,718,1.873,857,1.262,869,2.29,886,1.367,887,2.487,888,3.474,889,1.613,890,3.573,930,1.404,941,2.852,1011,3.679,1015,4.271,1071,1.762,1086,1.933,1110,2.583,1118,1.613,1119,4.307,1120,2.389,1233,2.863,1238,2.065,1239,2.863,1241,2.596,1329,2.716,1580,3.332,1582,3.2,1647,1.873,1679,3.679,1680,3.679,1681,3.189,1787,3.189,1929,2.298,2011,3.679,2061,6.506,2179,3.608,2181,4.703,2219,3.007,2221,3.007,2228,4.029,2229,3.007,2231,4.029,2232,3.007,2233,4.029,2235,3.007,2267,3.222,2288,3.007,2401,2.596,2414,3.189,2441,3.189,2541,2.596,2691,3.007,2706,5.145,2707,5.557,2708,3.679,2709,3.679,2710,4.044,2713,4.044,2715,4.044,2717,4.563,2718,4.563,2719,3.406,2720,4.563,2721,6.803,2722,4.044,2723,5.417,2724,4.044,2725,4.044,2726,4.044,2727,4.044,2728,4.044,2729,3.679,2730,4.044,2731,3.679,2732,4.044,2733,3.679,2734,4.044,2735,4.044,2736,4.044,2737,4.044,2738,4.044,2739,4.044,2740,4.044,2741,4.044,2742,4.044,2743,5.557,2744,4.044,2745,4.044,2746,5.417,2747,4.044,2748,4.044,2749,4.044,2750,4.044,2751,4.044,2752,4.044,2753,5.417,2754,4.044,2755,4.044,2756,6.108,2757,5.417,2758,5.417,2759,4.044,2760,4.044,2761,4.044,2762,6.108,2763,4.044,2764,4.044,2765,5.417,2766,4.044,2767,5.417,2768,4.044,2769,4.044,2770,3.406,2771,5.417,2772,4.044,2773,5.417,2774,4.044,2775,5.417,2776,4.044,2777,4.044,2778,5.417,2779,4.044,2780,4.044,2781,4.044,2782,4.044,2783,4.044,2784,5.417,2785,4.044,2786,4.044,2787,4.044,2788,4.044,2789,5.417,2790,3.189,2791,5.417,2792,4.044,2793,4.044,2794,5.417,2795,4.044,2796,4.044,2797,4.044,2798,4.044,2799,6.525,2800,4.044,2801,4.044,2802,4.044,2803,4.044,2804,4.044,2805,3.679,2806,4.044,2807,2.967,2808,4.044,2809,4.044,2810,4.044,2811,3.679,2812,4.044,2813,6.108,2814,4.044,2815,4.044,2816,4.044,2817,3.406,2818,4.044,2819,4.044,2820,4.044,2821,4.044,2822,4.044,2823,4.044,2824,4.044,2825,4.044,2826,5.417,2827,5.417,2828,5.417,2829,4.044,2830,3.679,2831,4.044,2832,3.679,2833,4.044,2834,3.679,2835,4.044,2836,3.679,2837,4.044,2838,3.679,2839,4.044,2840,4.044,2841,4.044,2842,4.044,2843,5.417,2844,4.044,2845,4.044,2846,4.044,2847,4.044,2848,4.044,2849,5.417,2850,6.525,2851,3.679,2852,4.044,2853,4.044,2854,4.044,2855,4.044,2856,4.044,2857,4.044,2858,4.044,2859,3.679,2860,4.044,5166,4.598,5167,4.598]],["title/classes/Sources.html",[0,0.246,2400,2.974]],["body/classes/Sources.html",[0,0.412,2,0.864,3,0.146,4,0.08,5,0.075,8,0.075,9,0.229,10,0.344,13,0.217,16,0.199,18,0.887,22,0.444,23,0.229,26,0.011,29,0.486,40,0.278,41,1.679,42,0.538,43,2.471,44,3.111,45,2.292,46,1.834,47,2.619,48,1.547,49,1.834,50,0.773,51,1.781,52,1.518,53,0.162,59,2.196,60,0.549,61,0.81,85,1.127,89,0.962,90,1.506,91,1.889,96,2.553,112,3.26,114,3.28,126,2.375,128,3.438,130,2.553,131,1.196,165,0.006,166,0.007,167,0.006,170,1.126,199,3.314,206,2.913,312,0.71,443,1.318,444,1.547,446,1.635,857,1.353,1126,1.73,1570,5.037,1582,2.562,2175,3.642,2176,2.667,2177,2.667,2224,2.784,2252,4.112,2267,3.644,2268,3.425,2396,3.42,2397,3.653,2400,4.986,2401,4.059,2402,5.326,2403,4.46,2404,4.46,2405,4.986,2406,5.326,2407,3.653,2408,2.562,2409,3.945,2410,3.945,2411,6.333,2412,5.489,2413,5.489,2414,6.08,2415,6.102,2416,4.779,2417,5.326,2418,3.945,2419,3.945,2420,3.653,2421,3.653,2422,3.653,2423,3.945,2424,5.753,2425,3.945,2426,3.945,2427,3.945,2428,3.945,2429,3.945,2430,3.945,2431,3.945,2432,3.642,2433,3.945,2434,3.945,2435,3.945,2436,6.497,2437,3.945,2438,3.945,2439,3.653,2440,3.945,2441,3.42,2442,3.945,2443,3.945,2444,3.945,2445,3.945,5168,4.931,5169,4.931,5170,4.931,5171,4.931,5172,4.931,5173,4.931,5174,4.931]],["title/classes/Stage.html",[0,0.246,798,1.383]],["body/classes/Stage.html",[0,0.423,2,0.449,3,0.091,4,0.071,5,0.099,8,0.039,9,0.142,10,0.35,11,1.507,12,0.873,13,0.258,16,0.186,17,0.291,18,1.427,19,1.163,20,0.53,22,0.447,23,0.211,25,0.118,26,0.011,27,0.118,29,0.753,36,1.924,38,0.436,39,0.291,40,0.163,50,1.199,53,0.173,54,0.684,59,1.977,60,0.578,61,0.815,62,0.873,69,1.247,71,1.451,76,1.41,102,0.987,103,1.297,131,1.317,153,1.229,165,0.003,166,0.005,167,0.003,168,1.556,170,0.585,172,1.069,182,1.043,185,1.971,186,0.649,187,0.756,190,2.758,195,1.539,196,1.043,200,1.73,201,0.425,202,2.202,207,1.011,208,1.958,213,1.011,216,1.043,221,1.043,234,1.637,235,1.637,243,0.899,260,1.009,289,0.6,303,1.874,312,0.975,370,0.461,417,2.459,418,1.011,419,1.689,427,0.981,428,1.451,429,1.077,443,0.684,444,0.804,445,1.717,446,2.024,447,1.745,448,1.745,449,1.112,450,1.011,451,1.112,452,1.112,453,1.112,454,1.112,455,1.112,456,2.02,457,1.539,458,2.361,459,2.361,460,1.958,461,2.085,462,2.085,463,2.753,464,1.112,465,1.112,466,1.112,467,1.077,468,1.539,469,2.361,470,1.539,471,2.085,472,1.745,473,1.637,474,1.112,475,1.112,476,1.112,477,1.112,478,1.112,479,1.112,480,1.112,481,1.112,482,1.112,483,1.112,484,1.112,485,1.689,486,1.112,487,2.154,488,3.131,489,2.439,490,1.745,491,1.745,492,1.745,493,1.112,494,1.255,495,3.259,496,1.112,497,1.112,498,2.154,499,1.112,500,1.112,501,1.745,502,1.745,503,2.941,504,0.804,505,1.791,506,2.288,507,2.154,508,2.154,509,2.65,510,2.154,511,2.154,512,2.154,513,2.154,514,2.154,515,2.154,516,2.485,517,1.112,518,1.689,519,1.745,520,1.745,521,1.112,522,1.112,523,1.112,524,1.112,525,1.112,526,1.112,527,1.112,528,1.112,529,1.112,530,2.941,531,1.112,532,1.112,533,1.112,534,1.745,535,1.112,536,1.745,537,1.077,538,1.112,539,1.745,540,1.112,541,1.112,542,1.112,543,1.112,544,1.112,545,1.112,546,1.112,547,2.088,548,0.871,549,1.112,550,1.112,551,1.637,552,1.112,553,1.112,554,1.077,555,1.112,556,1.112,557,1.112,558,1.112,559,1.112,560,1.745,561,1.745,562,1.745,563,1.112,564,1.112,565,1.112,566,1.112,567,1.112,568,1.112,569,1.112,570,2.154,571,1.112,572,1.112,573,1.112,574,1.112,575,1.112,576,1.112,577,1.112,578,1.112,579,1.112,580,1.745,581,1.112,582,1.112,583,1.112,584,1.112,585,1.112,586,1.112,587,1.112,588,1.112,589,1.112,590,2.154,591,1.112,592,1.745,593,1.112,594,1.745,595,1.745,596,2.154,597,1.745,598,1.745,599,1.112,600,1.745,601,2.202,602,1.112,603,2.439,604,1.745,605,1.745,606,1.745,607,1.112,608,1.112,609,1.011,610,1.762,611,1.112,612,2.152,613,1.077,614,1.112,615,1.112,616,1.112,617,1.077,618,1.112,619,1.112,620,1.112,621,1.689,622,1.112,623,1.112,624,1.112,625,2.154,626,1.112,627,1.112,628,1.112,629,1.112,630,1.112,631,1.112,632,1.112,633,1.112,634,1.112,635,1.112,636,1.112,637,1.112,638,1.112,639,1.112,640,1.112,641,1.745,642,1.112,643,1.745,644,1.689,645,1.112,646,0.925,647,1.112,648,1.043,649,1.112,650,1.112,651,1.112,652,0.849,653,1.745,654,1.011,655,1.011,656,2.02,657,1.077,658,1.077,659,1.043,660,1.077,661,1.112,662,1.112,663,1.112,664,1.112,665,1.112,666,1.74,667,0.873,668,1.112,669,1.112,670,1.112,671,1.112,672,1.112,673,1.112,674,1.112,675,1.112,676,1.112,677,1.112,678,1.112,679,1.112,680,1.112,681,0.849,682,1.112,683,1.043,684,1.112,685,1.968,686,1.077,687,1.112,688,1.112,689,1.112,690,1.112,691,1.043,692,2.421,693,1.077,694,0.873,695,1.112,696,1.112,697,1.112,698,1.112,699,1.112,700,1.112,701,1.691,702,1.112,703,1.112,704,1.745,705,1.077,706,2.439,707,1.112,708,1.112,709,1.637,710,2.941,711,1.745,712,1.112,713,1.745,714,1.745,715,1.745,716,1.112,717,0.952,718,1.637,719,1.745,720,1.745,721,1.112,722,1.112,723,0.981,724,1.112,725,1.745,726,1.112,727,1.112,728,1.112,729,1.112,730,1.112,731,1.112,732,1.112,733,1.112,734,1.112,735,1.112,736,1.112,737,1.112,738,1.745,739,2.204,740,1.077,741,1.637,742,1.9,743,1.112,744,1.112,745,1.112,746,1.112,747,1.112,748,1.112,749,1.112,750,1.043,751,1.043,752,1.689,753,1.112,754,1.112,755,1.112,756,1.112,757,1.077,758,1.112,759,1.112,760,1.112,761,1.077,762,1.112,763,1.112,764,1.112,765,1.112,766,1.112,767,1.112,768,1.112,769,1.112,770,1.112,771,1.112,772,1.112,773,1.112,774,1.112,775,1.112,776,1.112,777,2.41,778,2.439,779,1.645,780,2.154,781,2.65,782,2.65,783,1.745,784,1.494,785,1.689,786,1.689,787,1.112,788,1.112,789,1.132,790,1.587,791,1.587,792,1.112,793,1.043,794,1.37,795,2.154,796,1.637,797,1.077,798,2.261,799,2.154,800,2.154,801,2.154,802,2.154,803,2.154,804,2.154,805,1.077,806,1.112,807,1.112,808,1.112,809,1.112,810,1.112,811,1.112,812,1.077,813,2.154,814,1.112,815,1.112,816,1.112,817,1.112,818,1.112,819,1.112,820,1.112,821,1.112,822,1.112,823,1.112,824,1.112,825,1.112,826,1.112,827,1.112,828,1.112,829,1.112,830,1.112,831,1.112,832,1.112,833,1.011,834,1.043,835,1.112,836,1.112,837,1.077,838,1.112,839,1.112,840,1.077,841,1.112,842,1.077,843,1.112,844,1.077,845,1.112,846,1.077,847,1.112,848,1.112,849,1.112,850,1.112,851,1.112,852,1.112,853,1.112,854,1.112,855,1.112,856,1.112,857,1.674,858,1.112,859,1.112,860,1.112,861,1.112,862,1.112,863,1.112,864,1.112,865,1.637,866,1.112,867,1.587,868,1.043,869,0.952,870,1.689,871,1.077,872,1.077,873,1.077,874,1.077,875,1.077,876,1.077,877,1.112,878,0.952,879,1.112,880,1.112,5175,4.018,5176,2.561,5177,2.561,5178,2.561,5179,2.561,5180,2.561,5181,2.561,5182,2.561,5183,2.561,5184,2.561,5185,2.561]],["title/components/StagingComponent.html",[263,0.565,389,1.241]],["body/components/StagingComponent.html",[0,0.285,1,1.897,3,0.112,4,0.035,5,0.099,8,0.051,9,0.176,10,0.345,13,0.248,16,0.19,17,0.36,20,0.256,22,0.382,23,0.239,25,0.344,26,0.011,27,0.344,29,0.711,38,0.846,39,0.589,40,0.26,42,0.369,53,0.112,60,0.586,61,0.684,65,2.802,69,1.374,77,2.802,78,2.685,80,2.481,81,1.523,85,1.318,89,0.66,102,0.896,131,0.778,142,1.998,165,0.006,166,0.006,167,0.004,168,2.033,170,0.772,172,1.209,173,3.247,187,0.855,201,1.236,222,2.802,259,0.793,260,0.487,263,0.854,264,0.979,265,1.558,266,0.904,267,1.061,268,1.091,270,0.928,271,2.115,272,1.516,273,1.95,275,3.442,278,2.579,281,1.811,283,1.005,284,1.909,285,1.061,286,3.238,287,1.629,288,2.124,289,0.793,290,1.998,303,2.334,305,3.079,308,1.033,309,1.601,310,1.516,311,0.733,312,1.038,313,1.091,314,1.091,315,0.979,316,1.091,317,0.979,318,2.377,319,1.061,320,2.326,321,0.979,322,1.061,323,0.979,324,1.061,325,1.091,326,1.005,327,1.091,328,1.005,329,1.091,330,0.979,331,1.091,332,0.979,333,1.091,334,1.005,335,1.091,336,0.979,337,1.005,338,1.091,339,1.005,340,1.601,341,1.005,342,1.601,343,0.979,344,1.091,345,1.005,346,1.926,347,1.091,348,1.005,349,2.213,350,1.091,351,0.979,352,1.091,353,0.979,354,1.091,355,1.436,356,1.558,357,1.005,358,0.928,359,1.091,360,0.979,361,1.601,362,1.005,363,1.005,364,1.601,365,1.091,366,0.979,367,0.979,368,1.091,369,1.005,370,1.242,371,1.005,372,1.091,373,0.979,374,0.979,375,1.091,376,0.979,377,1.091,378,1.005,379,1.091,380,0.979,381,0.979,382,1.005,383,1.091,384,0.979,385,1.091,386,1.005,387,0.979,388,1.091,389,1.997,390,1.091,391,0.979,392,1.091,393,0.979,394,1.091,395,0.979,396,1.091,397,0.979,398,1.091,399,0.979,400,1.061,401,0.979,402,1.005,403,1.091,404,0.928,405,0.88,406,1.091,407,0.953,408,1.091,409,0.928,410,1.436,411,1.091,412,0.928,413,1.091,414,0.928,415,1.516,416,1.091,417,2.742,443,0.904,470,1.296,494,1.689,506,1.378,548,1.076,601,1.796,654,1.336,655,1.96,681,1.122,717,1.258,785,1.422,794,1.693,798,2.517,857,1.614,886,1.748,887,3.181,888,2.724,889,2.063,890,2.391,891,1.296,892,1.221,930,1.979,941,4.019,976,3.079,1007,3.677,1047,4.705,1053,4.705,1056,3.846,1062,4.8,1063,5.184,1065,5.184,1067,5.184,1068,2.391,1069,2.802,1070,2.345,1071,2.856,1073,2.685,1086,3.533,1110,2.566,1117,1.829,1118,1.187,1119,1.829,1120,1.757,1121,1.829,1122,1.829,1123,1.829,1124,1.998,1125,1.829,1126,1.187,1127,2.706,1128,1.757,1129,2.706,1130,3.972,1135,4.705,1141,4.705,1165,3.972,1166,2.706,1189,5.112,1437,3.677,1551,4.8,1561,3.972,1647,2.639,1789,3.442,1944,2.685,1954,1.909,1963,1.909,2023,3.181,2032,3.442,2366,2.706,2380,4.366,2447,4.366,2448,4.366,2542,2.706,2543,2.974,2544,2.974,2545,2.974,2546,4.366,2547,2.974,2548,4.366,2549,2.974,2550,4.366,2551,4.366,2552,2.974,2553,2.974,2554,2.974,2555,2.974,2556,2.974,2557,2.974,2576,2.974,2577,4.366,2578,5.172,2579,5.172,2580,5.172,2581,5.172,2582,5.172,2583,3.846,2584,2.974,2585,4.366,2586,4.366,2587,5.698,2588,5.698,2589,4.366,2590,4.366,2591,2.974,2592,2.974,2593,4.366,2594,1.909,2595,1.757,2596,4.366,2597,2.974,2598,4.366,2599,2.974,2600,4.366,2601,4.366,2602,2.974,2603,2.974,2604,2.974,2605,2.974,2606,2.974,2607,2.706,2608,2.974,2609,2.974,2610,2.974,2611,2.974,2612,4.366,2613,2.974,2614,2.974,2615,4.366,2616,2.974,2617,4.366,2618,2.974,2619,5.172,2620,2.974,2621,2.974,2622,4.366,2623,2.974,2624,4.366,2625,2.974,2626,4.366,2627,4.366,2628,4.366,2629,2.974,2630,4.366,2631,2.974,2632,2.974,2633,2.974,2634,2.974,2635,2.974,2636,2.974,2637,2.974,2638,2.974,2639,2.974,2640,2.974,2641,2.974,2642,2.974,2643,2.974,2644,2.974,2645,2.974,2646,2.974,2647,2.974,2648,4.366,2649,2.974,2650,6.725,2651,5.172,2652,2.974,2653,5.172,2654,2.974,2655,2.974,2656,2.974,2657,4.366,2658,2.974,2659,2.974,2660,2.706,2661,2.974,2662,2.974,2663,5.172,2664,6.069,2665,6.556,2666,4.366,2667,4.366,2668,4.366,2669,5.172,2670,2.974,2671,4.366,2672,4.366,2673,4.366,2674,2.974,2675,2.974,2676,2.974,2677,2.974,2678,2.974,2679,2.974,2680,2.974,2681,4.366,2682,4.366,2683,4.356,2684,4.366,2685,2.974,2686,2.974,2687,5.172,2688,4.705,2689,2.974,2690,2.974,2691,3.247,2692,2.212,2693,2.974,2694,2.974,2695,2.974,2696,2.974,2697,2.974,2698,3.972,2699,2.974,2700,2.345,3145,4.366,3618,3.972,5186,4.964,5187,4.964,5188,4.964,5189,4.964,5190,4.964,5191,3.382,5192,3.382,5193,3.382,5194,3.382,5195,3.382,5196,3.382,5197,3.382,5198,3.382,5199,3.382,5200,3.382,5201,3.382,5202,3.382,5203,3.382,5204,3.382,5205,3.382,5206,3.382,5207,3.382,5208,3.382,5209,3.382,5210,3.382,5211,3.382,5212,4.964,5213,4.964,5214,4.964,5215,4.964,5216,3.382]],["title/classes/Test.html",[0,0.246,81,0.905]],["body/classes/Test.html",[0,0.426,2,0.459,3,0.092,4,0.071,5,0.1,8,0.04,9,0.145,10,0.349,11,1.243,12,0.893,13,0.257,16,0.176,17,0.296,18,1.434,19,1.184,20,0.534,22,0.447,23,0.157,25,0.121,26,0.011,27,0.121,29,0.757,36,1.939,38,0.446,39,0.19,40,0.165,50,1.205,53,0.174,54,0.7,59,1.996,60,0.58,61,0.817,62,0.893,69,1.254,71,1.477,76,1.435,81,0.863,102,0.996,103,1.309,131,1.321,153,1.237,165,0.003,166,0.005,167,0.003,168,1.579,170,1.149,172,1.041,182,1.067,185,1.995,186,0.664,187,0.764,190,2.781,195,1.567,196,1.067,200,1.747,201,0.434,202,2.217,207,1.034,208,1.987,213,1.034,216,1.067,221,1.067,234,1.666,235,1.666,243,0.919,260,1.017,289,0.614,303,1.888,312,0.983,370,0.471,417,2.229,418,1.034,419,1.72,427,1.003,428,1.477,429,1.101,443,0.7,444,0.822,445,1.731,446,2.045,447,1.776,448,1.776,449,1.138,450,1.034,451,1.138,452,1.138,453,1.138,454,1.138,455,1.138,456,2.049,457,1.567,458,2.391,459,2.391,460,1.987,461,2.115,462,2.115,463,2.764,464,1.138,465,1.138,466,1.138,467,1.101,468,1.567,469,2.391,470,1.567,471,2.115,472,1.776,473,1.666,474,1.138,475,1.138,476,1.138,477,1.138,478,1.138,479,1.138,480,1.138,481,1.138,482,1.138,483,1.138,484,1.138,485,1.72,486,1.138,487,2.185,488,3.153,489,2.47,490,1.776,491,1.776,492,1.776,493,1.138,494,1.268,495,3.122,496,1.138,497,1.138,498,2.185,499,1.138,500,1.138,501,1.776,502,1.776,503,2.966,504,0.822,505,1.817,506,2.316,507,2.185,508,2.185,509,2.679,510,2.185,511,2.185,512,2.185,513,2.185,514,2.185,515,2.185,516,2.512,517,1.138,518,1.72,519,1.776,520,1.776,521,1.138,522,1.138,523,1.138,524,1.138,525,1.138,526,1.138,527,1.138,528,1.138,529,1.138,530,2.966,531,1.138,532,1.138,533,1.138,534,1.776,535,1.138,536,1.776,537,1.101,538,1.138,539,1.776,540,1.138,541,1.138,542,1.138,543,1.138,544,1.138,545,1.138,546,1.138,547,2.108,548,0.886,549,1.138,550,1.138,551,1.666,552,1.138,553,1.138,554,1.101,555,1.138,556,1.138,557,1.138,558,1.138,559,1.138,560,1.776,561,1.776,562,1.776,563,1.138,564,1.138,565,1.138,566,1.138,567,1.138,568,1.138,569,1.138,570,2.185,571,1.138,572,1.138,573,1.138,574,1.138,575,1.138,576,1.138,577,1.138,578,1.138,579,1.138,580,1.776,581,1.138,582,1.138,583,1.138,584,1.138,585,1.138,586,1.138,587,1.138,588,1.138,589,1.138,590,2.185,591,1.138,592,1.776,593,1.138,594,1.776,595,1.776,596,2.185,597,1.776,598,1.776,599,1.138,600,1.776,601,2.217,602,1.138,603,2.47,604,1.776,605,1.776,606,1.776,607,1.138,608,1.138,609,1.034,610,1.784,611,1.138,612,1.567,613,1.101,614,1.138,615,1.138,616,1.138,617,1.101,618,1.138,619,1.138,620,1.138,621,1.72,622,1.138,623,1.138,624,1.138,625,2.185,626,1.138,627,1.138,628,1.138,629,1.138,630,1.138,631,1.138,632,1.138,633,1.138,634,1.138,635,1.138,636,1.138,637,1.138,638,1.138,639,1.138,640,1.138,641,1.776,642,1.138,643,1.776,644,1.72,645,1.138,646,0.946,647,1.138,648,1.067,649,1.138,650,1.138,651,1.138,652,0.869,653,1.776,654,1.034,655,1.034,656,2.049,657,1.101,658,1.101,659,1.067,660,1.101,661,1.138,662,1.138,663,1.138,664,1.138,665,1.138,666,1.766,667,0.893,668,1.138,669,1.138,670,1.138,671,1.138,672,1.138,673,1.138,674,1.138,675,1.138,676,1.138,677,1.138,678,1.138,679,1.138,680,1.138,681,0.869,682,1.138,683,1.067,684,1.138,685,1.989,686,1.101,687,1.138,688,1.138,689,1.138,690,1.138,691,1.067,692,2.427,693,1.101,694,0.893,695,1.138,696,1.138,697,1.138,698,1.138,699,1.138,700,1.138,701,1.716,702,1.138,703,1.138,704,1.776,705,1.101,706,2.47,707,1.138,708,1.138,709,1.666,710,2.966,711,1.776,712,1.138,713,1.776,714,1.776,715,1.776,716,1.138,717,0.974,718,1.666,719,1.776,720,1.776,721,1.138,722,1.138,723,1.003,724,1.138,725,1.776,726,1.138,727,1.138,728,1.138,729,1.138,730,1.138,731,1.138,732,1.138,733,1.138,734,1.138,735,1.138,736,1.138,737,1.138,738,1.776,739,2.227,740,1.101,741,1.666,742,1.928,743,1.138,744,1.138,745,1.138,746,1.138,747,1.138,748,1.138,749,1.138,750,1.067,751,1.067,752,1.72,753,1.138,754,1.138,755,1.138,756,1.138,757,1.101,758,1.138,759,1.138,760,1.138,761,1.101,762,1.138,763,1.138,764,1.138,765,1.138,766,1.138,767,1.138,768,1.138,769,1.138,770,1.138,771,1.138,772,1.138,773,1.138,774,1.138,775,1.138,776,1.138,777,2.436,778,2.47,779,1.669,780,2.185,781,2.679,782,2.679,783,1.776,784,1.521,785,1.72,786,1.72,787,1.138,788,1.138,789,1.152,790,1.615,791,1.615,792,1.138,793,1.067,794,1.395,795,2.185,796,1.666,797,1.101,798,1.989,799,1.138,800,1.138,801,1.138,802,1.138,803,1.138,804,1.138,805,1.101,806,1.138,807,1.138,808,1.138,809,1.138,810,1.138,811,1.138,812,1.101,813,2.185,814,1.138,815,1.138,816,1.138,817,1.138,818,1.138,819,1.138,820,1.138,821,1.138,822,1.138,823,1.138,824,1.138,825,1.138,826,1.138,827,1.138,828,1.138,829,1.138,830,1.138,831,1.138,832,1.138,833,1.034,834,1.067,835,1.138,836,1.138,837,1.101,838,1.138,839,1.138,840,1.101,841,1.138,842,1.101,843,1.138,844,1.101,845,1.138,846,1.101,847,1.138,848,1.138,849,1.138,850,1.138,851,1.138,852,1.138,853,1.138,854,1.138,855,1.138,856,1.138,857,1.692,858,1.138,859,1.138,860,1.138,861,1.138,862,1.138,863,1.138,864,1.138,865,1.666,866,1.138,867,1.615,868,1.067,869,0.974,870,1.72,871,1.101,872,1.101,873,1.101,874,1.101,875,1.101,876,1.101,877,1.138,878,0.974,879,1.138,880,1.138,1003,3.03,5217,4.09,5218,2.619,5219,2.619]],["title/classes/TestCase.html",[0,0.246,4854,2.66]],["body/classes/TestCase.html",[0,0.313,1,2.433,2,0.956,3,0.123,4,0.057,5,0.083,8,0.083,9,0.244,10,0.348,11,2.135,12,2.573,13,0.247,16,0.201,17,0.499,18,1.556,19,1.993,20,0.57,22,0.447,23,0.247,25,0.318,26,0.01,27,0.318,29,0.678,39,0.547,40,0.179,53,0.123,60,0.478,61,0.692,110,4.512,165,0.006,166,0.008,167,0.006,173,4.934,202,2.586,259,1.28,260,0.786,925,5.995,2378,6.635,3852,5.509,3863,5.509,3865,4.775,4616,6.036,4622,4.367,4854,5.402,5220,7.179,5221,4.8,5222,7.544,5223,7.544,5224,7.544,5225,7.544,5226,7.544,5227,8.168,5228,7.544,5229,6.886,5230,5.458,5231,5.458,5232,5.458,5233,5.458,5234,5.458,5235,5.458,5236,5.458,5237,5.458,5238,5.458,5239,5.458,5240,5.458,5241,6.886,5242,5.458,5243,5.458,5244,6.886,5245,5.458,5246,5.458,5247,6.967,5248,5.458,5249,6.056,5250,4.8,5251,4.8,5252,6.967,5253,6.056,5254,5.458,5255,5.458,5256,6.886,5257,5.458,5258,5.458,5259,5.458,5260,7.544,5261,5.458,5262,6.886,5263,5.458]],["title/components/TestCaseComponent.html",[263,0.565,391,1.241]],["body/components/TestCaseComponent.html",[0,0.226,1,2.064,3,0.157,4,0.041,5,0.106,8,0.084,9,0.196,10,0.342,13,0.248,16,0.189,17,0.401,20,0.297,22,0.39,23,0.236,25,0.296,26,0.011,27,0.296,39,0.53,40,0.283,42,0.429,52,1.168,53,0.089,59,1.69,60,0.508,61,0.696,65,3.123,81,1.603,85,0.617,89,0.767,102,1.309,103,1.108,131,0.868,154,1.894,165,0.004,166,0.006,167,0.004,168,1.234,170,1.586,172,0.6,187,0.793,195,2.661,199,2.89,201,1.213,206,4.103,260,1,263,0.843,264,1.138,265,1.736,266,1.051,267,1.234,268,1.269,270,1.079,271,2.129,272,1.69,273,1.835,278,2.043,281,0.898,283,1.169,285,1.234,286,1.966,287,1.894,288,1.42,296,4.132,308,1.201,309,1.785,310,1.955,311,0.852,312,1,313,1.269,314,1.269,315,1.138,316,1.269,317,1.138,318,2.441,319,1.234,320,2.448,321,1.138,322,1.234,323,1.138,324,1.234,325,1.269,326,1.169,327,1.269,328,1.169,329,1.269,330,1.138,331,1.269,332,1.138,333,1.269,334,1.169,335,1.269,336,1.138,337,1.169,338,1.269,339,1.169,340,1.785,341,1.169,342,1.785,343,1.138,344,1.269,345,1.169,346,1.645,347,1.269,348,1.169,349,1.852,350,1.269,351,1.138,352,1.269,353,1.138,354,1.269,355,1.138,356,1.234,357,1.169,358,1.079,359,1.269,360,1.138,361,1.785,362,1.169,363,1.169,364,1.785,365,1.269,366,1.138,367,1.138,368,1.269,369,1.169,370,1.317,371,1.169,372,1.269,373,1.138,374,1.138,375,1.269,376,1.138,377,1.269,378,1.169,379,1.269,380,1.138,381,1.138,382,1.169,383,1.269,384,1.138,385,1.269,386,1.169,387,1.138,388,1.269,389,1.138,390,1.269,391,2.01,392,1.269,393,1.138,394,1.269,395,1.138,396,1.269,397,1.138,398,1.269,399,1.138,400,1.234,401,1.138,402,1.169,403,1.269,404,1.079,405,1.024,406,1.269,407,1.108,408,1.269,409,1.079,410,1.601,411,1.269,412,1.079,413,1.269,414,1.079,415,1.69,416,1.269,443,1.051,450,1.553,468,2.12,548,1.199,723,2.452,779,1.835,857,2.083,865,1.602,886,1.902,888,2.92,889,2.568,890,2.665,891,1.507,892,1.42,898,1.894,899,2.128,900,2.128,901,2.572,930,2.121,962,2.572,964,4.787,967,3.619,970,3.619,974,3.921,975,3.459,976,2.44,1015,2.727,1034,2.914,1056,4.186,1068,2.665,1069,3.123,1070,2.727,1071,2.661,1073,2.993,1086,3.402,1110,2.38,1117,2.128,1118,1.38,1119,2.128,1120,2.043,1121,2.128,1122,2.128,1123,2.128,1124,2.324,1125,2.128,1155,3.147,1238,1.766,1352,1.966,1370,2.324,1551,2.914,1579,2.128,1582,2.043,1583,4.308,1647,2.981,1681,2.727,1682,2.324,1683,3.147,1684,3.147,1766,5.121,1780,5.121,1793,2.727,1898,2.324,1900,2.993,1918,2.44,1937,2.914,1939,4.099,1940,5.408,1942,4.439,1943,4.099,1946,3.837,1947,2.727,1950,5.075,1954,3.123,1959,5.075,1960,5.624,1961,4.099,1962,5.121,1963,3.613,1965,2.914,1966,4.099,1968,3.147,1969,4.439,1976,3.459,1977,3.147,1978,3.459,1979,4.427,1980,4.427,1981,3.459,1982,3.459,1983,3.459,1984,7.213,1985,4.866,1986,6.437,1987,4.866,1988,3.459,1989,3.459,1990,3.459,1991,3.147,1992,6.437,1993,6.437,1994,6.437,1995,3.459,1996,5.121,1997,4.866,1998,3.459,2267,2.78,2541,2.22,2717,2.914,2718,2.914,2719,2.914,2961,3.459,3007,3.459,3399,3.147,3897,2.727,4849,5.957,4854,4.709,4856,3.459,4857,2.44,4858,4.427,4859,4.742,4861,5.422,4890,3.459,4893,3.459,5032,3.147,5264,3.459,5265,6.4,5266,5.533,5267,6.4,5268,6.4,5269,6.4,5270,6.4,5271,5.533,5272,5.533,5273,6.4,5274,6.4,5275,5.533,5276,3.933,5277,3.933,5278,3.933,5279,3.933,5280,5.533,5281,3.933,5282,3.933,5283,3.933,5284,5.533,5285,3.933,5286,3.933,5287,3.933,5288,3.933,5289,3.933,5290,3.933,5291,3.933,5292,5.533,5293,3.933,5294,5.533,5295,3.933,5296,5.533,5297,3.933,5298,5.533,5299,3.933,5300,3.933,5301,3.933,5302,3.933,5303,3.933,5304,3.933,5305,3.933,5306,6.4,5307,3.933,5308,3.933,5309,3.933,5310,3.933,5311,3.933,5312,3.933,5313,5.533,5314,5.533,5315,5.533,5316,5.533,5317,5.533,5318,3.933,5319,5.533,5320,3.933,5321,3.933,5322,3.933,5323,5.533,5324,3.933,5325,5.533,5326,3.933,5327,3.933,5328,3.459,5329,3.933,5330,3.933,5331,3.933]],["title/injectables/TestConfigService.html",[41,1.116,1583,2.66]],["body/injectables/TestConfigService.html",[0,0.326,3,0.16,4,0.059,5,0.087,8,0.087,9,0.25,10,0.334,11,1.745,13,0.25,16,0.193,17,0.512,18,1.383,20,0.43,22,0.432,23,0.229,25,0.355,26,0.011,27,0.355,39,0.557,40,0.283,41,1.839,42,0.62,43,3.08,44,3.168,46,2.115,47,2.756,48,1.785,49,2.115,50,0.892,51,2.054,52,1.492,53,0.129,60,0.533,61,0.799,89,1.109,91,2.707,96,2.479,112,3.134,114,3.229,128,3.069,130,2.479,131,1.108,165,0.006,166,0.008,167,0.006,170,1.756,199,2.79,250,2.955,259,1.333,260,0.819,428,2.552,443,1.52,1583,4.383,1793,3.944,2252,3.671,2267,3.66,2268,3.452,2408,3.671,2412,5.331,2413,5.331,2416,4.214,2417,4.214,2420,5.235,2421,4.214,2422,4.214,3350,4.551,3837,6.214,4854,3.528,4857,4.383,4858,5.654,4859,4.214,5101,4.551,5332,6.743,5333,5.002,5334,7.687,5335,7.066,5336,7.066,5337,7.066,5338,5.688,5339,5.688,5340,5.688,5341,7.066,5342,5.002,5343,7.687,5344,5.688,5345,7.687,5346,7.687,5347,5.688,5348,5.688]],["title/components/TestHistoryComponent.html",[263,0.565,395,1.241]],["body/components/TestHistoryComponent.html",[0,0.265,3,0.14,4,0.073,5,0.113,8,0.07,9,0.219,10,0.315,13,0.246,16,0.157,17,0.448,20,0.349,23,0.22,25,0.214,26,0.01,27,0.214,39,0.505,40,0.289,42,0.504,52,1.719,53,0.104,80,2.311,81,1.683,83,2.868,85,1.37,89,0.902,90,2.127,125,2.978,165,0.005,166,0.007,167,0.005,168,1.451,170,1.412,172,0.705,186,1.172,187,0.921,199,1.826,201,1.285,227,2.076,260,0.665,263,0.917,264,1.338,265,1.94,266,1.236,267,1.451,268,1.491,270,1.269,271,2.143,272,1.888,273,2.05,278,2.402,281,1.591,283,1.374,285,1.451,286,3.716,287,2.227,288,2.515,303,1.236,306,3.425,308,1.412,309,1.994,310,1.888,311,1.002,312,1.07,313,1.491,314,1.491,315,1.338,316,1.491,317,1.338,318,2.503,319,1.451,320,2.572,321,1.338,322,1.451,323,1.338,324,1.451,325,1.491,326,1.374,327,1.491,328,1.374,329,1.491,330,1.338,331,1.491,332,1.338,333,1.491,334,1.374,335,1.491,336,1.338,337,1.374,338,1.491,339,1.374,340,1.994,341,1.374,342,1.994,343,1.338,344,1.491,345,1.374,346,1.838,347,1.491,348,1.374,349,2.015,350,1.491,351,1.338,352,1.491,353,1.338,354,1.491,355,1.338,356,1.94,357,1.374,358,1.269,359,1.491,360,1.338,361,1.994,362,1.374,363,1.374,364,1.994,365,1.491,366,1.338,367,1.338,368,1.491,369,1.374,370,1.395,371,1.374,372,1.491,373,1.338,374,1.338,375,1.491,376,1.338,377,1.491,378,1.374,379,1.491,380,1.338,381,1.338,382,1.374,383,1.491,384,1.338,385,1.491,386,1.374,387,1.338,388,1.491,389,1.338,390,1.491,391,1.338,392,1.491,393,1.338,394,1.491,395,2.243,396,1.491,397,1.338,398,1.491,399,1.338,400,1.451,401,1.338,402,1.374,403,1.491,404,1.269,405,1.204,406,1.491,407,1.303,408,1.491,409,1.269,410,1.789,411,1.491,412,1.269,413,1.491,414,1.269,415,1.412,416,1.491,443,1.236,444,1.451,445,1.172,446,1.533,548,1.34,601,1.888,610,1.451,666,1.622,685,1.491,790,1.826,798,1.491,886,2.07,891,2.848,892,1.67,898,3.581,899,2.501,900,2.501,901,3.024,927,3.49,930,2.271,967,3.024,974,2.61,1071,2.848,1073,3.767,1086,1.944,1104,3.699,1110,1.719,1117,2.501,1118,1.622,1119,2.501,1120,2.402,1121,2.501,1122,2.501,1123,2.501,1124,2.731,1125,2.501,1126,1.622,1225,2.868,1238,2.076,1352,3.716,1354,4.555,1370,2.731,1495,4.066,1579,4.022,1682,2.731,1898,2.731,1900,3.344,1913,3.206,1914,4.32,1939,4.58,1940,3.206,1942,3.206,1944,3.344,1946,3.206,1947,4.287,1950,3.206,1964,4.58,2038,3.344,2044,5.374,2048,2.501,2315,4.83,2432,3.49,2439,3.425,2583,4.555,2594,2.61,2595,2.402,2805,3.699,2807,2.978,2832,3.699,2972,3.699,3004,3.835,3022,4.066,3217,3.699,3612,4.066,3615,4.066,3618,4.946,4175,4.066,4560,4.066,4849,5.647,4857,2.868,4861,5.741,4948,4.066,5032,3.699,5349,4.066,5350,6.182,5351,6.965,5352,6.182,5353,6.965,5354,6.965,5355,7.435,5356,7.435,5357,6.182,5358,4.623,5359,4.623,5360,4.623,5361,6.182,5362,6.182,5363,4.623,5364,4.623,5365,4.623,5366,4.623,5367,6.182,5368,4.623,5369,6.182,5370,4.623,5371,4.623,5372,4.623,5373,4.623,5374,4.623,5375,4.623,5376,4.623,5377,4.623,5378,4.623,5379,4.623,5380,4.623,5381,4.623,5382,6.965,5383,4.623,5384,4.623,5385,6.182,5386,4.623,5387,4.066,5388,4.623,5389,4.623,5390,4.623,5391,4.623,5392,4.623,5393,4.623,5394,4.623,5395,4.623,5396,4.623,5397,4.623,5398,6.182,5399,6.182,5400,4.623,5401,4.623]],["title/components/TestRunComponent.html",[263,0.565,397,1.241]],["body/components/TestRunComponent.html",[0,0.295,3,0.15,4,0.077,5,0.118,8,0.078,10,0.305,13,0.252,16,0.116,17,0.48,20,0.389,23,0.183,25,0.238,26,0.01,27,0.238,39,0.373,40,0.292,42,0.561,52,1.693,53,0.116,81,1.787,85,1.288,89,1.003,90,2.24,165,0.006,166,0.008,167,0.006,168,1.614,170,1.175,172,0.784,186,1.304,187,0.96,199,2.031,201,1.33,263,0.966,264,1.488,265,2.08,266,1.374,267,1.614,268,1.659,270,1.411,271,2.152,272,2.025,273,2.199,278,2.672,281,1.175,283,1.529,285,1.614,286,3.873,287,2.477,288,2.65,303,1.374,308,1.571,309,2.138,310,2.025,311,1.115,312,1.116,313,1.659,314,1.659,315,1.488,316,1.659,317,1.488,318,2.54,319,1.614,320,2.649,321,1.488,322,1.614,323,1.488,324,1.614,325,1.659,326,1.529,327,1.659,328,1.529,329,1.659,330,1.488,331,1.659,332,1.488,333,1.659,334,1.529,335,1.659,336,1.488,337,1.529,338,1.659,339,1.529,340,2.138,341,1.529,342,2.138,343,1.488,344,1.659,345,1.529,346,1.971,347,1.659,348,1.529,349,2.123,350,1.659,351,1.488,352,1.659,353,1.488,354,1.659,355,1.488,356,1.614,357,1.529,358,1.411,359,1.659,360,1.488,361,2.138,362,1.529,363,1.529,364,2.138,365,1.659,366,1.488,367,1.488,368,1.659,369,1.529,370,1.443,371,1.529,372,1.659,373,1.488,374,1.488,375,1.659,376,1.488,377,1.659,378,1.529,379,1.659,380,1.488,381,1.488,382,1.529,383,1.659,384,1.488,385,1.659,386,1.529,387,1.488,388,1.659,389,1.488,390,1.659,391,1.488,392,1.659,393,1.488,394,1.659,395,1.488,396,1.659,397,2.243,398,1.659,399,1.488,400,1.614,401,1.488,402,1.529,403,1.659,404,1.411,405,1.339,406,1.659,407,1.449,408,1.659,409,1.411,410,1.918,411,1.659,412,1.411,413,1.659,414,1.411,415,1.571,416,1.659,443,1.374,444,1.614,445,1.304,446,1.705,548,1.437,601,1.571,610,1.614,666,1.805,685,1.659,798,1.659,886,2.181,891,2.969,892,1.857,898,3.733,899,2.782,900,2.782,901,3.364,927,3.743,930,2.367,1071,2.969,1073,3.969,1086,2.162,1110,1.912,1117,2.782,1118,1.805,1119,2.782,1120,2.672,1121,2.782,1122,2.782,1123,2.782,1124,3.038,1125,2.782,1126,1.805,1352,3.873,1354,4.799,1370,3.038,1579,4.192,1682,3.038,1898,3.038,1900,3.586,1913,3.567,1914,4.551,2048,2.782,2315,5.088,2583,4.799,4849,5.088,4861,5.942,5402,4.523,5403,6.63,5404,7.337,5405,6.63,5406,5.143,5407,5.143]],["title/classes/TestSuite.html",[0,0.246,4857,2.66]],["body/classes/TestSuite.html",[0,0.337,2,1.029,3,0.133,4,0.061,5,0.089,8,0.089,9,0.255,10,0.347,11,2.125,12,2.66,13,0.252,16,0.198,17,0.522,18,1.529,19,2.086,20,0.589,22,0.44,23,0.245,25,0.333,26,0.01,27,0.333,29,0.71,39,0.565,40,0.193,50,1.223,53,0.133,60,0.541,61,0.715,81,1.24,85,1.223,165,0.007,166,0.008,167,0.007,428,3.014,2333,6.34,3852,5.768,3863,5.768,3865,5.787,4616,6.24,4622,4.701,4854,4.472,4857,5.431,4859,4.353,5220,7.113,5247,6.34,5249,5.167,5250,5.167,5251,5.167,5252,6.859,5253,6.859,5408,5.167,5409,7.799,5410,7.799,5411,7.799,5412,7.209,5413,5.875,5414,5.875,5415,5.875,5416,5.875,5417,5.875,5418,5.875,5419,5.875,5420,7.209,5421,5.875,5422,5.875,5423,5.875,5424,7.209,5425,5.875,5426,5.875,5427,5.875,5428,5.875,5429,5.875]],["title/injectables/TestTraceService.html",[41,1.116,1584,2.974]],["body/injectables/TestTraceService.html",[0,0.34,3,0.134,4,0.062,5,0.09,8,0.09,9,0.257,10,0.31,13,0.219,16,0.189,17,0.525,18,1.408,20,0.447,22,0.429,23,0.231,25,0.335,26,0.01,27,0.335,39,0.525,40,0.279,41,1.885,42,0.646,43,3.124,44,3.204,46,2.202,47,2.524,48,1.858,49,2.202,50,0.928,51,2.138,52,1.766,53,0.134,60,0.411,61,0.798,85,1.351,89,1.155,90,2.39,91,2.775,96,1.91,102,0.903,112,3.165,113,2.659,114,2.998,115,3.253,116,3.763,117,3.763,118,3.62,119,3.076,120,3.076,121,3.076,165,0.007,166,0.008,167,0.007,185,2.078,186,1.501,187,0.734,222,3.343,224,4.106,226,4.106,227,2.659,228,4.106,229,3.873,230,4.106,231,4.106,250,3.076,259,1.388,260,0.852,692,2.398,1130,4.737,1584,5.023,1929,2.959,2174,3.203,2268,2.659,2408,3.763,3350,4.737,3357,4.737,3869,4.737,4170,6.883,4179,6.37,4180,4.737,4189,5.207,4362,5.207,5101,4.737,5332,6.809,5342,5.207,5430,5.207,5431,7.826,5432,7.243,5433,7.243,5434,7.243,5435,5.921,5436,7.243,5437,5.921,5438,7.243,5439,5.921,5440,5.921,5441,7.243,5442,5.921,5443,5.921,5444,5.921]],["title/components/UMInstallerComponent.html",[263,0.565,399,1.241]],["body/components/UMInstallerComponent.html",[0,0.28,3,0.11,4,0.051,5,0.129,8,0.074,9,0.227,10,0.338,13,0.256,14,3.109,16,0.187,17,0.465,22,0.397,23,0.234,25,0.331,26,0.01,27,0.331,29,0.705,39,0.572,40,0.249,42,0.533,50,1.006,53,0.11,60,0.527,81,1.605,85,1.27,165,0.006,166,0.007,167,0.006,172,0.745,187,0.942,201,1.343,263,0.943,264,1.414,265,2.247,266,1.306,267,1.534,268,1.577,270,1.341,271,2.148,272,1.959,273,2.127,281,1.802,283,1.453,285,1.534,298,2.888,308,1.493,309,2.069,310,1.959,311,1.059,312,1.094,313,1.577,314,1.577,315,1.414,316,1.577,317,1.414,318,2.545,319,1.534,320,2.613,321,1.414,322,1.534,323,1.414,324,1.534,325,1.577,326,1.453,327,1.577,328,1.453,329,1.577,330,1.414,331,1.577,332,1.414,333,1.577,334,1.453,335,1.577,336,1.414,337,1.453,338,1.577,339,1.453,340,2.069,341,1.453,342,2.069,343,1.414,344,1.577,345,1.453,346,1.906,347,1.577,348,1.453,349,2.072,350,1.577,351,1.414,352,1.577,353,1.414,354,1.577,355,1.414,356,1.534,357,1.453,358,1.341,359,1.577,360,1.414,361,2.069,362,1.453,363,1.453,364,2.069,365,1.577,366,1.414,367,1.414,368,1.577,369,1.453,370,1.42,371,1.453,372,1.577,373,1.414,374,1.414,375,1.577,376,1.414,377,1.577,378,1.453,379,1.577,380,1.414,381,1.414,382,1.453,383,1.577,384,1.414,385,1.577,386,1.453,387,1.414,388,1.577,389,1.414,390,1.577,391,1.414,392,1.577,393,1.414,394,1.577,395,1.414,396,1.577,397,1.414,398,1.577,399,2.199,400,2.385,401,1.414,402,1.453,403,1.577,404,1.341,405,1.272,406,1.577,407,1.377,408,1.577,409,1.341,410,1.856,411,1.577,412,1.341,413,1.577,414,1.341,415,1.493,416,1.577,463,2.442,505,2.585,548,1.39,646,2.316,886,2.128,889,1.715,918,3.719,930,2.321,933,4.195,1071,1.873,1086,3.01,1110,3.012,1118,1.715,1126,1.715,1205,3.197,1206,3.578,1207,3.621,1209,4.448,1215,4.448,1216,4.195,1217,5.631,1218,4.195,1223,3.621,1225,3.032,1227,3.621,1229,3.621,1233,3.327,1234,3.39,1237,3.621,1238,2.195,1239,2.272,1240,3.197,1241,2.759,1242,3.39,1243,3.621,1262,3.39,1270,3.621,1271,3.39,1272,3.39,1273,3.39,1274,3.39,1275,3.39,1277,3.197,1278,3.39,1279,3.39,1280,4.752,1281,3.39,1282,3.621,1283,3.197,1284,3.39,1329,3.789,1334,4.195,1357,4.299,1366,4.299,1367,3.621,1549,4.299,2851,3.911,5445,7.519,5446,6.414,5447,7.159,5448,6.414,5449,4.888,5450,7.892,5451,4.888,5452,4.888,5453,6.414,5454,4.888,5455,4.888,5456,6.414,5457,4.888,5458,6.414,5459,6.414,5460,4.888,5461,4.888,5462,4.888,5463,6.414,5464,4.888,5465,4.888,5466,4.888]],["title/components/UploadButtonComponent.html",[263,0.565,401,1.241]],["body/components/UploadButtonComponent.html",[0,0.274,3,0.108,4,0.05,5,0.128,8,0.073,9,0.224,10,0.342,13,0.252,16,0.2,17,0.457,20,0.36,22,0.426,23,0.241,25,0.292,26,0.01,27,0.292,29,0.741,39,0.457,40,0.232,42,0.52,53,0.108,60,0.438,81,1.589,89,0.93,96,2.281,112,1.773,143,4.387,154,2.297,165,0.005,166,0.007,167,0.005,172,0.727,187,0.877,201,1.298,225,2.297,259,1.479,260,0.908,263,0.932,264,1.38,265,1.98,266,1.686,267,1.496,268,1.538,270,1.308,271,2.146,272,1.927,281,1.441,283,1.417,284,2.692,285,1.496,308,1.456,309,2.035,310,1.927,311,1.033,312,1.083,313,1.538,314,1.538,315,1.38,316,1.538,317,1.38,318,2.514,319,1.496,320,2.595,321,1.38,322,1.496,323,1.38,324,1.496,325,1.538,326,1.417,327,1.538,328,1.417,329,1.538,330,1.38,331,1.538,332,1.38,333,1.538,334,1.417,335,1.538,336,1.38,337,1.417,338,1.538,339,1.417,340,2.035,341,1.417,342,2.035,343,1.38,344,1.538,345,1.417,346,1.876,347,1.538,348,1.417,349,2.047,350,1.538,351,1.38,352,1.538,353,1.38,354,1.538,355,1.38,356,1.496,357,1.417,358,1.308,359,1.538,360,1.38,361,2.035,362,1.417,363,1.417,364,2.035,365,1.538,366,1.38,367,1.38,368,1.538,369,1.417,370,1.409,371,1.417,372,1.538,373,1.38,374,1.38,375,1.538,376,1.38,377,1.538,378,1.417,379,1.538,380,1.38,381,1.38,382,1.417,383,1.538,384,1.38,385,1.538,386,1.417,387,1.38,388,1.538,389,1.38,390,1.538,391,1.38,392,1.538,393,1.38,394,1.538,395,1.38,396,1.538,397,1.38,398,1.538,399,1.38,400,1.496,401,2.178,402,2.391,403,2.595,404,1.308,405,1.241,406,1.538,407,1.344,408,1.538,409,1.308,410,1.826,411,1.538,412,1.308,413,1.538,414,1.308,415,1.456,416,1.538,494,0.98,548,1.368,692,1.778,886,2.102,887,2.579,888,3.165,889,2.923,890,3.039,916,4.752,930,2.299,931,4.675,962,4.626,974,3.562,988,3.914,1005,3.532,1068,3.039,1069,3.562,1070,3.307,1071,2.884,1073,3.413,1086,2.005,1098,5.22,1110,1.773,1117,2.579,1118,1.673,1155,5.659,1625,3.815,1950,5.22,2005,6.22,2023,2.579,2031,5.55,2032,4.376,3700,3.119,3807,3.815,5328,4.194,5467,7.71,5468,4.194,5469,7.527,5470,7.072,5471,7.072,5472,7.072,5473,6.31,5474,4.768,5475,4.768,5476,4.768,5477,4.768,5478,4.768,5479,4.768,5480,4.768,5481,4.768,5482,4.768,5483,6.31,5484,4.768,5485,4.768,5486,7.072,5487,4.768,5488,4.768,5489,4.768,5490,4.768,5491,4.768,5492,4.768,5493,4.768,5494,6.31,5495,4.768,5496,4.768,5497,4.768,5498,4.768,5499,4.768,5500,4.768,5501,4.768,5502,4.768,5503,4.768,5504,4.194,5505,6.31,5506,4.768,5507,4.768,5508,4.768]],["title/classes/UploadedFile.html",[0,0.246,3696,3.177]],["body/classes/UploadedFile.html",[0,0.344,2,0.773,3,0.1,4,0.046,5,0.125,8,0.111,9,0.212,11,1.884,13,0.205,16,0.194,17,0.434,20,0.333,21,3.54,22,0.439,23,0.24,25,0.314,26,0.011,27,0.314,29,0.859,38,0.752,39,0.529,40,0.145,41,1.56,42,0.481,53,0.135,60,0.506,61,0.721,62,1.505,69,1.404,96,1.424,102,1.112,103,0.884,130,2.194,131,1.381,153,1.454,154,3.876,159,2.738,165,0.005,166,0.007,167,0.005,243,1.549,281,1.962,296,2.492,473,1.798,494,1.707,692,2.149,878,2.925,888,2.519,1056,2.887,1442,3.532,2003,5.039,2023,3.241,2187,2.738,2770,4.439,3327,3.532,3622,2.887,3623,6.976,3624,3.27,3625,3.882,3626,3.882,3627,3.882,3628,3.882,3629,3.882,3630,3.882,3631,3.882,3632,3.882,3633,3.882,3634,3.882,3635,3.882,3636,3.882,3637,3.882,3638,3.882,3639,3.882,3640,3.882,3641,3.882,3642,3.882,3645,3.882,3652,3.882,3653,3.882,3654,3.882,3661,3.882,3663,3.882,3668,3.882,3670,3.882,3673,3.882,3677,3.882,3688,3.532,3696,5.039,3697,7.077,3698,6.709,3699,7.077,3700,5.263,3701,5.983,3702,3.882,3703,5.27,3704,4.439,3705,6.417,3706,6.417,3707,5.27,3708,5.27,3709,5.27,3710,6.417,3711,6.417,3712,5.27,3713,3.882,3714,3.882,3715,5.983,3716,5.27,3717,5.27,3718,5.27,3719,5.983,3720,5.27,3721,5.983,3722,5.27,3723,5.983,3724,5.27,3725,5.27,3726,5.27,3727,5.27,3728,5.27,3729,5.27,3730,5.27,3731,5.27,3732,5.27,3733,5.27,3734,5.27,3735,5.27,3736,5.27,3737,5.27,3738,5.27,3739,5.983,3740,5.27,3741,5.983,3742,5.27,3743,5.27,3744,5.27,3745,5.983,3746,5.27,3747,6.417,3748,5.27,3749,5.27,3750,5.27,3751,3.882,3752,3.882,3753,3.882,3754,3.882,3755,3.882,3756,3.882,3757,3.882,3758,3.532,3759,3.882,3760,5.983,3761,3.882,3762,3.882,3763,5.27,3764,3.882,3765,3.882,3766,3.882,3767,5.039,3768,3.882,3769,3.882,3770,3.882,3771,5.27,3772,3.882,3773,3.882,3774,6.417,3775,3.882,3776,3.882,3777,3.882,3778,3.882,3779,3.882,3780,3.882,3781,3.882,3782,3.882,3783,3.882,3784,3.882,3785,3.882,3786,3.882,3787,3.882,3788,3.882,3789,3.882,3790,3.882,3791,3.882,3792,3.882,3793,3.882,3794,3.882,3795,3.532,3796,3.882,5509,5.992,5510,5.992,5511,5.992,5512,4.414,5513,4.414,5514,4.414,5515,4.414,5516,4.414,5517,4.414,5518,4.414,5519,4.414,5520,4.414,5521,4.414,5522,4.414,5523,4.414,5524,4.414]],["title/classes/Values.html",[0,0.246,2123,1.926]],["body/classes/Values.html",[0,0.374,1,1.31,2,0.712,3,0.092,4,0.042,5,0.062,8,0.062,9,0.2,10,0.35,13,0.213,16,0.2,17,0.41,18,1.38,22,0.446,23,0.243,25,0.188,26,0.011,27,0.188,29,0.694,38,0.692,39,0.294,40,0.243,41,1.473,42,0.443,43,2.168,44,2.495,45,1.888,46,1.511,47,2.101,48,1.275,49,1.511,50,0.637,51,1.467,52,1.564,53,0.159,54,1.086,60,0.532,61,0.736,69,1.08,85,1.105,89,0.792,91,1.556,96,1.826,102,1.074,112,2.62,113,2.542,114,2.938,115,3.163,116,3.659,117,3.659,118,3.521,119,2.94,120,2.94,121,2.94,125,2.726,126,1.957,130,1.31,131,1.387,153,0.692,165,0.005,166,0.006,167,0.005,227,2.542,259,2.031,260,1.247,289,0.952,303,1.086,318,1.176,370,0.731,685,1.826,857,1.787,891,2.168,892,1.467,917,2.94,1553,3.848,1971,2.657,2123,3.534,2174,2.198,2178,4.531,2179,3.984,2217,2.52,2225,4.04,2241,2.52,2244,4.594,2267,2.829,2268,1.824,2295,2.52,2401,3.677,2403,4.04,2404,4.04,2408,2.11,2432,2.294,2692,3.702,2790,2.817,2807,2.726,2938,3.702,3004,2.52,3005,3.01,3270,4.825,3272,4.825,3610,3.01,3700,2.657,3997,2.817,4000,3.251,4001,3.01,4002,3.01,4003,4.528,4004,5.211,4005,4.528,4006,5.211,4007,3.251,4008,5.211,4009,3.251,4010,3.251,4011,3.251,4012,5.211,4013,4.528,4014,4.825,4015,5.211,4016,5.211,4017,5.211,4018,4.528,4019,5.211,4020,5.211,4021,5.211,4022,5.211,4023,5.211,4024,5.211,4025,5.211,4026,4.528,4027,3.251,4028,3.251,4029,4.528,4030,4.528,4031,3.251,4032,3.251,4033,3.251,4034,4.528,4035,3.251,4036,3.251,4037,3.251,4038,3.251,4039,3.251,4040,3.251,4041,3.251,4042,3.251,4043,3.251,4044,3.251,4045,3.251,4046,4.528,4047,3.01,4048,3.251,4049,3.251,4050,3.251,4051,3.251,4052,5.926,4053,5.636,4054,4.193,4055,3.251,4056,5.211,4057,3.251,4058,4.528,4059,3.251,4060,4.528,4061,3.251,4062,3.251,4063,3.251,4064,3.01,4065,3.251,4066,3.251,4067,3.251,4068,3.251,4069,4.193,4070,4.528,4071,5.211,4072,5.211,4073,4.528,4074,4.528,4075,3.251,4076,5.211,4077,3.251,4078,3.251,4079,4.528,4080,4.193,4081,3.251,4082,4.528,4083,3.251,4084,4.193,4085,3.251,4086,4.528,4087,3.251,4088,3.251,4089,3.251,4090,3.251,4091,3.251,4092,3.251,4093,3.251,4094,3.251,4095,4.528,4096,4.528,4097,4.528,4098,3.251,4099,4.528,4100,3.251,4101,4.528,4102,4.528,4103,3.251,4104,4.528,4105,3.251,4106,4.528,4107,3.251,4108,4.528,4109,3.251,4110,4.528,4111,3.251,4112,4.528,4113,3.251,4114,4.528,4115,3.251,4116,4.528,4117,4.528,4118,3.251,5525,5.66,5526,4.063,5527,4.063,5528,4.063,5529,4.063,5530,4.063,5531,4.063,5532,4.063,5533,4.063,5534,4.063,5535,4.063,5536,4.063,5537,4.063,5538,4.063,5539,4.063,5540,4.063,5541,4.063,5542,4.063,5543,4.063,5544,4.063,5545,4.063,5546,4.063,5547,4.063]],["title/classes/WebSocketService.html",[0,0.246,4153,3.177]],["body/classes/WebSocketService.html",[0,0.293,2,0.895,3,0.115,4,0.053,5,0.078,8,0.078,9,0.234,10,0.342,12,2.636,13,0.242,16,0.195,17,0.478,18,1.57,20,0.386,22,0.44,23,0.243,25,0.37,26,0.011,27,0.37,29,0.65,39,0.612,40,0.24,42,0.557,47,2.779,48,1.603,52,1.394,53,0.115,57,3.169,58,3.169,60,0.458,61,0.765,85,1.368,96,2.582,102,0.779,130,1.648,131,0.801,153,1.246,165,0.006,166,0.008,167,0.006,259,1.714,260,0.735,281,1.67,285,2.295,307,5.727,494,1.05,548,1.431,667,2.938,685,2.493,691,2.081,867,2.607,1028,4.095,2143,6.185,2290,3.169,2353,4.89,2375,4.087,2395,4.493,2488,3.571,2595,3.799,2807,2.46,2972,5.282,3018,4.493,3354,4.493,3480,5.727,4153,6.073,4235,4.493,5504,4.493,5548,4.493,5549,7.313,5550,7.313,5551,7.313,5552,6.601,5553,7.73,5554,6.601,5555,6.601,5556,6.601,5557,6.601,5558,5.108,5559,5.108,5560,6.601,5561,5.108,5562,6.601,5563,5.108,5564,6.601,5565,8.004,5566,5.108,5567,5.108,5568,5.108,5569,6.601,5570,5.108,5571,5.108,5572,6.601,5573,5.108,5574,6.601,5575,5.108,5576,6.601,5577,5.108,5578,5.108,5579,5.108,5580,5.108,5581,5.108,5582,7.313,5583,5.108,5584,6.601,5585,8.004,5586,7.313,5587,5.108,5588,5.108,5589,6.601,5590,5.108,5591,6.601,5592,6.601,5593,5.108,5594,5.108,5595,5.108,5596,5.108,5597,5.108,5598,5.108,5599,5.108,5600,5.108,5601,5.108,5602,5.108,5603,5.108,5604,5.108,5605,7.73,5606,5.108,5607,5.108,5608,5.108,5609,5.108,5610,5.108,5611,5.108,5612,5.108]],["title/classes/WmPackageInfo.html",[0,0.246,199,1.694]],["body/classes/WmPackageInfo.html",[0,0.392,1,2.421,2,0.945,3,0.122,4,0.056,5,0.082,8,0.082,9,0.242,10,0.348,13,0.258,16,0.199,17,0.495,18,1.465,19,1.979,20,0.408,22,0.441,23,0.243,25,0.316,26,0.011,27,0.316,36,2.059,38,0.92,39,0.391,40,0.177,53,0.155,60,0.521,61,0.688,65,3.86,153,1.345,165,0.006,166,0.008,167,0.006,168,2.682,169,7.066,170,2.025,171,4.319,172,0.823,173,3.531,174,4.748,182,2.199,184,3.999,185,2.918,186,1.369,187,0.669,188,6.014,189,4.748,190,2.199,191,6.014,192,4.748,193,6.014,194,4.748,195,3.119,196,2.199,197,4.748,198,4.748,199,3.336,200,2.006,201,1.244,202,2.292,203,6.005,204,5.56,205,6.601,206,4.434,207,2.7,208,2.132,209,6.014,210,4.748,211,4.748,212,4.748,213,2.7,214,4.748,215,4.748,216,2.199,217,4.748,218,4.748,219,4.748,220,4.748,221,3.214,222,3.048,223,7.16,224,3.744,225,2.6,226,3.744,227,2.424,228,3.744,229,3.531,230,3.744,231,3.744,232,4.748,233,4.748,234,2.199,235,2.199,236,4.748,237,3.999,238,4.748,239,4.319,240,4.748,241,4.748,242,6.014,243,1.894,244,4.748,245,4.748,246,4.748,247,4.748,248,4.748,249,4.748,5613,6.838,5614,5.398,5615,5.398,5616,5.398,5617,5.398,5618,5.398,5619,5.398,5620,5.398,5621,5.398,5622,5.398,5623,5.398]],["title/coverage.html",[5624,5.167]],["body/coverage.html",[0,0.522,1,1.326,4,0.078,5,0.1,6,4.615,7,4.615,16,0.093,26,0.01,32,2.551,41,2.196,52,0.868,60,0.285,81,0.868,82,2.551,99,2.551,102,1.407,103,0.824,110,2.225,139,2.325,148,2.551,165,0.006,166,0.006,167,0.005,168,1.291,169,4.567,170,1.304,171,4.567,172,0.87,187,0.954,199,1.624,263,1.194,264,1.19,269,3.617,303,1.099,306,4.229,311,1.612,315,1.19,317,1.19,321,1.19,323,1.19,326,1.222,328,1.222,330,1.19,332,1.19,334,1.222,336,1.19,337,1.222,339,1.222,341,1.222,343,1.19,345,1.222,348,1.222,351,1.19,353,1.19,355,1.19,357,1.222,360,1.19,362,1.222,363,1.222,366,1.19,367,1.19,369,1.222,371,1.222,373,1.19,374,1.19,376,1.19,378,1.222,380,1.19,381,1.19,384,1.19,386,1.222,387,1.19,389,1.19,391,1.19,393,1.19,395,1.19,397,1.19,399,1.19,401,1.19,405,1.071,407,1.159,409,1.128,412,1.128,414,1.128,417,1.947,418,3.473,445,1.043,446,1.364,463,1.403,504,2.222,505,1.485,516,1.675,547,1.326,601,1.256,609,2.254,610,1.291,666,1.443,683,1.675,685,1.326,798,1.326,867,2.589,881,5.666,882,5.511,898,1.981,900,2.225,1045,3.617,1195,2.551,1197,4.776,1198,4.567,1200,2.136,1204,3.617,1205,4.866,1206,2.056,1233,1.912,1239,1.912,1335,3.617,1352,2.056,1533,3.617,1579,2.225,1580,2.225,1581,1.981,1582,2.136,1583,2.551,1584,2.852,1588,3.291,1626,3.291,1647,2.325,1850,3.291,1851,3.617,1879,3.047,1899,3.617,1999,6.16,2000,3.617,2048,2.225,2111,3.291,2112,3.617,2113,4.567,2118,4.911,2119,4.911,2123,1.847,2140,3.617,2160,2.69,2161,4.632,2162,4.632,2170,2.69,2179,2.136,2181,2.43,2304,3.617,2396,2.852,2397,4.857,2400,2.852,2465,5.02,2466,4.567,2473,2.322,2483,3.291,2492,3.047,2493,4.567,2494,3.291,2509,3.617,2542,4.567,2706,3.047,2707,5.245,2708,5.245,2720,3.047,2807,1.981,2889,3.617,3044,4.546,3045,3.291,3059,2.43,3122,3.617,3197,3.291,3245,3.617,3423,2.852,3424,4.567,3425,4.567,3457,2.852,3487,5.02,3622,2.69,3623,4.567,3624,4.857,3688,3.291,3696,3.047,3797,4.567,3798,3.617,3825,3.617,3846,3.291,3894,4.567,3897,2.852,3939,3.291,3986,3.047,3997,4.546,4119,3.617,4146,4.857,4153,3.047,4437,3.617,4461,3.617,4490,3.617,4550,5.02,4848,3.291,4849,5.159,4850,5.02,4854,2.551,4857,2.551,4995,3.617,4996,3.617,5119,3.617,5120,3.617,5126,3.617,5127,3.617,5220,4.567,5221,3.617,5264,3.617,5332,4.567,5333,3.617,5349,3.617,5402,3.617,5408,3.617,5430,3.617,5445,3.617,5467,3.617,5468,3.617,5548,3.617,5624,3.617,5625,4.113,5626,4.113,5627,4.113,5628,7.896,5629,4.113,5630,4.113,5631,7.896,5632,3.617,5633,8.277,5634,8.174,5635,7.082,5636,4.113,5637,4.113,5638,6.556,5639,4.113,5640,8.05,5641,4.113,5642,4.113,5643,4.113,5644,4.113,5645,7.44,5646,4.113,5647,4.113,5648,4.113,5649,4.113,5650,4.113,5651,7.082,5652,6.556,5653,3.617,5654,4.113,5655,7.082,5656,5.708,5657,6.556,5658,5.708,5659,6.556,5660,7.44,5661,8.174,5662,6.556,5663,5.708,5664,4.113,5665,4.113,5666,4.113,5667,4.113,5668,4.113,5669,5.708,5670,5.708,5671,6.556,5672,4.113,5673,4.113,5674,4.113,5675,4.113,5676,4.113,5677,4.113,5678,4.113,5679,4.113,5680,4.113,5681,7.896,5682,3.617,5683,5.708,5684,7.082,5685,4.113,5686,7.44,5687,3.617,5688,4.113,5689,4.113,5690,4.113,5691,3.617,5692,3.617,5693,5.02,5694,3.617,5695,4.113]],["title/dependencies.html",[170,0.815,1570,3.203]],["body/dependencies.html",[5,0.1,26,0.01,42,0.714,48,2.415,165,0.007,166,0.009,167,0.007,288,2.366,410,1.896,892,2.366,902,5.241,1098,4.543,1118,2.299,1570,4.064,1591,6.157,1592,5.034,1601,5.241,1615,5.761,1617,5.761,1618,5.761,1620,5.761,1621,6.747,1622,6.768,1625,5.241,1689,7.187,1690,5.761,1691,7.187,1693,5.761,1761,5.761,1969,4.543,2176,3.544,2177,3.544,2180,4.064,2933,5.761,5028,5.761,5696,8.857,5697,6.551,5698,7.696,5699,6.551,5700,6.551,5701,6.551,5702,6.551,5703,8.172,5704,6.551,5705,6.551,5706,6.551,5707,6.551,5708,6.551,5709,6.551,5710,6.551,5711,6.551,5712,6.551,5713,6.551,5714,6.551,5715,7.696,5716,6.551,5717,6.551,5718,6.551,5719,6.551,5720,6.551]],["title/miscellaneous/enumerations.html",[5721,2.335,5722,4.542]],["body/miscellaneous/enumerations.html",[1,2.3,4,0.074,5,0.118,6,3.582,7,5.151,8,0.088,16,0.161,22,0.283,26,0.01,34,4.665,55,4.665,56,4.665,57,4.424,58,3.582,60,0.576,76,2.503,77,4.026,78,4.186,79,4.665,80,3.565,81,1.506,96,1.862,130,1.862,142,4.572,143,3.582,144,3.435,145,4.665,146,4.424,147,4.424,165,0.007,166,0.008,167,0.007,185,2.503,225,3.435,227,3.889,229,3.777,260,1.323,382,1.716,418,2.28,456,2.905,457,2.732,458,2.999,459,2.999,460,2.817,461,2.999,462,2.999,779,2.365,793,2.905,878,2.147,897,5.707,937,4.278,985,4.62,1528,3.582,1560,5.988,1647,2.352,2113,6.467,2161,3.777,2162,4.665,2178,4.214,2182,4.946,2183,4.004,2184,5.151,2185,4.004,2493,5.707,2494,5.707,2498,5.707,2505,5.078,2506,6.644,3044,4.946,3045,5.707,3064,6.273,3094,6.192,3095,6.273,3096,6.273,3097,6.273,3098,5.284,3197,5.707,3205,4.946,3209,6.273,3312,4.946,3846,4.62,3855,6.273,3857,6.273,3865,4.004,3869,4.62,3870,5.078,3997,4.004,4001,4.278,4002,4.278,4146,4.278,4155,6.273,4606,5.078,4607,5.078,4608,5.078,5721,3.777,5722,5.078,5723,8.083,5724,8.083,5725,7.132,5726,5.078,5727,5.078,5728,5.774,5729,5.774,5730,7.132,5731,5.774]],["title/miscellaneous/functions.html",[5721,2.335,5732,4.542]],["body/miscellaneous/functions.html",[8,0.105,13,0.252,25,0.386,26,0.01,27,0.386,165,0.008,166,0.009,167,0.008,260,1.269,418,2.73,609,3.387,868,3.234,876,2.906,1088,4.935,4146,5.121,5687,6.983,5721,4.522,5726,6.983,5727,6.08,5732,6.08]],["title/index.html",[8,0.054,1558,3.14,5733,3.571]],["body/index.html",[4,0.069,13,0.2,26,0.009,60,0.459,80,3.308,81,1.397,165,0.007,166,0.009,167,0.008,200,1.769,201,1.429,227,3.477,263,1.081,272,2.021,410,2.55,428,3.055,789,2.429,1020,4.329,1104,5.295,1447,6.08,1559,5.295,1587,4.903,1856,5.821,1970,6.268,2164,3.91,2327,5.821,2691,5.064,2692,5.368,2807,3.729,2937,5.821,2994,6.809,3003,6.809,3020,5.295,3217,5.295,3986,5.735,5387,5.821,5734,6.618,5735,6.618,5736,8.206,5737,8.206,5738,6.618,5739,6.618,5740,6.618,5741,6.618,5742,6.618,5743,6.618,5744,6.618,5745,6.618,5746,6.618,5747,6.618,5748,6.618,5749,6.618,5750,6.618,5751,6.618,5752,6.618,5753,6.618,5754,8.206,5755,6.618]],["title/modules.html",[1569,4.701]],["body/modules.html",[26,0.009,165,0.008,166,0.009,167,0.008,1499,5.681,1568,5.26,1569,5.681,1592,4.644,1621,5.681,5756,7.101]],["title/overview.html",[5757,5.167]],["body/overview.html",[2,0.935,26,0.01,52,1.576,102,0.814,103,1.069,165,0.006,166,0.008,167,0.006,250,2.774,264,2.161,265,1.676,308,1.631,315,2.161,317,2.161,321,2.161,323,2.161,326,2.505,328,2.22,330,2.161,332,2.161,334,2.22,336,2.161,337,2.22,339,2.22,341,2.22,343,2.161,345,2.22,348,2.22,351,2.161,353,2.161,355,2.161,357,2.22,360,2.161,362,2.22,363,2.22,366,2.161,367,2.161,369,2.22,371,2.22,373,2.161,374,2.161,376,2.161,378,2.22,380,2.274,381,2.161,384,2.161,386,2.22,387,2.161,389,2.161,391,2.161,393,2.161,395,2.161,397,2.161,399,2.161,401,2.161,404,1.465,405,1.944,407,2.104,409,2.049,412,2.049,414,2.049,898,3.597,900,4.039,1196,3.703,1352,3.732,1567,5.434,1568,6.867,1570,3.312,1571,4.696,1572,4.696,1573,4.696,1574,4.696,1575,4.696,1576,4.696,1577,4.696,1578,4.696,1579,4.039,1580,4.039,1581,3.597,1582,3.879,1583,4.632,1584,5.179,1585,5.973,1586,4.696,1587,3.956,4475,4.696,5653,4.696,5757,4.696,5758,5.34,5759,5.34,5760,5.34]],["title/routes.html",[1597,4.701]],["body/routes.html",[26,0.009,165,0.008,166,0.009,167,0.008,1597,5.705]],["title/miscellaneous/variables.html",[5721,2.335,5761,4.542]],["body/miscellaneous/variables.html",[4,0.062,8,0.091,16,0.193,19,1.722,26,0.011,50,1.139,52,1.256,60,0.413,69,1.444,80,3.631,81,1.724,153,1.014,165,0.007,166,0.008,167,0.007,170,1.659,172,1.108,187,0.9,200,1.59,201,1.205,259,1.997,260,1.226,305,3.691,306,6.051,346,1.769,409,1.633,412,1.633,494,1.224,784,2.917,789,2.301,798,2.343,878,2.702,882,5.382,1035,4.761,1207,4.428,1588,4.761,1626,5.813,1765,6.275,1770,5.439,1771,4.865,1772,6.39,1773,6.39,1775,6.686,1776,6.817,1777,7.183,1778,6.898,1779,7.493,1780,4.761,1781,7.183,1782,5.233,1783,5.233,1784,4.408,1785,5.233,1786,5.233,1787,4.127,1788,5.233,1789,4.127,1790,4.761,1791,5.233,1792,4.761,1793,4.127,2483,5.813,3624,5.382,3894,4.761,3939,5.813,5632,6.39,5682,5.233,5691,5.233,5692,5.233,5693,5.233,5694,6.39,5721,3.892,5761,5.233,5762,5.95,5763,7.265,5764,5.95,5765,5.95,5766,5.95,5767,5.95,5768,5.95,5769,5.95]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"classes/API.html":{},"classes/APIDefinition.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"components/AboutComponent.html":{},"classes/Action.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"interfaces/ActionsComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"classes/BuildImage.html":{},"directives/BuildImageChooseDirective.html":{},"interfaces/BuildParams.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"directives/CancelCdkDrag.html":{},"classes/CommitInfo.html":{},"injectables/ContainerTemplates.html":{},"classes/DependencyWrapper.html":{},"classes/Deployment.html":{},"components/DeploymentDetailsComponent.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/DockerContainer.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"components/HomeComponent.html":{},"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/K8sPod.html":{},"injectables/K8sService.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"components/MicroServiceInstallerComponent.html":{},"injectables/Ng2Uploader.html":{},"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{},"injectables/PackagesService.html":{},"classes/Payload.html":{},"components/PodsListComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"interfaces/PropertiesChangedOwner.html":{},"classes/RepoSettings.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"directives/RuntimeActionsDirective.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"components/ServicePropertiesComponent.html":{},"injectables/Settings.html":{},"components/SimpleNameComponent.html":{},"classes/Source.html":{},"classes/SourceWrapper.html":{},"classes/Sources.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{},"classes/TestCase.html":{},"components/TestCaseComponent.html":{},"injectables/TestConfigService.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"classes/TestSuite.html":{},"injectables/TestTraceService.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"classes/UploadedFile.html":{},"classes/Values.html":{},"classes/WebSocketService.html":{},"classes/WmPackageInfo.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":102,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Action.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"interfaces/BuildParams.html":{},"classes/CommitInfo.html":{},"injectables/ContainerTemplates.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"components/EditContainerComponent.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"components/HomeComponent.html":{},"classes/K8sDeployment.html":{},"injectables/K8sService.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"injectables/Ng2Uploader.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RepoSettings.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"components/RuntimeK8sComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"components/ServicePropertiesComponent.html":{},"injectables/Settings.html":{},"classes/SourceWrapper.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{},"components/TestCaseComponent.html":{},"injectables/TestTraceService.html":{},"classes/UploadedFile.html":{},"classes/Values.html":{},"classes/WebSocketService.html":{},"coverage.html":{},"overview.html":{}}}],["0.0",{"_index":5040,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["0.1",{"_index":295,"title":{},"body":{"components/AboutComponent.html":{}}}],["0.2",{"_index":5041,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["0.25",{"_index":1997,"title":{},"body":{"components/BuildComponent.html":{},"components/TestCaseComponent.html":{}}}],["0.3",{"_index":3022,"title":{},"body":{"components/HomeComponent.html":{},"components/TestHistoryComponent.html":{}}}],["0.3.0",{"_index":5701,"title":{},"body":{"dependencies.html":{}}}],["0.8.29",{"_index":5720,"title":{},"body":{"dependencies.html":{}}}],["0.96",{"_index":3029,"title":{},"body":{"components/HomeComponent.html":{}}}],["0/1",{"_index":5633,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":5670,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":5664,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":5684,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":5645,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":5651,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":5655,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":5659,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":5662,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":5688,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":5690,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":5658,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":5656,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":5669,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":5657,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":5663,"title":{},"body":{"coverage.html":{}}}],["0/26",{"_index":5685,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":5638,"title":{},"body":{"coverage.html":{}}}],["0/29",{"_index":5635,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":5628,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":5668,"title":{},"body":{"coverage.html":{}}}],["0/31",{"_index":5630,"title":{},"body":{"coverage.html":{}}}],["0/32",{"_index":5683,"title":{},"body":{"coverage.html":{}}}],["0/34",{"_index":5637,"title":{},"body":{"coverage.html":{}}}],["0/39",{"_index":5650,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":5634,"title":{},"body":{"coverage.html":{}}}],["0/40",{"_index":5666,"title":{},"body":{"coverage.html":{}}}],["0/41",{"_index":5679,"title":{},"body":{"coverage.html":{}}}],["0/49",{"_index":5652,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":5640,"title":{},"body":{"coverage.html":{}}}],["0/50",{"_index":5680,"title":{},"body":{"coverage.html":{}}}],["0/51",{"_index":5673,"title":{},"body":{"coverage.html":{}}}],["0/55",{"_index":5677,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":5681,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":5660,"title":{},"body":{"coverage.html":{}}}],["0/70",{"_index":5647,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":5686,"title":{},"body":{"coverage.html":{}}}],["0/84",{"_index":5639,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":5661,"title":{},"body":{"coverage.html":{}}}],["0/94",{"_index":5642,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":5032,"title":{},"body":{"components/ServicePropertiesComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{}}}],["1",{"_index":103,"title":{"classes/Action-1.html":{}},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Action.html":{},"classes/Action-1.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildComponent.html":{},"interfaces/BuildParams.html":{},"classes/CommitInfo.html":{},"injectables/ContainerTemplates.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"components/HomeComponent.html":{},"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"components/MicroServiceInstallerComponent.html":{},"injectables/Ng2Uploader.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"components/RuntimeDetailsComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"components/ServicePropertiesComponent.html":{},"classes/Stage.html":{},"classes/Test.html":{},"components/TestCaseComponent.html":{},"classes/UploadedFile.html":{},"coverage.html":{},"overview.html":{}}}],["1.0.2",{"_index":5714,"title":{},"body":{"dependencies.html":{}}}],["1.10.0",{"_index":5718,"title":{},"body":{"dependencies.html":{}}}],["1.2.22",{"_index":5702,"title":{},"body":{"dependencies.html":{}}}],["1.3.0",{"_index":5713,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":2976,"title":{},"body":{"components/HomeComponent.html":{},"components/PodsListComponent.html":{}}}],["10.5",{"_index":2349,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["100",{"_index":296,"title":{},"body":{"components/AboutComponent.html":{},"components/BuildComponent.html":{},"components/HomeComponent.html":{},"injectables/Ng2Uploader.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/TestCaseComponent.html":{},"classes/UploadedFile.html":{}}}],["100px",{"_index":3014,"title":{},"body":{"components/HomeComponent.html":{}}}],["10px",{"_index":970,"title":{},"body":{"classes/Action-1.html":{},"components/BuildComponent.html":{},"components/HomeComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/TestCaseComponent.html":{}}}],["115",{"_index":1957,"title":{},"body":{"components/BuildComponent.html":{},"components/RuntimeK8sComponent.html":{}}}],["118,191",{"_index":3006,"title":{},"body":{"components/HomeComponent.html":{}}}],["11px",{"_index":1973,"title":{},"body":{"components/BuildComponent.html":{},"components/HomeComponent.html":{},"components/RuntimeK8sComponent.html":{}}}],["12",{"_index":5759,"title":{},"body":{"overview.html":{}}}],["1200",{"_index":953,"title":{},"body":{"classes/Action-1.html":{}}}],["12px",{"_index":3031,"title":{},"body":{"components/HomeComponent.html":{}}}],["145px",{"_index":5331,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["14px",{"_index":3015,"title":{},"body":{"components/HomeComponent.html":{}}}],["150px",{"_index":5330,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["18",{"_index":5262,"title":{},"body":{"classes/TestCase.html":{}}}],["18102",{"_index":1548,"title":{},"body":{"components/ApiPortalInstallerComponent.html":{}}}],["187",{"_index":1958,"title":{},"body":{"components/BuildComponent.html":{},"components/RuntimeK8sComponent.html":{}}}],["2",{"_index":1971,"title":{},"body":{"components/BuildComponent.html":{},"classes/RepoSettings.html":{},"components/RuntimeK8sComponent.html":{},"classes/ServiceInfo.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["2.0.8",{"_index":5708,"title":{},"body":{"dependencies.html":{}}}],["2.24.0",{"_index":5710,"title":{},"body":{"dependencies.html":{}}}],["2.5s",{"_index":1988,"title":{},"body":{"components/BuildComponent.html":{},"components/TestCaseComponent.html":{}}}],["2.6.9",{"_index":5705,"title":{},"body":{"dependencies.html":{}}}],["2/118",{"_index":5675,"title":{},"body":{"coverage.html":{}}}],["2/45",{"_index":5654,"title":{},"body":{"coverage.html":{}}}],["2/55",{"_index":5644,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":2965,"title":{},"body":{"components/HomeComponent.html":{}}}],["200",{"_index":5504,"title":{},"body":{"components/UploadButtonComponent.html":{},"classes/WebSocketService.html":{}}}],["2000",{"_index":4487,"title":{},"body":{"components/RuntimeScaleComponent.html":{}}}],["200px",{"_index":3007,"title":{},"body":{"components/HomeComponent.html":{},"components/TestCaseComponent.html":{}}}],["2018",{"_index":300,"title":{},"body":{"components/AboutComponent.html":{}}}],["20px",{"_index":3013,"title":{},"body":{"components/HomeComponent.html":{}}}],["210",{"_index":2968,"title":{},"body":{"components/HomeComponent.html":{}}}],["21px",{"_index":1975,"title":{},"body":{"components/BuildComponent.html":{},"components/RuntimeK8sComponent.html":{}}}],["2405",{"_index":1293,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["250px",{"_index":1968,"title":{},"body":{"components/BuildComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/TestCaseComponent.html":{}}}],["2px",{"_index":1945,"title":{},"body":{"components/BuildComponent.html":{},"components/RuntimeK8sComponent.html":{}}}],["3",{"_index":3688,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{},"coverage.html":{}}}],["3.4.1",{"_index":5709,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":4708,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["300px",{"_index":2607,"title":{},"body":{"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/StagingComponent.html":{}}}],["30px",{"_index":1964,"title":{},"body":{"components/BuildComponent.html":{},"components/HomeComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/TestHistoryComponent.html":{}}}],["360px",{"_index":2606,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["3px",{"_index":5321,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["4",{"_index":5653,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["4.7.0",{"_index":5707,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":1995,"title":{},"body":{"components/BuildComponent.html":{},"components/TestCaseComponent.html":{}}}],["400",{"_index":2949,"title":{},"body":{"components/HomeComponent.html":{}}}],["404",{"_index":2827,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["44",{"_index":5758,"title":{},"body":{"overview.html":{}}}],["45px",{"_index":1978,"title":{},"body":{"components/BuildComponent.html":{},"components/TestCaseComponent.html":{}}}],["4px",{"_index":5327,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["5",{"_index":4475,"title":{},"body":{"components/RuntimeScaleComponent.html":{},"overview.html":{}}}],["5.0.0",{"_index":5712,"title":{},"body":{"dependencies.html":{}}}],["5.1.47.jar",{"_index":3536,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["5.10.2",{"_index":5703,"title":{},"body":{"dependencies.html":{}}}],["5.7",{"_index":2346,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["50",{"_index":1986,"title":{},"body":{"components/BuildComponent.html":{},"components/TestCaseComponent.html":{}}}],["500",{"_index":2972,"title":{},"body":{"components/HomeComponent.html":{},"components/TestHistoryComponent.html":{},"classes/WebSocketService.html":{}}}],["5000",{"_index":1035,"title":{},"body":{"classes/Action-1.html":{},"components/PodsListComponent.html":{},"miscellaneous/variables.html":{}}}],["50px",{"_index":1955,"title":{},"body":{"components/BuildComponent.html":{},"components/RuntimeK8sComponent.html":{}}}],["52",{"_index":5760,"title":{},"body":{"overview.html":{}}}],["5555",{"_index":5377,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["5px",{"_index":968,"title":{},"body":{"classes/Action-1.html":{},"components/BuildComponent.html":{},"components/HomeComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeK8sComponent.html":{}}}],["6",{"_index":1041,"title":{},"body":{"classes/Action-1.html":{}}}],["6.5.3",{"_index":5715,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1998,"title":{},"body":{"components/BuildComponent.html":{},"components/TestCaseComponent.html":{}}}],["600",{"_index":2108,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["69659gpfo450o5fgo40",{"_index":3151,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["7.1.2",{"_index":5738,"title":{},"body":{"index.html":{}}}],["7.2.15",{"_index":5696,"title":{},"body":{"dependencies.html":{}}}],["7.3.7",{"_index":5698,"title":{},"body":{"dependencies.html":{}}}],["75px",{"_index":1977,"title":{},"body":{"components/BuildComponent.html":{},"components/HomeComponent.html":{},"components/TestCaseComponent.html":{}}}],["8",{"_index":4356,"title":{},"body":{"classes/Result.html":{}}}],["8.0.13.jar",{"_index":3537,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["80",{"_index":4530,"title":{},"body":{"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{}}}],["800px",{"_index":2948,"title":{},"body":{"components/HomeComponent.html":{}}}],["8443",{"_index":4452,"title":{},"body":{"components/RuntimeK8sComponent.html":{}}}],["9072",{"_index":1287,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["9073",{"_index":1290,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["9340",{"_index":1296,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["985485fgotfkgfksdpd43ga",{"_index":3140,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["9px",{"_index":5328,"title":{},"body":{"components/TestCaseComponent.html":{},"components/UploadButtonComponent.html":{}}}],["__allimages",{"_index":4165,"title":{},"body":{"classes/Result.html":{}}}],["__websocketservice",{"_index":5549,"title":{},"body":{"classes/WebSocketService.html":{}}}],["_allimages(refresh",{"_index":4317,"title":{},"body":{"classes/Result.html":{}}}],["_arg",{"_index":5550,"title":{},"body":{"classes/WebSocketService.html":{}}}],["_baseimages",{"_index":4166,"title":{},"body":{"classes/Result.html":{}}}],["_cache",{"_index":3046,"title":{},"body":{"classes/K8sDeployment.html":{},"injectables/K8sService.html":{}}}],["_cachevalues",{"_index":5097,"title":{},"body":{"injectables/Settings.html":{}}}],["_cachevalues(data",{"_index":4068,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["_commitinfo",{"_index":2216,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["_configservice",{"_index":2315,"title":{},"body":{"injectables/ContainerTemplates.html":{},"components/SagImageAlerterComponent.html":{},"classes/ServiceInfo.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{}}}],["_configuredgitrepos",{"_index":2737,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["_contenttype",{"_index":3847,"title":{},"body":{"classes/Payload.html":{}}}],["_currentextra",{"_index":2892,"title":{},"body":{"components/HomeComponent.html":{}}}],["_custombuildercomponent",{"_index":4617,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["_customimages",{"_index":4168,"title":{},"body":{"classes/Result.html":{}}}],["_data",{"_index":2710,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["_datasource",{"_index":3426,"title":{},"body":{"classes/LivePods.html":{},"classes/LivePodsCount.html":{}}}],["_deploymentid",{"_index":3437,"title":{},"body":{"classes/LivePods.html":{},"classes/LivePodsCount.html":{}}}],["_dialog",{"_index":2583,"title":{},"body":{"components/EditContainerComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/ServiceInfo.html":{},"components/StagingComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{}}}],["_dialogref",{"_index":4493,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["_displayedcolumnsbase",{"_index":906,"title":{},"body":{"classes/Action-1.html":{},"components/PodsListComponent.html":{}}}],["_displayedcolumnsbasemin",{"_index":909,"title":{},"body":{"classes/Action-1.html":{}}}],["_displayedcolumnscustom",{"_index":910,"title":{},"body":{"classes/Action-1.html":{}}}],["_displayedcolumnscustommin",{"_index":913,"title":{},"body":{"classes/Action-1.html":{}}}],["_displayededitcustom",{"_index":914,"title":{},"body":{"classes/Action-1.html":{}}}],["_div",{"_index":5353,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["_dockeremail",{"_index":4171,"title":{},"body":{"classes/Result.html":{}}}],["_dockerhost",{"_index":4170,"title":{},"body":{"classes/Result.html":{},"injectables/TestTraceService.html":{}}}],["_dockerimageservice",{"_index":929,"title":{},"body":{"classes/Action-1.html":{}}}],["_dockerpassword",{"_index":4173,"title":{},"body":{"classes/Result.html":{}}}],["_dockerservice",{"_index":1914,"title":{},"body":{"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/ServiceInfo.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{}}}],["_dockeruserid",{"_index":4172,"title":{},"body":{"classes/Result.html":{}}}],["_emitter",{"_index":3625,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["_endpoint",{"_index":3848,"title":{},"body":{"classes/Payload.html":{}}}],["_fileforsource(buildcommands",{"_index":650,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["_filteralllist(type",{"_index":4345,"title":{},"body":{"classes/Result.html":{}}}],["_formbuilder",{"_index":1073,"title":{},"body":{"components/ActionComponent.html":{},"components/EditContainerComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/ServiceInfo.html":{},"components/ServicePropertiesComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UploadButtonComponent.html":{}}}],["_formbuilder.group",{"_index":4907,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["_formbuilder.group({selectedpackagectrl",{"_index":4903,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["_formbuilder.group({selectedservicectrl",{"_index":4905,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["_frame",{"_index":5354,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["_gatewaypwd",{"_index":88,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["_gatewayurl",{"_index":86,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["_gatewayuser",{"_index":87,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["_gitapiurl",{"_index":2219,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"classes/SourceWrapper.html":{}}}],["_gitispacpassword",{"_index":2223,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["_gitname",{"_index":2220,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["_gitpassword",{"_index":2222,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["_gitservice",{"_index":2740,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["_gittoken",{"_index":2739,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["_gittype",{"_index":2218,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["_gituser",{"_index":2221,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"classes/SourceWrapper.html":{}}}],["_groupimagesbyversion(dockerlist",{"_index":4327,"title":{},"body":{"classes/Result.html":{}}}],["_haschanges",{"_index":3427,"title":{},"body":{"classes/LivePods.html":{},"classes/LivePodsCount.html":{}}}],["_http",{"_index":91,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/CommitInfo.html":{},"classes/DependencyWrapper.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"injectables/K8sService.html":{},"injectables/PackagesService.html":{},"classes/RepoSettings.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"injectables/Settings.html":{},"classes/Sources.html":{},"injectables/TestConfigService.html":{},"injectables/TestTraceService.html":{},"classes/Values.html":{}}}],["_id",{"_index":4616,"title":{},"body":{"components/SagImageAlerterComponent.html":{},"classes/TestCase.html":{},"classes/TestSuite.html":{}}}],["_ignore",{"_index":2545,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["_ignorevaluechanges",{"_index":1047,"title":{},"body":{"components/ActionComponent.html":{},"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["_ignorevalueschange",{"_index":3489,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{},"components/SagImageAlerterComponent.html":{}}}],["_image",{"_index":4494,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["_image(name",{"_index":4315,"title":{},"body":{"classes/Result.html":{}}}],["_inboundrouter",{"_index":4618,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["_k8sservice",{"_index":3439,"title":{},"body":{"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{}}}],["_k8stoken",{"_index":3246,"title":{},"body":{"injectables/K8sService.html":{}}}],["_k8surl",{"_index":3247,"title":{},"body":{"injectables/K8sService.html":{}}}],["_keyedimages",{"_index":4169,"title":{},"body":{"classes/Result.html":{}}}],["_location",{"_index":2911,"title":{},"body":{"components/HomeComponent.html":{}}}],["_make",{"_index":3058,"title":{},"body":{"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{}}}],["_make(data",{"_index":3090,"title":{},"body":{"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{}}}],["_makecontainerfromdockerresponse(data",{"_index":4354,"title":{},"body":{"classes/Result.html":{}}}],["_makepackage",{"_index":3835,"title":{},"body":{"injectables/PackagesService.html":{}}}],["_makepackage(responsedata",{"_index":2444,"title":{},"body":{"classes/DependencyWrapper.html":{},"injectables/PackagesService.html":{},"classes/Sources.html":{}}}],["_mapcontainerresponse(filter",{"_index":4305,"title":{},"body":{"classes/Result.html":{}}}],["_mapimagesresponse(filter",{"_index":4350,"title":{},"body":{"classes/Result.html":{}}}],["_mappackagesresponse",{"_index":2861,"title":{},"body":{"injectables/GitSourceService.html":{}}}],["_mappackagesresponse(dir",{"_index":2274,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["_mappodsresponse",{"_index":3250,"title":{},"body":{"injectables/K8sService.html":{}}}],["_mappodsresponse(filter",{"_index":3258,"title":{},"body":{"injectables/K8sService.html":{}}}],["_mapreporesponse",{"_index":2862,"title":{},"body":{"injectables/GitSourceService.html":{}}}],["_mapreporesponse(url",{"_index":2291,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["_mapresponse",{"_index":251,"title":{},"body":{"injectables/APIGatewayService.html":{},"injectables/K8sService.html":{}}}],["_mapresponse(filter",{"_index":3261,"title":{},"body":{"injectables/K8sService.html":{}}}],["_mapresponse(responsedata",{"_index":132,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["_mapresponsenamespace",{"_index":3251,"title":{},"body":{"injectables/K8sService.html":{}}}],["_mapresponsenamespace(responsedata",{"_index":3263,"title":{},"body":{"injectables/K8sService.html":{}}}],["_matchconditions",{"_index":1867,"title":{},"body":{"classes/ArgDisplayType.html":{}}}],["_matchconditions(conditions",{"_index":541,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["_matdialog",{"_index":4502,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["_namespace",{"_index":3441,"title":{},"body":{"classes/LivePods.html":{},"classes/LivePodsCount.html":{}}}],["_ngxxml2jsonservice",{"_index":2224,"title":{},"body":{"classes/CommitInfo.html":{},"classes/DependencyWrapper.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"injectables/PackagesService.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/Sources.html":{}}}],["_observer",{"_index":3428,"title":{},"body":{"classes/LivePods.html":{},"classes/LivePodsCount.html":{}}}],["_origin",{"_index":3849,"title":{},"body":{"classes/Payload.html":{}}}],["_packagedetails",{"_index":2863,"title":{},"body":{"injectables/GitSourceService.html":{}}}],["_packagedetails(pckg",{"_index":2277,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["_packages",{"_index":2215,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["_packagesservice",{"_index":2741,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["_pleasestop",{"_index":3429,"title":{},"body":{"classes/LivePods.html":{},"classes/LivePodsCount.html":{}}}],["_podservice",{"_index":3907,"title":{},"body":{"components/PodsListComponent.html":{}}}],["_podssource",{"_index":3896,"title":{},"body":{"components/PodsListComponent.html":{}}}],["_queue",{"_index":3626,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["_refreshinterval",{"_index":3438,"title":{},"body":{"classes/LivePods.html":{},"classes/LivePodsCount.html":{}}}],["_refreshpods",{"_index":3431,"title":{},"body":{"classes/LivePods.html":{}}}],["_refreshpods(observer",{"_index":3446,"title":{},"body":{"classes/LivePods.html":{},"classes/LivePodsCount.html":{}}}],["_requesttemplate",{"_index":5222,"title":{},"body":{"classes/TestCase.html":{}}}],["_resources",{"_index":1354,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/ServiceInfo.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{}}}],["_responsetemplate",{"_index":5223,"title":{},"body":{"classes/TestCase.html":{}}}],["_restore",{"_index":4059,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["_route",{"_index":4391,"title":{},"body":{"components/RuntimeDetailsComponent.html":{}}}],["_router",{"_index":927,"title":{},"body":{"classes/Action-1.html":{},"components/BuildComponent.html":{},"components/HomeComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"classes/ServiceInfo.html":{},"components/ServicePropertiesComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{}}}],["_runsetsservice",{"_index":3502,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["_sagimages",{"_index":4167,"title":{},"body":{"classes/Result.html":{}}}],["_sanitizer",{"_index":4619,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["_save",{"_index":1062,"title":{},"body":{"components/ActionComponent.html":{},"components/EditContainerComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/StagingComponent.html":{}}}],["_scalepod(deployment",{"_index":3360,"title":{},"body":{"injectables/K8sService.html":{}}}],["_selectedversion",{"_index":926,"title":{},"body":{"classes/Action-1.html":{},"components/DockerImageVersionsComponent.html":{}}}],["_send",{"_index":5552,"title":{},"body":{"classes/WebSocketService.html":{}}}],["_send(message",{"_index":5564,"title":{},"body":{"classes/WebSocketService.html":{}}}],["_service",{"_index":3850,"title":{},"body":{"classes/Payload.html":{}}}],["_setctrlversion(value",{"_index":4787,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["_setmodel(packages",{"_index":2835,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["_settings",{"_index":90,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"components/BuildComponent.html":{},"classes/CommitInfo.html":{},"classes/DependencyWrapper.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"components/HomeComponent.html":{},"injectables/K8sService.html":{},"injectables/PackagesService.html":{},"components/PodsListComponent.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/ServiceInfo.html":{},"components/ServicePropertiesComponent.html":{},"classes/SourceWrapper.html":{},"classes/Sources.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"injectables/TestTraceService.html":{}}}],["_setupform",{"_index":1063,"title":{},"body":{"components/ActionComponent.html":{},"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["_showextrainfo",{"_index":2893,"title":{},"body":{"components/HomeComponent.html":{}}}],["_showextrainfo(name",{"_index":2912,"title":{},"body":{"components/HomeComponent.html":{}}}],["_sidenavmenusetup",{"_index":5632,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["_sidenavmenusetup.get(path",{"_index":1849,"title":{},"body":{"modules/AppModule.html":{}}}],["_sidenavmenusetup.get(path).children",{"_index":1839,"title":{},"body":{"modules/AppModule.html":{}}}],["_sidenavmenusetup.get(path).icon",{"_index":1844,"title":{},"body":{"modules/AppModule.html":{}}}],["_sidenavmenusetup.get(path).iconclass",{"_index":1847,"title":{},"body":{"modules/AppModule.html":{}}}],["_sidenavmenusetup.get(path).label",{"_index":1842,"title":{},"body":{"modules/AppModule.html":{}}}],["_sidenavmenusetup.get(r.path",{"_index":1833,"title":{},"body":{"modules/AppModule.html":{}}}],["_sidenavmenusetup.get(r.path).istop",{"_index":1834,"title":{},"body":{"modules/AppModule.html":{}}}],["_sidenavmenusetup:map",{"_index":1774,"title":{},"body":{"modules/AppModule.html":{}}}],["_snackbar",{"_index":928,"title":{},"body":{"classes/Action-1.html":{},"components/RuntimeScaleComponent.html":{}}}],["_source",{"_index":2738,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["_testconfig",{"_index":5274,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["_testconfig.packages().subscribe((p",{"_index":5291,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["_testsuiteconfig",{"_index":4888,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["_top",{"_index":1831,"title":{},"body":{"modules/AppModule.html":{}}}],["_values",{"_index":2217,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["_valuesloaded",{"_index":4043,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["_version(name",{"_index":952,"title":{},"body":{"classes/Action-1.html":{}}}],["_versions(uniquename",{"_index":4308,"title":{},"body":{"classes/Result.html":{}}}],["_ws",{"_index":5551,"title":{},"body":{"classes/WebSocketService.html":{}}}],["a.choices",{"_index":539,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["a.conditions",{"_index":538,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["a.description",{"_index":536,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["a.display",{"_index":530,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["a.endpoint",{"_index":239,"title":{},"body":{"classes/APIDefinition.html":{},"classes/ServiceInfo.html":{},"classes/WmPackageInfo.html":{}}}],["a.iscustom",{"_index":4347,"title":{},"body":{"classes/Result.html":{}}}],["a.issagimage",{"_index":4349,"title":{},"body":{"classes/Result.html":{}}}],["a.name",{"_index":237,"title":{},"body":{"classes/APIDefinition.html":{},"classes/Result.html":{},"classes/ServiceInfo.html":{},"classes/WmPackageInfo.html":{}}}],["a.name.tolowercase",{"_index":2299,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["a.required",{"_index":535,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["a.swaggerendpoint",{"_index":238,"title":{},"body":{"classes/APIDefinition.html":{},"classes/WmPackageInfo.html":{}}}],["a.swaggerendpoint.indexof(t.api",{"_index":4937,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["a.swaggerendpoint.indexof(value",{"_index":5312,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["a.target",{"_index":546,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["a1",{"_index":2298,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["a1>b1",{"_index":2302,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["a:hover",{"_index":1949,"title":{},"body":{"components/BuildComponent.html":{},"components/RuntimeK8sComponent.html":{}}}],["a:visited",{"_index":1948,"title":{},"body":{"components/BuildComponent.html":{},"components/RuntimeK8sComponent.html":{}}}],["abort",{"_index":3701,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["aboutcomponent",{"_index":264,"title":{"components/AboutComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["absolute",{"_index":1980,"title":{},"body":{"components/BuildComponent.html":{},"components/HomeComponent.html":{},"components/TestCaseComponent.html":{}}}],["abstractcontrol",{"_index":5488,"title":{},"body":{"components/UploadButtonComponent.html":{}}}],["accent",{"_index":2032,"title":{},"body":{"components/BuildExeComponent.html":{},"components/EditContainerComponent.html":{},"classes/ServiceInfo.html":{},"components/StagingComponent.html":{},"components/UploadButtonComponent.html":{}}}],["accepted",{"_index":4557,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["access",{"_index":3620,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["action",{"_index":417,"title":{"classes/Action.html":{},"classes/Action-1.html":{}},"body":{"classes/Action.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"components/EditContainerComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"components/RuntimeUpdateComponent.html":{},"classes/Server.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{},"coverage.html":{}}}],["action'},{'name",{"_index":316,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["action(\"update",{"_index":1044,"title":{},"body":{"classes/Action-1.html":{}}}],["action.image",{"_index":4526,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["action.image.version",{"_index":4531,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["action.make(data.onfail",{"_index":831,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["action.make(data.onstart",{"_index":825,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["action.make(data.onsuccess",{"_index":828,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["action.value",{"_index":1191,"title":{},"body":{"components/ActionComponent.html":{}}}],["actionchanged",{"_index":5186,"title":{},"body":{"components/StagingComponent.html":{}}}],["actionchanged(action",{"_index":2585,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["actioncomponent",{"_index":315,"title":{"components/ActionComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["actionimagectrl",{"_index":1048,"title":{},"body":{"components/ActionComponent.html":{}}}],["actions",{"_index":415,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"interfaces/ActionsComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"directives/RuntimeActionsDirective.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["actions.directive",{"_index":1634,"title":{},"body":{"modules/AppModule.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{}}}],["actions.directive.ts",{"_index":1198,"title":{},"body":{"interfaces/ActionsComponent.html":{},"directives/RuntimeActionsDirective.html":{},"coverage.html":{}}}],["actions.directive.ts:10",{"_index":4385,"title":{},"body":{"directives/RuntimeActionsDirective.html":{}}}],["actions.directive.ts:9",{"_index":4384,"title":{},"body":{"directives/RuntimeActionsDirective.html":{}}}],["actionscomponent",{"_index":1195,"title":{"interfaces/ActionsComponent.html":{}},"body":{"interfaces/ActionsComponent.html":{},"directives/RuntimeActionsDirective.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"coverage.html":{}}}],["activate",{"_index":1099,"title":{},"body":{"components/ActionComponent.html":{}}}],["activate/deactivate",{"_index":5213,"title":{},"body":{"components/StagingComponent.html":{}}}],["activatedroute",{"_index":4392,"title":{},"body":{"components/RuntimeDetailsComponent.html":{},"components/SagImageAlerterComponent.html":{}}}],["activationchanged",{"_index":5187,"title":{},"body":{"components/StagingComponent.html":{}}}],["activationchanged(obj",{"_index":2593,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["active",{"_index":419,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"injectables/ContainerTemplates.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["activectrl",{"_index":2546,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["activeonly",{"_index":95,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["actual_component",{"_index":416,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["adapter",{"_index":2343,"title":{},"body":{"injectables/ContainerTemplates.html":{},"components/MicroServiceInstallerComponent.html":{}}}],["add",{"_index":1425,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"classes/Result.html":{}}}],["added",{"_index":2183,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"miscellaneous/enumerations.html":{}}}],["addfilestoqueue",{"_index":3643,"title":{},"body":{"injectables/Ng2Uploader.html":{}}}],["addfilestoqueue(files",{"_index":3653,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["addmysqldriverctrl",{"_index":3490,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["addons",{"_index":3507,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["addscope",{"_index":4837,"title":{},"body":{"classes/SearchObj.html":{}}}],["addscope(attributename",{"_index":161,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["addtemplate(event",{"_index":4716,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["admin",{"_index":3617,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["adminpassword",{"_index":690,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["adminuser",{"_index":689,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["aeglr40ogf4f0330fgs30",{"_index":3387,"title":{},"body":{"injectables/K8sService.html":{}}}],["af",{"_index":726,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["ag",{"_index":2990,"title":{},"body":{"components/HomeComponent.html":{},"components/SagImageAlerterComponent.html":{}}}],["ag's",{"_index":4558,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["ag\\'s",{"_index":4834,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["agent.user.cfg",{"_index":1563,"title":{},"body":{"components/ApiPortalInstallerComponent.html":{}}}],["alert('file",{"_index":5505,"title":{},"body":{"components/UploadButtonComponent.html":{}}}],["alerter",{"_index":4551,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["alerter'},{'name",{"_index":383,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["alias",{"_index":143,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"components/UploadButtonComponent.html":{},"miscellaneous/enumerations.html":{}}}],["align",{"_index":964,"title":{},"body":{"classes/Action-1.html":{},"components/BuildComponent.html":{},"components/HomeComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/TestCaseComponent.html":{}}}],["alive",{"_index":1193,"title":{},"body":{"components/ActionComponent.html":{}}}],["allowall'click",{"_index":5386,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["allowall'note",{"_index":5393,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["allowedextensions",{"_index":3627,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["allows",{"_index":3612,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{},"components/TestHistoryComponent.html":{}}}],["already",{"_index":1426,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{},"components/MicroServiceInstallerComponent.html":{}}}],["alt",{"_index":3965,"title":{},"body":{"components/PodsListComponent.html":{}}}],["altdockerhost",{"_index":4363,"title":{},"body":{"classes/Result.html":{}}}],["alternative",{"_index":5215,"title":{},"body":{"components/StagingComponent.html":{}}}],["altlic",{"_index":1517,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["altlic.buildtarget",{"_index":1520,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["altlic.commandtype",{"_index":1519,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["altlic.description",{"_index":1522,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["altlic.filetype",{"_index":1521,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["altlic.source",{"_index":1525,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["altlic.target",{"_index":1523,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["always",{"_index":2362,"title":{},"body":{"injectables/ContainerTemplates.html":{},"components/ServicePropertiesComponent.html":{}}}],["angular",{"_index":5736,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":5028,"title":{},"body":{"components/ServicePropertiesComponent.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":5697,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/collections",{"_index":1120,"title":{},"body":{"components/ActionComponent.html":{},"components/EditContainerComponent.html":{},"classes/GitSelectionModel.html":{},"components/SagImageAlerterComponent.html":{},"classes/ServiceInfo.html":{},"components/ServicePropertiesComponent.html":{},"classes/SourceWrapper.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{}}}],["angular/cdk/drag",{"_index":1600,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/cdk/layout",{"_index":1122,"title":{},"body":{"components/ActionComponent.html":{},"components/BuildComponent.html":{},"components/EditContainerComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/ServiceInfo.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{}}}],["angular/cdk/scrolling",{"_index":1603,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/cdk/table",{"_index":1605,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/cdk/tree",{"_index":1607,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/common",{"_index":2933,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":46,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"modules/AppModule.html":{},"classes/CommitInfo.html":{},"classes/DependencyWrapper.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"injectables/K8sService.html":{},"injectables/PackagesService.html":{},"classes/RepoSettings.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"injectables/Settings.html":{},"classes/Sources.html":{},"injectables/TestConfigService.html":{},"injectables/TestTraceService.html":{},"classes/Values.html":{}}}],["angular/compiler",{"_index":5699,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":42,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"components/AboutComponent.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"interfaces/ActionsComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"directives/BuildImageChooseDirective.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"directives/CancelCdkDrag.html":{},"classes/CommitInfo.html":{},"injectables/ContainerTemplates.html":{},"classes/DependencyWrapper.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"components/HomeComponent.html":{},"injectables/K8sService.html":{},"components/MicroServiceInstallerComponent.html":{},"injectables/Ng2Uploader.html":{},"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{},"injectables/PackagesService.html":{},"components/PodsListComponent.html":{},"interfaces/PropertiesChangedOwner.html":{},"classes/RepoSettings.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"directives/RuntimeActionsDirective.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/ServiceInfo.html":{},"components/ServicePropertiesComponent.html":{},"injectables/Settings.html":{},"components/SimpleNameComponent.html":{},"classes/SourceWrapper.html":{},"classes/Sources.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"injectables/TestConfigService.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"injectables/TestTraceService.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"classes/UploadedFile.html":{},"classes/Values.html":{},"classes/WebSocketService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":1118,"title":{},"body":{"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"directives/BuildImageChooseDirective.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"components/EditContainerComponent.html":{},"classes/GitSelectionModel.html":{},"components/MicroServiceInstallerComponent.html":{},"interfaces/PropertiesChangedOwner.html":{},"components/SagImageAlerterComponent.html":{},"classes/ServiceInfo.html":{},"components/ServicePropertiesComponent.html":{},"classes/SourceWrapper.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":288,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"classes/GitSelectionModel.html":{},"components/HomeComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/ServiceInfo.html":{},"components/SimpleNameComponent.html":{},"classes/SourceWrapper.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"dependencies.html":{}}}],["angular/material/dialog",{"_index":2055,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["angular/material/snack",{"_index":894,"title":{},"body":{"classes/Action-1.html":{},"components/RuntimeScaleComponent.html":{}}}],["angular/material/table",{"_index":2719,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/ServiceInfo.html":{},"classes/SourceWrapper.html":{},"components/TestCaseComponent.html":{}}}],["angular/platform",{"_index":1591,"title":{},"body":{"modules/AppModule.html":{},"components/SagImageAlerterComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":892,"title":{},"body":{"classes/Action-1.html":{},"components/ActionComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/PodsListComponent.html":{},"classes/RepoSettings.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/ServiceInfo.html":{},"components/ServicePropertiesComponent.html":{},"injectables/Settings.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"classes/Values.html":{},"dependencies.html":{}}}],["animate",{"_index":5025,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["animate('225ms",{"_index":5037,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["animation",{"_index":1766,"title":{},"body":{"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/TestCaseComponent.html":{}}}],["animations",{"_index":5029,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["ap",{"_index":1512,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["api",{"_index":1,"title":{"classes/API.html":{}},"body":{"classes/API.html":{},"classes/APIDefinition.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"injectables/ContainerTemplates.html":{},"components/EditContainerComponent.html":{},"classes/GitSelectionModel.html":{},"classes/K8sDeploymentDefinition.html":{},"injectables/K8sService.html":{},"classes/RepoSettings.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"injectables/Settings.html":{},"classes/SourceWrapper.html":{},"components/StagingComponent.html":{},"classes/TestCase.html":{},"components/TestCaseComponent.html":{},"classes/Values.html":{},"classes/WmPackageInfo.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["api's",{"_index":785,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{}}}],["api(data.id",{"_index":64,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["api.endpoint",{"_index":193,"title":{},"body":{"classes/APIDefinition.html":{},"classes/WmPackageInfo.html":{}}}],["api.isactive",{"_index":67,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["api.name",{"_index":65,"title":{},"body":{"classes/API.html":{},"classes/APIDefinition.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"classes/WmPackageInfo.html":{}}}],["api.owner",{"_index":72,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["api.package",{"_index":188,"title":{},"body":{"classes/APIDefinition.html":{},"classes/WmPackageInfo.html":{}}}],["api.policies.push(apipolicy.make(data.policy",{"_index":75,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["api.swaggerendpoint",{"_index":191,"title":{},"body":{"classes/APIDefinition.html":{},"classes/WmPackageInfo.html":{}}}],["api.type",{"_index":70,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["api/v1/namespaces",{"_index":3314,"title":{},"body":{"injectables/K8sService.html":{}}}],["api/v1/namespaces/nmespce/pods",{"_index":3318,"title":{},"body":{"injectables/K8sService.html":{}}}],["api/v4/projects/repo/repository/files/path?ref=master&private_token=token",{"_index":2214,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["api/v4/projects/repo/repository/tree?path=path&private_token=token",{"_index":2212,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["api/v4/projects?owned=true&private_token=token",{"_index":2210,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["api\\'s",{"_index":5216,"title":{},"body":{"components/StagingComponent.html":{}}}],["apiactions",{"_index":1064,"title":{},"body":{"components/ActionComponent.html":{}}}],["apiactionsnegative",{"_index":1049,"title":{},"body":{"components/ActionComponent.html":{}}}],["apiactionspositive",{"_index":1050,"title":{},"body":{"components/ActionComponent.html":{}}}],["apiactivated",{"_index":2727,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["apictrl",{"_index":5267,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["apidefinition",{"_index":168,"title":{"classes/APIDefinition.html":{}},"body":{"classes/APIDefinition.html":{},"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"components/EditContainerComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"components/SagImageAlerterComponent.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"classes/WmPackageInfo.html":{},"coverage.html":{}}}],["apideployctrl",{"_index":1051,"title":{},"body":{"components/ActionComponent.html":{}}}],["apideploytype",{"_index":420,"title":{},"body":{"classes/Action.html":{}}}],["apidisplayedcolumns",{"_index":4604,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["apiforvalue",{"_index":5271,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["apiforvalue(value",{"_index":5280,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["apigatewayinstallercomponent",{"_index":317,"title":{"components/ApiGatewayInstallerComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["apigatewaypassword",{"_index":94,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["apigatewaypasswordctrl",{"_index":1337,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["apigatewayservice",{"_index":82,"title":{"injectables/APIGatewayService.html":{}},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"coverage.html":{}}}],["apigatewayservice.search",{"_index":98,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["apigatewayurl",{"_index":97,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["apigatewayurlctrl",{"_index":1338,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["apigatewayuser",{"_index":93,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["apigatewayuserctrl",{"_index":1339,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["apigw",{"_index":319,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"injectables/ContainerTemplates.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["apilist",{"_index":252,"title":{},"body":{"injectables/APIGatewayService.html":{}}}],["apilist(apigatewayurl",{"_index":92,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["apimaturity",{"_index":421,"title":{},"body":{"classes/Action.html":{}}}],["apimaturityctrl",{"_index":1052,"title":{},"body":{"components/ActionComponent.html":{}}}],["apimaturitylist",{"_index":1053,"title":{},"body":{"components/ActionComponent.html":{},"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["apimethod",{"_index":5224,"title":{},"body":{"classes/TestCase.html":{}}}],["apimg",{"_index":322,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"injectables/ContainerTemplates.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["apimicrogatewayinstallercomponent",{"_index":321,"title":{"components/ApiMicroGatewayInstallerComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["apiname",{"_index":105,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["apiparams",{"_index":5225,"title":{},"body":{"classes/TestCase.html":{}}}],["apipolicy",{"_index":32,"title":{"classes/APIPolicy.html":{}},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"coverage.html":{}}}],["apiportalinstallercomponent",{"_index":323,"title":{"components/ApiPortalInstallerComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["apipr",{"_index":324,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"injectables/ContainerTemplates.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["apiresource",{"_index":5226,"title":{},"body":{"classes/TestCase.html":{}}}],["apis",{"_index":195,"title":{},"body":{"classes/APIDefinition.html":{},"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"classes/Stage.html":{},"classes/Test.html":{},"components/TestCaseComponent.html":{},"classes/WmPackageInfo.html":{}}}],["apis.push(apidefinition",{"_index":197,"title":{},"body":{"classes/APIDefinition.html":{},"classes/WmPackageInfo.html":{}}}],["apis/apps/v1/namespaces/nmespce/deployments",{"_index":3313,"title":{},"body":{"injectables/K8sService.html":{}}}],["apis/apps/v1/namespaces/nmespce/deployments/namedeploy",{"_index":3316,"title":{},"body":{"injectables/K8sService.html":{}}}],["apis/apps/v1/namespaces/nmespce/deployments/namedeploy/scale",{"_index":3319,"title":{},"body":{"injectables/K8sService.html":{}}}],["apis/apps/v1/namespaces/nmespce/pods",{"_index":3317,"title":{},"body":{"injectables/K8sService.html":{}}}],["apis/extensions/v1beta1/namespaces/nmespce/deployments",{"_index":3315,"title":{},"body":{"injectables/K8sService.html":{}}}],["apistage",{"_index":422,"title":{},"body":{"classes/Action.html":{}}}],["apistagectrl",{"_index":1054,"title":{},"body":{"components/ActionComponent.html":{}}}],["apitype",{"_index":34,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"miscellaneous/enumerations.html":{}}}],["apiversion",{"_index":3293,"title":{},"body":{"injectables/K8sService.html":{}}}],["app",{"_index":272,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"injectables/K8sService.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"index.html":{}}}],["app'},{'name",{"_index":314,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["app.component",{"_index":1613,"title":{},"body":{"modules/AppModule.html":{}}}],["app=nameapp",{"_index":3308,"title":{},"body":{"injectables/K8sService.html":{}}}],["appcancelcdkdrag",{"_index":2141,"title":{},"body":{"directives/CancelCdkDrag.html":{}}}],["appcancelcdkdrag]'},{'name",{"_index":408,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["appcomponent",{"_index":326,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appcomponent.childrenforpathfunc",{"_index":1848,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent.iconclassforpathfunc",{"_index":1846,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent.iconforpathfunc",{"_index":1843,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent.labelforpathfunc",{"_index":1841,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent.linksfunc",{"_index":1837,"title":{},"body":{"modules/AppModule.html":{}}}],["append('accept",{"_index":115,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"injectables/K8sService.html":{},"classes/RepoSettings.html":{},"classes/Result.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"injectables/Settings.html":{},"injectables/TestTraceService.html":{},"classes/Values.html":{}}}],["append('authorization",{"_index":3326,"title":{},"body":{"injectables/K8sService.html":{}}}],["append('cache",{"_index":116,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"injectables/K8sService.html":{},"classes/RepoSettings.html":{},"classes/Result.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"injectables/Settings.html":{},"injectables/TestTraceService.html":{},"classes/Values.html":{}}}],["append('content",{"_index":113,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"injectables/K8sService.html":{},"classes/RepoSettings.html":{},"classes/Result.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"injectables/Settings.html":{},"injectables/TestTraceService.html":{},"classes/Values.html":{}}}],["append('dockerhost",{"_index":4362,"title":{},"body":{"classes/Result.html":{},"injectables/TestTraceService.html":{}}}],["append('expires",{"_index":121,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"injectables/K8sService.html":{},"classes/RepoSettings.html":{},"classes/Result.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"injectables/Settings.html":{},"injectables/TestTraceService.html":{},"classes/Values.html":{}}}],["append('pragma','no",{"_index":120,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"injectables/K8sService.html":{},"classes/RepoSettings.html":{},"classes/Result.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"injectables/Settings.html":{},"injectables/TestTraceService.html":{},"classes/Values.html":{}}}],["appid",{"_index":3430,"title":{},"body":{"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"components/PodsListComponent.html":{}}}],["application",{"_index":142,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"components/EditContainerComponent.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"components/StagingComponent.html":{},"miscellaneous/enumerations.html":{}}}],["application/json",{"_index":114,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/CommitInfo.html":{},"classes/DependencyWrapper.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"injectables/K8sService.html":{},"injectables/PackagesService.html":{},"classes/RepoSettings.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"injectables/Settings.html":{},"classes/Sources.html":{},"injectables/TestConfigService.html":{},"injectables/TestTraceService.html":{},"classes/Values.html":{}}}],["application/strategic",{"_index":3344,"title":{},"body":{"injectables/K8sService.html":{}}}],["applytemplate",{"_index":2307,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["applytemplate(container",{"_index":2316,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["appmodule",{"_index":1568,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appname",{"_index":832,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["appnamectrl",{"_index":4999,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["apppage",{"_index":1850,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["archive",{"_index":1107,"title":{},"body":{"components/ActionComponent.html":{}}}],["archivewmimage",{"_index":2004,"title":{},"body":{"components/BuildExeComponent.html":{},"classes/Result.html":{}}}],["arg",{"_index":685,"title":{"classes/Arg.html":{}},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"injectables/ContainerTemplates.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RepoSettings.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"injectables/Settings.html":{},"classes/Stage.html":{},"classes/Test.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"classes/Values.html":{},"classes/WebSocketService.html":{},"coverage.html":{}}}],["arg(a.source",{"_index":545,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["arg.makearray(data.env",{"_index":765,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["arg.makearray(data.volumes",{"_index":768,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["argdisplaytype",{"_index":516,"title":{"classes/ArgDisplayType.html":{}},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{},"coverage.html":{}}}],["argdisplaytype(d.name",{"_index":529,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["argdisplaytype(this.name",{"_index":521,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["argdisplaytype._matchconditions(this.conditions",{"_index":502,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["args",{"_index":503,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["args.push(new",{"_index":544,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["array",{"_index":184,"title":{},"body":{"classes/APIDefinition.html":{},"classes/Arg.html":{},"classes/Port.html":{},"classes/WmPackageInfo.html":{}}}],["array.foreach((p",{"_index":196,"title":{},"body":{"classes/APIDefinition.html":{},"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{},"classes/WmPackageInfo.html":{}}}],["array.foreach((r",{"_index":245,"title":{},"body":{"classes/APIDefinition.html":{},"classes/WmPackageInfo.html":{}}}],["array.from(originalobject.entries",{"_index":874,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["arrow",{"_index":1845,"title":{},"body":{"modules/AppModule.html":{}}}],["artifacts",{"_index":5745,"title":{},"body":{"index.html":{}}}],["assets/_images/k8s",{"_index":1785,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["assigned",{"_index":5086,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["assignedlicense",{"_index":508,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["associated",{"_index":1532,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["atob(c",{"_index":2284,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["att",{"_index":2323,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["attacks",{"_index":5397,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["attention",{"_index":4552,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["attributename",{"_index":149,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["authentication",{"_index":1879,"title":{"classes/Authentication.html":{}},"body":{"classes/Authentication.html":{},"classes/Server.html":{},"coverage.html":{}}}],["author",{"_index":915,"title":{},"body":{"classes/Action-1.html":{}}}],["author\",'last",{"_index":911,"title":{},"body":{"classes/Action-1.html":{}}}],["authstring",{"_index":2303,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["authtoken",{"_index":3628,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["authtokenprefix",{"_index":3629,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["automate",{"_index":3001,"title":{},"body":{"components/HomeComponent.html":{}}}],["automatically",{"_index":1559,"title":{},"body":{"components/ApiPortalInstallerComponent.html":{},"components/SagImageAlerterComponent.html":{},"index.html":{}}}],["autoscaling/v1",{"_index":3294,"title":{},"body":{"injectables/K8sService.html":{}}}],["autoupload",{"_index":3630,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["available",{"_index":2700,"title":{},"body":{"components/EditContainerComponent.html":{},"classes/K8sPod.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"components/StagingComponent.html":{}}}],["availablereplicas",{"_index":3047,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["availabletotal",{"_index":3473,"title":{},"body":{"classes/LivePods.html":{},"classes/LivePodsCount.html":{}}}],["availableversions",{"_index":4709,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["awesome",{"_index":5706,"title":{},"body":{"dependencies.html":{}}}],["b",{"_index":621,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"components/SagImageAlerterComponent.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["b.buildcommands.push(buildcommand.make(f",{"_index":628,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["b.builduser",{"_index":634,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["b.deployments",{"_index":624,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["b.deployments.push(deploymentset.make(d",{"_index":627,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["b.deploymenttype",{"_index":623,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["b.entrypoint",{"_index":638,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["b.entryuser",{"_index":636,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["b.exitpoint",{"_index":639,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["b.hastests",{"_index":642,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["b.healthcheck",{"_index":640,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["b.name",{"_index":622,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["b.name.tolowercase",{"_index":2301,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["b.source",{"_index":498,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["b.sourceimage",{"_index":629,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["b.target",{"_index":499,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["b.targetimage",{"_index":631,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["b.teststatus",{"_index":633,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["b.version",{"_index":632,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["b1",{"_index":2300,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["b4",{"_index":725,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["b604b10s4030bee",{"_index":3394,"title":{},"body":{"injectables/K8sService.html":{}}}],["baa",{"_index":3398,"title":{},"body":{"injectables/K8sService.html":{}}}],["back",{"_index":2817,"title":{},"body":{"classes/GitSelectionModel.html":{},"components/HomeComponent.html":{},"components/RuntimeDetailsComponent.html":{},"classes/SourceWrapper.html":{}}}],["background",{"_index":1940,"title":{},"body":{"components/BuildComponent.html":{},"components/HomeComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{}}}],["bar",{"_index":895,"title":{},"body":{"classes/Action-1.html":{},"components/RuntimeScaleComponent.html":{}}}],["base",{"_index":935,"title":{},"body":{"classes/Action-1.html":{},"components/BuildComponent.html":{},"components/HomeComponent.html":{},"components/SagImageAlerterComponent.html":{}}}],["baseimagectrl",{"_index":4588,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["baseimageformgroup",{"_index":4581,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["baseimages",{"_index":4579,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["baseimages(refresh",{"_index":4207,"title":{},"body":{"classes/Result.html":{}}}],["baseimageselected(image",{"_index":4703,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["basesource",{"_index":1903,"title":{},"body":{"components/BuildComponent.html":{}}}],["basic",{"_index":123,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Action-1.html":{},"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["bearer",{"_index":3327,"title":{},"body":{"injectables/K8sService.html":{},"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["become",{"_index":5095,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["before",{"_index":792,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["below",{"_index":1435,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["beta",{"_index":77,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"components/ActionComponent.html":{},"components/EditContainerComponent.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"components/StagingComponent.html":{},"miscellaneous/enumerations.html":{}}}],["bette",{"_index":2810,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["bezier(0.4",{"_index":5039,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["bh",{"_index":2978,"title":{},"body":{"components/HomeComponent.html":{}}}],["black",{"_index":3399,"title":{},"body":{"injectables/K8sService.html":{},"components/PodsListComponent.html":{},"components/TestCaseComponent.html":{}}}],["blank",{"_index":5367,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["blob",{"_index":3795,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/Result.html":{},"classes/UploadedFile.html":{}}}],["block",{"_index":2961,"title":{},"body":{"components/HomeComponent.html":{},"components/TestCaseComponent.html":{}}}],["block\").offset().left",{"_index":2967,"title":{},"body":{"components/HomeComponent.html":{}}}],["blockextra",{"_index":3027,"title":{},"body":{"components/HomeComponent.html":{}}}],["blue",{"_index":978,"title":{},"body":{"classes/Action-1.html":{}}}],["body",{"_index":2432,"title":{},"body":{"classes/DependencyWrapper.html":{},"injectables/K8sService.html":{},"injectables/PackagesService.html":{},"classes/RepoSettings.html":{},"classes/Result.html":{},"injectables/Settings.html":{},"classes/Sources.html":{},"components/TestHistoryComponent.html":{},"classes/Values.html":{}}}],["bold",{"_index":3033,"title":{},"body":{"components/HomeComponent.html":{}}}],["bolder",{"_index":3037,"title":{},"body":{"components/HomeComponent.html":{}}}],["boolean",{"_index":29,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"directives/BuildImageChooseDirective.html":{},"interfaces/BuildParams.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"classes/CommitInfo.html":{},"classes/DependencyWrapper.html":{},"classes/Deployment.html":{},"components/DeploymentDetailsComponent.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/DockerContainer.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"components/HomeComponent.html":{},"classes/K8sDeployment.html":{},"injectables/K8sService.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"components/MicroServiceInstallerComponent.html":{},"injectables/Ng2Uploader.html":{},"injectables/PackagesService.html":{},"components/PodsListComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"interfaces/PropertiesChangedOwner.html":{},"classes/RepoSettings.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"injectables/Settings.html":{},"classes/SourceWrapper.html":{},"classes/Sources.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{},"classes/TestCase.html":{},"classes/TestSuite.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"classes/UploadedFile.html":{},"classes/Values.html":{},"classes/WebSocketService.html":{}}}],["bootstrap",{"_index":1572,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["border",{"_index":1942,"title":{},"body":{"components/BuildComponent.html":{},"components/HomeComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{}}}],["both",{"_index":2989,"title":{},"body":{"components/HomeComponent.html":{}}}],["bottom",{"_index":1946,"title":{},"body":{"components/BuildComponent.html":{},"components/HomeComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{}}}],["box",{"_index":1780,"title":{},"body":{"modules/AppModule.html":{},"components/TestCaseComponent.html":{},"miscellaneous/variables.html":{}}}],["brands",{"_index":1690,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["break",{"_index":1129,"title":{},"body":{"components/ActionComponent.html":{},"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["brown",{"_index":3390,"title":{},"body":{"injectables/K8sService.html":{}}}],["browse",{"_index":5756,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1592,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"components/HomeComponent.html":{},"components/SagImageAlerterComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get",{"_index":1857,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":1594,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":1593,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":1590,"title":{},"body":{"modules/AppModule.html":{}}}],["btoa(apigatewayuser",{"_index":124,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["btoa(this.authstring",{"_index":2247,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["bugger",{"_index":2824,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["build",{"_index":201,"title":{},"body":{"classes/APIDefinition.html":{},"components/AboutComponent.html":{},"classes/Action.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"components/DeploymentDetailsComponent.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"classes/GitSelectionModel.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/Server.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"classes/SourceWrapper.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"classes/WmPackageInfo.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["build'},{'name",{"_index":331,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["build(builder",{"_index":4265,"title":{},"body":{"classes/Result.html":{}}}],["buildbutton",{"_index":4613,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["buildcommand",{"_index":463,"title":{"classes/BuildCommand.html":{}},"body":{"classes/Action.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"components/MicroServiceInstallerComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"components/SagImageAlerterComponent.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{},"components/UMInstallerComponent.html":{},"coverage.html":{}}}],["buildcommand.make(this",{"_index":496,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["buildcommands",{"_index":513,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["buildcommandscomponent",{"_index":328,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["buildcomponent",{"_index":330,"title":{"components/BuildComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["buildctrl",{"_index":4587,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["builder",{"_index":610,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildExeComponent.html":{},"directives/BuildImageChooseDirective.html":{},"interfaces/BuildParams.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"interfaces/PropertiesChangedOwner.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"components/SagImageAlerterComponent.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"classes/Stage.html":{},"classes/Test.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"coverage.html":{}}}],["builder._fileforsource(this.buildcommands",{"_index":603,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["builder._removefilefortype(this.buildcommands",{"_index":606,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["builder.component",{"_index":1648,"title":{},"body":{"modules/AppModule.html":{},"components/SagImageAlerterComponent.html":{}}}],["builder.component.ts",{"_index":5667,"title":{},"body":{"coverage.html":{}}}],["builder.targetimage.copy",{"_index":4272,"title":{},"body":{"classes/Result.html":{}}}],["builder.targetimage.dedicatedrepository",{"_index":4267,"title":{},"body":{"classes/Result.html":{}}}],["builder.targetimage.id",{"_index":4269,"title":{},"body":{"classes/Result.html":{}}}],["builder.version",{"_index":4268,"title":{},"body":{"classes/Result.html":{}}}],["builder]'},{'name",{"_index":406,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["buildercomponent",{"_index":1206,"title":{"interfaces/BuilderComponent.html":{}},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"directives/BuildImageChooseDirective.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"components/MicroServiceInstallerComponent.html":{},"interfaces/PropertiesChangedOwner.html":{},"components/SagImageAlerterComponent.html":{},"components/UMInstallerComponent.html":{},"coverage.html":{}}}],["builderdisplayableentries",{"_index":4600,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["builderdisplayablekeys",{"_index":4791,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["builderdisplayablekeys.push(a.key",{"_index":4799,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["builderdisplayableproperties",{"_index":4601,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["builderformgroup",{"_index":4582,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["builderproperties",{"_index":1239,"title":{"classes/BuilderProperties.html":{}},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"directives/BuildImageChooseDirective.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"classes/GitSelectionModel.html":{},"components/MicroServiceInstallerComponent.html":{},"interfaces/PropertiesChangedOwner.html":{},"components/SagImageAlerterComponent.html":{},"classes/SourceWrapper.html":{},"components/UMInstallerComponent.html":{},"coverage.html":{}}}],["builderproperties(\"adapters",{"_index":3609,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["builderproperties(\"description",{"_index":2855,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["builderproperties(\"file",{"_index":3607,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["builderproperties(\"http",{"_index":1331,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{}}}],["builderproperties(\"https",{"_index":1332,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{}}}],["builderproperties(\"name",{"_index":2851,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{},"components/UMInstallerComponent.html":{}}}],["builderproperties(\"type",{"_index":2852,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["builderproperties(\"version",{"_index":2853,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["buildexecomponent",{"_index":332,"title":{"components/BuildExeComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["buildextra",{"_index":3038,"title":{},"body":{"components/HomeComponent.html":{}}}],["buildextra').css({left",{"_index":2966,"title":{},"body":{"components/HomeComponent.html":{}}}],["buildimage",{"_index":2111,"title":{"classes/BuildImage.html":{}},"body":{"classes/BuildImage.html":{},"coverage.html":{}}}],["buildimagechoosedirective",{"_index":405,"title":{"directives/BuildImageChooseDirective.html":{}},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"directives/BuildImageChooseDirective.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"interfaces/PropertiesChangedOwner.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["buildimagecomponent",{"_index":334,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["building",{"_index":2102,"title":{},"body":{"components/BuildExeComponent.html":{},"components/SagImageAlerterComponent.html":{}}}],["buildinstallcomponent",{"_index":336,"title":{},"body":{"components/AboutComponent.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["buildnamectrl",{"_index":4595,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["buildonstart",{"_index":801,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["buildpackagescomponent",{"_index":337,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["buildparams",{"_index":505,"title":{"interfaces/BuildParams.html":{}},"body":{"classes/Action.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{},"components/UMInstallerComponent.html":{},"coverage.html":{}}}],["builds",{"_index":4367,"title":{},"body":{"classes/RunSet.html":{},"components/SagImageAlerterComponent.html":{}}}],["buildservicectrl",{"_index":2581,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["buildtarget",{"_index":465,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["buildtemplatename",{"_index":4599,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["buildupdatespec",{"_index":3252,"title":{},"body":{"injectables/K8sService.html":{}}}],["buildupdatespec(deployment",{"_index":3265,"title":{},"body":{"injectables/K8sService.html":{}}}],["builduser",{"_index":615,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["builduserctrl",{"_index":4597,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["busy",{"_index":1023,"title":{},"body":{"classes/Action-1.html":{}}}],["busy.dismiss",{"_index":1027,"title":{},"body":{"classes/Action-1.html":{}}}],["button",{"_index":403,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["button.component",{"_index":1658,"title":{},"body":{"modules/AppModule.html":{}}}],["button.component.ts",{"_index":5468,"title":{},"body":{"components/UploadButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:22",{"_index":5480,"title":{},"body":{"components/UploadButtonComponent.html":{}}}],["button.component.ts:25",{"_index":5474,"title":{},"body":{"components/UploadButtonComponent.html":{}}}],["button.component.ts:28",{"_index":5476,"title":{},"body":{"components/UploadButtonComponent.html":{}}}],["button.component.ts:31",{"_index":5479,"title":{},"body":{"components/UploadButtonComponent.html":{}}}],["button.component.ts:34",{"_index":5477,"title":{},"body":{"components/UploadButtonComponent.html":{}}}],["button.component.ts:37",{"_index":5478,"title":{},"body":{"components/UploadButtonComponent.html":{}}}],["button.component.ts:40",{"_index":5475,"title":{},"body":{"components/UploadButtonComponent.html":{}}}],["button.component.ts:43",{"_index":5481,"title":{},"body":{"components/UploadButtonComponent.html":{}}}],["button.component.ts:45",{"_index":5487,"title":{},"body":{"components/UploadButtonComponent.html":{}}}],["button.component.ts:47",{"_index":5485,"title":{},"body":{"components/UploadButtonComponent.html":{}}}],["button.component.ts:48",{"_index":5473,"title":{},"body":{"components/UploadButtonComponent.html":{}}}],["button.component.ts:54",{"_index":5482,"title":{},"body":{"components/UploadButtonComponent.html":{}}}],["button.component.ts:85",{"_index":5484,"title":{},"body":{"components/UploadButtonComponent.html":{}}}],["buttonclass",{"_index":2005,"title":{},"body":{"components/BuildExeComponent.html":{},"components/UploadButtonComponent.html":{}}}],["c",{"_index":739,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/CommitInfo.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"components/PodsListComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["c.active",{"_index":744,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["c.adminpassword",{"_index":755,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["c.adminuser",{"_index":753,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["c.altname",{"_index":3419,"title":{},"body":{"injectables/K8sService.html":{}}}],["c.build",{"_index":758,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["c.committer",{"_index":2194,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["c.count",{"_index":2193,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["c.date",{"_index":2196,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["c.description",{"_index":746,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["c.env",{"_index":764,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["c.files.push(new",{"_index":2202,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["c.getnextversion(versiontype.minor",{"_index":3422,"title":{},"body":{"injectables/K8sService.html":{}}}],["c.hostname",{"_index":747,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["c.id",{"_index":812,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["c.image",{"_index":750,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/K8sPod.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["c.livenessprobe",{"_index":773,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["c.message",{"_index":2198,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["c.name",{"_index":742,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/K8sPod.html":{},"injectables/K8sService.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"components/RuntimeUpdateComponent.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["c.names",{"_index":740,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["c.ports",{"_index":761,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["c.ports.foreach((p",{"_index":3193,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["c.ports.push(new",{"_index":4359,"title":{},"body":{"classes/Result.html":{}}}],["c.readinessprobe",{"_index":770,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["c.ready",{"_index":3231,"title":{},"body":{"classes/K8sPod.html":{}}}],["c.repository",{"_index":3420,"title":{},"body":{"injectables/K8sService.html":{}}}],["c.secure",{"_index":748,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["c.setversion(c.getnextversion(versiontype.minor",{"_index":3352,"title":{},"body":{"injectables/K8sService.html":{}}}],["c.setversion(nextversion",{"_index":4540,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["c.sha",{"_index":2191,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["c.state",{"_index":3233,"title":{},"body":{"classes/K8sPod.html":{},"classes/Result.html":{}}}],["c.state.running",{"_index":3234,"title":{},"body":{"classes/K8sPod.html":{}}}],["c.state.starting",{"_index":3241,"title":{},"body":{"classes/K8sPod.html":{}}}],["c.state.terminated",{"_index":3239,"title":{},"body":{"classes/K8sPod.html":{}}}],["c.state.terminating",{"_index":3237,"title":{},"body":{"classes/K8sPod.html":{}}}],["c.status",{"_index":3220,"title":{},"body":{"classes/K8sPod.html":{},"components/PodsListComponent.html":{},"classes/Result.html":{}}}],["c.teststatus",{"_index":4541,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["c.type",{"_index":752,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/K8sPod.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["c.version",{"_index":4524,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["c.volumes",{"_index":767,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["cache",{"_index":118,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"components/ApiGatewayInstallerComponent.html":{},"injectables/K8sService.html":{},"classes/RepoSettings.html":{},"classes/Result.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"injectables/Settings.html":{},"injectables/TestTraceService.html":{},"classes/Values.html":{}}}],["cache.buildtarget",{"_index":1309,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["cache.commandtype",{"_index":1308,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["cache.filetype",{"_index":1310,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["cache.target",{"_index":1311,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["called",{"_index":135,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"injectables/K8sService.html":{},"classes/Result.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["cancel",{"_index":5122,"title":{},"body":{"components/SimpleNameComponent.html":{}}}],["cancelcdkdrag",{"_index":407,"title":{"directives/CancelCdkDrag.html":{}},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"directives/CancelCdkDrag.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["card",{"_index":5317,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["case",{"_index":4859,"title":{},"body":{"classes/ServiceInfo.html":{},"components/TestCaseComponent.html":{},"injectables/TestConfigService.html":{},"classes/TestSuite.html":{}}}],["case'},{'name",{"_index":392,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["case.component",{"_index":1676,"title":{},"body":{"modules/AppModule.html":{}}}],["case.component.ts",{"_index":5264,"title":{},"body":{"components/TestCaseComponent.html":{},"coverage.html":{}}}],["case.component.ts:103",{"_index":5285,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["case.component.ts:116",{"_index":5281,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["case.component.ts:39",{"_index":5277,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["case.component.ts:42",{"_index":5278,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["case.component.ts:45",{"_index":5276,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["case.component.ts:48",{"_index":5279,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["case.component.ts:50",{"_index":5288,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["case.component.ts:51",{"_index":5290,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["case.component.ts:52",{"_index":5289,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["case.component.ts:53",{"_index":5287,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["case.component.ts:55",{"_index":5275,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["case.component.ts:64",{"_index":5283,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["case.component.ts:85",{"_index":5286,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["case.component.ts:94",{"_index":5282,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["case.css",{"_index":5265,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["case.html",{"_index":5266,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["case.ts",{"_index":5221,"title":{},"body":{"classes/TestCase.html":{},"coverage.html":{}}}],["case.ts:11",{"_index":5239,"title":{},"body":{"classes/TestCase.html":{}}}],["case.ts:12",{"_index":5236,"title":{},"body":{"classes/TestCase.html":{}}}],["case.ts:13",{"_index":5238,"title":{},"body":{"classes/TestCase.html":{}}}],["case.ts:14",{"_index":5237,"title":{},"body":{"classes/TestCase.html":{}}}],["case.ts:15",{"_index":5232,"title":{},"body":{"classes/TestCase.html":{}}}],["case.ts:16",{"_index":5233,"title":{},"body":{"classes/TestCase.html":{}}}],["case.ts:17",{"_index":5235,"title":{},"body":{"classes/TestCase.html":{}}}],["case.ts:18",{"_index":5234,"title":{},"body":{"classes/TestCase.html":{}}}],["case.ts:20",{"_index":5231,"title":{},"body":{"classes/TestCase.html":{}}}],["case.ts:21",{"_index":5229,"title":{},"body":{"classes/TestCase.html":{}}}],["case.ts:27",{"_index":5245,"title":{},"body":{"classes/TestCase.html":{}}}],["case.ts:38",{"_index":5246,"title":{},"body":{"classes/TestCase.html":{}}}],["case.ts:5",{"_index":5242,"title":{},"body":{"classes/TestCase.html":{}}}],["case.ts:7",{"_index":5240,"title":{},"body":{"classes/TestCase.html":{}}}],["case.ts:75",{"_index":5243,"title":{},"body":{"classes/TestCase.html":{}}}],["case.ts:9",{"_index":5230,"title":{},"body":{"classes/TestCase.html":{}}}],["cases",{"_index":1003,"title":{},"body":{"classes/Action-1.html":{},"components/HomeComponent.html":{},"classes/ServiceInfo.html":{},"classes/Test.html":{}}}],["catch(err",{"_index":5370,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["catcherror",{"_index":2174,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"injectables/K8sService.html":{},"classes/RepoSettings.html":{},"classes/Result.html":{},"injectables/Settings.html":{},"injectables/TestTraceService.html":{},"classes/Values.html":{}}}],["catcherror((error",{"_index":3357,"title":{},"body":{"injectables/K8sService.html":{},"classes/Result.html":{},"injectables/TestTraceService.html":{}}}],["catcherror(error",{"_index":4192,"title":{},"body":{"classes/Result.html":{}}}],["catcherror(this.handleerrorbool",{"_index":4297,"title":{},"body":{"classes/Result.html":{}}}],["cd",{"_index":1451,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["cdktablemodule",{"_index":1604,"title":{},"body":{"modules/AppModule.html":{}}}],["cdktreemodule",{"_index":1606,"title":{},"body":{"modules/AppModule.html":{}}}],["center",{"_index":965,"title":{},"body":{"classes/Action-1.html":{},"components/HomeComponent.html":{},"components/PodsListComponent.html":{}}}],["centos:latest",{"_index":559,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["centrasite",{"_index":2332,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["change",{"_index":1020,"title":{},"body":{"classes/Action-1.html":{},"components/ActionComponent.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"directives/NgFileSelect.html":{},"index.html":{}}}],["changed",{"_index":2185,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"miscellaneous/enumerations.html":{}}}],["changedetectorref",{"_index":283,"title":{},"body":{"components/AboutComponent.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"classes/GitSelectionModel.html":{},"components/HomeComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/ServiceInfo.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"classes/SourceWrapper.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["changes",{"_index":5392,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["check",{"_index":3217,"title":{},"body":{"classes/K8sPod.html":{},"components/TestHistoryComponent.html":{},"index.html":{}}}],["checkbox",{"_index":5389,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["checkdependenciesforpackages",{"_index":3836,"title":{},"body":{"injectables/PackagesService.html":{}}}],["checkdependenciesforpackages(packages",{"_index":2435,"title":{},"body":{"classes/DependencyWrapper.html":{},"injectables/PackagesService.html":{},"classes/Sources.html":{}}}],["checkifloaded",{"_index":5355,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["checkteststatus",{"_index":5432,"title":{},"body":{"injectables/TestTraceService.html":{}}}],["checkteststatus(runname",{"_index":5434,"title":{},"body":{"injectables/TestTraceService.html":{}}}],["children",{"_index":1781,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["chmod",{"_index":1474,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["choices",{"_index":517,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["choose.directive",{"_index":1241,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"classes/GitSelectionModel.html":{},"components/MicroServiceInstallerComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/SourceWrapper.html":{},"components/UMInstallerComponent.html":{}}}],["choose.directive.ts",{"_index":2119,"title":{},"body":{"directives/BuildImageChooseDirective.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"interfaces/PropertiesChangedOwner.html":{},"coverage.html":{}}}],["choose.directive.ts:10",{"_index":2121,"title":{},"body":{"directives/BuildImageChooseDirective.html":{}}}],["choose.directive.ts:11",{"_index":2122,"title":{},"body":{"directives/BuildImageChooseDirective.html":{}}}],["choose.directive.ts:14",{"_index":2138,"title":{},"body":{"classes/BuilderProperties.html":{}}}],["choose.directive.ts:16",{"_index":2139,"title":{},"body":{"classes/BuilderProperties.html":{}}}],["choose.directive.ts:23",{"_index":3994,"title":{},"body":{"interfaces/PropertiesChangedOwner.html":{}}}],["choose.directive.ts:24",{"_index":3995,"title":{},"body":{"interfaces/PropertiesChangedOwner.html":{}}}],["choose.directive.ts:26",{"_index":3996,"title":{},"body":{"interfaces/PropertiesChangedOwner.html":{}}}],["choose.directive.ts:34",{"_index":2136,"title":{},"body":{"interfaces/BuilderComponent.html":{}}}],["choose.directive.ts:35",{"_index":2135,"title":{},"body":{"interfaces/BuilderComponent.html":{}}}],["chooser'},{'name",{"_index":350,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["chooser.component",{"_index":1656,"title":{},"body":{"modules/AppModule.html":{}}}],["chooser.component.ts",{"_index":5649,"title":{},"body":{"coverage.html":{}}}],["class",{"_index":0,"title":{"classes/API.html":{},"classes/APIDefinition.html":{},"classes/APIPolicy.html":{},"classes/Action.html":{},"classes/Action-1.html":{},"classes/AppPage.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"classes/BuildImage.html":{},"classes/BuilderProperties.html":{},"classes/CommitInfo.html":{},"classes/DependencyWrapper.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/DockerContainer.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/K8sPod.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"classes/Payload.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RepoSettings.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"classes/Source.html":{},"classes/SourceWrapper.html":{},"classes/Sources.html":{},"classes/Stage.html":{},"classes/Test.html":{},"classes/TestCase.html":{},"classes/TestSuite.html":{},"classes/UploadedFile.html":{},"classes/Values.html":{},"classes/WebSocketService.html":{},"classes/WmPackageInfo.html":{}},"body":{"classes/API.html":{},"classes/APIDefinition.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"components/AboutComponent.html":{},"classes/Action.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"interfaces/ActionsComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"classes/BuildImage.html":{},"directives/BuildImageChooseDirective.html":{},"interfaces/BuildParams.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"directives/CancelCdkDrag.html":{},"classes/CommitInfo.html":{},"injectables/ContainerTemplates.html":{},"classes/DependencyWrapper.html":{},"classes/Deployment.html":{},"components/DeploymentDetailsComponent.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/DockerContainer.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"components/HomeComponent.html":{},"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/K8sPod.html":{},"injectables/K8sService.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"components/MicroServiceInstallerComponent.html":{},"injectables/Ng2Uploader.html":{},"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{},"injectables/PackagesService.html":{},"classes/Payload.html":{},"components/PodsListComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"interfaces/PropertiesChangedOwner.html":{},"classes/RepoSettings.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"directives/RuntimeActionsDirective.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"components/ServicePropertiesComponent.html":{},"injectables/Settings.html":{},"components/SimpleNameComponent.html":{},"classes/Source.html":{},"classes/SourceWrapper.html":{},"classes/Sources.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{},"classes/TestCase.html":{},"components/TestCaseComponent.html":{},"injectables/TestConfigService.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"classes/TestSuite.html":{},"injectables/TestTraceService.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"classes/UploadedFile.html":{},"classes/Values.html":{},"classes/WebSocketService.html":{},"classes/WmPackageInfo.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/API.html":{},"classes/APIDefinition.html":{},"classes/APIPolicy.html":{},"classes/Action.html":{},"classes/Action-1.html":{},"classes/AppPage.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"classes/BuildImage.html":{},"classes/BuilderProperties.html":{},"classes/CommitInfo.html":{},"classes/DependencyWrapper.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/DockerContainer.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/K8sPod.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"classes/Payload.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RepoSettings.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"classes/Source.html":{},"classes/SourceWrapper.html":{},"classes/Sources.html":{},"classes/Stage.html":{},"classes/Test.html":{},"classes/TestCase.html":{},"classes/TestSuite.html":{},"classes/UploadedFile.html":{},"classes/Values.html":{},"classes/WebSocketService.html":{},"classes/WmPackageInfo.html":{},"overview.html":{}}}],["classic",{"_index":3147,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["clear",{"_index":2781,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["clearqueue",{"_index":3644,"title":{},"body":{"injectables/Ng2Uploader.html":{}}}],["cli",{"_index":5737,"title":{},"body":{"index.html":{}}}],["click",{"_index":3618,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{},"components/StagingComponent.html":{},"components/TestHistoryComponent.html":{}}}],["clone",{"_index":2816,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["cloning",{"_index":2806,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["close",{"_index":307,"title":{},"body":{"components/AboutComponent.html":{},"components/BuildExeComponent.html":{},"components/DockerImageVersionsComponent.html":{},"classes/WebSocketService.html":{}}}],["close(event",{"_index":2021,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["closed",{"_index":5604,"title":{},"body":{"classes/WebSocketService.html":{}}}],["closedefault",{"_index":5553,"title":{},"body":{"classes/WebSocketService.html":{}}}],["closedialog",{"_index":2556,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["closelog",{"_index":4276,"title":{},"body":{"classes/Result.html":{}}}],["cloud",{"_index":3964,"title":{},"body":{"components/PodsListComponent.html":{}}}],["cluster_appmodule",{"_index":1575,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":1577,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":1576,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":1578,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cmd",{"_index":2487,"title":{},"body":{"classes/DockerBuild.html":{}}}],["code",{"_index":2327,"title":{},"body":{"injectables/ContainerTemplates.html":{},"index.html":{}}}],["cog",{"_index":1788,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["collapsed",{"_index":5036,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["color",{"_index":974,"title":{},"body":{"classes/Action-1.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/HomeComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/UploadButtonComponent.html":{}}}],["colorforcontainer",{"_index":5188,"title":{},"body":{"components/StagingComponent.html":{}}}],["colorforcontainer(container",{"_index":2598,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["colorforeditbutton(image",{"_index":1018,"title":{},"body":{"classes/Action-1.html":{}}}],["colorforendpoint(endpoint",{"_index":4968,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["colorfortest(image",{"_index":1006,"title":{},"body":{"classes/Action-1.html":{}}}],["colorfortestsuite(pckg",{"_index":4945,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["column",{"_index":1965,"title":{},"body":{"components/BuildComponent.html":{},"components/HomeComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/TestCaseComponent.html":{}}}],["columns",{"_index":920,"title":{},"body":{"classes/Action-1.html":{},"components/DockerImageVersionsComponent.html":{}}}],["combine",{"_index":2997,"title":{},"body":{"components/HomeComponent.html":{}}}],["commands'},{'name",{"_index":329,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["commands.component",{"_index":1667,"title":{},"body":{"modules/AppModule.html":{}}}],["commands.component.ts",{"_index":5636,"title":{},"body":{"coverage.html":{}}}],["commandsformgroup",{"_index":4584,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["commandsupdated(event",{"_index":4758,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["commandtype",{"_index":464,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["comments",{"_index":2006,"title":{},"body":{"components/BuildExeComponent.html":{},"components/DockerImageVersionsComponent.html":{},"classes/Result.html":{},"components/SagImageAlerterComponent.html":{}}}],["commentsctrl",{"_index":4594,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["commitformgroup",{"_index":4586,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["commitinfo",{"_index":2160,"title":{"classes/CommitInfo.html":{}},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"coverage.html":{}}}],["committer",{"_index":2163,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["commitupdate",{"_index":4497,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["communicate",{"_index":2699,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["communication",{"_index":2690,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["compat",{"_index":5716,"title":{},"body":{"dependencies.html":{}}}],["completed",{"_index":2092,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["completioncode",{"_index":2007,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["completionobserver",{"_index":5574,"title":{},"body":{"classes/WebSocketService.html":{}}}],["completionobserver.subscribe((info",{"_index":5610,"title":{},"body":{"classes/WebSocketService.html":{}}}],["component",{"_index":263,"title":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}},"body":{"components/AboutComponent.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"classes/GitSelectionModel.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/ServiceInfo.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"classes/SourceWrapper.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":313,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["componentfactory",{"_index":4428,"title":{},"body":{"components/RuntimeDetailsComponent.html":{}}}],["componentfactoryresolver",{"_index":4393,"title":{},"body":{"components/RuntimeDetailsComponent.html":{},"components/SagImageAlerterComponent.html":{}}}],["componentref",{"_index":4433,"title":{},"body":{"components/RuntimeDetailsComponent.html":{},"components/SagImageAlerterComponent.html":{}}}],["componentref.instance).selecteddeployment",{"_index":4435,"title":{},"body":{"components/RuntimeDetailsComponent.html":{}}}],["components",{"_index":265,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"overview.html":{}}}],["components/about.component",{"_index":1614,"title":{},"body":{"modules/AppModule.html":{}}}],["components/action.component",{"_index":1666,"title":{},"body":{"modules/AppModule.html":{}}}],["components/build",{"_index":1638,"title":{},"body":{"modules/AppModule.html":{}}}],["components/build.component",{"_index":1637,"title":{},"body":{"modules/AppModule.html":{}}}],["components/container.component",{"_index":1665,"title":{},"body":{"modules/AppModule.html":{}}}],["components/containers.component",{"_index":1664,"title":{},"body":{"modules/AppModule.html":{}}}],["components/elements/build",{"_index":1643,"title":{},"body":{"modules/AppModule.html":{}}}],["components/elements/docker",{"_index":1655,"title":{},"body":{"modules/AppModule.html":{}}}],["components/elements/git",{"_index":1644,"title":{},"body":{"modules/AppModule.html":{}}}],["components/elements/simple",{"_index":1659,"title":{},"body":{"modules/AppModule.html":{}}}],["components/elements/upload",{"_index":1657,"title":{},"body":{"modules/AppModule.html":{}}}],["components/home.component",{"_index":1632,"title":{},"body":{"modules/AppModule.html":{}}}],["components/k8s/deployment",{"_index":1669,"title":{},"body":{"modules/AppModule.html":{}}}],["components/k8s/pods",{"_index":1668,"title":{},"body":{"modules/AppModule.html":{}}}],["components/k8s/runtime",{"_index":1628,"title":{},"body":{"modules/AppModule.html":{}}}],["components/k8s/service",{"_index":1670,"title":{},"body":{"modules/AppModule.html":{}}}],["components/plugins/apigw",{"_index":1650,"title":{},"body":{"modules/AppModule.html":{}}}],["components/plugins/apimg",{"_index":1651,"title":{},"body":{"modules/AppModule.html":{}}}],["components/plugins/apipr",{"_index":1652,"title":{},"body":{"modules/AppModule.html":{}}}],["components/plugins/installer.component",{"_index":1686,"title":{},"body":{"modules/AppModule.html":{}}}],["components/plugins/micro",{"_index":1646,"title":{},"body":{"modules/AppModule.html":{}}}],["components/plugins/um",{"_index":1653,"title":{},"body":{"modules/AppModule.html":{}}}],["components/runtime",{"_index":1630,"title":{},"body":{"modules/AppModule.html":{}}}],["components/settings.component",{"_index":1654,"title":{},"body":{"modules/AppModule.html":{}}}],["components/staging.component",{"_index":1661,"title":{},"body":{"modules/AppModule.html":{}}}],["components/test",{"_index":1672,"title":{},"body":{"modules/AppModule.html":{}}}],["compose",{"_index":2992,"title":{},"body":{"components/HomeComponent.html":{}}}],["comprising",{"_index":2988,"title":{},"body":{"components/HomeComponent.html":{}}}],["condition",{"_index":147,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/K8sPod.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"miscellaneous/enumerations.html":{}}}],["condition.and",{"_index":101,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["conditions",{"_index":471,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"components/SagImageAlerterComponent.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["conditions.length",{"_index":542,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["config",{"_index":1553,"title":{},"body":{"components/ApiPortalInstallerComponent.html":{},"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["config.buildtarget",{"_index":1555,"title":{},"body":{"components/ApiPortalInstallerComponent.html":{}}}],["config.commandtype",{"_index":1554,"title":{},"body":{"components/ApiPortalInstallerComponent.html":{}}}],["config.description",{"_index":1557,"title":{},"body":{"components/ApiPortalInstallerComponent.html":{}}}],["config.filetype",{"_index":1556,"title":{},"body":{"components/ApiPortalInstallerComponent.html":{}}}],["config.service",{"_index":1684,"title":{},"body":{"modules/AppModule.html":{},"classes/ServiceInfo.html":{},"components/TestCaseComponent.html":{}}}],["config.service.ts",{"_index":5333,"title":{},"body":{"injectables/TestConfigService.html":{},"coverage.html":{}}}],["config.service.ts:16",{"_index":5336,"title":{},"body":{"injectables/TestConfigService.html":{}}}],["config.service.ts:21",{"_index":5338,"title":{},"body":{"injectables/TestConfigService.html":{}}}],["config.service.ts:45",{"_index":5340,"title":{},"body":{"injectables/TestConfigService.html":{}}}],["config.service.ts:69",{"_index":5339,"title":{},"body":{"injectables/TestConfigService.html":{}}}],["config.source",{"_index":1562,"title":{},"body":{"components/ApiPortalInstallerComponent.html":{}}}],["config.target",{"_index":1564,"title":{},"body":{"components/ApiPortalInstallerComponent.html":{}}}],["configuration",{"_index":3610,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{},"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["configurationservice",{"_index":1579,"title":{},"body":{"modules/AppModule.html":{},"injectables/ContainerTemplates.html":{},"components/MicroServiceInstallerComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/ServiceInfo.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"coverage.html":{},"overview.html":{}}}],["configure",{"_index":1467,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["configure'},{'name",{"_index":365,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["configure.buildtarget",{"_index":1469,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["configure.commandtype",{"_index":1468,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["configure.description",{"_index":1471,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["configure.filetype",{"_index":1470,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["configure.target",{"_index":1473,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["configurecontainerfor",{"_index":2308,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["configurecontainerfor(container",{"_index":2318,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["confirm",{"_index":4561,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["confirmed",{"_index":4985,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["confirmupdate",{"_index":4498,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["connector",{"_index":3534,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["console",{"_index":294,"title":{},"body":{"components/AboutComponent.html":{}}}],["console.log",{"_index":2439,"title":{},"body":{"classes/DependencyWrapper.html":{},"injectables/PackagesService.html":{},"classes/Sources.html":{},"components/TestHistoryComponent.html":{}}}],["console.log(\"body",{"_index":3348,"title":{},"body":{"injectables/K8sService.html":{}}}],["console.log(\"connecting",{"_index":5581,"title":{},"body":{"classes/WebSocketService.html":{}}}],["console.log(\"destroying",{"_index":3947,"title":{},"body":{"components/PodsListComponent.html":{}}}],["console.log(\"error",{"_index":3353,"title":{},"body":{"injectables/K8sService.html":{}}}],["console.log(\"flange",{"_index":3225,"title":{},"body":{"classes/K8sPod.html":{}}}],["console.log(\"getting",{"_index":4047,"title":{},"body":{"classes/RepoSettings.html":{},"classes/Result.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["console.log(\"gettings",{"_index":4361,"title":{},"body":{"classes/Result.html":{}}}],["console.log(\"git",{"_index":2812,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["console.log(\"good",{"_index":3377,"title":{},"body":{"injectables/K8sService.html":{}}}],["console.log(\"got",{"_index":3378,"title":{},"body":{"injectables/K8sService.html":{}}}],["console.log(\"initing",{"_index":3942,"title":{},"body":{"components/PodsListComponent.html":{}}}],["console.log(\"intercepted",{"_index":4301,"title":{},"body":{"classes/Result.html":{}}}],["console.log(\"left",{"_index":2608,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["console.log(\"loaded",{"_index":4118,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["console.log(\"on",{"_index":5364,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["console.log(\"operation",{"_index":3358,"title":{},"body":{"injectables/K8sService.html":{}}}],["console.log(\"path",{"_index":5368,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["console.log(\"payload",{"_index":3374,"title":{},"body":{"injectables/K8sService.html":{}}}],["console.log(\"querying",{"_index":2249,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["console.log(\"response",{"_index":4067,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["console.log(\"restoring",{"_index":4049,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["console.log(\"settings",{"_index":4178,"title":{},"body":{"classes/Result.html":{}}}],["console.log(\"setttings",{"_index":4624,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["console.log(\"stage",{"_index":2584,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["console.log(\"starting",{"_index":3948,"title":{},"body":{"components/PodsListComponent.html":{}}}],["console.log(\"ws",{"_index":4235,"title":{},"body":{"classes/Result.html":{},"classes/WebSocketService.html":{}}}],["console.log(`dialog",{"_index":2614,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["console.log(body",{"_index":4290,"title":{},"body":{"classes/Result.html":{}}}],["console.log(error.message",{"_index":4292,"title":{},"body":{"classes/Result.html":{}}}],["const",{"_index":869,"title":{},"body":{"classes/Action.html":{},"modules/AppModule.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/GitSelectionModel.html":{},"components/PodsListComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/SourceWrapper.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["constructor",{"_index":20,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"components/AboutComponent.html":{},"classes/Action.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"modules/AppModule.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"directives/BuildImageChooseDirective.html":{},"interfaces/BuildParams.html":{},"classes/BuilderProperties.html":{},"directives/CancelCdkDrag.html":{},"classes/CommitInfo.html":{},"injectables/ContainerTemplates.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/DockerContainer.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"components/HomeComponent.html":{},"classes/K8sDeploymentDefinition.html":{},"injectables/K8sService.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"components/MicroServiceInstallerComponent.html":{},"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{},"injectables/PackagesService.html":{},"classes/Payload.html":{},"components/PodsListComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RepoSettings.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"directives/RuntimeActionsDirective.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/SearchObj.html":{},"classes/Server.html":{},"components/ServicePropertiesComponent.html":{},"injectables/Settings.html":{},"components/SimpleNameComponent.html":{},"classes/Source.html":{},"classes/SourceWrapper.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{},"classes/TestCase.html":{},"components/TestCaseComponent.html":{},"injectables/TestConfigService.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"classes/TestSuite.html":{},"injectables/TestTraceService.html":{},"components/UploadButtonComponent.html":{},"classes/UploadedFile.html":{},"classes/WebSocketService.html":{},"classes/WmPackageInfo.html":{}}}],["constructor(@inject(mat_dialog_data",{"_index":2056,"title":{},"body":{"components/BuildExeComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/SimpleNameComponent.html":{}}}],["constructor(_configservice",{"_index":2313,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["constructor(_dockerservice",{"_index":4501,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["constructor(_formbuilder",{"_index":1070,"title":{},"body":{"components/ActionComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/UploadButtonComponent.html":{}}}],["constructor(_http",{"_index":5101,"title":{},"body":{"injectables/Settings.html":{},"injectables/TestConfigService.html":{},"injectables/TestTraceService.html":{}}}],["constructor(_location",{"_index":2908,"title":{},"body":{"components/HomeComponent.html":{}}}],["constructor(_namespace",{"_index":3436,"title":{},"body":{"classes/LivePods.html":{}}}],["constructor(_resources",{"_index":1351,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["constructor(_router",{"_index":1913,"title":{},"body":{"components/BuildComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{}}}],["constructor(_runsetsservice",{"_index":3501,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["constructor(_settings",{"_index":253,"title":{},"body":{"injectables/APIGatewayService.html":{},"injectables/GitSourceService.html":{},"injectables/K8sService.html":{},"injectables/PackagesService.html":{},"injectables/ResourceService.html":{},"components/RuntimeK8sComponent.html":{}}}],["constructor(_snackbar",{"_index":4466,"title":{},"body":{"components/RuntimeScaleComponent.html":{}}}],["constructor(action",{"_index":883,"title":{},"body":{"classes/Action-1.html":{}}}],["constructor(appid",{"_index":3484,"title":{},"body":{"classes/LivePodsCount.html":{}}}],["constructor(cmd",{"_index":2485,"title":{},"body":{"classes/DockerBuild.html":{}}}],["constructor(data",{"_index":2019,"title":{},"body":{"components/BuildExeComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/SimpleNameComponent.html":{}}}],["constructor(dialogref",{"_index":277,"title":{},"body":{"components/AboutComponent.html":{},"components/EditContainerComponent.html":{}}}],["constructor(el",{"_index":2144,"title":{},"body":{"directives/CancelCdkDrag.html":{},"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{}}}],["constructor(filename",{"_index":2701,"title":{},"body":{"classes/FileInfo.html":{}}}],["constructor(id",{"_index":21,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/GitRepo.html":{},"injectables/Ng2Uploader.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/UploadedFile.html":{}}}],["constructor(internal",{"_index":3975,"title":{},"body":{"classes/Port.html":{}}}],["constructor(key",{"_index":2137,"title":{},"body":{"classes/BuilderProperties.html":{}}}],["constructor(name",{"_index":207,"title":{},"body":{"classes/APIDefinition.html":{},"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RepoSettings.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{},"classes/WmPackageInfo.html":{}}}],["constructor(path",{"_index":5556,"title":{},"body":{"classes/WebSocketService.html":{}}}],["constructor(private",{"_index":89,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/BuildComponent.html":{},"classes/CommitInfo.html":{},"injectables/ContainerTemplates.html":{},"classes/DependencyWrapper.html":{},"components/EditContainerComponent.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"components/HomeComponent.html":{},"injectables/K8sService.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"components/MicroServiceInstallerComponent.html":{},"injectables/PackagesService.html":{},"components/PodsListComponent.html":{},"classes/RepoSettings.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/ServiceInfo.html":{},"components/ServicePropertiesComponent.html":{},"injectables/Settings.html":{},"classes/SourceWrapper.html":{},"classes/Sources.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"injectables/TestConfigService.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"injectables/TestTraceService.html":{},"components/UploadButtonComponent.html":{},"classes/Values.html":{}}}],["constructor(public",{"_index":289,"title":{},"body":{"components/AboutComponent.html":{},"classes/Action.html":{},"interfaces/ActionsComponent.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"directives/BuildImageChooseDirective.html":{},"interfaces/BuildParams.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"classes/CommitInfo.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"components/EditContainerComponent.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"components/HomeComponent.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"interfaces/PropertiesChangedOwner.html":{},"classes/RepoSettings.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"directives/RuntimeActionsDirective.html":{},"classes/Server.html":{},"injectables/Settings.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{},"classes/Values.html":{}}}],["constructor(router",{"_index":2516,"title":{},"body":{"components/DockerImageVersionsComponent.html":{}}}],["constructor(source",{"_index":1861,"title":{},"body":{"classes/Arg.html":{}}}],["constructor(success",{"_index":4149,"title":{},"body":{"classes/Result.html":{}}}],["constructor(types",{"_index":155,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["constructor(viewcontainerref",{"_index":2120,"title":{},"body":{"directives/BuildImageChooseDirective.html":{},"directives/RuntimeActionsDirective.html":{}}}],["container",{"_index":303,"title":{},"body":{"components/AboutComponent.html":{},"classes/Action.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"modules/AppModule.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"injectables/ContainerTemplates.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"components/EditContainerComponent.html":{},"classes/K8sPod.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RepoSettings.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"components/RuntimeDetailsComponent.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"injectables/Settings.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"classes/Values.html":{},"coverage.html":{}}}],["container'},{'name",{"_index":340,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["container.active",{"_index":2366,"title":{},"body":{"injectables/ContainerTemplates.html":{},"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["container.description",{"_index":2380,"title":{},"body":{"injectables/ContainerTemplates.html":{},"components/StagingComponent.html":{}}}],["container.env",{"_index":2391,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["container.env.length",{"_index":2374,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["container.env.splice(0",{"_index":2373,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["container.hostname",{"_index":2599,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["container.image",{"_index":2364,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["container.livenessprobe",{"_index":2385,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["container.make(this",{"_index":699,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["container.name",{"_index":2377,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["container.ports",{"_index":2389,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["container.ports.length",{"_index":2370,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["container.ports.splice(0",{"_index":2369,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["container.readinessprobe",{"_index":2387,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["container.teststatus",{"_index":4911,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["container.ts",{"_index":2494,"title":{},"body":{"classes/DockerContainer.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["container.ts:14",{"_index":2499,"title":{},"body":{"classes/DockerContainer.html":{}}}],["container.ts:16",{"_index":2500,"title":{},"body":{"classes/DockerContainer.html":{}}}],["container.ts:17",{"_index":2501,"title":{},"body":{"classes/DockerContainer.html":{}}}],["container.ts:18",{"_index":2503,"title":{},"body":{"classes/DockerContainer.html":{}}}],["container.ts:19",{"_index":2502,"title":{},"body":{"classes/DockerContainer.html":{}}}],["container.ts:21",{"_index":2497,"title":{},"body":{"classes/DockerContainer.html":{}}}],["container.ts:27",{"_index":2504,"title":{},"body":{"classes/DockerContainer.html":{}}}],["container.type",{"_index":2382,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["container.volumes",{"_index":2393,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["container.volumes.length",{"_index":2372,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["container.volumes.splice(0",{"_index":2371,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["containercomponent",{"_index":339,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["containerfortype",{"_index":2446,"title":{},"body":{"classes/Deployment.html":{}}}],["containerfortype(type",{"_index":856,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["containerhost",{"_index":799,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["containerid",{"_index":2008,"title":{},"body":{"components/BuildExeComponent.html":{},"classes/Result.html":{}}}],["containerindeploymentfor",{"_index":4368,"title":{},"body":{"classes/RunSet.html":{}}}],["containerindeploymentfor(id",{"_index":4378,"title":{},"body":{"classes/RunSet.html":{}}}],["containerlog(containerid",{"_index":4232,"title":{},"body":{"classes/Result.html":{}}}],["containername",{"_index":2009,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["containernamectrl",{"_index":2580,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["containers",{"_index":794,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"components/HomeComponent.html":{},"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/K8sPod.html":{},"components/PodsListComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"components/ServicePropertiesComponent.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{}}}],["containers'},{'name",{"_index":342,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["containers(filtervalue",{"_index":4229,"title":{},"body":{"classes/Result.html":{}}}],["containers.component",{"_index":1631,"title":{},"body":{"modules/AppModule.html":{}}}],["containers.component.ts",{"_index":5672,"title":{},"body":{"coverage.html":{}}}],["containers.push(this._makecontainerfromdockerresponse(c",{"_index":4307,"title":{},"body":{"classes/Result.html":{}}}],["containerscomponent",{"_index":341,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["containerstatus",{"_index":2498,"title":{},"body":{"classes/DockerContainer.html":{},"classes/K8sPod.html":{},"miscellaneous/enumerations.html":{}}}],["containerstatus.new",{"_index":3243,"title":{},"body":{"classes/K8sPod.html":{}}}],["containerstatus.running",{"_index":3236,"title":{},"body":{"classes/K8sPod.html":{}}}],["containerstatus.starting",{"_index":3242,"title":{},"body":{"classes/K8sPod.html":{}}}],["containerstatus.terminated",{"_index":3240,"title":{},"body":{"classes/K8sPod.html":{}}}],["containerstatus.terminating",{"_index":3238,"title":{},"body":{"classes/K8sPod.html":{}}}],["containersummary",{"_index":3898,"title":{},"body":{"components/PodsListComponent.html":{}}}],["containersummary(pod",{"_index":3913,"title":{},"body":{"components/PodsListComponent.html":{}}}],["containertemplates",{"_index":900,"title":{"injectables/ContainerTemplates.html":{}},"body":{"classes/Action-1.html":{},"modules/AppModule.html":{},"injectables/ContainerTemplates.html":{},"classes/ServiceInfo.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"coverage.html":{},"overview.html":{}}}],["containertemplates.imageref(image",{"_index":2365,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["containertemplates.productcodelabel(element.type",{"_index":943,"title":{},"body":{"classes/Action-1.html":{}}}],["content",{"_index":1959,"title":{},"body":{"components/BuildComponent.html":{},"components/HomeComponent.html":{},"injectables/K8sService.html":{},"components/RuntimeK8sComponent.html":{},"components/TestCaseComponent.html":{}}}],["content').height",{"_index":2982,"title":{},"body":{"components/HomeComponent.html":{}}}],["content').offset().top",{"_index":2981,"title":{},"body":{"components/HomeComponent.html":{}}}],["content['$setelementorder/containers",{"_index":3416,"title":{},"body":{"injectables/K8sService.html":{}}}],["content['$setelementorder/containers'].push({name",{"_index":3418,"title":{},"body":{"injectables/K8sService.html":{}}}],["content['containers",{"_index":3417,"title":{},"body":{"injectables/K8sService.html":{}}}],["content['containers'].push({image",{"_index":3421,"title":{},"body":{"injectables/K8sService.html":{}}}],["contenttype",{"_index":3851,"title":{},"body":{"classes/Payload.html":{},"injectables/ResourceService.html":{}}}],["context",{"_index":2483,"title":{},"body":{"classes/DockerBuild.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["continue",{"_index":1149,"title":{},"body":{"components/ActionComponent.html":{},"components/SimpleNameComponent.html":{}}}],["control",{"_index":117,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"injectables/K8sService.html":{},"classes/RepoSettings.html":{},"classes/Result.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"injectables/Settings.html":{},"injectables/TestTraceService.html":{},"classes/Values.html":{}}}],["control.service",{"_index":1680,"title":{},"body":{"modules/AppModule.html":{},"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["control.service.ts",{"_index":2162,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["control.service.ts:117",{"_index":2874,"title":{},"body":{"injectables/GitSourceService.html":{}}}],["control.service.ts:126",{"_index":2873,"title":{},"body":{"injectables/GitSourceService.html":{}}}],["control.service.ts:152",{"_index":2875,"title":{},"body":{"injectables/GitSourceService.html":{}}}],["control.service.ts:16",{"_index":2704,"title":{},"body":{"classes/GitRepo.html":{}}}],["control.service.ts:18",{"_index":2705,"title":{},"body":{"classes/GitRepo.html":{}}}],["control.service.ts:192",{"_index":2872,"title":{},"body":{"injectables/GitSourceService.html":{}}}],["control.service.ts:228",{"_index":2867,"title":{},"body":{"injectables/GitSourceService.html":{}}}],["control.service.ts:250",{"_index":2869,"title":{},"body":{"injectables/GitSourceService.html":{}}}],["control.service.ts:289",{"_index":2868,"title":{},"body":{"injectables/GitSourceService.html":{}}}],["control.service.ts:31",{"_index":2702,"title":{},"body":{"classes/FileInfo.html":{}}}],["control.service.ts:311",{"_index":2871,"title":{},"body":{"injectables/GitSourceService.html":{}}}],["control.service.ts:33",{"_index":2703,"title":{},"body":{"classes/FileInfo.html":{}}}],["control.service.ts:46",{"_index":2172,"title":{},"body":{"classes/CommitInfo.html":{}}}],["control.service.ts:47",{"_index":2167,"title":{},"body":{"classes/CommitInfo.html":{}}}],["control.service.ts:48",{"_index":2171,"title":{},"body":{"classes/CommitInfo.html":{}}}],["control.service.ts:49",{"_index":2168,"title":{},"body":{"classes/CommitInfo.html":{}}}],["control.service.ts:50",{"_index":2169,"title":{},"body":{"classes/CommitInfo.html":{}}}],["control.service.ts:52",{"_index":2166,"title":{},"body":{"classes/CommitInfo.html":{}}}],["control.service.ts:58",{"_index":2173,"title":{},"body":{"classes/CommitInfo.html":{}}}],["control.service.ts:81",{"_index":2885,"title":{},"body":{"injectables/GitSourceService.html":{}}}],["control.service.ts:82",{"_index":2884,"title":{},"body":{"injectables/GitSourceService.html":{}}}],["control.service.ts:84",{"_index":2888,"title":{},"body":{"injectables/GitSourceService.html":{}}}],["control.service.ts:85",{"_index":2886,"title":{},"body":{"injectables/GitSourceService.html":{}}}],["control.service.ts:86",{"_index":2887,"title":{},"body":{"injectables/GitSourceService.html":{}}}],["control.service.ts:88",{"_index":2882,"title":{},"body":{"injectables/GitSourceService.html":{}}}],["control.service.ts:89",{"_index":2876,"title":{},"body":{"injectables/GitSourceService.html":{}}}],["control.service.ts:91",{"_index":2883,"title":{},"body":{"injectables/GitSourceService.html":{}}}],["control.service.ts:92",{"_index":2880,"title":{},"body":{"injectables/GitSourceService.html":{}}}],["control.service.ts:93",{"_index":2877,"title":{},"body":{"injectables/GitSourceService.html":{}}}],["control.service.ts:94",{"_index":2878,"title":{},"body":{"injectables/GitSourceService.html":{}}}],["control.service.ts:95",{"_index":2881,"title":{},"body":{"injectables/GitSourceService.html":{}}}],["control.service.ts:96",{"_index":2879,"title":{},"body":{"injectables/GitSourceService.html":{}}}],["control.service.ts:97",{"_index":2866,"title":{},"body":{"injectables/GitSourceService.html":{}}}],["copy",{"_index":495,"title":{},"body":{"classes/Action.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["copy.choices",{"_index":526,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["copy.conditions",{"_index":525,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["copy.description",{"_index":522,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["copy.display",{"_index":523,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["copy.required",{"_index":527,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["core",{"_index":1622,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["cors",{"_index":3631,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["count",{"_index":1918,"title":{},"body":{"components/BuildComponent.html":{},"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"injectables/K8sService.html":{},"components/TestCaseComponent.html":{}}}],["coverage",{"_index":5624,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cow",{"_index":3391,"title":{},"body":{"injectables/K8sService.html":{}}}],["create",{"_index":1439,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{},"components/BuildComponent.html":{},"components/HomeComponent.html":{}}}],["create.buildtarget",{"_index":1441,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["create.commandtype",{"_index":1440,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["create.description",{"_index":1445,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["create.filetype",{"_index":1443,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["create.target",{"_index":1450,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["created",{"_index":693,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"components/PodsListComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["createinstance",{"_index":1453,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["creation",{"_index":304,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{}}}],["creationdate",{"_index":3051,"title":{},"body":{"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/K8sPod.html":{}}}],["creationtimestamp",{"_index":3303,"title":{},"body":{"injectables/K8sService.html":{}}}],["credentials",{"_index":2830,"title":{},"body":{"classes/GitSelectionModel.html":{},"components/SagImageAlerterComponent.html":{},"classes/SourceWrapper.html":{}}}],["cubic",{"_index":5038,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["cupweq",{"_index":4010,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["current",{"_index":2529,"title":{},"body":{"components/DockerImageVersionsComponent.html":{}}}],["currentapigatewaylicense",{"_index":1345,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["currentbaseimage",{"_index":4702,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["currentbuild",{"_index":4575,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["currentdeployment",{"_index":3048,"title":{},"body":{"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{}}}],["currentimage",{"_index":2495,"title":{},"body":{"classes/DockerContainer.html":{}}}],["currentinstaller",{"_index":3491,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["currentpod",{"_index":3198,"title":{},"body":{"classes/K8sPod.html":{}}}],["currentruntime",{"_index":4038,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["currenttargetversionexists",{"_index":4751,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["currenttestsuite",{"_index":4875,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["currenttestsuiteendpoints",{"_index":4876,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["currentversion",{"_index":919,"title":{},"body":{"classes/Action-1.html":{},"components/DockerImageVersionsComponent.html":{},"components/RuntimeUpdateComponent.html":{}}}],["cursor",{"_index":3008,"title":{},"body":{"components/HomeComponent.html":{}}}],["custom",{"_index":937,"title":{},"body":{"classes/Action-1.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"classes/Result.html":{},"miscellaneous/enumerations.html":{}}}],["custombuildercomponentref.instance",{"_index":4804,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["custombuildercomponentref.instance.formgroup",{"_index":4802,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["custombuildercomponentref.instance.owner",{"_index":4801,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["customheaders",{"_index":3632,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["customimagecount",{"_index":1909,"title":{},"body":{"components/BuildComponent.html":{}}}],["customimagecount(count",{"_index":1916,"title":{},"body":{"components/BuildComponent.html":{}}}],["customimagecounter",{"_index":1904,"title":{},"body":{"components/BuildComponent.html":{}}}],["customimages",{"_index":4580,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["customimages(refresh",{"_index":4220,"title":{},"body":{"classes/Result.html":{}}}],["customsource",{"_index":1905,"title":{},"body":{"components/BuildComponent.html":{}}}],["d",{"_index":652,"title":{},"body":{"classes/Action.html":{},"classes/Action-1.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/K8sDeployment.html":{},"classes/K8sPod.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"components/RuntimeDetailsComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["d.buildcommands.push(buildcommand.make(b",{"_index":651,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["d.buildtarget",{"_index":477,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["d.choices",{"_index":540,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["d.commandtype",{"_index":475,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["d.conditions",{"_index":487,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["d.containers.push(dc",{"_index":3244,"title":{},"body":{"classes/K8sPod.html":{}}}],["d.creationdate",{"_index":3211,"title":{},"body":{"classes/K8sPod.html":{}}}],["d.description",{"_index":485,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/K8sPod.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["d.display",{"_index":488,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["d.filetype",{"_index":479,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["d.foreach((i",{"_index":948,"title":{},"body":{"classes/Action-1.html":{},"components/SagImageAlerterComponent.html":{}}}],["d.id",{"_index":3210,"title":{},"body":{"classes/K8sPod.html":{}}}],["d.name",{"_index":537,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/K8sPod.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["d.repository().startswith(\"test",{"_index":4329,"title":{},"body":{"classes/Result.html":{}}}],["d.required",{"_index":534,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["d.source",{"_index":481,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["d.status",{"_index":3214,"title":{},"body":{"classes/K8sPod.html":{}}}],["d.target",{"_index":483,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["d.updatestatus(data.status.replicas",{"_index":3108,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["d1",{"_index":3385,"title":{},"body":{"injectables/K8sService.html":{}}}],["d1.description",{"_index":3389,"title":{},"body":{"injectables/K8sService.html":{}}}],["d1.id",{"_index":3386,"title":{},"body":{"injectables/K8sService.html":{}}}],["d1.name",{"_index":3388,"title":{},"body":{"injectables/K8sService.html":{}}}],["d2",{"_index":3392,"title":{},"body":{"injectables/K8sService.html":{}}}],["d2.description",{"_index":3397,"title":{},"body":{"injectables/K8sService.html":{}}}],["d2.id",{"_index":3393,"title":{},"body":{"injectables/K8sService.html":{}}}],["d2.name",{"_index":3395,"title":{},"body":{"injectables/K8sService.html":{}}}],["darkgray",{"_index":3016,"title":{},"body":{"components/HomeComponent.html":{}}}],["dashboard",{"_index":4460,"title":{},"body":{"components/RuntimeK8sComponent.html":{}}}],["dashboardensure",{"_index":5374,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["data",{"_index":38,"title":{},"body":{"classes/API.html":{},"classes/APIDefinition.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"components/AboutComponent.html":{},"classes/Action.html":{},"modules/AppModule.html":{},"classes/Authentication.html":{},"components/BuildExeComponent.html":{},"classes/CommitInfo.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/DockerContainer.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"components/HomeComponent.html":{},"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/K8sPod.html":{},"injectables/K8sService.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"injectables/Ng2Uploader.html":{},"directives/NgFileDrop.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RepoSettings.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/Server.html":{},"injectables/Settings.html":{},"components/SimpleNameComponent.html":{},"classes/Source.html":{},"classes/SourceWrapper.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{},"classes/UploadedFile.html":{},"classes/Values.html":{},"classes/WmPackageInfo.html":{}}}],["data.active",{"_index":745,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.adminpassword",{"_index":756,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.adminuser",{"_index":754,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.apiname",{"_index":66,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["data.apis",{"_index":234,"title":{},"body":{"classes/APIDefinition.html":{},"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{},"classes/WmPackageInfo.html":{}}}],["data.apis.foreach((a",{"_index":235,"title":{},"body":{"classes/APIDefinition.html":{},"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{},"classes/WmPackageInfo.html":{}}}],["data.appname",{"_index":843,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.archivewmimage",{"_index":2071,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["data.args",{"_index":571,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.build",{"_index":757,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildExeComponent.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.buildcommands",{"_index":597,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.buildcommands.foreach((f",{"_index":598,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.buildonstart",{"_index":820,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.builduser",{"_index":635,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.comments",{"_index":2083,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["data.commit.committer.name",{"_index":2195,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["data.commit.message",{"_index":2199,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["data.container",{"_index":2645,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["data.containerhost",{"_index":816,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.containerid",{"_index":2057,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["data.containername",{"_index":2060,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["data.containers",{"_index":853,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.containers.foreach((c",{"_index":854,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.currentversion",{"_index":2533,"title":{},"body":{"components/DockerImageVersionsComponent.html":{}}}],["data.datasource",{"_index":2532,"title":{},"body":{"components/DockerImageVersionsComponent.html":{}}}],["data.dependson",{"_index":851,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.deployments",{"_index":625,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.deployments.foreach((c",{"_index":821,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.deployments.foreach((d",{"_index":626,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.deployments.foreach((i",{"_index":862,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.description",{"_index":216,"title":{},"body":{"classes/APIDefinition.html":{},"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{},"classes/WmPackageInfo.html":{}}}],["data.dockeremail",{"_index":4104,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["data.dockerhost",{"_index":4095,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["data.dockerpassword",{"_index":4108,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["data.dockeruserid",{"_index":4106,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["data.empowerencryptedpassword",{"_index":4114,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["data.empowerpassword",{"_index":4112,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["data.empoweruserid",{"_index":4110,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["data.encryptedpassword",{"_index":2069,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["data.endpoint",{"_index":194,"title":{},"body":{"classes/APIDefinition.html":{},"classes/WmPackageInfo.html":{}}}],["data.entrypoint",{"_index":592,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.entryuser",{"_index":637,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.env",{"_index":763,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.exclude",{"_index":5164,"title":{},"body":{"classes/Source.html":{}}}],["data.exitpoint",{"_index":594,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.files",{"_index":2200,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["data.files.foreach((f",{"_index":2201,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["data.formbuilder",{"_index":2647,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["data.gitapiurl",{"_index":4079,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["data.gitispacpassword",{"_index":4086,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["data.gitname",{"_index":4082,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["data.gitpassword",{"_index":4084,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Source.html":{},"classes/Values.html":{}}}],["data.gitrepos",{"_index":4088,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["data.gitrepos.foreach((r",{"_index":4090,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["data.gitrepository",{"_index":5156,"title":{},"body":{"classes/Source.html":{}}}],["data.gittype",{"_index":4072,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["data.gituri",{"_index":4069,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Source.html":{},"classes/Values.html":{}}}],["data.gituri.indexof",{"_index":4075,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["data.gituri.substring(0",{"_index":4077,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["data.gituri.substring(protomarker",{"_index":4078,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["data.gituser",{"_index":4080,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Source.html":{},"classes/Values.html":{}}}],["data.hastests",{"_index":641,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.healthcheck",{"_index":596,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.hostname",{"_index":590,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.id",{"_index":2507,"title":{},"body":{"classes/DockerContainer.html":{}}}],["data.id.substring(0",{"_index":4355,"title":{},"body":{"classes/Result.html":{}}}],["data.image",{"_index":751,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"components/SagImageAlerterComponent.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.imageprefix",{"_index":4097,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["data.include",{"_index":5162,"title":{},"body":{"classes/Source.html":{}}}],["data.includetests",{"_index":2076,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["data.includeupdate",{"_index":588,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.installer",{"_index":2062,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["data.isactive",{"_index":68,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["data.isnew",{"_index":586,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.issagproduct",{"_index":569,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.k8snamespace",{"_index":4101,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["data.k8stoken",{"_index":4102,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["data.k8surl",{"_index":4099,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["data.lastviewedpage",{"_index":4116,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["data.lastviewedpagearg",{"_index":4117,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["data.licensefile",{"_index":582,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.livenessprobe",{"_index":772,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.metadata.labels.app",{"_index":3164,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{},"classes/K8sPod.html":{}}}],["data.metadata.labels.deploymentid",{"_index":3168,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["data.metadata.labels.serviceid",{"_index":3166,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["data.metadata.name",{"_index":3163,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{},"classes/K8sPod.html":{}}}],["data.metadata.namespace",{"_index":3170,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["data.metadata.selflink",{"_index":3172,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["data.metadata.uid",{"_index":3162,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{},"classes/K8sPod.html":{}}}],["data.name",{"_index":190,"title":{},"body":{"classes/APIDefinition.html":{},"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{},"classes/WmPackageInfo.html":{}}}],["data.names",{"_index":741,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/DockerContainer.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.names[0",{"_index":743,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.onfail",{"_index":829,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.onstart",{"_index":823,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.onsuccess",{"_index":826,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.owner",{"_index":73,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["data.package",{"_index":189,"title":{},"body":{"classes/APIDefinition.html":{},"classes/WmPackageInfo.html":{}}}],["data.password",{"_index":2067,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["data.path",{"_index":672,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.policy",{"_index":74,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["data.port",{"_index":674,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.ports",{"_index":760,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.primaryport",{"_index":584,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.producttype",{"_index":573,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.readinessprobe",{"_index":769,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.replicas",{"_index":841,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.required.split",{"_index":244,"title":{},"body":{"classes/APIDefinition.html":{},"classes/WmPackageInfo.html":{}}}],["data.requires",{"_index":242,"title":{},"body":{"classes/APIDefinition.html":{},"classes/WmPackageInfo.html":{}}}],["data.requires.foreach((r",{"_index":248,"title":{},"body":{"classes/APIDefinition.html":{},"classes/WmPackageInfo.html":{}}}],["data.requiresmonitoring",{"_index":849,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.restartpolicy",{"_index":847,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.run",{"_index":2074,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["data.runk8s",{"_index":2080,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["data.secure",{"_index":749,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.selecthandler(obj",{"_index":2535,"title":{},"body":{"components/DockerImageVersionsComponent.html":{}}}],["data.services",{"_index":233,"title":{},"body":{"classes/APIDefinition.html":{},"classes/WmPackageInfo.html":{}}}],["data.servicetype",{"_index":845,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.sha",{"_index":2192,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["data.shutdown",{"_index":220,"title":{},"body":{"classes/APIDefinition.html":{},"classes/WmPackageInfo.html":{}}}],["data.source",{"_index":451,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.sourceimagetag",{"_index":577,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.spec.replicas",{"_index":3177,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["data.spec.template.spec.containers",{"_index":3179,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["data.spec.template.spec.restartpolicy",{"_index":3176,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["data.startup",{"_index":218,"title":{},"body":{"classes/APIDefinition.html":{},"classes/WmPackageInfo.html":{}}}],["data.state",{"_index":4358,"title":{},"body":{"classes/Result.html":{}}}],["data.status",{"_index":4357,"title":{},"body":{"classes/Result.html":{}}}],["data.status.availablereplicas",{"_index":3110,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["data.status.conditions",{"_index":3216,"title":{},"body":{"classes/K8sPod.html":{}}}],["data.status.conditions.foreach((c",{"_index":3219,"title":{},"body":{"classes/K8sPod.html":{}}}],["data.status.containerstatuses",{"_index":3226,"title":{},"body":{"classes/K8sPod.html":{}}}],["data.status.containerstatuses.foreach((c",{"_index":3227,"title":{},"body":{"classes/K8sPod.html":{}}}],["data.status.phase",{"_index":3213,"title":{},"body":{"classes/K8sPod.html":{}}}],["data.status.readyreplicas",{"_index":3109,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["data.status.unavailablereplicas",{"_index":3111,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["data.swaggerendpoint",{"_index":192,"title":{},"body":{"classes/APIDefinition.html":{},"classes/WmPackageInfo.html":{}}}],["data.targetdir",{"_index":5160,"title":{},"body":{"classes/Source.html":{}}}],["data.targetimage",{"_index":578,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.teststatus",{"_index":221,"title":{},"body":{"classes/APIDefinition.html":{},"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{},"classes/WmPackageInfo.html":{}}}],["data.title",{"_index":5125,"title":{},"body":{"components/SimpleNameComponent.html":{}}}],["data.type",{"_index":71,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/Server.html":{},"classes/Source.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.uploadapis",{"_index":2078,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["data.usekubernetes",{"_index":818,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.user",{"_index":2065,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["data.version",{"_index":213,"title":{},"body":{"classes/APIDefinition.html":{},"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildExeComponent.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{},"classes/WmPackageInfo.html":{}}}],["data.volumes",{"_index":766,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["data.wminstallerimage",{"_index":575,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["datacontent",{"_index":3810,"title":{},"body":{"directives/NgFileDrop.html":{}}}],["datasource",{"_index":918,"title":{},"body":{"classes/Action-1.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/DockerImageVersionsComponent.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"components/PodsListComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/UMInstallerComponent.html":{}}}],["datatype",{"_index":873,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["date",{"_index":694,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/CommitInfo.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/K8sPod.html":{},"components/PodsListComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["date().tolocaletimestring",{"_index":2110,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["datestamp",{"_index":3304,"title":{},"body":{"injectables/K8sService.html":{}}}],["db",{"_index":1297,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"injectables/ContainerTemplates.html":{}}}],["db.buildtarget",{"_index":1300,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["db.commandtype",{"_index":1299,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["db.filetype",{"_index":1301,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["db.target",{"_index":1303,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["dc",{"_index":3228,"title":{},"body":{"classes/K8sPod.html":{}}}],["dc.imageref",{"_index":3232,"title":{},"body":{"classes/K8sPod.html":{}}}],["dc.names",{"_index":3229,"title":{},"body":{"classes/K8sPod.html":{}}}],["dc.ready",{"_index":3230,"title":{},"body":{"classes/K8sPod.html":{}}}],["dc.status",{"_index":3235,"title":{},"body":{"classes/K8sPod.html":{}}}],["dd/mm/yyyy",{"_index":3972,"title":{},"body":{"components/PodsListComponent.html":{}}}],["deactivate",{"_index":1094,"title":{},"body":{"components/ActionComponent.html":{}}}],["debug",{"_index":3633,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["december",{"_index":299,"title":{},"body":{"components/AboutComponent.html":{}}}],["declarations",{"_index":1571,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decoration",{"_index":1938,"title":{},"body":{"components/BuildComponent.html":{},"components/RuntimeK8sComponent.html":{}}}],["decorators",{"_index":2038,"title":{},"body":{"components/BuildExeComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/SimpleNameComponent.html":{},"components/TestHistoryComponent.html":{}}}],["dedicatedrepoctrl",{"_index":4592,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["def",{"_index":4237,"title":{},"body":{"classes/Result.html":{}}}],["def['dockerhost",{"_index":4238,"title":{},"body":{"classes/Result.html":{}}}],["default",{"_index":259,"title":{},"body":{"injectables/APIGatewayService.html":{},"components/ActionComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/BuildCommand.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"classes/CommitInfo.html":{},"injectables/ContainerTemplates.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"injectables/GitSourceService.html":{},"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/K8sPod.html":{},"injectables/K8sService.html":{},"classes/LivePods.html":{},"components/MicroServiceInstallerComponent.html":{},"injectables/Ng2Uploader.html":{},"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{},"injectables/PackagesService.html":{},"components/PodsListComponent.html":{},"injectables/ResourceService.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/ServicePropertiesComponent.html":{},"injectables/Settings.html":{},"components/StagingComponent.html":{},"classes/TestCase.html":{},"injectables/TestConfigService.html":{},"injectables/TestTraceService.html":{},"components/UploadButtonComponent.html":{},"classes/Values.html":{},"classes/WebSocketService.html":{},"miscellaneous/variables.html":{}}}],["default(path",{"_index":5569,"title":{},"body":{"classes/WebSocketService.html":{}}}],["defaultapis",{"_index":1340,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["define",{"_index":1790,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":23,"title":{},"body":{"classes/API.html":{},"classes/APIDefinition.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"components/AboutComponent.html":{},"classes/Action.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"classes/AppPage.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"classes/BuildImage.html":{},"directives/BuildImageChooseDirective.html":{},"interfaces/BuildParams.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"directives/CancelCdkDrag.html":{},"classes/CommitInfo.html":{},"injectables/ContainerTemplates.html":{},"classes/DependencyWrapper.html":{},"classes/Deployment.html":{},"components/DeploymentDetailsComponent.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/DockerContainer.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"components/HomeComponent.html":{},"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/K8sPod.html":{},"injectables/K8sService.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"components/MicroServiceInstallerComponent.html":{},"injectables/Ng2Uploader.html":{},"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{},"injectables/PackagesService.html":{},"classes/Payload.html":{},"components/PodsListComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"interfaces/PropertiesChangedOwner.html":{},"classes/RepoSettings.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"directives/RuntimeActionsDirective.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"components/ServicePropertiesComponent.html":{},"injectables/Settings.html":{},"components/SimpleNameComponent.html":{},"classes/Source.html":{},"classes/SourceWrapper.html":{},"classes/Sources.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{},"classes/TestCase.html":{},"components/TestCaseComponent.html":{},"injectables/TestConfigService.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"classes/TestSuite.html":{},"injectables/TestTraceService.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"classes/UploadedFile.html":{},"classes/Values.html":{},"classes/WebSocketService.html":{},"classes/WmPackageInfo.html":{}}}],["defines",{"_index":5087,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["definition",{"_index":1203,"title":{},"body":{"interfaces/ActionsComponent.html":{},"components/DeploymentDetailsComponent.html":{},"classes/K8sDeployment.html":{},"injectables/K8sService.html":{},"classes/Result.html":{},"directives/RuntimeActionsDirective.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{}}}],["definition.component",{"_index":1674,"title":{},"body":{"modules/AppModule.html":{}}}],["definition.component.ts",{"_index":4850,"title":{},"body":{"classes/ServiceInfo.html":{},"coverage.html":{}}}],["definition.component.ts:34",{"_index":4852,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["definition.component.ts:35",{"_index":4855,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["definition.component.ts:36",{"_index":4853,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["definition.css",{"_index":4863,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["definition.html",{"_index":4862,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["definition.ts",{"_index":3122,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{},"coverage.html":{}}}],["definition.ts:10",{"_index":3129,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["definition.ts:11",{"_index":3126,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["definition.ts:12",{"_index":3134,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["definition.ts:13",{"_index":3127,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["definition.ts:14",{"_index":3130,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["definition.ts:15",{"_index":3131,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["definition.ts:16",{"_index":3124,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["definition.ts:17",{"_index":3133,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["definition.ts:19",{"_index":3135,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["definition.ts:20",{"_index":3132,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["definition.ts:22",{"_index":3123,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["definition.ts:43",{"_index":3137,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["definition.ts:48",{"_index":3136,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["definition.ts:7",{"_index":3125,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["definition.ts:9",{"_index":3128,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["definitions",{"_index":4860,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["definitions'},{'name",{"_index":394,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["delete",{"_index":1108,"title":{},"body":{"components/ActionComponent.html":{}}}],["deletetemplate(event",{"_index":4724,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["demo",{"_index":3148,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["dependencies",{"_index":1570,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"classes/DependencyWrapper.html":{},"injectables/PackagesService.html":{},"classes/Sources.html":{},"dependencies.html":{},"overview.html":{}}}],["dependencies.push(wmpackageinfo.make(p",{"_index":2443,"title":{},"body":{"classes/DependencyWrapper.html":{},"injectables/PackagesService.html":{},"classes/Sources.html":{}}}],["dependencywrapper",{"_index":2396,"title":{"classes/DependencyWrapper.html":{}},"body":{"classes/DependencyWrapper.html":{},"injectables/PackagesService.html":{},"classes/Sources.html":{},"coverage.html":{}}}],["dependson",{"_index":836,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["deploy",{"_index":784,"title":{},"body":{"classes/Action.html":{},"modules/AppModule.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"components/HomeComponent.html":{},"injectables/K8sService.html":{},"components/PodsListComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{},"miscellaneous/variables.html":{}}}],["deploy'},{'name",{"_index":372,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["deploy.component",{"_index":1641,"title":{},"body":{"modules/AppModule.html":{}}}],["deploy.component.ts",{"_index":5674,"title":{},"body":{"coverage.html":{}}}],["deployable",{"_index":2998,"title":{},"body":{"components/HomeComponent.html":{}}}],["deployed",{"_index":985,"title":{},"body":{"classes/Action-1.html":{},"components/HomeComponent.html":{},"miscellaneous/enumerations.html":{}}}],["deployextra",{"_index":3039,"title":{},"body":{"components/HomeComponent.html":{}}}],["deployextra').css({left",{"_index":2969,"title":{},"body":{"components/HomeComponent.html":{}}}],["deployment",{"_index":172,"title":{"classes/Deployment.html":{}},"body":{"classes/APIDefinition.html":{},"components/AboutComponent.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"interfaces/ActionsComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"interfaces/BuildParams.html":{},"injectables/ContainerTemplates.html":{},"classes/Deployment.html":{},"components/DeploymentDetailsComponent.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{},"injectables/K8sService.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"directives/RuntimeActionsDirective.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/Server.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"classes/WmPackageInfo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["deployment.containers.foreach((c",{"_index":3351,"title":{},"body":{"injectables/K8sService.html":{}}}],["deployment.creationdate.toisostring",{"_index":3369,"title":{},"body":{"injectables/K8sService.html":{}}}],["deployment.description",{"_index":2476,"title":{},"body":{"components/DeploymentDetailsComponent.html":{},"injectables/K8sService.html":{}}}],["deployment.id",{"_index":3365,"title":{},"body":{"injectables/K8sService.html":{}}}],["deployment.make(this",{"_index":838,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["deployment.name",{"_index":2475,"title":{},"body":{"components/DeploymentDetailsComponent.html":{},"injectables/K8sService.html":{},"components/RuntimeDetailsComponent.html":{}}}],["deployment.namespace",{"_index":3341,"title":{},"body":{"injectables/K8sService.html":{}}}],["deployment.reference",{"_index":3363,"title":{},"body":{"injectables/K8sService.html":{}}}],["deployment.replicas",{"_index":3372,"title":{},"body":{"injectables/K8sService.html":{}}}],["deployment.ts",{"_index":3045,"title":{},"body":{"classes/K8sDeployment.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["deployment.ts:23",{"_index":3062,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["deployment.ts:25",{"_index":3066,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["deployment.ts:27",{"_index":3060,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["deployment.ts:29",{"_index":3063,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["deployment.ts:30",{"_index":3061,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["deployment.ts:31",{"_index":3067,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["deployment.ts:33",{"_index":3087,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["deployment.ts:38",{"_index":3085,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["deployment.ts:55",{"_index":3082,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["deployment.ts:66",{"_index":3089,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["deployment.version",{"_index":3367,"title":{},"body":{"injectables/K8sService.html":{}}}],["deploymentdetailscomponent",{"_index":343,"title":{"components/DeploymentDetailsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["deploymentforcontainer",{"_index":4369,"title":{},"body":{"classes/RunSet.html":{}}}],["deploymentforcontainer(container",{"_index":4380,"title":{},"body":{"classes/RunSet.html":{}}}],["deploymentid",{"_index":3052,"title":{},"body":{"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{}}}],["deploymentlistcomponent",{"_index":345,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["deployments",{"_index":612,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"components/HomeComponent.html":{},"injectables/K8sService.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["deployments'},{'name",{"_index":347,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["deployments(namespace",{"_index":3267,"title":{},"body":{"injectables/K8sService.html":{}}}],["deployments.push(d1",{"_index":3401,"title":{},"body":{"injectables/K8sService.html":{}}}],["deployments.push(d2",{"_index":3402,"title":{},"body":{"injectables/K8sService.html":{}}}],["deploymentselectionchanged",{"_index":4389,"title":{},"body":{"components/RuntimeDetailsComponent.html":{}}}],["deploymentselectionchanged(event",{"_index":4398,"title":{},"body":{"components/RuntimeDetailsComponent.html":{}}}],["deploymentset",{"_index":446,"title":{"classes/DeploymentSet.html":{}},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/DependencyWrapper.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"injectables/PackagesService.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"components/SagImageAlerterComponent.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"classes/Sources.html":{},"classes/Stage.html":{},"classes/Test.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"coverage.html":{}}}],["deploymentsetname",{"_index":2427,"title":{},"body":{"classes/DependencyWrapper.html":{},"injectables/PackagesService.html":{},"classes/Sources.html":{}}}],["deploymentstatus",{"_index":3064,"title":{},"body":{"classes/K8sDeployment.html":{},"miscellaneous/enumerations.html":{}}}],["deploymentstatus.new",{"_index":3121,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["deploymentstatus.running",{"_index":3118,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["deploymentstatus.stopped",{"_index":3120,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["deploymentstatus.suspended",{"_index":3116,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["deploymentstatus.unavailable",{"_index":3119,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["deploymentstatus.unknown",{"_index":3065,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["deploymentstatus.updating",{"_index":3117,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["deploymenttype",{"_index":611,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["deployrun",{"_index":1791,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["deprecated",{"_index":78,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"components/EditContainerComponent.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"components/StagingComponent.html":{},"miscellaneous/enumerations.html":{}}}],["description",{"_index":202,"title":{},"body":{"classes/APIDefinition.html":{},"classes/Action.html":{},"classes/Action-1.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"components/DeploymentDetailsComponent.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/GitSelectionModel.html":{},"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/K8sPod.html":{},"components/PodsListComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"components/SagImageAlerterComponent.html":{},"classes/Server.html":{},"classes/SourceWrapper.html":{},"classes/Stage.html":{},"classes/Test.html":{},"classes/TestCase.html":{},"classes/WmPackageInfo.html":{}}}],["designer",{"_index":5375,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["details",{"_index":1334,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/UMInstallerComponent.html":{}}}],["details'},{'name",{"_index":344,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["details.component",{"_index":1633,"title":{},"body":{"modules/AppModule.html":{}}}],["details.component.ts",{"_index":2466,"title":{},"body":{"components/DeploymentDetailsComponent.html":{},"components/RuntimeDetailsComponent.html":{},"coverage.html":{}}}],["details.component.ts:17",{"_index":2471,"title":{},"body":{"components/DeploymentDetailsComponent.html":{}}}],["details.component.ts:20",{"_index":2470,"title":{},"body":{"components/DeploymentDetailsComponent.html":{}}}],["details.component.ts:22",{"_index":2472,"title":{},"body":{"components/DeploymentDetailsComponent.html":{}}}],["details.component.ts:26",{"_index":4395,"title":{},"body":{"components/RuntimeDetailsComponent.html":{}}}],["details.component.ts:29",{"_index":4396,"title":{},"body":{"components/RuntimeDetailsComponent.html":{}}}],["details.component.ts:30",{"_index":4408,"title":{},"body":{"components/RuntimeDetailsComponent.html":{}}}],["details.component.ts:32",{"_index":4412,"title":{},"body":{"components/RuntimeDetailsComponent.html":{}}}],["details.component.ts:33",{"_index":4406,"title":{},"body":{"components/RuntimeDetailsComponent.html":{}}}],["details.component.ts:35",{"_index":4407,"title":{},"body":{"components/RuntimeDetailsComponent.html":{}}}],["details.component.ts:37",{"_index":4411,"title":{},"body":{"components/RuntimeDetailsComponent.html":{}}}],["details.component.ts:39",{"_index":4394,"title":{},"body":{"components/RuntimeDetailsComponent.html":{}}}],["details.component.ts:64",{"_index":4400,"title":{},"body":{"components/RuntimeDetailsComponent.html":{}}}],["details.component.ts:73",{"_index":4399,"title":{},"body":{"components/RuntimeDetailsComponent.html":{}}}],["details.component.ts:79",{"_index":4404,"title":{},"body":{"components/RuntimeDetailsComponent.html":{}}}],["details.component.ts:83",{"_index":4397,"title":{},"body":{"components/RuntimeDetailsComponent.html":{}}}],["details.component.ts:88",{"_index":4402,"title":{},"body":{"components/RuntimeDetailsComponent.html":{}}}],["details.component.ts:96",{"_index":4401,"title":{},"body":{"components/RuntimeDetailsComponent.html":{}}}],["details.css",{"_index":4387,"title":{},"body":{"components/RuntimeDetailsComponent.html":{}}}],["details.html",{"_index":2468,"title":{},"body":{"components/DeploymentDetailsComponent.html":{},"components/RuntimeDetailsComponent.html":{}}}],["determine",{"_index":3107,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["determinefeatureaddon",{"_index":3495,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["determineversiontype",{"_index":4829,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["dev",{"_index":5740,"title":{},"body":{"index.html":{}}}],["dev_server_api",{"_index":4030,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["development",{"_index":1104,"title":{},"body":{"components/ActionComponent.html":{},"components/TestHistoryComponent.html":{},"index.html":{}}}],["devops",{"_index":293,"title":{},"body":{"components/AboutComponent.html":{}}}],["dh",{"_index":2973,"title":{},"body":{"components/HomeComponent.html":{}}}],["dialog",{"_index":5121,"title":{},"body":{"components/SimpleNameComponent.html":{}}}],["dialog'},{'name",{"_index":388,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["dialogdata",{"_index":291,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{}}}],["dialogposition",{"_index":2576,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["dialogref",{"_index":275,"title":{},"body":{"components/AboutComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/StagingComponent.html":{}}}],["dialogref.afterclosed().subscribe(container",{"_index":2613,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["dialogref.afterclosed().subscribe(result",{"_index":4825,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["dialogref.updateposition",{"_index":2611,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["dir",{"_index":2255,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["dir.endswith",{"_index":2278,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["dir.startswith",{"_index":2261,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["dir.substring(1",{"_index":2262,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["direction",{"_index":1966,"title":{},"body":{"components/BuildComponent.html":{},"components/HomeComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/TestCaseComponent.html":{}}}],["directive",{"_index":311,"title":{"directives/BuildImageChooseDirective.html":{},"directives/CancelCdkDrag.html":{},"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{},"directives/RuntimeActionsDirective.html":{}},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"interfaces/ActionsComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"directives/BuildImageChooseDirective.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"directives/CancelCdkDrag.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{},"components/PodsListComponent.html":{},"interfaces/PropertiesChangedOwner.html":{},"directives/RuntimeActionsDirective.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{}}}],["directives",{"_index":404,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"directives/BuildImageChooseDirective.html":{},"directives/CancelCdkDrag.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{},"components/PodsListComponent.html":{},"directives/RuntimeActionsDirective.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"overview.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":5744,"title":{},"body":{"index.html":{}}}],["directory",{"_index":5748,"title":{},"body":{"index.html":{}}}],["disabled",{"_index":1155,"title":{},"body":{"components/ActionComponent.html":{},"components/TestCaseComponent.html":{},"components/UploadButtonComponent.html":{}}}],["dismiss",{"_index":1033,"title":{},"body":{"classes/Action-1.html":{},"components/RuntimeScaleComponent.html":{}}}],["display",{"_index":468,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildComponent.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"components/HomeComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"components/RuntimeK8sComponent.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{},"components/TestCaseComponent.html":{}}}],["displayableproperties",{"_index":2127,"title":{},"body":{"directives/BuildImageChooseDirective.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"interfaces/PropertiesChangedOwner.html":{},"components/SagImageAlerterComponent.html":{}}}],["displayedcolumns",{"_index":2733,"title":{},"body":{"classes/GitSelectionModel.html":{},"components/PodsListComponent.html":{},"classes/SourceWrapper.html":{}}}],["displayedpackagecolumns",{"_index":4880,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["displayedservicescolumns",{"_index":4881,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["displaytype",{"_index":456,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"components/MicroServiceInstallerComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{},"miscellaneous/enumerations.html":{}}}],["displaytype.dropdown",{"_index":533,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["displaytype.editable",{"_index":490,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["displaytype.file",{"_index":492,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["displaytype.hidden",{"_index":469,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"components/MicroServiceInstallerComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["displaytype.password",{"_index":531,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["displaytype.readonly",{"_index":491,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["displaytype.yesno",{"_index":532,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["dist",{"_index":5747,"title":{},"body":{"index.html":{}}}],["div.mat",{"_index":5400,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["docker",{"_index":349,"title":{},"body":{"components/AboutComponent.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/K8sPod.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"classes/Result.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["dockeraction",{"_index":423,"title":{},"body":{"classes/Action.html":{}}}],["dockeractions",{"_index":1055,"title":{},"body":{"components/ActionComponent.html":{}}}],["dockerbuild",{"_index":683,"title":{"classes/DockerBuild.html":{}},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{},"coverage.html":{}}}],["dockerbuild.make(data.build",{"_index":759,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["dockercontainer",{"_index":2492,"title":{"classes/DockerContainer.html":{}},"body":{"classes/DockerContainer.html":{},"classes/K8sPod.html":{},"coverage.html":{}}}],["dockeremail",{"_index":4020,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["dockerexpander",{"_index":4040,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["dockerfile",{"_index":2484,"title":{},"body":{"classes/DockerBuild.html":{}}}],["dockerfiltertype",{"_index":4155,"title":{},"body":{"classes/Result.html":{},"miscellaneous/enumerations.html":{}}}],["dockerfiltertype.all",{"_index":4211,"title":{},"body":{"classes/Result.html":{}}}],["dockerfiltertype.custom",{"_index":4223,"title":{},"body":{"classes/Result.html":{}}}],["dockerfiltertype.sag",{"_index":4218,"title":{},"body":{"classes/Result.html":{}}}],["dockerhost",{"_index":4014,"title":{},"body":{"classes/RepoSettings.html":{},"classes/Result.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["dockerhost).pipe(map((results",{"_index":4212,"title":{},"body":{"classes/Result.html":{}}}],["dockerimage",{"_index":445,"title":{},"body":{"classes/Action.html":{},"classes/Action-1.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"directives/BuildImageChooseDirective.html":{},"interfaces/BuildParams.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"injectables/ContainerTemplates.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"components/DockerImageVersionsComponent.html":{},"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{},"injectables/K8sService.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"interfaces/PropertiesChangedOwner.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"classes/Stage.html":{},"classes/Test.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"coverage.html":{}}}],["dockerimage.isversionnumber(af",{"_index":728,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["dockerimage.isversionnumber(rside",{"_index":716,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["dockerimage.isversionnumber(version",{"_index":737,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["dockerimage.make((responsedata).image",{"_index":4190,"title":{},"body":{"classes/Result.html":{}}}],["dockerimage.make(data.sourceimage",{"_index":630,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["dockerimage.make(data.targetimage",{"_index":580,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["dockerimage.make(i",{"_index":4352,"title":{},"body":{"classes/Result.html":{}}}],["dockerimage.make(img",{"_index":4768,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["dockerimagechoosercomponent",{"_index":348,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dockerimagelistcomponent",{"_index":351,"title":{},"body":{"components/AboutComponent.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dockerimageversionscomponent",{"_index":353,"title":{"components/DockerImageVersionsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dockerised",{"_index":4028,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["dockerlist.foreach((d",{"_index":4328,"title":{},"body":{"classes/Result.html":{}}}],["dockerpassword",{"_index":4022,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["dockerservice",{"_index":898,"title":{},"body":{"classes/Action-1.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"classes/Result.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/ServiceInfo.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dockerservice.build",{"_index":4266,"title":{},"body":{"classes/Result.html":{}}}],["dockerservice.containers",{"_index":4230,"title":{},"body":{"classes/Result.html":{}}}],["dockerservice.image",{"_index":4188,"title":{},"body":{"classes/Result.html":{}}}],["dockerservice.images",{"_index":4203,"title":{},"body":{"classes/Result.html":{}}}],["dockerservice.install",{"_index":4244,"title":{},"body":{"classes/Result.html":{}}}],["dockerservice.run",{"_index":4285,"title":{},"body":{"classes/Result.html":{}}}],["dockerservice.runks8",{"_index":4284,"title":{},"body":{"classes/Result.html":{}}}],["dockerservice.stop",{"_index":4295,"title":{},"body":{"classes/Result.html":{}}}],["dockertag",{"_index":424,"title":{},"body":{"classes/Action.html":{}}}],["dockeruserid",{"_index":4021,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["documentation",{"_index":5625,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":267,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["domparser().parsefromstring(xmlstring",{"_index":2285,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["domsanitizer",{"_index":4567,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["don't",{"_index":5394,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["done",{"_index":2003,"title":{},"body":{"components/BuildExeComponent.html":{},"injectables/Ng2Uploader.html":{},"components/SagImageAlerterComponent.html":{},"classes/UploadedFile.html":{}}}],["download",{"_index":3621,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{},"classes/Result.html":{},"components/SagImageAlerterComponent.html":{}}}],["downloadbuild(builder",{"_index":4280,"title":{},"body":{"classes/Result.html":{}}}],["downloadctrl",{"_index":4596,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["downloaded",{"_index":4554,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["downloadinstall(installer",{"_index":4278,"title":{},"body":{"classes/Result.html":{}}}],["downloadlicence(event",{"_index":4813,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["downloadnow(fileref",{"_index":4826,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["downloadonly",{"_index":4250,"title":{},"body":{"classes/Result.html":{}}}],["downloadproperties",{"_index":3496,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["downloadproperties(event",{"_index":3504,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["downloadref",{"_index":4603,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["downloadresource",{"_index":4121,"title":{},"body":{"injectables/ResourceService.html":{}}}],["downloadresource(type",{"_index":4127,"title":{},"body":{"injectables/ResourceService.html":{}}}],["drag",{"_index":5711,"title":{},"body":{"dependencies.html":{}}}],["dragdropmodule",{"_index":1599,"title":{},"body":{"modules/AppModule.html":{}}}],["dragevent",{"_index":3823,"title":{},"body":{"directives/NgFileDrop.html":{}}}],["driver",{"_index":3594,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["drop",{"_index":1601,"title":{},"body":{"modules/AppModule.html":{},"directives/NgFileDrop.html":{},"dependencies.html":{}}}],["drop.ts",{"_index":3798,"title":{},"body":{"directives/NgFileDrop.html":{},"coverage.html":{}}}],["drop.ts:10",{"_index":3805,"title":{},"body":{"directives/NgFileDrop.html":{}}}],["drop.ts:11",{"_index":3804,"title":{},"body":{"directives/NgFileDrop.html":{}}}],["drop.ts:12",{"_index":3801,"title":{},"body":{"directives/NgFileDrop.html":{}}}],["drop.ts:14",{"_index":3803,"title":{},"body":{"directives/NgFileDrop.html":{}}}],["drop.ts:27",{"_index":3802,"title":{},"body":{"directives/NgFileDrop.html":{}}}],["drop]'},{'name",{"_index":411,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["dropdown",{"_index":461,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{},"miscellaneous/enumerations.html":{}}}],["dt",{"_index":3817,"title":{},"body":{"directives/NgFileDrop.html":{}}}],["dt.files",{"_index":3819,"title":{},"body":{"directives/NgFileDrop.html":{}}}],["due",{"_index":3359,"title":{},"body":{"injectables/K8sService.html":{}}}],["duration",{"_index":1034,"title":{},"body":{"classes/Action-1.html":{},"components/BuildComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/TestCaseComponent.html":{}}}],["dynamic",{"_index":5700,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":3767,"title":{},"body":{"injectables/Ng2Uploader.html":{},"directives/NgFileDrop.html":{},"classes/ServiceInfo.html":{},"classes/UploadedFile.html":{}}}],["e.datatransfer",{"_index":3818,"title":{},"body":{"directives/NgFileDrop.html":{}}}],["e.endpoint",{"_index":4994,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["e.lengthcomputable",{"_index":3769,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["e.loaded",{"_index":3773,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["e.preventdefault",{"_index":3816,"title":{},"body":{"directives/NgFileDrop.html":{}}}],["e.stoppropagation",{"_index":3815,"title":{},"body":{"directives/NgFileDrop.html":{}}}],["e.total",{"_index":3771,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["e2e",{"_index":5752,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":1851,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":1855,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":1854,"title":{},"body":{"classes/AppPage.html":{}}}],["edit",{"_index":356,"title":{},"body":{"components/AboutComponent.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["editable",{"_index":459,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{},"miscellaneous/enumerations.html":{}}}],["editcontainer",{"_index":5189,"title":{},"body":{"components/StagingComponent.html":{}}}],["editcontainer(container",{"_index":2600,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["editcontainercomponent",{"_index":355,"title":{"components/EditContainerComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["edition",{"_index":2348,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["efficient",{"_index":2809,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["el",{"_index":2146,"title":{},"body":{"directives/CancelCdkDrag.html":{},"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{}}}],["el.nativeelement",{"_index":2154,"title":{},"body":{"directives/CancelCdkDrag.html":{}}}],["elastic",{"_index":2351,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["element",{"_index":310,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"classes/AppPage.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"directives/CancelCdkDrag.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["element(by.css('app",{"_index":1858,"title":{},"body":{"classes/AppPage.html":{}}}],["element.creationdate",{"_index":3971,"title":{},"body":{"components/PodsListComponent.html":{}}}],["element.description",{"_index":3970,"title":{},"body":{"components/PodsListComponent.html":{}}}],["element.name",{"_index":3968,"title":{},"body":{"components/PodsListComponent.html":{}}}],["element.teststatus",{"_index":4909,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["element.type",{"_index":3969,"title":{},"body":{"components/PodsListComponent.html":{}}}],["elementref",{"_index":2044,"title":{},"body":{"components/BuildExeComponent.html":{},"directives/CancelCdkDrag.html":{},"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{},"components/TestHistoryComponent.html":{}}}],["elements",{"_index":2768,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["elements/build",{"_index":1240,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/UMInstallerComponent.html":{}}}],["elements/docker",{"_index":4521,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["elk",{"_index":2337,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["elkporthttpctrl",{"_index":1210,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["elkporttcpctrl",{"_index":1211,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["empowerencryptedpassword",{"_index":4025,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["empowerpassword",{"_index":4024,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["empoweruserid",{"_index":4023,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["empty",{"_index":3869,"title":{},"body":{"classes/Payload.html":{},"injectables/TestTraceService.html":{},"miscellaneous/enumerations.html":{}}}],["enablecontrols",{"_index":2557,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["encodeheaders",{"_index":3634,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["encodeuri(packagesdir",{"_index":2430,"title":{},"body":{"classes/DependencyWrapper.html":{},"injectables/PackagesService.html":{},"classes/Sources.html":{}}}],["encodeuri(sources.gitrepository",{"_index":2429,"title":{},"body":{"classes/DependencyWrapper.html":{},"injectables/PackagesService.html":{},"classes/Sources.html":{}}}],["encodeuricomponent(image.tag",{"_index":4191,"title":{},"body":{"classes/Result.html":{}}}],["encodeuricomponent(name",{"_index":4142,"title":{},"body":{"injectables/ResourceService.html":{},"classes/Result.html":{}}}],["encodeuricomponent(packs",{"_index":2438,"title":{},"body":{"classes/DependencyWrapper.html":{},"injectables/PackagesService.html":{},"classes/Sources.html":{}}}],["encodeuricomponent(path",{"_index":2271,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["encodeuricomponent(run.name",{"_index":4296,"title":{},"body":{"classes/Result.html":{}}}],["encodeuricomponent(type",{"_index":4141,"title":{},"body":{"injectables/ResourceService.html":{}}}],["encryptedpassword",{"_index":4243,"title":{},"body":{"classes/Result.html":{}}}],["end",{"_index":1970,"title":{},"body":{"components/BuildComponent.html":{},"components/HomeComponent.html":{},"components/RuntimeK8sComponent.html":{},"index.html":{}}}],["endpoint",{"_index":173,"title":{},"body":{"classes/APIDefinition.html":{},"classes/Payload.html":{},"classes/ServiceInfo.html":{},"components/StagingComponent.html":{},"classes/TestCase.html":{},"classes/WmPackageInfo.html":{}}}],["endpoint.isapi",{"_index":4969,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["enforcer",{"_index":3153,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["ensure",{"_index":5380,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["ensures",{"_index":1277,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/UMInstallerComponent.html":{}}}],["entered",{"_index":4764,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["enterprise",{"_index":2347,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["entity",{"_index":138,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"injectables/K8sService.html":{},"classes/Result.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["entry",{"_index":1530,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["entrycomponents",{"_index":1589,"title":{},"body":{"modules/AppModule.html":{}}}],["entrypoint",{"_index":510,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["entryuser",{"_index":616,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["entryuserctrl",{"_index":4598,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["enum",{"_index":54,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/CommitInfo.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/DockerContainer.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"classes/K8sDeployment.html":{},"classes/K8sPod.html":{},"classes/Payload.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RepoSettings.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/Server.html":{},"injectables/Settings.html":{},"classes/Stage.html":{},"classes/Test.html":{},"classes/Values.html":{}}}],["enumerations",{"_index":5722,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":684,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["environment",{"_index":306,"title":{},"body":{"components/AboutComponent.html":{},"components/TestHistoryComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environments",{"_index":4436,"title":{},"body":{"components/RuntimeDetailsComponent.html":{}}}],["environmentvariable(id",{"_index":775,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["equals",{"_index":1884,"title":{},"body":{"classes/BuildCommand.html":{}}}],["equals(b",{"_index":497,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["err:'+err",{"_index":5371,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["error",{"_index":130,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/CommitInfo.html":{},"classes/DependencyWrapper.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"injectables/K8sService.html":{},"injectables/Ng2Uploader.html":{},"injectables/PackagesService.html":{},"classes/Payload.html":{},"classes/RepoSettings.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"injectables/Settings.html":{},"classes/SourceWrapper.html":{},"classes/Sources.html":{},"injectables/TestConfigService.html":{},"classes/UploadedFile.html":{},"classes/Values.html":{},"classes/WebSocketService.html":{},"miscellaneous/enumerations.html":{}}}],["error.message",{"_index":2834,"title":{},"body":{"classes/GitSelectionModel.html":{},"injectables/K8sService.html":{},"classes/SourceWrapper.html":{}}}],["error.status",{"_index":2826,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["error;//of",{"_index":4303,"title":{},"body":{"classes/Result.html":{}}}],["even",{"_index":2825,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["event",{"_index":2023,"title":{},"body":{"components/BuildExeComponent.html":{},"directives/CancelCdkDrag.html":{},"components/EditContainerComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"injectables/Ng2Uploader.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/StagingComponent.html":{},"components/UploadButtonComponent.html":{},"classes/UploadedFile.html":{}}}],["event.cancelbubble",{"_index":2155,"title":{},"body":{"directives/CancelCdkDrag.html":{}}}],["event.pagex",{"_index":2602,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["event.pagey",{"_index":2603,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["event.previouslyselectedindex",{"_index":4978,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["event.selectedindex",{"_index":4977,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["event.value",{"_index":4425,"title":{},"body":{"components/RuntimeDetailsComponent.html":{}}}],["eventemitter",{"_index":888,"title":{},"body":{"classes/Action-1.html":{},"components/ActionComponent.html":{},"components/BuildExeComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"classes/GitSelectionModel.html":{},"injectables/Ng2Uploader.html":{},"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{},"components/PodsListComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"classes/SourceWrapper.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/UploadButtonComponent.html":{},"classes/UploadedFile.html":{}}}],["eventemitter(true",{"_index":3673,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["eventstore",{"_index":1314,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["eventstore.buildtarget",{"_index":1317,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["eventstore.commandtype",{"_index":1316,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["eventstore.filetype",{"_index":1318,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["eventstore.target",{"_index":1319,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["evt",{"_index":5600,"title":{},"body":{"classes/WebSocketService.html":{}}}],["exclude",{"_index":5128,"title":{},"body":{"classes/Source.html":{}}}],["exe",{"_index":2001,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["exe'},{'name",{"_index":333,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["exe.component",{"_index":1677,"title":{},"body":{"modules/AppModule.html":{},"components/SagImageAlerterComponent.html":{}}}],["exe.component.ts",{"_index":2000,"title":{},"body":{"components/BuildExeComponent.html":{},"coverage.html":{}}}],["exe.component.ts:132",{"_index":2022,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["exe.component.ts:137",{"_index":2028,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["exe.component.ts:149",{"_index":2026,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["exe.component.ts:161",{"_index":2027,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["exe.component.ts:30",{"_index":2033,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["exe.component.ts:31",{"_index":2051,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["exe.component.ts:33",{"_index":2036,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["exe.component.ts:34",{"_index":2037,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["exe.component.ts:35",{"_index":2041,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["exe.component.ts:36",{"_index":2030,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["exe.component.ts:37",{"_index":2049,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["exe.component.ts:39",{"_index":2040,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["exe.component.ts:40",{"_index":2052,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["exe.component.ts:41",{"_index":2050,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["exe.component.ts:43",{"_index":2054,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["exe.component.ts:44",{"_index":2034,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["exe.component.ts:45",{"_index":2043,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["exe.component.ts:47",{"_index":2053,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["exe.component.ts:48",{"_index":2046,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["exe.component.ts:49",{"_index":2047,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["exe.component.ts:50",{"_index":2029,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["exe.component.ts:52",{"_index":2042,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["exe.component.ts:53",{"_index":2035,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["exe.component.ts:56",{"_index":2020,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["exe.component.ts:58",{"_index":2039,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["exe.component.ts:84",{"_index":2024,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["execute",{"_index":2994,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["executeaction",{"_index":3899,"title":{},"body":{"components/PodsListComponent.html":{}}}],["executeaction(image",{"_index":3917,"title":{},"body":{"components/PodsListComponent.html":{}}}],["execution",{"_index":797,"title":{},"body":{"classes/Action.html":{},"components/ActionComponent.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["existing",{"_index":4959,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["existing.tests.push(this.currenttestsuite.tests.get(key.value",{"_index":4962,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["existing=this.inlist(v",{"_index":4960,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["exitpoint",{"_index":511,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["expansion",{"_index":5398,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["experimental",{"_index":79,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"miscellaneous/enumerations.html":{}}}],["export",{"_index":53,"title":{},"body":{"classes/API.html":{},"classes/APIDefinition.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"components/AboutComponent.html":{},"classes/Action.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"interfaces/ActionsComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"classes/BuildImage.html":{},"directives/BuildImageChooseDirective.html":{},"interfaces/BuildParams.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"directives/CancelCdkDrag.html":{},"classes/CommitInfo.html":{},"injectables/ContainerTemplates.html":{},"classes/DependencyWrapper.html":{},"classes/Deployment.html":{},"components/DeploymentDetailsComponent.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/DockerContainer.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"components/HomeComponent.html":{},"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/K8sPod.html":{},"injectables/K8sService.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"components/MicroServiceInstallerComponent.html":{},"injectables/Ng2Uploader.html":{},"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{},"injectables/PackagesService.html":{},"classes/Payload.html":{},"components/PodsListComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"interfaces/PropertiesChangedOwner.html":{},"classes/RepoSettings.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"directives/RuntimeActionsDirective.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"components/ServicePropertiesComponent.html":{},"injectables/Settings.html":{},"components/SimpleNameComponent.html":{},"classes/Source.html":{},"classes/SourceWrapper.html":{},"classes/Sources.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{},"classes/TestCase.html":{},"components/TestCaseComponent.html":{},"injectables/TestConfigService.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"classes/TestSuite.html":{},"injectables/TestTraceService.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"classes/UploadedFile.html":{},"classes/Values.html":{},"classes/WebSocketService.html":{},"classes/WmPackageInfo.html":{}}}],["exports",{"_index":1574,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["expose",{"_index":5395,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["extended",{"_index":5382,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["extends",{"_index":2709,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/K8sDeployment.html":{},"classes/SourceWrapper.html":{}}}],["external",{"_index":655,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"injectables/ContainerTemplates.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"components/EditContainerComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{}}}],["extra",{"_index":3026,"title":{},"body":{"components/HomeComponent.html":{}}}],["extract",{"_index":1433,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["extract.buildtarget",{"_index":1461,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["extract.commandtype",{"_index":1460,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["extract.description",{"_index":1463,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["extract.filetype",{"_index":1462,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["extract.source",{"_index":1464,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["extract.target",{"_index":1465,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["extras/directives/cancelcdkdrag.directive",{"_index":1623,"title":{},"body":{"modules/AppModule.html":{}}}],["extras/ng2",{"_index":1627,"title":{},"body":{"modules/AppModule.html":{}}}],["f",{"_index":473,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"injectables/Ng2Uploader.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{},"classes/UploadedFile.html":{}}}],["f.buildtarget",{"_index":476,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["f.commandtype",{"_index":474,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["f.conditions",{"_index":486,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["f.description",{"_index":484,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["f.display",{"_index":489,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["f.filetype",{"_index":478,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["f.required",{"_index":493,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["f.source",{"_index":480,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["f.status",{"_index":2204,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["f.target",{"_index":482,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["f.uploading",{"_index":3753,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["faarrowleft",{"_index":1730,"title":{},"body":{"modules/AppModule.html":{}}}],["faarrowright",{"_index":1731,"title":{},"body":{"modules/AppModule.html":{}}}],["faarrowsaltv",{"_index":1743,"title":{},"body":{"modules/AppModule.html":{}}}],["fabars",{"_index":1695,"title":{},"body":{"modules/AppModule.html":{}}}],["fabox",{"_index":1698,"title":{},"body":{"modules/AppModule.html":{}}}],["fabug",{"_index":1703,"title":{},"body":{"modules/AppModule.html":{}}}],["facaretsquaredown",{"_index":1741,"title":{},"body":{"modules/AppModule.html":{}}}],["facaretsquareup",{"_index":1742,"title":{},"body":{"modules/AppModule.html":{}}}],["facertificate",{"_index":1755,"title":{},"body":{"modules/AppModule.html":{}}}],["facheck",{"_index":1702,"title":{},"body":{"modules/AppModule.html":{}}}],["fachecksquare",{"_index":1740,"title":{},"body":{"modules/AppModule.html":{}}}],["fachevroncircledown",{"_index":1732,"title":{},"body":{"modules/AppModule.html":{}}}],["fachevrondown",{"_index":1739,"title":{},"body":{"modules/AppModule.html":{}}}],["facilitate",{"_index":301,"title":{},"body":{"components/AboutComponent.html":{}}}],["facircle",{"_index":1692,"title":{},"body":{"modules/AppModule.html":{}}}],["faclock",{"_index":1716,"title":{},"body":{"modules/AppModule.html":{}}}],["faclone",{"_index":1756,"title":{},"body":{"modules/AppModule.html":{}}}],["faclouddownloadalt",{"_index":1759,"title":{},"body":{"modules/AppModule.html":{}}}],["facloudscale",{"_index":1688,"title":{},"body":{"modules/AppModule.html":{}}}],["facloudsunrain",{"_index":1719,"title":{},"body":{"modules/AppModule.html":{}}}],["faclouduploadalt",{"_index":1760,"title":{},"body":{"modules/AppModule.html":{}}}],["facodebranch",{"_index":1745,"title":{},"body":{"modules/AppModule.html":{}}}],["facog",{"_index":1707,"title":{},"body":{"modules/AppModule.html":{}}}],["facomment",{"_index":1724,"title":{},"body":{"modules/AppModule.html":{}}}],["facomments",{"_index":1736,"title":{},"body":{"modules/AppModule.html":{}}}],["fadecolor",{"_index":1987,"title":{},"body":{"components/BuildComponent.html":{},"components/TestCaseComponent.html":{}}}],["fadein",{"_index":3041,"title":{},"body":{"components/HomeComponent.html":{}}}],["fadocker",{"_index":1687,"title":{},"body":{"modules/AppModule.html":{}}}],["faeject",{"_index":1708,"title":{},"body":{"modules/AppModule.html":{}}}],["faellipsisv",{"_index":1694,"title":{},"body":{"modules/AppModule.html":{}}}],["faenvelope",{"_index":1713,"title":{},"body":{"modules/AppModule.html":{}}}],["faexclamationcircle",{"_index":1705,"title":{},"body":{"modules/AppModule.html":{}}}],["faexclamationtriangle",{"_index":1711,"title":{},"body":{"modules/AppModule.html":{}}}],["fafiledownload",{"_index":1747,"title":{},"body":{"modules/AppModule.html":{}}}],["fafileupload",{"_index":1749,"title":{},"body":{"modules/AppModule.html":{}}}],["faflag",{"_index":1726,"title":{},"body":{"modules/AppModule.html":{}}}],["fahome",{"_index":1704,"title":{},"body":{"modules/AppModule.html":{}}}],["fahourglassend",{"_index":1729,"title":{},"body":{"modules/AppModule.html":{}}}],["fail",{"_index":1130,"title":{},"body":{"components/ActionComponent.html":{},"components/StagingComponent.html":{},"injectables/TestTraceService.html":{}}}],["failed",{"_index":225,"title":{},"body":{"classes/APIDefinition.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"components/BuildExeComponent.html":{},"classes/GitSelectionModel.html":{},"injectables/K8sService.html":{},"components/RuntimeScaleComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/ServiceInfo.html":{},"classes/SourceWrapper.html":{},"components/UploadButtonComponent.html":{},"classes/WmPackageInfo.html":{},"miscellaneous/enumerations.html":{}}}],["failedtests(element",{"_index":4914,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["failedtests(image",{"_index":997,"title":{},"body":{"classes/Action-1.html":{}}}],["fainfo",{"_index":1754,"title":{},"body":{"modules/AppModule.html":{}}}],["falevelupalt",{"_index":1738,"title":{},"body":{"modules/AppModule.html":{}}}],["falightbulb",{"_index":1712,"title":{},"body":{"modules/AppModule.html":{}}}],["falock",{"_index":1746,"title":{},"body":{"modules/AppModule.html":{}}}],["falockopen",{"_index":1750,"title":{},"body":{"modules/AppModule.html":{}}}],["false",{"_index":494,"title":{},"body":{"classes/Action.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildExeComponent.html":{},"interfaces/BuildParams.html":{},"injectables/ContainerTemplates.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"components/EditContainerComponent.html":{},"classes/GitSelectionModel.html":{},"components/HomeComponent.html":{},"injectables/K8sService.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"injectables/Ng2Uploader.html":{},"directives/NgFileDrop.html":{},"components/PodsListComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"components/ServicePropertiesComponent.html":{},"classes/SourceWrapper.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{},"components/UploadButtonComponent.html":{},"classes/UploadedFile.html":{},"classes/WebSocketService.html":{},"miscellaneous/variables.html":{}}}],["faminus",{"_index":1720,"title":{},"body":{"modules/AppModule.html":{}}}],["faminuscircle",{"_index":1722,"title":{},"body":{"modules/AppModule.html":{}}}],["faminussquare",{"_index":1758,"title":{},"body":{"modules/AppModule.html":{}}}],["fapen",{"_index":1727,"title":{},"body":{"modules/AppModule.html":{}}}],["fapensquare",{"_index":1728,"title":{},"body":{"modules/AppModule.html":{}}}],["faplay",{"_index":1709,"title":{},"body":{"modules/AppModule.html":{}}}],["faplus",{"_index":1717,"title":{},"body":{"modules/AppModule.html":{}}}],["fapluscircle",{"_index":1721,"title":{},"body":{"modules/AppModule.html":{}}}],["faplussquare",{"_index":1757,"title":{},"body":{"modules/AppModule.html":{}}}],["faquestion",{"_index":1735,"title":{},"body":{"modules/AppModule.html":{}}}],["farocket",{"_index":1700,"title":{},"body":{"modules/AppModule.html":{}}}],["farunning",{"_index":1706,"title":{},"body":{"modules/AppModule.html":{}}}],["fas",{"_index":1778,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["fashare",{"_index":1753,"title":{},"body":{"modules/AppModule.html":{}}}],["faspinner",{"_index":1701,"title":{},"body":{"modules/AppModule.html":{}}}],["fasquare",{"_index":1710,"title":{},"body":{"modules/AppModule.html":{}}}],["fastar",{"_index":1725,"title":{},"body":{"modules/AppModule.html":{}}}],["fastop",{"_index":1714,"title":{},"body":{"modules/AppModule.html":{}}}],["fastopcircle",{"_index":1715,"title":{},"body":{"modules/AppModule.html":{}}}],["fasync",{"_index":1737,"title":{},"body":{"modules/AppModule.html":{}}}],["fasyncalt",{"_index":1763,"title":{},"body":{"modules/AppModule.html":{}}}],["fasyncalt,fausercircle",{"_index":1752,"title":{},"body":{"modules/AppModule.html":{}}}],["faterminal",{"_index":1696,"title":{},"body":{"modules/AppModule.html":{}}}],["fathumbsdown",{"_index":1734,"title":{},"body":{"modules/AppModule.html":{}}}],["fathumbsup",{"_index":1733,"title":{},"body":{"modules/AppModule.html":{}}}],["fatimes",{"_index":1718,"title":{},"body":{"modules/AppModule.html":{}}}],["fatimescircle",{"_index":1697,"title":{},"body":{"modules/AppModule.html":{}}}],["fatools",{"_index":1748,"title":{},"body":{"modules/AppModule.html":{}}}],["fatrashalt",{"_index":1723,"title":{},"body":{"modules/AppModule.html":{}}}],["fauser",{"_index":1751,"title":{},"body":{"modules/AppModule.html":{}}}],["favial",{"_index":1699,"title":{},"body":{"modules/AppModule.html":{}}}],["favials",{"_index":1744,"title":{},"body":{"modules/AppModule.html":{}}}],["feature",{"_index":3611,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["features",{"_index":2698,"title":{},"body":{"components/EditContainerComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/StagingComponent.html":{}}}],["features.set(\"adapters",{"_index":3608,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["features.set(\"properties",{"_index":3606,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["featuresctrl",{"_index":3492,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["fee",{"_index":3155,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["fetch",{"_index":4321,"title":{},"body":{"classes/Result.html":{}}}],["fetchpods",{"_index":3432,"title":{},"body":{"classes/LivePods.html":{}}}],["fetchrepositories",{"_index":2787,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["fi",{"_index":3156,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["field",{"_index":3603,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["fieldname",{"_index":3635,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/API.html":{},"classes/APIDefinition.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"components/AboutComponent.html":{},"classes/Action.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"interfaces/ActionsComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"classes/BuildImage.html":{},"directives/BuildImageChooseDirective.html":{},"interfaces/BuildParams.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"directives/CancelCdkDrag.html":{},"classes/CommitInfo.html":{},"injectables/ContainerTemplates.html":{},"classes/DependencyWrapper.html":{},"classes/Deployment.html":{},"components/DeploymentDetailsComponent.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/DockerContainer.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"components/HomeComponent.html":{},"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/K8sPod.html":{},"injectables/K8sService.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"components/MicroServiceInstallerComponent.html":{},"injectables/Ng2Uploader.html":{},"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{},"injectables/PackagesService.html":{},"classes/Payload.html":{},"components/PodsListComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"interfaces/PropertiesChangedOwner.html":{},"classes/RepoSettings.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"directives/RuntimeActionsDirective.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"components/ServicePropertiesComponent.html":{},"injectables/Settings.html":{},"components/SimpleNameComponent.html":{},"classes/Source.html":{},"classes/SourceWrapper.html":{},"classes/Sources.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{},"classes/TestCase.html":{},"components/TestCaseComponent.html":{},"injectables/TestConfigService.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"classes/TestSuite.html":{},"injectables/TestTraceService.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"classes/UploadedFile.html":{},"classes/Values.html":{},"classes/WebSocketService.html":{},"classes/WmPackageInfo.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["file.buildtarget",{"_index":3558,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["file.commandtype",{"_index":1271,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/UMInstallerComponent.html":{}}}],["file.description",{"_index":1274,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/UMInstallerComponent.html":{}}}],["file.display",{"_index":3560,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["file.filetype",{"_index":1272,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/UMInstallerComponent.html":{}}}],["file.name",{"_index":3760,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["file.size",{"_index":3763,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["file.source",{"_index":1283,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/UMInstallerComponent.html":{}}}],["file.target",{"_index":1275,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/UMInstallerComponent.html":{}}}],["file.withcredentials",{"_index":5501,"title":{},"body":{"components/UploadButtonComponent.html":{}}}],["filecontents",{"_index":2864,"title":{},"body":{"injectables/GitSourceService.html":{}}}],["filecontents(path",{"_index":2270,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["filefortype",{"_index":2128,"title":{},"body":{"interfaces/BuildParams.html":{}}}],["filefortype(type",{"_index":514,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["fileinfo",{"_index":2170,"title":{"classes/FileInfo.html":{}},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"coverage.html":{}}}],["fileinfo(f.filename",{"_index":2203,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["fileinqueue.length",{"_index":3794,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["filelist",{"_index":3654,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["filename",{"_index":2186,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"components/MicroServiceInstallerComponent.html":{},"directives/NgFileDrop.html":{}}}],["filenamestr",{"_index":3812,"title":{},"body":{"directives/NgFileDrop.html":{}}}],["fileref",{"_index":4828,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["files",{"_index":2164,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"injectables/Ng2Uploader.html":{},"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{},"index.html":{}}}],["files.length",{"_index":3820,"title":{},"body":{"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{}}}],["fileselectdirective",{"_index":5489,"title":{},"body":{"components/UploadButtonComponent.html":{}}}],["filestatus",{"_index":2182,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"miscellaneous/enumerations.html":{}}}],["filestatus.added",{"_index":2189,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["filestatus.changed",{"_index":2190,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["filestatus.removed",{"_index":2188,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["filetype",{"_index":466,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["fileuploader",{"_index":5486,"title":{},"body":{"components/UploadButtonComponent.html":{}}}],["fileuploader({url",{"_index":5497,"title":{},"body":{"components/UploadButtonComponent.html":{}}}],["fileuploadmodule",{"_index":1624,"title":{},"body":{"modules/AppModule.html":{}}}],["filewithdescription(type",{"_index":604,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["filter",{"_index":3260,"title":{},"body":{"injectables/K8sService.html":{}}}],["filterkey",{"_index":4201,"title":{},"body":{"classes/Result.html":{}}}],["filtertype",{"_index":4318,"title":{},"body":{"classes/Result.html":{}}}],["filtervalue",{"_index":4202,"title":{},"body":{"classes/Result.html":{}}}],["firemouseup",{"_index":2142,"title":{},"body":{"directives/CancelCdkDrag.html":{}}}],["firemouseup($event",{"_index":2147,"title":{},"body":{"directives/CancelCdkDrag.html":{}}}],["first",{"_index":4796,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["first.foreach((a",{"_index":4798,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["flag",{"_index":5750,"title":{},"body":{"index.html":{}}}],["flagchanges",{"_index":1215,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/UMInstallerComponent.html":{}}}],["flagchanges(port",{"_index":1219,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{}}}],["flagchanges(propsfile",{"_index":3506,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["flagchanges(realm",{"_index":5448,"title":{},"body":{"components/UMInstallerComponent.html":{}}}],["flaghaveactions",{"_index":4499,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["flaghaveactions(havechanges",{"_index":4507,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["flex",{"_index":1960,"title":{},"body":{"components/BuildComponent.html":{},"components/HomeComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/TestCaseComponent.html":{}}}],["float",{"_index":5324,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["fo",{"_index":3157,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["font",{"_index":1969,"title":{},"body":{"components/BuildComponent.html":{},"components/HomeComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/TestCaseComponent.html":{},"dependencies.html":{}}}],["fontawesome",{"_index":1618,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["fontawesomemodule",{"_index":1616,"title":{},"body":{"modules/AppModule.html":{}}}],["fontconfig",{"_index":1552,"title":{},"body":{"components/ApiPortalInstallerComponent.html":{}}}],["for(var",{"_index":2288,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"classes/SourceWrapper.html":{}}}],["forcereindex",{"_index":2424,"title":{},"body":{"classes/DependencyWrapper.html":{},"injectables/PackagesService.html":{},"classes/Sources.html":{}}}],["form",{"_index":1056,"title":{},"body":{"components/ActionComponent.html":{},"components/EditContainerComponent.html":{},"injectables/Ng2Uploader.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"classes/UploadedFile.html":{}}}],["form.append(this.fieldname",{"_index":3759,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["formbuilder",{"_index":1071,"title":{},"body":{"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"directives/BuildImageChooseDirective.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"components/EditContainerComponent.html":{},"classes/GitSelectionModel.html":{},"interfaces/PropertiesChangedOwner.html":{},"components/SagImageAlerterComponent.html":{},"classes/ServiceInfo.html":{},"components/ServicePropertiesComponent.html":{},"classes/SourceWrapper.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["formcontrol",{"_index":1086,"title":{},"body":{"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/EditContainerComponent.html":{},"classes/GitSelectionModel.html":{},"components/MicroServiceInstallerComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/ServiceInfo.html":{},"components/ServicePropertiesComponent.html":{},"classes/SourceWrapper.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["formcontrol(\"0.0.1",{"_index":4641,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["formcontrol(\"continue",{"_index":1162,"title":{},"body":{"components/ActionComponent.html":{}}}],["formcontrol(\"docker",{"_index":2629,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["formcontrol(\"minor",{"_index":4643,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["formcontrol(\"none",{"_index":1154,"title":{},"body":{"components/ActionComponent.html":{}}}],["formcontrol(\"sagadmin",{"_index":4650,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["formcontrol(null",{"_index":4899,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["formcontrol(propsfile",{"_index":3528,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["formcontrol(this.apiforvalue(this.testcase.api",{"_index":5299,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["formcontrol(this.container.active",{"_index":2649,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["formcontrol(this.container.hostname",{"_index":2655,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["formcontrol(this.container.image",{"_index":2658,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["formcontrol(this.container.name",{"_index":2652,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["formcontrol(this.container.ports[0].external",{"_index":2656,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["formcontrol(this.container.ports[0].internal",{"_index":2654,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["formcontrol(this.currentapigatewaylicense",{"_index":1384,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["formcontrol(this.currentinstaller.filefortype(\"support",{"_index":3533,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["formcontrol(this.datasource.args.get(\"elkporthttp",{"_index":1251,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["formcontrol(this.datasource.args.get(\"elkporttcp",{"_index":1253,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["formcontrol(this.datasource.args.get(\"mcgw_api_gateway_password",{"_index":1393,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["formcontrol(this.datasource.args.get(\"mcgw_api_gateway_url",{"_index":1389,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["formcontrol(this.datasource.args.get(\"mcgw_api_gateway_user",{"_index":1391,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["formcontrol(this.datasource.args.get(\"realm",{"_index":5454,"title":{},"body":{"components/UMInstallerComponent.html":{}}}],["formcontrol(this.datasource.args.get(\"secureport",{"_index":1541,"title":{},"body":{"components/ApiPortalInstallerComponent.html":{}}}],["formcontrol(this.datasource.args.get(\"uiport",{"_index":1247,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["formcontrol(this.datasource.args.get(\"uiportsecure",{"_index":1249,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["formcontrol(this.datasource.args.get('mcgw_ports_https",{"_index":1387,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["formcontrol(this.datasource.publicport",{"_index":1245,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{}}}],["formcontrol(this.determinefeatureaddon",{"_index":3531,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["formcontrol(this.packageforvalue(this.package.name",{"_index":5293,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["formcontrol(this.service.appname",{"_index":5043,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["formcontrol(this.service.hostname",{"_index":5045,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["formcontrol(this.service.replicas",{"_index":5047,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["formcontrol(this.service.requiresmonitoring",{"_index":5051,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["formcontrol(this.service.restartpolicy",{"_index":5053,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["formcontrol(this.service.servicetype",{"_index":5049,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["formcontrol(this.testcase.api",{"_index":5297,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["formcontrol(this.testcase.endpoint",{"_index":5295,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["formcontrol(true",{"_index":4648,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["formdata",{"_index":3758,"title":{},"body":{"injectables/Ng2Uploader.html":{},"injectables/ResourceService.html":{},"classes/UploadedFile.html":{}}}],["formdata.append('files",{"_index":4145,"title":{},"body":{"injectables/ResourceService.html":{}}}],["formdata:formdata",{"_index":4144,"title":{},"body":{"injectables/ResourceService.html":{}}}],["formgroup",{"_index":1110,"title":{},"body":{"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"directives/BuildImageChooseDirective.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"components/EditContainerComponent.html":{},"classes/GitSelectionModel.html":{},"components/MicroServiceInstallerComponent.html":{},"interfaces/PropertiesChangedOwner.html":{},"components/SagImageAlerterComponent.html":{},"classes/ServiceInfo.html":{},"components/ServicePropertiesComponent.html":{},"classes/SourceWrapper.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["formsmodule",{"_index":1608,"title":{},"body":{"modules/AppModule.html":{}}}],["fortawesome/angular",{"_index":1617,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["fortawesome/fontawesome",{"_index":1620,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["fortawesome/free",{"_index":1689,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["found",{"_index":857,"title":{},"body":{"classes/Action.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"injectables/ContainerTemplates.html":{},"classes/DependencyWrapper.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"components/EditContainerComponent.html":{},"classes/GitSelectionModel.html":{},"injectables/PackagesService.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RepoSettings.html":{},"classes/RunSet.html":{},"components/SagImageAlerterComponent.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"injectables/Settings.html":{},"classes/SourceWrapper.html":{},"classes/Sources.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{},"components/TestCaseComponent.html":{},"classes/Values.html":{}}}],["foundindex",{"_index":3481,"title":{},"body":{"classes/LivePods.html":{},"classes/LivePodsCount.html":{}}}],["frame",{"_index":5385,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["from(#eb009f",{"_index":1993,"title":{},"body":{"components/BuildComponent.html":{},"components/TestCaseComponent.html":{}}}],["fum",{"_index":3158,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["function",{"_index":867,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{},"classes/WebSocketService.html":{},"coverage.html":{}}}],["function(err",{"_index":5607,"title":{},"body":{"classes/WebSocketService.html":{}}}],["function(path",{"_index":1838,"title":{},"body":{"modules/AppModule.html":{}}}],["functions",{"_index":5732,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":5753,"title":{},"body":{"index.html":{}}}],["g",{"_index":648,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"components/MicroServiceInstallerComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"components/SagImageAlerterComponent.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["g.name",{"_index":2798,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["gateway",{"_index":1090,"title":{},"body":{"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"injectables/ContainerTemplates.html":{}}}],["gateway.service.ts",{"_index":7,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["gateway.service.ts:113",{"_index":255,"title":{},"body":{"injectables/APIGatewayService.html":{}}}],["gateway.service.ts:142",{"_index":4835,"title":{},"body":{"classes/Scope.html":{}}}],["gateway.service.ts:143",{"_index":4836,"title":{},"body":{"classes/Scope.html":{}}}],["gateway.service.ts:148",{"_index":4843,"title":{},"body":{"classes/SearchObj.html":{}}}],["gateway.service.ts:149",{"_index":4839,"title":{},"body":{"classes/SearchObj.html":{}}}],["gateway.service.ts:150",{"_index":4842,"title":{},"body":{"classes/SearchObj.html":{}}}],["gateway.service.ts:151",{"_index":4841,"title":{},"body":{"classes/SearchObj.html":{}}}],["gateway.service.ts:152",{"_index":4840,"title":{},"body":{"classes/SearchObj.html":{}}}],["gateway.service.ts:153",{"_index":4838,"title":{},"body":{"classes/SearchObj.html":{}}}],["gateway.service.ts:164",{"_index":4844,"title":{},"body":{"classes/SearchObj.html":{}}}],["gateway.service.ts:17",{"_index":262,"title":{},"body":{"classes/APIPolicy.html":{}}}],["gateway.service.ts:27",{"_index":28,"title":{},"body":{"classes/API.html":{}}}],["gateway.service.ts:28",{"_index":31,"title":{},"body":{"classes/API.html":{}}}],["gateway.service.ts:29",{"_index":30,"title":{},"body":{"classes/API.html":{}}}],["gateway.service.ts:30",{"_index":35,"title":{},"body":{"classes/API.html":{}}}],["gateway.service.ts:31",{"_index":33,"title":{},"body":{"classes/API.html":{}}}],["gateway.service.ts:32",{"_index":24,"title":{},"body":{"classes/API.html":{}}}],["gateway.service.ts:40",{"_index":37,"title":{},"body":{"classes/API.html":{}}}],["gateway.service.ts:67",{"_index":261,"title":{},"body":{"injectables/APIGatewayService.html":{}}}],["gateway.service.ts:69",{"_index":257,"title":{},"body":{"injectables/APIGatewayService.html":{}}}],["gateway.service.ts:70",{"_index":258,"title":{},"body":{"injectables/APIGatewayService.html":{}}}],["gateway.service.ts:71",{"_index":254,"title":{},"body":{"injectables/APIGatewayService.html":{}}}],["gateway.service.ts:77",{"_index":256,"title":{},"body":{"injectables/APIGatewayService.html":{}}}],["gatewayexpander",{"_index":4041,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["generate",{"_index":1447,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"index.html":{}}}],["generated",{"_index":5735,"title":{},"body":{"index.html":{}}}],["generaterandomindex",{"_index":3645,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["getqueuesize",{"_index":3646,"title":{},"body":{"injectables/Ng2Uploader.html":{}}}],["gets",{"_index":1279,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/UMInstallerComponent.html":{}}}],["gettestsuitedefinition",{"_index":5335,"title":{},"body":{"injectables/TestConfigService.html":{}}}],["gettestsuitedefinition(id",{"_index":5337,"title":{},"body":{"injectables/TestConfigService.html":{}}}],["getting",{"_index":5733,"title":{"index.html":{}},"body":{}}],["gettitletext",{"_index":1852,"title":{},"body":{"classes/AppPage.html":{}}}],["git",{"_index":358,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"classes/CommitInfo.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"classes/SourceWrapper.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["gitapiurl",{"_index":4004,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["gitexpander",{"_index":4039,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["github",{"_index":4001,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{},"miscellaneous/enumerations.html":{}}}],["github_contents",{"_index":2207,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["github_repos",{"_index":2205,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["gitispacpassword",{"_index":4008,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["gitlab",{"_index":4002,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{},"miscellaneous/enumerations.html":{}}}],["gitlab_contents",{"_index":2211,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["gitlab_file",{"_index":2213,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["gitlab_repos",{"_index":2209,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["gitname",{"_index":4006,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["gitpaginator",{"_index":2736,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["gitpassword",{"_index":2404,"title":{},"body":{"classes/DependencyWrapper.html":{},"injectables/PackagesService.html":{},"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Source.html":{},"classes/Sources.html":{},"classes/Values.html":{}}}],["gitrepo",{"_index":2181,"title":{"classes/GitRepo.html":{}},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"classes/SourceWrapper.html":{},"coverage.html":{}}}],["gitrepo(g.name",{"_index":2797,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["gitrepo(this._gittype",{"_index":2294,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["gitrepo.packages",{"_index":2765,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["gitrepo.packages.startswith",{"_index":2764,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["gitrepos",{"_index":4012,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["gitrepository",{"_index":2402,"title":{},"body":{"classes/DependencyWrapper.html":{},"injectables/PackagesService.html":{},"classes/Source.html":{},"classes/Sources.html":{}}}],["gits",{"_index":2730,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["gitselectionmodel",{"_index":2706,"title":{"classes/GitSelectionModel.html":{}},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{},"coverage.html":{}}}],["gitsourcescomponent",{"_index":357,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gitsourceservice",{"_index":1580,"title":{"injectables/GitSourceService.html":{}},"body":{"modules/AppModule.html":{},"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"classes/SourceWrapper.html":{},"coverage.html":{},"overview.html":{}}}],["gitsourceservice.github_contents",{"_index":2257,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["gitsourceservice.github_repos.replace(/owner",{"_index":2245,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["gitsourceservice.gitlab_contents",{"_index":2258,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["gitsourceservice.gitlab_file",{"_index":2272,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["gitsourceservice.gitlab_repos.replace(/token",{"_index":2248,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["gittype",{"_index":2178,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{},"miscellaneous/enumerations.html":{}}}],["gittype.github",{"_index":2244,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["gittype.gitlab",{"_index":4073,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["gituri",{"_index":2401,"title":{},"body":{"classes/DependencyWrapper.html":{},"classes/GitSelectionModel.html":{},"injectables/PackagesService.html":{},"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Source.html":{},"classes/SourceWrapper.html":{},"classes/Sources.html":{},"classes/Values.html":{}}}],["gituser",{"_index":2403,"title":{},"body":{"classes/DependencyWrapper.html":{},"injectables/PackagesService.html":{},"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Source.html":{},"classes/Sources.html":{},"classes/Values.html":{}}}],["glob",{"_index":3581,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["glob.buildtarget",{"_index":3585,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["glob.commandtype",{"_index":3584,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["glob.description",{"_index":3587,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["glob.filetype",{"_index":3586,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["glob.source",{"_index":3588,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["glob.target",{"_index":3590,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["globalvariables.cnf",{"_index":3589,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["globalvars",{"_index":3583,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["go",{"_index":2937,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["go:hover",{"_index":3036,"title":{},"body":{"components/HomeComponent.html":{}}}],["gobuild",{"_index":1910,"title":{},"body":{"components/BuildComponent.html":{},"components/HomeComponent.html":{}}}],["godeploy",{"_index":2894,"title":{},"body":{"components/HomeComponent.html":{}}}],["goinstall",{"_index":1911,"title":{},"body":{"components/BuildComponent.html":{},"components/HomeComponent.html":{}}}],["gomake",{"_index":2895,"title":{},"body":{"components/HomeComponent.html":{}}}],["gorun",{"_index":2896,"title":{},"body":{"components/HomeComponent.html":{}}}],["gosource",{"_index":2897,"title":{},"body":{"components/HomeComponent.html":{}}}],["gostage",{"_index":2898,"title":{},"body":{"components/HomeComponent.html":{}}}],["gotest",{"_index":2899,"title":{},"body":{"components/HomeComponent.html":{}}}],["gotestrun",{"_index":2900,"title":{},"body":{"components/HomeComponent.html":{}}}],["gotestsetup",{"_index":2901,"title":{},"body":{"components/HomeComponent.html":{}}}],["gotolastviewedpage",{"_index":5098,"title":{},"body":{"injectables/Settings.html":{}}}],["gotolastviewedpage(router",{"_index":4057,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["gradient(linear",{"_index":1992,"title":{},"body":{"components/BuildComponent.html":{},"components/TestCaseComponent.html":{}}}],["gray",{"_index":976,"title":{},"body":{"classes/Action-1.html":{},"components/BuildComponent.html":{},"components/EditContainerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{}}}],["green",{"_index":980,"title":{},"body":{"classes/Action-1.html":{},"components/PodsListComponent.html":{}}}],["group",{"_index":145,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"miscellaneous/enumerations.html":{}}}],["groupedlist",{"_index":4338,"title":{},"body":{"classes/Result.html":{}}}],["groupedlist.push(itobj.value",{"_index":4343,"title":{},"body":{"classes/Result.html":{}}}],["grow",{"_index":1967,"title":{},"body":{"components/BuildComponent.html":{},"components/RuntimeK8sComponent.html":{}}}],["h1')).gettext",{"_index":1860,"title":{},"body":{"classes/AppPage.html":{}}}],["hammerjs",{"_index":1615,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["handleerror(error",{"_index":4300,"title":{},"body":{"classes/Result.html":{}}}],["handleerrorbool(error",{"_index":4304,"title":{},"body":{"classes/Result.html":{}}}],["haschanged",{"_index":3465,"title":{},"body":{"classes/LivePods.html":{},"classes/LivePodsCount.html":{}}}],["hastests",{"_index":614,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["haveactions",{"_index":2512,"title":{},"body":{"components/DockerImageVersionsComponent.html":{},"components/RuntimeUpdateComponent.html":{}}}],["haveapis",{"_index":1065,"title":{},"body":{"components/ActionComponent.html":{},"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["havechange",{"_index":4536,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["havechanges",{"_index":921,"title":{},"body":{"classes/Action-1.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{}}}],["havetests(element",{"_index":4908,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["havetests(image",{"_index":994,"title":{},"body":{"classes/Action-1.html":{}}}],["havetestsforservice(service",{"_index":4965,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["headers",{"_index":112,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/CommitInfo.html":{},"classes/DependencyWrapper.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"injectables/K8sService.html":{},"injectables/PackagesService.html":{},"classes/RepoSettings.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"injectables/Settings.html":{},"classes/Sources.html":{},"injectables/TestConfigService.html":{},"injectables/TestTraceService.html":{},"components/UploadButtonComponent.html":{},"classes/Values.html":{}}}],["headers(altdockerhost",{"_index":4360,"title":{},"body":{"classes/Result.html":{}}}],["headers.append(\"archivewmimage",{"_index":4247,"title":{},"body":{"classes/Result.html":{}}}],["headers.append(\"dedicatedrepo",{"_index":4245,"title":{},"body":{"classes/Result.html":{}}}],["headers.append(\"generateonly",{"_index":4288,"title":{},"body":{"classes/Result.html":{}}}],["headers.append(\"test",{"_index":4286,"title":{},"body":{"classes/Result.html":{}}}],["headers.append(\"uploadapis",{"_index":4287,"title":{},"body":{"classes/Result.html":{}}}],["headers.append('authorization",{"_index":2246,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["headers.append('dockeremail",{"_index":4364,"title":{},"body":{"classes/Result.html":{}}}],["headers.set('packagesdir",{"_index":2415,"title":{},"body":{"classes/DependencyWrapper.html":{},"injectables/PackagesService.html":{},"classes/Sources.html":{}}}],["healthcheck",{"_index":512,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["height",{"_index":1954,"title":{},"body":{"components/BuildComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{}}}],["hello",{"_index":3142,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{},"injectables/K8sService.html":{}}}],["help",{"_index":5754,"title":{},"body":{"index.html":{}}}],["here",{"_index":4560,"title":{},"body":{"components/SagImageAlerterComponent.html":{},"components/TestHistoryComponent.html":{}}}],["hh:mm",{"_index":3973,"title":{},"body":{"components/PodsListComponent.html":{}}}],["hidden",{"_index":457,"title":{},"body":{"classes/Action.html":{},"components/ApiGatewayInstallerComponent.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildComponent.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"components/ServicePropertiesComponent.html":{},"classes/Stage.html":{},"classes/Test.html":{},"miscellaneous/enumerations.html":{}}}],["hide",{"_index":5388,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["hideextrainfo",{"_index":2902,"title":{},"body":{"components/HomeComponent.html":{}}}],["hint",{"_index":2547,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["history",{"_index":5350,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["history'},{'name",{"_index":396,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["history.component",{"_index":1673,"title":{},"body":{"modules/AppModule.html":{}}}],["history.component.ts",{"_index":5349,"title":{},"body":{"components/TestHistoryComponent.html":{},"coverage.html":{}}}],["history.component.ts:37",{"_index":5363,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["history.component.ts:40",{"_index":5357,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["history.component.ts:47",{"_index":5359,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["history.component.ts:57",{"_index":5358,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["history.component.ts:74",{"_index":5360,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["history.css",{"_index":5351,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["history.html",{"_index":5352,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["hohve3",{"_index":4011,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["home",{"_index":1765,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["home'},{'name",{"_index":361,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["homecomponent",{"_index":360,"title":{"components/HomeComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["host",{"_index":2683,"title":{},"body":{"components/EditContainerComponent.html":{},"directives/NgFileSelect.html":{},"components/ServicePropertiesComponent.html":{},"components/StagingComponent.html":{}}}],["host.html",{"_index":2544,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["hostctrl",{"_index":2548,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["hostlabel",{"_index":2549,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["hostname",{"_index":509,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["hostnamectrl",{"_index":5000,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["hosts",{"_index":2693,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["html",{"_index":309,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["htmlelement",{"_index":2152,"title":{},"body":{"directives/CancelCdkDrag.html":{}}}],["http://host.docker.internal:5555",{"_index":4031,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["http://localhost:4200",{"_index":5741,"title":{},"body":{"index.html":{}}}],["http://localhost:5555",{"_index":4034,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["httpclient",{"_index":43,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/CommitInfo.html":{},"classes/DependencyWrapper.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"injectables/K8sService.html":{},"injectables/PackagesService.html":{},"classes/RepoSettings.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"injectables/Settings.html":{},"classes/Sources.html":{},"injectables/TestConfigService.html":{},"injectables/TestTraceService.html":{},"classes/Values.html":{}}}],["httpclientmodule",{"_index":1610,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":5441,"title":{},"body":{"injectables/TestTraceService.html":{}}}],["httpheaders",{"_index":44,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/CommitInfo.html":{},"classes/DependencyWrapper.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"injectables/K8sService.html":{},"injectables/PackagesService.html":{},"classes/RepoSettings.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"injectables/Settings.html":{},"classes/Sources.html":{},"injectables/TestConfigService.html":{},"injectables/TestTraceService.html":{},"classes/Values.html":{}}}],["httpparams",{"_index":45,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/DependencyWrapper.html":{},"injectables/K8sService.html":{},"injectables/PackagesService.html":{},"classes/RepoSettings.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"injectables/Settings.html":{},"classes/Sources.html":{},"classes/Values.html":{}}}],["httpparams().append(\"filter",{"_index":4205,"title":{},"body":{"classes/Result.html":{}}}],["httpparams().append('app",{"_index":3336,"title":{},"body":{"injectables/K8sService.html":{}}}],["https://api.github.com",{"_index":4005,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["https://github.com",{"_index":4003,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["https://host.docker.internal:8443",{"_index":4453,"title":{},"body":{"components/RuntimeK8sComponent.html":{}}}],["https://hub.docker.com/_/softwareag",{"_index":4832,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["https://localhost:6443",{"_index":4018,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["httpsportctrl",{"_index":1341,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["hub",{"_index":4556,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["huistory",{"_index":4333,"title":{},"body":{"classes/Result.html":{}}}],["hyphenatedname",{"_index":619,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["i+1",{"_index":4451,"title":{},"body":{"components/RuntimeK8sComponent.html":{}}}],["i.args",{"_index":570,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["i.buildcommands.push(buildcommand.make(f",{"_index":599,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["i.entrypoint",{"_index":591,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["i.exitpoint",{"_index":593,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["i.healthcheck",{"_index":595,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["i.hostname",{"_index":589,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["i.includeupdate",{"_index":587,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["i.isnew",{"_index":585,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["i.issagproduct",{"_index":568,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["i.licensefile",{"_index":581,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["i.name",{"_index":567,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["i.primaryport",{"_index":583,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["i.producttype",{"_index":572,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["i.sourceimagetag",{"_index":576,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["i.targetimage",{"_index":579,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["i.wminstallerimage",{"_index":574,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["i=0",{"_index":1128,"title":{},"body":{"components/ActionComponent.html":{},"classes/CommitInfo.html":{},"components/EditContainerComponent.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/StagingComponent.html":{}}}],["i=0;i",{"_index":2289,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["icon",{"_index":1776,"title":{},"body":{"modules/AppModule.html":{},"components/MicroServiceInstallerComponent.html":{},"miscellaneous/variables.html":{}}}],["iconclass",{"_index":1777,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["iconforaction",{"_index":3900,"title":{},"body":{"components/PodsListComponent.html":{}}}],["iconforaction(image",{"_index":3919,"title":{},"body":{"components/PodsListComponent.html":{}}}],["icons",{"_index":1691,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["id",{"_index":11,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Action.html":{},"classes/Action-1.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/CommitInfo.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/DockerContainer.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/K8sPod.html":{},"injectables/Ng2Uploader.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"components/SagImageAlerterComponent.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{},"classes/TestCase.html":{},"injectables/TestConfigService.html":{},"classes/TestSuite.html":{},"classes/UploadedFile.html":{}}}],["idata",{"_index":3870,"title":{},"body":{"classes/Payload.html":{},"miscellaneous/enumerations.html":{}}}],["identifier",{"_index":5626,"title":{},"body":{"coverage.html":{}}}],["identify",{"_index":2996,"title":{},"body":{"components/HomeComponent.html":{},"components/ServicePropertiesComponent.html":{}}}],["idx",{"_index":710,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["if(originalobject",{"_index":872,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["if(typeof",{"_index":877,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["iframes",{"_index":5381,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["ignore",{"_index":4831,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["image",{"_index":187,"title":{},"body":{"classes/APIDefinition.html":{},"components/AboutComponent.html":{},"classes/Action.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"directives/BuildImageChooseDirective.html":{},"interfaces/BuildParams.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"injectables/ContainerTemplates.html":{},"classes/Deployment.html":{},"components/DeploymentDetailsComponent.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/DockerContainer.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"classes/GitSelectionModel.html":{},"components/HomeComponent.html":{},"classes/K8sDeploymentDefinition.html":{},"injectables/K8sService.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"interfaces/PropertiesChangedOwner.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"classes/SourceWrapper.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"injectables/TestTraceService.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"classes/WmPackageInfo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["image(name",{"_index":4193,"title":{},"body":{"classes/Result.html":{}}}],["image.altname",{"_index":3181,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["image.component",{"_index":1640,"title":{},"body":{"modules/AppModule.html":{}}}],["image.component.ts",{"_index":4550,"title":{},"body":{"components/SagImageAlerterComponent.html":{},"coverage.html":{}}}],["image.component.ts:858",{"_index":4563,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["image.component.ts:860",{"_index":4565,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["image.component.ts:865",{"_index":4564,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["image.copy",{"_index":4705,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["image.css",{"_index":4573,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["image.html",{"_index":4572,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["image.id",{"_index":1010,"title":{},"body":{"classes/Action-1.html":{},"classes/DockerContainer.html":{},"components/SagImageAlerterComponent.html":{}}}],["image.latestversion",{"_index":1021,"title":{},"body":{"classes/Action-1.html":{}}}],["image.latestversion().version",{"_index":992,"title":{},"body":{"classes/Action-1.html":{}}}],["image.name",{"_index":2363,"title":{},"body":{"injectables/ContainerTemplates.html":{},"classes/Result.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{}}}],["image.names",{"_index":2508,"title":{},"body":{"classes/DockerContainer.html":{}}}],["image.ports.push(p.containerport",{"_index":3195,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["image.primaryport",{"_index":2368,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["image.repository",{"_index":1031,"title":{},"body":{"classes/Action-1.html":{}}}],["image.setname(c.image",{"_index":3182,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["image.setname(image.tag().substring(0",{"_index":3185,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["image.setname(image.tag().substring(split+1",{"_index":3191,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["image.setrepository(image.tag().substring(0",{"_index":3192,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["image.setversion(image.version",{"_index":3186,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["image.status",{"_index":971,"title":{},"body":{"classes/Action-1.html":{}}}],["image.tag",{"_index":1025,"title":{},"body":{"classes/Action-1.html":{},"classes/Result.html":{}}}],["image.tag().indexof",{"_index":3183,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["image.tag().lastindexof",{"_index":3190,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["image.teststatus",{"_index":995,"title":{},"body":{"classes/Action-1.html":{},"components/RuntimeUpdateComponent.html":{}}}],["image.ts",{"_index":2113,"title":{},"body":{"classes/BuildImage.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["image.ts:3",{"_index":2115,"title":{},"body":{"classes/BuildImage.html":{}}}],["image.ts:4",{"_index":2116,"title":{},"body":{"classes/BuildImage.html":{}}}],["image.ts:5",{"_index":2117,"title":{},"body":{"classes/BuildImage.html":{}}}],["image.version",{"_index":991,"title":{},"body":{"classes/Action-1.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/Result.html":{}}}],["image/:id",{"_index":1768,"title":{},"body":{"modules/AppModule.html":{}}}],["imagecount",{"_index":924,"title":{},"body":{"classes/Action-1.html":{}}}],["imagectrl",{"_index":2550,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["imagefor(name",{"_index":4800,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["imageid",{"_index":4147,"title":{},"body":{"classes/Result.html":{}}}],["imagename",{"_index":708,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["imagename(image",{"_index":4713,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["imageprefix",{"_index":4015,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["imageref",{"_index":2309,"title":{},"body":{"injectables/ContainerTemplates.html":{},"classes/DockerContainer.html":{}}}],["imageref(image",{"_index":2320,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["images",{"_index":139,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Action-1.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"classes/CommitInfo.html":{},"components/DockerImageVersionsComponent.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"components/HomeComponent.html":{},"injectables/K8sService.html":{},"classes/Result.html":{},"components/RuntimeUpdateComponent.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"coverage.html":{}}}],["images'},{'name",{"_index":352,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["images(usecache",{"_index":4200,"title":{},"body":{"classes/Result.html":{}}}],["images.length",{"_index":4777,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["images.push(api.make(i",{"_index":141,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["images.push(image",{"_index":4353,"title":{},"body":{"classes/Result.html":{}}}],["images.push(k8sdeployment.make(i",{"_index":3383,"title":{},"body":{"injectables/K8sService.html":{}}}],["images.push(k8spod.make(i",{"_index":3382,"title":{},"body":{"injectables/K8sService.html":{}}}],["images.push(p",{"_index":2276,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["images.splice(i",{"_index":2275,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["images[0].getnextversion(this.determineversiontype",{"_index":4778,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["imagestatus",{"_index":897,"title":{},"body":{"classes/Action-1.html":{},"components/DockerImageVersionsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["imagestatus.deployed",{"_index":977,"title":{},"body":{"classes/Action-1.html":{}}}],["imagestatus.deprecated",{"_index":972,"title":{},"body":{"classes/Action-1.html":{}}}],["imagestatus.failed",{"_index":981,"title":{},"body":{"classes/Action-1.html":{}}}],["imagestatus.running",{"_index":979,"title":{},"body":{"classes/Action-1.html":{}}}],["img",{"_index":1784,"title":{},"body":{"modules/AppModule.html":{},"classes/Result.html":{},"components/SagImageAlerterComponent.html":{},"miscellaneous/variables.html":{}}}],["img.availableversions",{"_index":4310,"title":{},"body":{"classes/Result.html":{}}}],["img.exists",{"_index":4753,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["img.repository",{"_index":4767,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["implementaction",{"_index":4500,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["implementaction(action",{"_index":4509,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["implements",{"_index":548,"title":{},"body":{"classes/Action.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildExeComponent.html":{},"interfaces/BuildParams.html":{},"directives/CancelCdkDrag.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"components/ServicePropertiesComponent.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"classes/WebSocketService.html":{}}}],["import",{"_index":40,"title":{},"body":{"classes/API.html":{},"classes/APIDefinition.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"components/AboutComponent.html":{},"classes/Action.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"interfaces/ActionsComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"directives/BuildImageChooseDirective.html":{},"interfaces/BuildParams.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"directives/CancelCdkDrag.html":{},"classes/CommitInfo.html":{},"injectables/ContainerTemplates.html":{},"classes/DependencyWrapper.html":{},"classes/Deployment.html":{},"components/DeploymentDetailsComponent.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"components/HomeComponent.html":{},"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/K8sPod.html":{},"injectables/K8sService.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"components/MicroServiceInstallerComponent.html":{},"injectables/Ng2Uploader.html":{},"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{},"injectables/PackagesService.html":{},"components/PodsListComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"interfaces/PropertiesChangedOwner.html":{},"classes/RepoSettings.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"directives/RuntimeActionsDirective.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"components/ServicePropertiesComponent.html":{},"injectables/Settings.html":{},"components/SimpleNameComponent.html":{},"classes/SourceWrapper.html":{},"classes/Sources.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{},"classes/TestCase.html":{},"components/TestCaseComponent.html":{},"injectables/TestConfigService.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"classes/TestSuite.html":{},"injectables/TestTraceService.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"classes/UploadedFile.html":{},"classes/Values.html":{},"classes/WebSocketService.html":{},"classes/WmPackageInfo.html":{}}}],["important",{"_index":1939,"title":{},"body":{"components/BuildComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{}}}],["imported",{"_index":5378,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["imports",{"_index":1829,"title":{},"body":{"modules/AppModule.html":{}}}],["include",{"_index":2405,"title":{},"body":{"classes/DependencyWrapper.html":{},"components/MicroServiceInstallerComponent.html":{},"injectables/PackagesService.html":{},"classes/Source.html":{},"classes/Sources.html":{}}}],["included",{"_index":2688,"title":{},"body":{"components/EditContainerComponent.html":{},"classes/K8sDeploymentDefinition.html":{},"components/StagingComponent.html":{}}}],["includetests",{"_index":2010,"title":{},"body":{"components/BuildExeComponent.html":{},"classes/Result.html":{}}}],["includeupdate",{"_index":556,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/API.html":{},"classes/APIDefinition.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"components/AboutComponent.html":{},"classes/Action.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"interfaces/ActionsComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"classes/AppPage.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"classes/BuildImage.html":{},"directives/BuildImageChooseDirective.html":{},"interfaces/BuildParams.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"directives/CancelCdkDrag.html":{},"classes/CommitInfo.html":{},"injectables/ContainerTemplates.html":{},"classes/DependencyWrapper.html":{},"classes/Deployment.html":{},"components/DeploymentDetailsComponent.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/DockerContainer.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"components/HomeComponent.html":{},"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/K8sPod.html":{},"injectables/K8sService.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"components/MicroServiceInstallerComponent.html":{},"injectables/Ng2Uploader.html":{},"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{},"injectables/PackagesService.html":{},"classes/Payload.html":{},"components/PodsListComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"interfaces/PropertiesChangedOwner.html":{},"classes/RepoSettings.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"directives/RuntimeActionsDirective.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"components/ServicePropertiesComponent.html":{},"injectables/Settings.html":{},"components/SimpleNameComponent.html":{},"classes/Source.html":{},"classes/SourceWrapper.html":{},"classes/Sources.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{},"classes/TestCase.html":{},"components/TestCaseComponent.html":{},"injectables/TestConfigService.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"classes/TestSuite.html":{},"injectables/TestTraceService.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"classes/UploadedFile.html":{},"classes/Values.html":{},"classes/WebSocketService.html":{},"classes/WmPackageInfo.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["index(deploymentsetname",{"_index":2423,"title":{},"body":{"classes/DependencyWrapper.html":{},"injectables/PackagesService.html":{},"classes/Sources.html":{}}}],["index?repository",{"_index":2428,"title":{},"body":{"classes/DependencyWrapper.html":{},"injectables/PackagesService.html":{},"classes/Sources.html":{}}}],["indexing",{"_index":2815,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["indexofattribute",{"_index":2310,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["indexofattribute(container",{"_index":2322,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["indexoftemplate(name",{"_index":4790,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["indidivual",{"_index":5094,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["infinite",{"_index":1990,"title":{},"body":{"components/BuildComponent.html":{},"components/TestCaseComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/API.html":{},"classes/APIDefinition.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"components/AboutComponent.html":{},"classes/Action.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"interfaces/ActionsComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"classes/BuildImage.html":{},"directives/BuildImageChooseDirective.html":{},"interfaces/BuildParams.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"directives/CancelCdkDrag.html":{},"classes/CommitInfo.html":{},"injectables/ContainerTemplates.html":{},"classes/DependencyWrapper.html":{},"classes/Deployment.html":{},"components/DeploymentDetailsComponent.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/DockerContainer.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"components/HomeComponent.html":{},"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/K8sPod.html":{},"injectables/K8sService.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"components/MicroServiceInstallerComponent.html":{},"injectables/Ng2Uploader.html":{},"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{},"injectables/PackagesService.html":{},"classes/Payload.html":{},"components/PodsListComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"interfaces/PropertiesChangedOwner.html":{},"classes/RepoSettings.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"directives/RuntimeActionsDirective.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"components/ServicePropertiesComponent.html":{},"injectables/Settings.html":{},"components/SimpleNameComponent.html":{},"classes/Source.html":{},"classes/SourceWrapper.html":{},"classes/Sources.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{},"classes/TestCase.html":{},"components/TestCaseComponent.html":{},"injectables/TestConfigService.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"classes/TestSuite.html":{},"injectables/TestTraceService.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"classes/UploadedFile.html":{},"classes/Values.html":{},"classes/WebSocketService.html":{},"classes/WmPackageInfo.html":{}}}],["info.ts",{"_index":171,"title":{},"body":{"classes/APIDefinition.html":{},"classes/WmPackageInfo.html":{},"coverage.html":{}}}],["info.ts:11",{"_index":181,"title":{},"body":{"classes/APIDefinition.html":{}}}],["info.ts:22",{"_index":183,"title":{},"body":{"classes/APIDefinition.html":{}}}],["info.ts:36",{"_index":5616,"title":{},"body":{"classes/WmPackageInfo.html":{}}}],["info.ts:37",{"_index":5622,"title":{},"body":{"classes/WmPackageInfo.html":{}}}],["info.ts:38",{"_index":5614,"title":{},"body":{"classes/WmPackageInfo.html":{}}}],["info.ts:39",{"_index":5615,"title":{},"body":{"classes/WmPackageInfo.html":{}}}],["info.ts:40",{"_index":5617,"title":{},"body":{"classes/WmPackageInfo.html":{}}}],["info.ts:41",{"_index":5620,"title":{},"body":{"classes/WmPackageInfo.html":{}}}],["info.ts:42",{"_index":5619,"title":{},"body":{"classes/WmPackageInfo.html":{}}}],["info.ts:43",{"_index":5621,"title":{},"body":{"classes/WmPackageInfo.html":{}}}],["info.ts:44",{"_index":5618,"title":{},"body":{"classes/WmPackageInfo.html":{}}}],["info.ts:45",{"_index":5613,"title":{},"body":{"classes/WmPackageInfo.html":{}}}],["info.ts:5",{"_index":179,"title":{},"body":{"classes/APIDefinition.html":{}}}],["info.ts:51",{"_index":5623,"title":{},"body":{"classes/WmPackageInfo.html":{}}}],["info.ts:6",{"_index":178,"title":{},"body":{"classes/APIDefinition.html":{}}}],["info.ts:7",{"_index":180,"title":{},"body":{"classes/APIDefinition.html":{}}}],["info.ts:8",{"_index":177,"title":{},"body":{"classes/APIDefinition.html":{}}}],["info.ts:9",{"_index":176,"title":{},"body":{"classes/APIDefinition.html":{}}}],["information",{"_index":4823,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["inherited",{"_index":3068,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["init",{"_index":1495,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{},"components/TestHistoryComponent.html":{}}}],["init.buildtarget",{"_index":1497,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["init.commandtype",{"_index":1496,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["init.description",{"_index":1500,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["init.filetype",{"_index":1498,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["init.sh",{"_index":1503,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["init.source",{"_index":1502,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["init.target",{"_index":1504,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["initevents",{"_index":3800,"title":{},"body":{"directives/NgFileDrop.html":{}}}],["initialdelayseconds",{"_index":668,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["initialproperties",{"_index":2124,"title":{},"body":{"directives/BuildImageChooseDirective.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"interfaces/PropertiesChangedOwner.html":{},"components/SagImageAlerterComponent.html":{}}}],["inject",{"_index":284,"title":{},"body":{"components/AboutComponent.html":{},"components/BuildExeComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/UploadButtonComponent.html":{}}}],["inject(mat_dialog_data",{"_index":290,"title":{},"body":{"components/AboutComponent.html":{},"components/BuildExeComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{}}}],["injectable",{"_index":41,"title":{"injectables/APIGatewayService.html":{},"injectables/ContainerTemplates.html":{},"injectables/GitSourceService.html":{},"injectables/K8sService.html":{},"injectables/Ng2Uploader.html":{},"injectables/PackagesService.html":{},"injectables/ResourceService.html":{},"injectables/Settings.html":{},"injectables/TestConfigService.html":{},"injectables/TestTraceService.html":{}},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/CommitInfo.html":{},"injectables/ContainerTemplates.html":{},"classes/DependencyWrapper.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"injectables/K8sService.html":{},"injectables/Ng2Uploader.html":{},"injectables/PackagesService.html":{},"classes/RepoSettings.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"injectables/Settings.html":{},"classes/Sources.html":{},"injectables/TestConfigService.html":{},"injectables/TestTraceService.html":{},"classes/UploadedFile.html":{},"classes/Values.html":{},"coverage.html":{}}}],["injectables",{"_index":250,"title":{},"body":{"injectables/APIGatewayService.html":{},"injectables/ContainerTemplates.html":{},"injectables/GitSourceService.html":{},"injectables/K8sService.html":{},"injectables/Ng2Uploader.html":{},"injectables/PackagesService.html":{},"injectables/ResourceService.html":{},"injectables/Settings.html":{},"injectables/TestConfigService.html":{},"injectables/TestTraceService.html":{},"overview.html":{}}}],["injector",{"_index":5342,"title":{},"body":{"injectables/TestConfigService.html":{},"injectables/TestTraceService.html":{}}}],["inlist(a",{"_index":4992,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["input",{"_index":889,"title":{},"body":{"classes/Action-1.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"classes/GitSelectionModel.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"classes/SourceWrapper.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["inputs",{"_index":1068,"title":{},"body":{"components/ActionComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/UploadButtonComponent.html":{}}}],["inqueue",{"_index":3647,"title":{},"body":{"injectables/Ng2Uploader.html":{}}}],["inqueue(file",{"_index":3659,"title":{},"body":{"injectables/Ng2Uploader.html":{}}}],["install",{"_index":1207,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"classes/Result.html":{},"components/UMInstallerComponent.html":{},"miscellaneous/variables.html":{}}}],["install'},{'name",{"_index":320,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["install(installer",{"_index":4242,"title":{},"body":{"classes/Result.html":{}}}],["install.component",{"_index":896,"title":{},"body":{"classes/Action-1.html":{},"modules/AppModule.html":{}}}],["install.component.ts",{"_index":5641,"title":{},"body":{"coverage.html":{}}}],["install.html",{"_index":1209,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/UMInstallerComponent.html":{}}}],["install/:id",{"_index":1767,"title":{},"body":{"modules/AppModule.html":{}}}],["installer",{"_index":547,"title":{},"body":{"classes/Action.html":{},"components/ApiPortalInstallerComponent.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildExeComponent.html":{},"directives/BuildImageChooseDirective.html":{},"interfaces/BuildParams.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"components/MicroServiceInstallerComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"interfaces/PropertiesChangedOwner.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"components/SagImageAlerterComponent.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{},"coverage.html":{}}}],["installer'},{'name",{"_index":325,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["installer.component",{"_index":1649,"title":{},"body":{"modules/AppModule.html":{},"components/SagImageAlerterComponent.html":{}}}],["installer.component.ts",{"_index":1205,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/UMInstallerComponent.html":{},"coverage.html":{}}}],["installer.component.ts:101",{"_index":1536,"title":{},"body":{"components/ApiPortalInstallerComponent.html":{}}}],["installer.component.ts:121",{"_index":3513,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["installer.component.ts:125",{"_index":3505,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["installer.component.ts:133",{"_index":3512,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["installer.component.ts:145",{"_index":3514,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["installer.component.ts:148",{"_index":1362,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["installer.component.ts:149",{"_index":1221,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["installer.component.ts:16",{"_index":1232,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["installer.component.ts:17",{"_index":1234,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/UMInstallerComponent.html":{}}}],["installer.component.ts:18",{"_index":1229,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/UMInstallerComponent.html":{}}}],["installer.component.ts:186",{"_index":3517,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["installer.component.ts:19",{"_index":1367,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/UMInstallerComponent.html":{}}}],["installer.component.ts:196",{"_index":1361,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["installer.component.ts:20",{"_index":1235,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/MicroServiceInstallerComponent.html":{}}}],["installer.component.ts:21",{"_index":1237,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/UMInstallerComponent.html":{}}}],["installer.component.ts:216",{"_index":3519,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["installer.component.ts:22",{"_index":1236,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/MicroServiceInstallerComponent.html":{}}}],["installer.component.ts:23",{"_index":1366,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{},"components/UMInstallerComponent.html":{}}}],["installer.component.ts:24",{"_index":1230,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/MicroServiceInstallerComponent.html":{}}}],["installer.component.ts:247",{"_index":1355,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["installer.component.ts:25",{"_index":1231,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/MicroServiceInstallerComponent.html":{}}}],["installer.component.ts:254",{"_index":3521,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["installer.component.ts:258",{"_index":1360,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["installer.component.ts:26",{"_index":1368,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{},"components/MicroServiceInstallerComponent.html":{}}}],["installer.component.ts:27",{"_index":1222,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/MicroServiceInstallerComponent.html":{}}}],["installer.component.ts:29",{"_index":1369,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{},"components/MicroServiceInstallerComponent.html":{}}}],["installer.component.ts:290",{"_index":3508,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["installer.component.ts:300",{"_index":1356,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["installer.component.ts:305",{"_index":3503,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["installer.component.ts:31",{"_index":1353,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["installer.component.ts:42",{"_index":1357,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{},"components/UMInstallerComponent.html":{}}}],["installer.component.ts:44",{"_index":3510,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["installer.component.ts:46",{"_index":1537,"title":{},"body":{"components/ApiPortalInstallerComponent.html":{}}}],["installer.component.ts:50",{"_index":1539,"title":{},"body":{"components/ApiPortalInstallerComponent.html":{}}}],["installer.component.ts:52",{"_index":5452,"title":{},"body":{"components/UMInstallerComponent.html":{}}}],["installer.component.ts:57",{"_index":1358,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["installer.component.ts:60",{"_index":1224,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["installer.component.ts:61",{"_index":1363,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["installer.component.ts:64",{"_index":1228,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["installer.component.ts:70",{"_index":1538,"title":{},"body":{"components/ApiPortalInstallerComponent.html":{}}}],["installer.component.ts:72",{"_index":5449,"title":{},"body":{"components/UMInstallerComponent.html":{}}}],["installer.component.ts:81",{"_index":1365,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["installer.component.ts:82",{"_index":5451,"title":{},"body":{"components/UMInstallerComponent.html":{}}}],["installer.component.ts:84",{"_index":1226,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["installer.component.ts:92",{"_index":1364,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["installer.component.ts:98",{"_index":3515,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["installer.make(this",{"_index":563,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["installer.targetimage",{"_index":4254,"title":{},"body":{"classes/Result.html":{}}}],["installer.targetimage.dedicatedrepository",{"_index":4246,"title":{},"body":{"classes/Result.html":{}}}],["installer.targetimage.id",{"_index":4249,"title":{},"body":{"classes/Result.html":{}}}],["installer.version",{"_index":4248,"title":{},"body":{"classes/Result.html":{}}}],["installercomponent",{"_index":362,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["installertemplateloaded",{"_index":3992,"title":{},"body":{"interfaces/PropertiesChangedOwner.html":{}}}],["installertemplateloaded(template",{"_index":2125,"title":{},"body":{"directives/BuildImageChooseDirective.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"interfaces/PropertiesChangedOwner.html":{},"components/SagImageAlerterComponent.html":{}}}],["installing",{"_index":2100,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["instance",{"_index":1456,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["instanceof",{"_index":243,"title":{},"body":{"classes/APIDefinition.html":{},"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/GitSelectionModel.html":{},"injectables/Ng2Uploader.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/SourceWrapper.html":{},"classes/Stage.html":{},"classes/Test.html":{},"classes/UploadedFile.html":{},"classes/WmPackageInfo.html":{}}}],["instances",{"_index":4489,"title":{},"body":{"components/RuntimeScaleComponent.html":{},"components/ServicePropertiesComponent.html":{}}}],["instantiated",{"_index":5089,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["integration",{"_index":3005,"title":{},"body":{"components/HomeComponent.html":{},"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["interface",{"_index":504,"title":{"interfaces/ActionsComponent.html":{},"interfaces/BuildParams.html":{},"interfaces/BuilderComponent.html":{},"interfaces/PropertiesChangedOwner.html":{}},"body":{"classes/Action.html":{},"interfaces/ActionsComponent.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"directives/BuildImageChooseDirective.html":{},"interfaces/BuildParams.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"interfaces/PropertiesChangedOwner.html":{},"classes/RunSet.html":{},"directives/RuntimeActionsDirective.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{},"coverage.html":{}}}],["interfaces",{"_index":1196,"title":{},"body":{"interfaces/ActionsComponent.html":{},"interfaces/BuildParams.html":{},"interfaces/BuilderComponent.html":{},"interfaces/PropertiesChangedOwner.html":{},"overview.html":{}}}],["internal",{"_index":654,"title":{},"body":{"classes/Action.html":{},"components/ApiGatewayInstallerComponent.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"components/EditContainerComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{}}}],["internal.buildtarget",{"_index":1324,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["internal.commandtype",{"_index":1323,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["internal.filetype",{"_index":1325,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["internal.target",{"_index":1326,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["intra",{"_index":2689,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["invalid",{"_index":2441,"title":{},"body":{"classes/DependencyWrapper.html":{},"classes/GitSelectionModel.html":{},"injectables/PackagesService.html":{},"classes/SourceWrapper.html":{},"classes/Sources.html":{}}}],["isactive",{"_index":12,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{},"classes/TestCase.html":{},"classes/TestSuite.html":{},"classes/WebSocketService.html":{}}}],["isallselected",{"_index":2772,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["isapistagecontroldisabled",{"_index":1066,"title":{},"body":{"components/ActionComponent.html":{}}}],["isbuilding",{"_index":4602,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["isbusy",{"_index":2011,"title":{},"body":{"components/BuildExeComponent.html":{},"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["iscontainerid=true",{"_index":4299,"title":{},"body":{"classes/Result.html":{}}}],["iscustomimage",{"_index":515,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["isdb",{"_index":1302,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["isexistingtemplate",{"_index":4714,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["isfile",{"_index":3648,"title":{},"body":{"injectables/Ng2Uploader.html":{}}}],["isfile(file",{"_index":3661,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["isinstall",{"_index":1342,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["islinearstepper",{"_index":4576,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["isnew",{"_index":550,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["isnewtestcase",{"_index":4879,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["isruntime",{"_index":2469,"title":{},"body":{"components/DeploymentDetailsComponent.html":{}}}],["issagproduct",{"_index":557,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["istop",{"_index":1779,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["italic",{"_index":5329,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["item",{"_index":5503,"title":{},"body":{"components/UploadButtonComponent.html":{}}}],["itemalias",{"_index":5498,"title":{},"body":{"components/UploadButtonComponent.html":{}}}],["items",{"_index":1961,"title":{},"body":{"components/BuildComponent.html":{},"components/HomeComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/TestCaseComponent.html":{}}}],["iterableiterator",{"_index":4336,"title":{},"body":{"classes/Result.html":{},"components/SagImageAlerterComponent.html":{},"classes/ServiceInfo.html":{}}}],["iteration",{"_index":1989,"title":{},"body":{"components/BuildComponent.html":{},"components/TestCaseComponent.html":{}}}],["iteratorresult",{"_index":4340,"title":{},"body":{"classes/Result.html":{},"components/SagImageAlerterComponent.html":{},"classes/ServiceInfo.html":{}}}],["itobj",{"_index":4339,"title":{},"body":{"classes/Result.html":{}}}],["itobj.value.iscustom",{"_index":4342,"title":{},"body":{"classes/Result.html":{}}}],["itobj.value.issagimage",{"_index":4344,"title":{},"body":{"classes/Result.html":{}}}],["itobj=it.next()).done",{"_index":4341,"title":{},"body":{"classes/Result.html":{}}}],["jaghuc",{"_index":4009,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["java",{"_index":3535,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["jc",{"_index":318,"title":{},"body":{"components/AboutComponent.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"classes/RepoSettings.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"injectables/Settings.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"classes/Values.html":{}}}],["jctestsuite",{"_index":4918,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["jctestsuite.also",{"_index":5379,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["jdbc",{"_index":2334,"title":{},"body":{"injectables/ContainerTemplates.html":{},"components/MicroServiceInstallerComponent.html":{}}}],["jenkins",{"_index":3000,"title":{},"body":{"components/HomeComponent.html":{}}}],["johnpcarter",{"_index":4007,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["jquery",{"_index":902,"title":{},"body":{"classes/Action-1.html":{},"components/HomeComponent.html":{},"dependencies.html":{}}}],["js",{"_index":5704,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":3865,"title":{},"body":{"classes/Payload.html":{},"classes/Result.html":{},"classes/TestCase.html":{},"classes/TestSuite.html":{},"miscellaneous/enumerations.html":{}}}],["json.contenttype",{"_index":3887,"title":{},"body":{"classes/Payload.html":{}}}],["json.location",{"_index":3889,"title":{},"body":{"classes/Payload.html":{}}}],["json.parse(json",{"_index":5251,"title":{},"body":{"classes/TestCase.html":{},"classes/TestSuite.html":{}}}],["json.service",{"_index":3888,"title":{},"body":{"classes/Payload.html":{}}}],["json.stringify(error",{"_index":4302,"title":{},"body":{"classes/Result.html":{}}}],["json.stringify(run",{"_index":4289,"title":{},"body":{"classes/Result.html":{}}}],["json.stringify(search",{"_index":111,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["json.stringify(sources",{"_index":2433,"title":{},"body":{"classes/DependencyWrapper.html":{},"injectables/PackagesService.html":{},"classes/Sources.html":{}}}],["json.stringify(this",{"_index":608,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["json.stringify(this._values",{"_index":4065,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["json.stringify(this.buildupdatespec(deployment",{"_index":3347,"title":{},"body":{"injectables/K8sService.html":{}}}],["json.stringify(wrapper",{"_index":4251,"title":{},"body":{"classes/Result.html":{}}}],["json[prop",{"_index":5253,"title":{},"body":{"classes/TestCase.html":{},"classes/TestSuite.html":{}}}],["jsonobj",{"_index":5250,"title":{},"body":{"classes/TestCase.html":{},"classes/TestSuite.html":{}}}],["justify",{"_index":3012,"title":{},"body":{"components/HomeComponent.html":{}}}],["k8s",{"_index":346,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"classes/K8sDeployment.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"miscellaneous/variables.html":{}}}],["k8s.component",{"_index":1629,"title":{},"body":{"modules/AppModule.html":{}}}],["k8s.component.ts",{"_index":4437,"title":{},"body":{"components/RuntimeK8sComponent.html":{},"coverage.html":{}}}],["k8s.component.ts:19",{"_index":4445,"title":{},"body":{"components/RuntimeK8sComponent.html":{}}}],["k8s.component.ts:20",{"_index":4446,"title":{},"body":{"components/RuntimeK8sComponent.html":{}}}],["k8s.component.ts:22",{"_index":4442,"title":{},"body":{"components/RuntimeK8sComponent.html":{}}}],["k8s.component.ts:51",{"_index":4444,"title":{},"body":{"components/RuntimeK8sComponent.html":{}}}],["k8s.component.ts:55",{"_index":4443,"title":{},"body":{"components/RuntimeK8sComponent.html":{}}}],["k8s.css",{"_index":4438,"title":{},"body":{"components/RuntimeK8sComponent.html":{}}}],["k8s.html",{"_index":4439,"title":{},"body":{"components/RuntimeK8sComponent.html":{}}}],["k8sdashboardurl",{"_index":4440,"title":{},"body":{"components/RuntimeK8sComponent.html":{}}}],["k8sdeployment",{"_index":2473,"title":{"classes/K8sDeployment.html":{}},"body":{"components/DeploymentDetailsComponent.html":{},"classes/K8sDeployment.html":{},"injectables/K8sService.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"coverage.html":{}}}],["k8sdeployment()._make(data",{"_index":3105,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["k8sdeployment.currentdeployment",{"_index":3966,"title":{},"body":{"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{}}}],["k8sdeploymentdefinition",{"_index":1200,"title":{"classes/K8sDeploymentDefinition.html":{}},"body":{"interfaces/ActionsComponent.html":{},"components/DeploymentDetailsComponent.html":{},"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{},"injectables/K8sService.html":{},"directives/RuntimeActionsDirective.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"coverage.html":{}}}],["k8sdeploymentdefinition()._make(data",{"_index":3161,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["k8sdeploymentdefinition:10",{"_index":3075,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["k8sdeploymentdefinition:11",{"_index":3072,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["k8sdeploymentdefinition:12",{"_index":3080,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["k8sdeploymentdefinition:13",{"_index":3073,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["k8sdeploymentdefinition:14",{"_index":3076,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["k8sdeploymentdefinition:15",{"_index":3077,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["k8sdeploymentdefinition:16",{"_index":3070,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["k8sdeploymentdefinition:17",{"_index":3079,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["k8sdeploymentdefinition:19",{"_index":3081,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["k8sdeploymentdefinition:20",{"_index":3078,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["k8sdeploymentdefinition:22",{"_index":3069,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["k8sdeploymentdefinition:43",{"_index":3092,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["k8sdeploymentdefinition:48",{"_index":3091,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["k8sdeploymentdefinition:7",{"_index":3071,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["k8sdeploymentdefinition:9",{"_index":3074,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["k8sdeploymentservice.deploy",{"_index":3339,"title":{},"body":{"injectables/K8sService.html":{}}}],["k8sdeploymentservice.deploy.replace(/nmespce",{"_index":3355,"title":{},"body":{"injectables/K8sService.html":{}}}],["k8sdeploymentservice.deployments.replace(/nmespce",{"_index":3331,"title":{},"body":{"injectables/K8sService.html":{}}}],["k8sdeploymentservice.namespaces",{"_index":3324,"title":{},"body":{"injectables/K8sService.html":{}}}],["k8snamespace",{"_index":4019,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["k8spod",{"_index":3059,"title":{"classes/K8sPod.html":{}},"body":{"classes/K8sDeployment.html":{},"classes/K8sPod.html":{},"injectables/K8sService.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"components/PodsListComponent.html":{},"coverage.html":{}}}],["k8spodservice.resource.replace(/nmespce",{"_index":3334,"title":{},"body":{"injectables/K8sService.html":{}}}],["k8sservice",{"_index":1581,"title":{"injectables/K8sService.html":{}},"body":{"modules/AppModule.html":{},"classes/K8sDeployment.html":{},"injectables/K8sService.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"coverage.html":{},"overview.html":{}}}],["k8sservice.deployments",{"_index":3332,"title":{},"body":{"injectables/K8sService.html":{}}}],["k8sservice.namespaces",{"_index":3325,"title":{},"body":{"injectables/K8sService.html":{}}}],["k8sservice.resource",{"_index":3335,"title":{},"body":{"injectables/K8sService.html":{}}}],["k8sservice.scale",{"_index":3356,"title":{},"body":{"injectables/K8sService.html":{}}}],["k8sservice.update",{"_index":3343,"title":{},"body":{"injectables/K8sService.html":{}}}],["k8stoken",{"_index":3270,"title":{},"body":{"injectables/K8sService.html":{},"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["k8surl",{"_index":3272,"title":{},"body":{"injectables/K8sService.html":{},"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["karma",{"_index":5751,"title":{},"body":{"index.html":{}}}],["keep",{"_index":1192,"title":{},"body":{"components/ActionComponent.html":{}}}],["keepalivectrl",{"_index":1057,"title":{},"body":{"components/ActionComponent.html":{}}}],["key",{"_index":1088,"title":{},"body":{"components/ActionComponent.html":{},"directives/BuildImageChooseDirective.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"interfaces/PropertiesChangedOwner.html":{},"classes/Result.html":{},"classes/ServiceInfo.html":{},"miscellaneous/functions.html":{}}}],["key/value",{"_index":3616,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["keyframes",{"_index":1991,"title":{},"body":{"components/BuildComponent.html":{},"components/HomeComponent.html":{},"components/TestCaseComponent.html":{}}}],["keys",{"_index":4948,"title":{},"body":{"classes/ServiceInfo.html":{},"components/TestHistoryComponent.html":{}}}],["keys.next",{"_index":4950,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["keyword",{"_index":150,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"components/MicroServiceInstallerComponent.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["kind",{"_index":3292,"title":{},"body":{"injectables/K8sService.html":{}}}],["kubernetes",{"_index":305,"title":{},"body":{"components/AboutComponent.html":{},"modules/AppModule.html":{},"components/HomeComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/StagingComponent.html":{},"miscellaneous/variables.html":{}}}],["l",{"_index":2849,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["l.push(new",{"_index":2850,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["label",{"_index":1775,"title":{},"body":{"modules/AppModule.html":{},"components/PodsListComponent.html":{},"classes/Result.html":{},"miscellaneous/variables.html":{}}}],["labelforaction",{"_index":2513,"title":{},"body":{"components/DockerImageVersionsComponent.html":{},"components/PodsListComponent.html":{}}}],["labelforaction(image",{"_index":2523,"title":{},"body":{"components/DockerImageVersionsComponent.html":{},"components/PodsListComponent.html":{}}}],["labelforgobutton",{"_index":4727,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["labelforpreparingbutton",{"_index":4729,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["labels",{"_index":3961,"title":{},"body":{"components/PodsListComponent.html":{}}}],["labels.push(c.imageref",{"_index":3963,"title":{},"body":{"components/PodsListComponent.html":{}}}],["last",{"_index":297,"title":{},"body":{"components/AboutComponent.html":{},"classes/Action-1.html":{},"components/DockerImageVersionsComponent.html":{},"components/HomeComponent.html":{}}}],["lastviewedpage",{"_index":4016,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["lastviewedpagearg",{"_index":4017,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["latest",{"_index":738,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["layer",{"_index":5090,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["learn",{"_index":3019,"title":{},"body":{"components/HomeComponent.html":{}}}],["left",{"_index":717,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildComponent.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"components/RuntimeK8sComponent.html":{},"classes/Server.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{}}}],["left:50",{"_index":1983,"title":{},"body":{"components/BuildComponent.html":{},"components/TestCaseComponent.html":{}}}],["legend",{"_index":308,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"overview.html":{}}}],["length",{"_index":4864,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["less",{"_index":2808,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["lets",{"_index":2804,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["library",{"_index":1619,"title":{},"body":{"modules/AppModule.html":{}}}],["library.add(faellipsisv",{"_index":1762,"title":{},"body":{"modules/AppModule.html":{}}}],["lic",{"_index":644,"title":{},"body":{"classes/Action.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["lic.buildtarget",{"_index":1509,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["lic.commandtype",{"_index":1508,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["lic.description",{"_index":1511,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["lic.filetype",{"_index":1510,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["lic.source",{"_index":1507,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["lic.target",{"_index":1513,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["lic.target.replace",{"_index":647,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["licctrl",{"_index":1343,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{},"components/SagImageAlerterComponent.html":{}}}],["licencefiles",{"_index":1344,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{},"components/SagImageAlerterComponent.html":{}}}],["license",{"_index":646,"title":{},"body":{"classes/Action.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"interfaces/BuilderComponent.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"components/MicroServiceInstallerComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{},"components/UMInstallerComponent.html":{}}}],["license.replace(/\\s/g",{"_index":1284,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/UMInstallerComponent.html":{}}}],["licensefile",{"_index":553,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["licensefileadded(filename",{"_index":4815,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["licenses",{"_index":1273,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/UMInstallerComponent.html":{}}}],["licfile",{"_index":4741,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["licfile.source.replace",{"_index":4744,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["light",{"_index":975,"title":{},"body":{"classes/Action-1.html":{},"components/TestCaseComponent.html":{}}}],["lighter",{"_index":3035,"title":{},"body":{"components/HomeComponent.html":{}}}],["line",{"_index":1974,"title":{},"body":{"components/BuildComponent.html":{},"components/HomeComponent.html":{},"components/RuntimeK8sComponent.html":{}}}],["line:indent",{"_index":4578,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["links",{"_index":1972,"title":{},"body":{"components/BuildComponent.html":{},"components/RuntimeK8sComponent.html":{}}}],["linktoimage",{"_index":4562,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["linux",{"_index":1455,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["list",{"_index":134,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"injectables/K8sService.html":{},"components/MicroServiceInstallerComponent.html":{},"classes/Result.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/ServiceInfo.html":{}}}],["list.component",{"_index":1662,"title":{},"body":{"modules/AppModule.html":{},"components/DockerImageVersionsComponent.html":{},"components/RuntimeUpdateComponent.html":{}}}],["list.component.ts",{"_index":882,"title":{},"body":{"classes/Action-1.html":{},"components/PodsListComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["list.component.ts:103",{"_index":3930,"title":{},"body":{"components/PodsListComponent.html":{}}}],["list.component.ts:114",{"_index":3928,"title":{},"body":{"components/PodsListComponent.html":{}}}],["list.component.ts:125",{"_index":3932,"title":{},"body":{"components/PodsListComponent.html":{}}}],["list.component.ts:156",{"_index":3914,"title":{},"body":{"components/PodsListComponent.html":{}}}],["list.component.ts:168",{"_index":3923,"title":{},"body":{"components/PodsListComponent.html":{}}}],["list.component.ts:176",{"_index":3920,"title":{},"body":{"components/PodsListComponent.html":{}}}],["list.component.ts:18",{"_index":885,"title":{},"body":{"classes/Action-1.html":{}}}],["list.component.ts:181",{"_index":3921,"title":{},"body":{"components/PodsListComponent.html":{}}}],["list.component.ts:186",{"_index":3918,"title":{},"body":{"components/PodsListComponent.html":{}}}],["list.component.ts:19",{"_index":884,"title":{},"body":{"classes/Action-1.html":{}}}],["list.component.ts:22",{"_index":3933,"title":{},"body":{"components/PodsListComponent.html":{}}}],["list.component.ts:25",{"_index":3910,"title":{},"body":{"components/PodsListComponent.html":{}}}],["list.component.ts:28",{"_index":3909,"title":{},"body":{"components/PodsListComponent.html":{}}}],["list.component.ts:31",{"_index":3911,"title":{},"body":{"components/PodsListComponent.html":{}}}],["list.component.ts:34",{"_index":3912,"title":{},"body":{"components/PodsListComponent.html":{}}}],["list.component.ts:36",{"_index":3934,"title":{},"body":{"components/PodsListComponent.html":{}}}],["list.component.ts:38",{"_index":3908,"title":{},"body":{"components/PodsListComponent.html":{}}}],["list.component.ts:44",{"_index":3926,"title":{},"body":{"components/PodsListComponent.html":{}}}],["list.component.ts:54",{"_index":3924,"title":{},"body":{"components/PodsListComponent.html":{}}}],["list.component.ts:63",{"_index":3925,"title":{},"body":{"components/PodsListComponent.html":{}}}],["list.component.ts:70",{"_index":3927,"title":{},"body":{"components/PodsListComponent.html":{}}}],["list.component.ts:81",{"_index":3915,"title":{},"body":{"components/PodsListComponent.html":{}}}],["list.component.ts:98",{"_index":3916,"title":{},"body":{"components/PodsListComponent.html":{}}}],["list.html",{"_index":905,"title":{},"body":{"classes/Action-1.html":{},"components/PodsListComponent.html":{}}}],["listen",{"_index":5554,"title":{},"body":{"classes/WebSocketService.html":{}}}],["listen(completionobserver",{"_index":5572,"title":{},"body":{"classes/WebSocketService.html":{}}}],["livenessprobe",{"_index":688,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["livepods",{"_index":3423,"title":{"classes/LivePods.html":{}},"body":{"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"components/PodsListComponent.html":{},"coverage.html":{}}}],["livepods(this.namespace",{"_index":3949,"title":{},"body":{"components/PodsListComponent.html":{}}}],["livepodscount",{"_index":3457,"title":{"classes/LivePodsCount.html":{}},"body":{"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"components/PodsListComponent.html":{},"coverage.html":{}}}],["livepodscount(this.appid",{"_index":3479,"title":{},"body":{"classes/LivePods.html":{},"classes/LivePodsCount.html":{}}}],["load",{"_index":5373,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["loaded",{"_index":3704,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/Result.html":{},"components/SagImageAlerterComponent.html":{},"classes/UploadedFile.html":{}}}],["local",{"_index":3004,"title":{},"body":{"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"classes/RepoSettings.html":{},"components/SagImageAlerterComponent.html":{},"injectables/Settings.html":{},"components/TestHistoryComponent.html":{},"classes/Values.html":{}}}],["localizedstatus",{"_index":3901,"title":{},"body":{"components/PodsListComponent.html":{}}}],["localizedstatus(element.status",{"_index":3974,"title":{},"body":{"components/PodsListComponent.html":{}}}],["localizedstatus(image",{"_index":984,"title":{},"body":{"classes/Action-1.html":{}}}],["localizedstatus(label",{"_index":3922,"title":{},"body":{"components/PodsListComponent.html":{}}}],["location",{"_index":2909,"title":{},"body":{"components/HomeComponent.html":{}}}],["log",{"_index":2012,"title":{},"body":{"components/BuildExeComponent.html":{},"injectables/Ng2Uploader.html":{},"components/SagImageAlerterComponent.html":{}}}],["log(msg",{"_index":3663,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["logdiv",{"_index":2013,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["logo.png",{"_index":1786,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["looks",{"_index":3187,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["lside",{"_index":712,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["m1",{"_index":3138,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["m1.description",{"_index":3146,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["m1.id",{"_index":3139,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["m1.setname(\"test",{"_index":3141,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["m1.type",{"_index":3144,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["m2",{"_index":3149,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["m2.description",{"_index":3154,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["m2.id",{"_index":3150,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["m2.setname(\"hello",{"_index":3152,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["machine",{"_index":4033,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["major",{"_index":4607,"title":{},"body":{"components/SagImageAlerterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["make",{"_index":19,"title":{},"body":{"classes/API.html":{},"classes/APIDefinition.html":{},"classes/APIPolicy.html":{},"classes/Action.html":{},"modules/AppModule.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildComponent.html":{},"classes/CommitInfo.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/DockerContainer.html":{},"components/HomeComponent.html":{},"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/K8sPod.html":{},"classes/Payload.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Source.html":{},"classes/Stage.html":{},"classes/Test.html":{},"classes/TestCase.html":{},"classes/TestSuite.html":{},"classes/WmPackageInfo.html":{},"miscellaneous/variables.html":{}}}],["make(d",{"_index":472,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["make(data",{"_index":36,"title":{},"body":{"classes/API.html":{},"classes/APIDefinition.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/CommitInfo.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/DockerContainer.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/K8sPod.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/Server.html":{},"classes/Source.html":{},"classes/Stage.html":{},"classes/Test.html":{},"classes/WmPackageInfo.html":{}}}],["make(id",{"_index":5420,"title":{},"body":{"classes/TestSuite.html":{}}}],["make(origin",{"_index":3861,"title":{},"body":{"classes/Payload.html":{}}}],["make(p",{"_index":198,"title":{},"body":{"classes/APIDefinition.html":{},"classes/WmPackageInfo.html":{}}}],["make(suiteid",{"_index":5244,"title":{},"body":{"classes/TestCase.html":{}}}],["makearray",{"_index":175,"title":{},"body":{"classes/APIDefinition.html":{},"classes/Arg.html":{},"classes/Port.html":{}}}],["makearray(array",{"_index":182,"title":{},"body":{"classes/APIDefinition.html":{},"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{},"classes/WmPackageInfo.html":{}}}],["makefromjson",{"_index":3852,"title":{},"body":{"classes/Payload.html":{},"classes/TestCase.html":{},"classes/TestSuite.html":{}}}],["makefromjson(json",{"_index":3863,"title":{},"body":{"classes/Payload.html":{},"classes/TestCase.html":{},"classes/TestSuite.html":{}}}],["manage",{"_index":4488,"title":{},"body":{"components/RuntimeScaleComponent.html":{}}}],["managed",{"_index":4042,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["manifest.v3",{"_index":2280,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["manually",{"_index":4763,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["manualsyncrequired",{"_index":2734,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["map",{"_index":50,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Action.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"directives/BuildImageChooseDirective.html":{},"interfaces/BuildParams.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"classes/CommitInfo.html":{},"classes/DependencyWrapper.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"classes/K8sDeployment.html":{},"injectables/K8sService.html":{},"components/MicroServiceInstallerComponent.html":{},"injectables/PackagesService.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"interfaces/PropertiesChangedOwner.html":{},"classes/RepoSettings.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"components/SagImageAlerterComponent.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/Server.html":{},"components/ServicePropertiesComponent.html":{},"injectables/Settings.html":{},"classes/SourceWrapper.html":{},"classes/Sources.html":{},"classes/Stage.html":{},"classes/Test.html":{},"injectables/TestConfigService.html":{},"classes/TestSuite.html":{},"injectables/TestTraceService.html":{},"components/UMInstallerComponent.html":{},"classes/Values.html":{},"miscellaneous/variables.html":{}}}],["map(value.value",{"_index":880,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["margin",{"_index":1947,"title":{},"body":{"components/BuildComponent.html":{},"components/HomeComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{}}}],["mastertoggle",{"_index":2782,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["mat",{"_index":1950,"title":{},"body":{"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/UploadButtonComponent.html":{}}}],["mat_dialog_data",{"_index":287,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/BuildExeComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/ServiceInfo.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{}}}],["mataccordion",{"_index":1123,"title":{},"body":{"components/ActionComponent.html":{},"components/BuildComponent.html":{},"components/EditContainerComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/ServiceInfo.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{}}}],["matautocompletemodule",{"_index":1794,"title":{},"body":{"modules/AppModule.html":{}}}],["matbadgemodule",{"_index":1795,"title":{},"body":{"modules/AppModule.html":{}}}],["matbottomsheetmodule",{"_index":1796,"title":{},"body":{"modules/AppModule.html":{}}}],["matbutton",{"_index":1125,"title":{},"body":{"components/ActionComponent.html":{},"components/EditContainerComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/ServiceInfo.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{}}}],["matbuttonmodule",{"_index":1797,"title":{},"body":{"modules/AppModule.html":{}}}],["matbuttontogglemodule",{"_index":1798,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodule",{"_index":1799,"title":{},"body":{"modules/AppModule.html":{}}}],["matchconditions",{"_index":1868,"title":{},"body":{"classes/ArgDisplayType.html":{},"classes/BuildCommand.html":{}}}],["matchconditions(args",{"_index":501,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["matcheckboxmodule",{"_index":1800,"title":{},"body":{"modules/AppModule.html":{}}}],["matched",{"_index":543,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["matchedimage",{"_index":4330,"title":{},"body":{"classes/Result.html":{}}}],["matchedimage.addversion(d",{"_index":4335,"title":{},"body":{"classes/Result.html":{}}}],["matchedimage.hasversionalready(d",{"_index":4334,"title":{},"body":{"classes/Result.html":{}}}],["matchedpod",{"_index":3433,"title":{},"body":{"classes/LivePods.html":{}}}],["matchedpod(pod",{"_index":3451,"title":{},"body":{"classes/LivePods.html":{},"classes/LivePodsCount.html":{}}}],["matches",{"_index":2769,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["matching",{"_index":166,"title":{},"body":{"classes/API.html":{},"classes/APIDefinition.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"components/AboutComponent.html":{},"classes/Action.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"interfaces/ActionsComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"classes/BuildImage.html":{},"directives/BuildImageChooseDirective.html":{},"interfaces/BuildParams.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"directives/CancelCdkDrag.html":{},"classes/CommitInfo.html":{},"injectables/ContainerTemplates.html":{},"classes/DependencyWrapper.html":{},"classes/Deployment.html":{},"components/DeploymentDetailsComponent.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/DockerContainer.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"components/HomeComponent.html":{},"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/K8sPod.html":{},"injectables/K8sService.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"components/MicroServiceInstallerComponent.html":{},"injectables/Ng2Uploader.html":{},"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{},"injectables/PackagesService.html":{},"classes/Payload.html":{},"components/PodsListComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"interfaces/PropertiesChangedOwner.html":{},"classes/RepoSettings.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"directives/RuntimeActionsDirective.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"components/ServicePropertiesComponent.html":{},"injectables/Settings.html":{},"components/SimpleNameComponent.html":{},"classes/Source.html":{},"classes/SourceWrapper.html":{},"classes/Sources.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{},"classes/TestCase.html":{},"components/TestCaseComponent.html":{},"injectables/TestConfigService.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"classes/TestSuite.html":{},"injectables/TestTraceService.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"classes/UploadedFile.html":{},"classes/Values.html":{},"classes/WebSocketService.html":{},"classes/WmPackageInfo.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":1801,"title":{},"body":{"modules/AppModule.html":{}}}],["matdatepickermodule",{"_index":1802,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialog",{"_index":286,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/BuildExeComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/ServiceInfo.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{}}}],["matdialogmodule",{"_index":1803,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialogref",{"_index":278,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/BuildExeComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/ServiceInfo.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{}}}],["matdividermodule",{"_index":1804,"title":{},"body":{"modules/AppModule.html":{}}}],["matexpansionmodule",{"_index":1805,"title":{},"body":{"modules/AppModule.html":{}}}],["matgridlistmodule",{"_index":1806,"title":{},"body":{"modules/AppModule.html":{}}}],["math.random().tostring(36).substring(7",{"_index":3796,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["math.round(e.loaded",{"_index":3770,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["maticonmodule",{"_index":1807,"title":{},"body":{"modules/AppModule.html":{}}}],["matinput",{"_index":1124,"title":{},"body":{"components/ActionComponent.html":{},"components/EditContainerComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/ServiceInfo.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{}}}],["matinputmodule",{"_index":1808,"title":{},"body":{"modules/AppModule.html":{}}}],["matlistmodule",{"_index":1809,"title":{},"body":{"modules/AppModule.html":{}}}],["matmenumodule",{"_index":1810,"title":{},"body":{"modules/AppModule.html":{}}}],["matnativedatemodule",{"_index":1811,"title":{},"body":{"modules/AppModule.html":{}}}],["matpaginator",{"_index":2717,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/ServiceInfo.html":{},"classes/SourceWrapper.html":{},"components/TestCaseComponent.html":{}}}],["matpaginatormodule",{"_index":1812,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressbarmodule",{"_index":1813,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressspinnermodule",{"_index":1814,"title":{},"body":{"modules/AppModule.html":{}}}],["matradiomodule",{"_index":1815,"title":{},"body":{"modules/AppModule.html":{}}}],["matripplemodule",{"_index":1816,"title":{},"body":{"modules/AppModule.html":{}}}],["matselect",{"_index":4409,"title":{},"body":{"components/RuntimeDetailsComponent.html":{},"components/RuntimeScaleComponent.html":{}}}],["matselectmodule",{"_index":1817,"title":{},"body":{"modules/AppModule.html":{}}}],["matsidenavmodule",{"_index":1818,"title":{},"body":{"modules/AppModule.html":{}}}],["matslidermodule",{"_index":1819,"title":{},"body":{"modules/AppModule.html":{}}}],["matslidetogglemodule",{"_index":1820,"title":{},"body":{"modules/AppModule.html":{}}}],["matsnackbar",{"_index":893,"title":{},"body":{"classes/Action-1.html":{},"components/RuntimeScaleComponent.html":{}}}],["matsnackbarmodule",{"_index":1821,"title":{},"body":{"modules/AppModule.html":{}}}],["matsortmodule",{"_index":1822,"title":{},"body":{"modules/AppModule.html":{}}}],["matstepper",{"_index":4856,"title":{},"body":{"classes/ServiceInfo.html":{},"components/TestCaseComponent.html":{}}}],["matsteppermodule",{"_index":1823,"title":{},"body":{"modules/AppModule.html":{}}}],["mattable",{"_index":3935,"title":{},"body":{"components/PodsListComponent.html":{}}}],["mattabledatasource",{"_index":2718,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/ServiceInfo.html":{},"classes/SourceWrapper.html":{},"components/TestCaseComponent.html":{}}}],["mattabledatasource(p",{"_index":4891,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["mattabledatasource(packages",{"_index":2837,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["mattabledatasource(this.servicesandapisforselectedpackage",{"_index":4939,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["mattablemodule",{"_index":1824,"title":{},"body":{"modules/AppModule.html":{}}}],["mattabsmodule",{"_index":1825,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodule",{"_index":1826,"title":{},"body":{"modules/AppModule.html":{}}}],["mattooltipmodule",{"_index":1827,"title":{},"body":{"modules/AppModule.html":{}}}],["mattreemodule",{"_index":1828,"title":{},"body":{"modules/AppModule.html":{}}}],["maturity",{"_index":76,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{},"miscellaneous/enumerations.html":{}}}],["maturity.tostring",{"_index":109,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["max",{"_index":5325,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["maximum",{"_index":5088,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["maxsize",{"_index":3636,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["maxuploads",{"_index":3637,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["mcgw",{"_index":1487,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["mediamatcher",{"_index":1121,"title":{},"body":{"components/ActionComponent.html":{},"components/BuildComponent.html":{},"components/EditContainerComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/ServiceInfo.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{}}}],["merge",{"_index":3345,"title":{},"body":{"injectables/K8sService.html":{},"classes/Source.html":{}}}],["merge(other",{"_index":5138,"title":{},"body":{"classes/Source.html":{}}}],["message",{"_index":1028,"title":{},"body":{"classes/Action-1.html":{},"components/BuildExeComponent.html":{},"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"classes/WebSocketService.html":{}}}],["message.length",{"_index":2105,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["messaging",{"_index":2339,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["metadata",{"_index":270,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"directives/BuildImageChooseDirective.html":{},"directives/CancelCdkDrag.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"injectables/K8sService.html":{},"components/MicroServiceInstallerComponent.html":{},"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{},"components/PodsListComponent.html":{},"directives/RuntimeActionsDirective.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["method",{"_index":3638,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["methods",{"_index":17,"title":{},"body":{"classes/API.html":{},"classes/APIDefinition.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"components/AboutComponent.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"classes/AppPage.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"interfaces/BuildParams.html":{},"interfaces/BuilderComponent.html":{},"directives/CancelCdkDrag.html":{},"classes/CommitInfo.html":{},"injectables/ContainerTemplates.html":{},"classes/Deployment.html":{},"components/DeploymentDetailsComponent.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/DockerContainer.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"components/HomeComponent.html":{},"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/K8sPod.html":{},"injectables/K8sService.html":{},"classes/LivePods.html":{},"components/MicroServiceInstallerComponent.html":{},"injectables/Ng2Uploader.html":{},"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{},"injectables/PackagesService.html":{},"classes/Payload.html":{},"components/PodsListComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"interfaces/PropertiesChangedOwner.html":{},"injectables/ResourceService.html":{},"classes/RunSet.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/SearchObj.html":{},"classes/Server.html":{},"components/ServicePropertiesComponent.html":{},"injectables/Settings.html":{},"classes/Source.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{},"classes/TestCase.html":{},"components/TestCaseComponent.html":{},"injectables/TestConfigService.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"classes/TestSuite.html":{},"injectables/TestTraceService.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"classes/UploadedFile.html":{},"classes/Values.html":{},"classes/WebSocketService.html":{},"classes/WmPackageInfo.html":{}}}],["micro",{"_index":1448,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{},"components/BuildComponent.html":{},"injectables/ContainerTemplates.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{}}}],["microgateway",{"_index":1434,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["microgateway.sh",{"_index":1444,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["microgateway.zip",{"_index":1458,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["microservice",{"_index":3145,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{},"components/StagingComponent.html":{}}}],["microservicebuildercomponent",{"_index":363,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["microserviceinstallercomponent",{"_index":366,"title":{"components/MicroServiceInstallerComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["middle",{"_index":3017,"title":{},"body":{"components/HomeComponent.html":{}}}],["min",{"_index":5318,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["minheight",{"_index":5033,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["minor",{"_index":4606,"title":{},"body":{"components/SagImageAlerterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["miscellaneous",{"_index":5721,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mispelled",{"_index":3600,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["misspelled",{"_index":3598,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["mkdir",{"_index":1304,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/MicroServiceInstallerComponent.html":{}}}],["mocks",{"_index":4851,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["model",{"_index":2721,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["models/docker",{"_index":186,"title":{},"body":{"classes/APIDefinition.html":{},"classes/Action.html":{},"classes/Action-1.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"directives/BuildImageChooseDirective.html":{},"interfaces/BuildParams.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"injectables/ContainerTemplates.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"components/DockerImageVersionsComponent.html":{},"injectables/K8sService.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"interfaces/PropertiesChangedOwner.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"classes/Stage.html":{},"classes/Test.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"injectables/TestTraceService.html":{},"classes/WmPackageInfo.html":{}}}],["models/git",{"_index":444,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/DependencyWrapper.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/GitSelectionModel.html":{},"injectables/PackagesService.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"components/SagImageAlerterComponent.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"classes/SourceWrapper.html":{},"classes/Sources.html":{},"classes/Stage.html":{},"classes/Test.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{}}}],["models/k8s",{"_index":1202,"title":{},"body":{"interfaces/ActionsComponent.html":{},"components/DeploymentDetailsComponent.html":{},"injectables/K8sService.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"components/PodsListComponent.html":{},"directives/RuntimeActionsDirective.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{}}}],["models/project",{"_index":1126,"title":{},"body":{"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildExeComponent.html":{},"directives/BuildImageChooseDirective.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"injectables/ContainerTemplates.html":{},"classes/DependencyWrapper.html":{},"components/EditContainerComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"injectables/PackagesService.html":{},"interfaces/PropertiesChangedOwner.html":{},"classes/Result.html":{},"components/SagImageAlerterComponent.html":{},"classes/ServiceInfo.html":{},"components/ServicePropertiesComponent.html":{},"classes/Sources.html":{},"components/StagingComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{}}}],["models/test",{"_index":4858,"title":{},"body":{"classes/ServiceInfo.html":{},"components/TestCaseComponent.html":{},"injectables/TestConfigService.html":{}}}],["models/wm",{"_index":443,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/CommitInfo.html":{},"classes/DependencyWrapper.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"components/EditContainerComponent.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"injectables/PackagesService.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"components/SagImageAlerterComponent.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"classes/SourceWrapper.html":{},"classes/Sources.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{},"components/TestCaseComponent.html":{},"injectables/TestConfigService.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{}}}],["module",{"_index":1567,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":1569,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["moment",{"_index":2180,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/K8sPod.html":{},"dependencies.html":{}}}],["moment(data.commit.committer.date).todate",{"_index":2197,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["moment(data.metadata.creationtimestamp).todate",{"_index":3174,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{},"classes/K8sPod.html":{}}}],["monitor",{"_index":2335,"title":{},"body":{"injectables/ContainerTemplates.html":{},"components/MicroServiceInstallerComponent.html":{}}}],["monitoring",{"_index":2344,"title":{},"body":{"injectables/ContainerTemplates.html":{},"components/MicroServiceInstallerComponent.html":{},"components/ServicePropertiesComponent.html":{}}}],["more",{"_index":3020,"title":{},"body":{"components/HomeComponent.html":{},"components/SagImageAlerterComponent.html":{},"index.html":{}}}],["more:hover",{"_index":3025,"title":{},"body":{"components/HomeComponent.html":{}}}],["mouseevent",{"_index":2148,"title":{},"body":{"directives/CancelCdkDrag.html":{}}}],["msc",{"_index":364,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["msg",{"_index":3665,"title":{},"body":{"injectables/Ng2Uploader.html":{}}}],["msr",{"_index":2330,"title":{},"body":{"injectables/ContainerTemplates.html":{},"components/MicroServiceInstallerComponent.html":{}}}],["multipart",{"_index":3639,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["multiple",{"_index":3640,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["mws",{"_index":2331,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["mysql",{"_index":2345,"title":{},"body":{"injectables/ContainerTemplates.html":{},"components/MicroServiceInstallerComponent.html":{}}}],["mysqldb",{"_index":2336,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["mysqlkeywords.xml",{"_index":3601,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["mysqltypemapping.xml",{"_index":3597,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["mywebmethods",{"_index":2340,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["name",{"_index":13,"title":{},"body":{"classes/API.html":{},"classes/APIDefinition.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"components/AboutComponent.html":{},"classes/Action.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"directives/BuildImageChooseDirective.html":{},"interfaces/BuildParams.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"directives/CancelCdkDrag.html":{},"classes/CommitInfo.html":{},"injectables/ContainerTemplates.html":{},"classes/DependencyWrapper.html":{},"classes/Deployment.html":{},"components/DeploymentDetailsComponent.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/DockerContainer.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"components/HomeComponent.html":{},"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/K8sPod.html":{},"injectables/K8sService.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"components/MicroServiceInstallerComponent.html":{},"injectables/Ng2Uploader.html":{},"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{},"injectables/PackagesService.html":{},"classes/Payload.html":{},"components/PodsListComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"interfaces/PropertiesChangedOwner.html":{},"classes/RepoSettings.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"directives/RuntimeActionsDirective.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"components/ServicePropertiesComponent.html":{},"injectables/Settings.html":{},"components/SimpleNameComponent.html":{},"classes/Source.html":{},"classes/Sources.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{},"classes/TestCase.html":{},"components/TestCaseComponent.html":{},"injectables/TestConfigService.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"classes/TestSuite.html":{},"injectables/TestTraceService.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"classes/UploadedFile.html":{},"classes/Values.html":{},"classes/WebSocketService.html":{},"classes/WmPackageInfo.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["name).animate",{"_index":2962,"title":{},"body":{"components/HomeComponent.html":{}}}],["name).css({display",{"_index":2960,"title":{},"body":{"components/HomeComponent.html":{}}}],["name).height",{"_index":2979,"title":{},"body":{"components/HomeComponent.html":{}}}],["name.component",{"_index":1660,"title":{},"body":{"modules/AppModule.html":{}}}],["name.component.ts",{"_index":5120,"title":{},"body":{"components/SimpleNameComponent.html":{},"coverage.html":{}}}],["name.component.ts:21",{"_index":5123,"title":{},"body":{"components/SimpleNameComponent.html":{}}}],["name.component.ts:23",{"_index":5124,"title":{},"body":{"components/SimpleNameComponent.html":{}}}],["name.indexof",{"_index":711,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["name.lastindexof",{"_index":724,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["name.length",{"_index":727,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["name.substring(0",{"_index":713,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["name.substring(idx+1",{"_index":715,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["namedeploy",{"_index":3295,"title":{},"body":{"injectables/K8sService.html":{}}}],["names",{"_index":681,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/CommitInfo.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/DockerContainer.html":{},"components/EditContainerComponent.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"injectables/K8sService.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"components/RuntimeK8sComponent.html":{},"classes/Server.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{}}}],["names.push(i.metadata.name",{"_index":3381,"title":{},"body":{"injectables/K8sService.html":{}}}],["names.push(new",{"_index":2293,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["names.sort((a,b",{"_index":2297,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["namespace",{"_index":917,"title":{},"body":{"classes/Action-1.html":{},"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{},"injectables/K8sService.html":{},"components/PodsListComponent.html":{},"classes/RepoSettings.html":{},"classes/RunSet.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["namespaces",{"_index":3248,"title":{},"body":{"injectables/K8sService.html":{},"components/RuntimeK8sComponent.html":{}}}],["namespaces(k8surl",{"_index":3269,"title":{},"body":{"injectables/K8sService.html":{}}}],["namespaceselectionchanged",{"_index":4441,"title":{},"body":{"components/RuntimeK8sComponent.html":{}}}],["navigate",{"_index":5387,"title":{},"body":{"components/TestHistoryComponent.html":{},"index.html":{}}}],["navigateto",{"_index":1853,"title":{},"body":{"classes/AppPage.html":{}}}],["necessary",{"_index":2999,"title":{},"body":{"components/HomeComponent.html":{}}}],["need",{"_index":2936,"title":{},"body":{"components/HomeComponent.html":{}}}],["network",{"_index":2682,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["never",{"_index":5019,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["new",{"_index":60,"title":{},"body":{"classes/API.html":{},"classes/APIDefinition.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Action.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildExeComponent.html":{},"interfaces/BuildParams.html":{},"classes/CommitInfo.html":{},"classes/DependencyWrapper.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/DockerContainer.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/K8sPod.html":{},"injectables/K8sService.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"components/MicroServiceInstallerComponent.html":{},"injectables/Ng2Uploader.html":{},"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{},"injectables/PackagesService.html":{},"classes/Payload.html":{},"components/PodsListComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RepoSettings.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"components/SagImageAlerterComponent.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"components/ServicePropertiesComponent.html":{},"injectables/Settings.html":{},"classes/Source.html":{},"classes/SourceWrapper.html":{},"classes/Sources.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{},"classes/TestCase.html":{},"components/TestCaseComponent.html":{},"injectables/TestConfigService.html":{},"classes/TestSuite.html":{},"injectables/TestTraceService.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"classes/UploadedFile.html":{},"classes/Values.html":{},"classes/WebSocketService.html":{},"classes/WmPackageInfo.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newcount",{"_index":3306,"title":{},"body":{"injectables/K8sService.html":{}}}],["newfiles",{"_index":3751,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["newfiles.foreach((f",{"_index":3754,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["next",{"_index":3954,"title":{},"body":{"components/PodsListComponent.html":{},"components/SagImageAlerterComponent.html":{}}}],["nextversion",{"_index":4538,"title":{},"body":{"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{}}}],["nextversion():string",{"_index":4773,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["ng",{"_index":410,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"dependencies.html":{},"index.html":{}}}],["ng2",{"_index":1625,"title":{},"body":{"modules/AppModule.html":{},"components/UploadButtonComponent.html":{},"dependencies.html":{}}}],["ng2uploader",{"_index":3622,"title":{"injectables/Ng2Uploader.html":{}},"body":{"injectables/Ng2Uploader.html":{},"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{},"classes/UploadedFile.html":{},"coverage.html":{}}}],["ngfiledrop",{"_index":409,"title":{"directives/NgFileDrop.html":{}},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"directives/NgFileDrop.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["ngfileselect",{"_index":412,"title":{"directives/NgFileSelect.html":{}},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"directives/NgFileSelect.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["ngmodule",{"_index":1595,"title":{},"body":{"modules/AppModule.html":{}}}],["ngonchanges",{"_index":941,"title":{},"body":{"classes/Action-1.html":{},"components/ActionComponent.html":{},"components/EditContainerComponent.html":{},"classes/GitSelectionModel.html":{},"components/PodsListComponent.html":{},"classes/SourceWrapper.html":{},"components/StagingComponent.html":{}}}],["ngondestroy",{"_index":2143,"title":{},"body":{"directives/CancelCdkDrag.html":{},"components/PodsListComponent.html":{},"classes/WebSocketService.html":{}}}],["ngoninit",{"_index":930,"title":{},"body":{"classes/Action-1.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"directives/CancelCdkDrag.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"classes/GitSelectionModel.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/ServiceInfo.html":{},"components/ServicePropertiesComponent.html":{},"classes/SourceWrapper.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["ngx",{"_index":2176,"title":{},"body":{"classes/CommitInfo.html":{},"classes/DependencyWrapper.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"injectables/PackagesService.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/Sources.html":{},"dependencies.html":{}}}],["ngxxml2jsonservice",{"_index":2175,"title":{},"body":{"classes/CommitInfo.html":{},"classes/DependencyWrapper.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"injectables/PackagesService.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/Sources.html":{}}}],["ngzone",{"_index":4566,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["nmespce",{"_index":3296,"title":{},"body":{"injectables/K8sService.html":{}}}],["none",{"_index":779,"title":{},"body":{"classes/Action.html":{},"components/ActionComponent.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildComponent.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"classes/Payload.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"components/RuntimeK8sComponent.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{},"components/TestCaseComponent.html":{},"miscellaneous/enumerations.html":{}}}],["noparams",{"_index":3641,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["nothing",{"_index":2811,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/ServiceInfo.html":{},"classes/SourceWrapper.html":{}}}],["now",{"_index":3106,"title":{},"body":{"classes/K8sDeployment.html":{},"injectables/K8sService.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{}}}],["now't",{"_index":4789,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["null",{"_index":131,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Action.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildExeComponent.html":{},"interfaces/BuildParams.html":{},"classes/CommitInfo.html":{},"injectables/ContainerTemplates.html":{},"classes/DependencyWrapper.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"components/EditContainerComponent.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"components/HomeComponent.html":{},"injectables/K8sService.html":{},"components/MicroServiceInstallerComponent.html":{},"injectables/Ng2Uploader.html":{},"injectables/PackagesService.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RepoSettings.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"injectables/Settings.html":{},"classes/SourceWrapper.html":{},"classes/Sources.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{},"components/TestCaseComponent.html":{},"injectables/TestConfigService.html":{},"classes/UploadedFile.html":{},"classes/Values.html":{},"classes/WebSocketService.html":{}}}],["number",{"_index":153,"title":{},"body":{"classes/API.html":{},"classes/APIDefinition.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Action.html":{},"classes/Action-1.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildComponent.html":{},"interfaces/BuildParams.html":{},"classes/CommitInfo.html":{},"injectables/ContainerTemplates.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"components/DockerImageVersionsComponent.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"components/HomeComponent.html":{},"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{},"injectables/K8sService.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"injectables/Ng2Uploader.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RepoSettings.html":{},"classes/RunSet.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/Server.html":{},"components/ServicePropertiesComponent.html":{},"injectables/Settings.html":{},"classes/SourceWrapper.html":{},"classes/Stage.html":{},"classes/Test.html":{},"classes/UploadedFile.html":{},"classes/Values.html":{},"classes/WebSocketService.html":{},"classes/WmPackageInfo.html":{},"miscellaneous/variables.html":{}}}],["number(data.initialdelayseconds",{"_index":676,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["number(data.periodseconds",{"_index":678,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["number(data.timeoutseconds",{"_index":680,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["number(row.version",{"_index":1012,"title":{},"body":{"classes/Action-1.html":{}}}],["number(this._selectedversion.version",{"_index":2539,"title":{},"body":{"components/DockerImageVersionsComponent.html":{}}}],["numrows",{"_index":2775,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["numselected",{"_index":2773,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["obj",{"_index":5198,"title":{},"body":{"components/StagingComponent.html":{}}}],["obj.active",{"_index":2596,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["object",{"_index":878,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"injectables/Ng2Uploader.html":{},"classes/Payload.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{},"classes/UploadedFile.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["object.assign",{"_index":1281,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/UMInstallerComponent.html":{}}}],["object.keys(this.customheaders).foreach((key",{"_index":3789,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["obs",{"_index":4252,"title":{},"body":{"classes/Result.html":{}}}],["observable",{"_index":47,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/CommitInfo.html":{},"injectables/ContainerTemplates.html":{},"classes/DependencyWrapper.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"classes/K8sDeployment.html":{},"injectables/K8sService.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"injectables/PackagesService.html":{},"classes/RepoSettings.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"components/ServicePropertiesComponent.html":{},"injectables/Settings.html":{},"classes/Sources.html":{},"injectables/TestConfigService.html":{},"injectables/TestTraceService.html":{},"classes/Values.html":{},"classes/WebSocketService.html":{}}}],["observable((observer",{"_index":3467,"title":{},"body":{"classes/LivePods.html":{},"classes/LivePodsCount.html":{}}}],["observable.create((observer",{"_index":2375,"title":{},"body":{"injectables/ContainerTemplates.html":{},"classes/Result.html":{},"classes/WebSocketService.html":{}}}],["observableinput",{"_index":5440,"title":{},"body":{"injectables/TestTraceService.html":{}}}],["observer",{"_index":2353,"title":{},"body":{"injectables/ContainerTemplates.html":{},"classes/LivePods.html":{},"classes/Result.html":{},"classes/WebSocketService.html":{}}}],["observer.complete",{"_index":3480,"title":{},"body":{"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"classes/Result.html":{},"classes/WebSocketService.html":{}}}],["observer.error(err",{"_index":5609,"title":{},"body":{"classes/WebSocketService.html":{}}}],["observer.next(\"log",{"_index":5603,"title":{},"body":{"classes/WebSocketService.html":{}}}],["observer.next(err",{"_index":5608,"title":{},"body":{"classes/WebSocketService.html":{}}}],["observer.next(error.message",{"_index":5612,"title":{},"body":{"classes/WebSocketService.html":{}}}],["observer.next(evt.data",{"_index":5601,"title":{},"body":{"classes/WebSocketService.html":{}}}],["observer.next(info",{"_index":5611,"title":{},"body":{"classes/WebSocketService.html":{}}}],["observer.next(log",{"_index":4241,"title":{},"body":{"classes/Result.html":{}}}],["observer.next(new",{"_index":3478,"title":{},"body":{"classes/LivePods.html":{},"classes/LivePodsCount.html":{}}}],["observer.next(null",{"_index":5605,"title":{},"body":{"classes/WebSocketService.html":{}}}],["observer.next(true",{"_index":2395,"title":{},"body":{"injectables/ContainerTemplates.html":{},"classes/WebSocketService.html":{}}}],["of(error.message",{"_index":4293,"title":{},"body":{"classes/Result.html":{}}}],["of(false",{"_index":2290,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"injectables/K8sService.html":{},"classes/Result.html":{},"classes/WebSocketService.html":{}}}],["of(teststatus.none",{"_index":5444,"title":{},"body":{"injectables/TestTraceService.html":{}}}],["of(this._baseimages",{"_index":4209,"title":{},"body":{"classes/Result.html":{}}}],["of(this._cache",{"_index":3101,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["of(this._cache.get(namespace",{"_index":3330,"title":{},"body":{"injectables/K8sService.html":{}}}],["of(this._customimages",{"_index":4222,"title":{},"body":{"classes/Result.html":{}}}],["of(this._filteralllist(filtertype",{"_index":4320,"title":{},"body":{"classes/Result.html":{}}}],["of(this._image(name",{"_index":4199,"title":{},"body":{"classes/Result.html":{}}}],["of(this._packages",{"_index":2260,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["of(this._sagimages",{"_index":4217,"title":{},"body":{"classes/Result.html":{}}}],["of(this._values",{"_index":2241,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["of(this._versions(uniquename",{"_index":4228,"title":{},"body":{"classes/Result.html":{}}}],["of(true",{"_index":3354,"title":{},"body":{"injectables/K8sService.html":{},"classes/WebSocketService.html":{}}}],["official",{"_index":4553,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["offset",{"_index":2903,"title":{},"body":{"components/HomeComponent.html":{}}}],["offsetforextrainfo",{"_index":2904,"title":{},"body":{"components/HomeComponent.html":{}}}],["offsetforextrainfo(name",{"_index":2927,"title":{},"body":{"components/HomeComponent.html":{}}}],["ok",{"_index":2474,"title":{},"body":{"components/DeploymentDetailsComponent.html":{},"classes/Result.html":{}}}],["okay",{"_index":2803,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["oldcount",{"_index":3307,"title":{},"body":{"injectables/K8sService.html":{}}}],["oldvalue",{"_index":1174,"title":{},"body":{"components/ActionComponent.html":{}}}],["onaction",{"_index":922,"title":{},"body":{"classes/Action-1.html":{}}}],["onchanges",{"_index":887,"title":{},"body":{"classes/Action-1.html":{},"components/ActionComponent.html":{},"components/BuildExeComponent.html":{},"components/EditContainerComponent.html":{},"classes/GitSelectionModel.html":{},"components/PodsListComponent.html":{},"components/SimpleNameComponent.html":{},"classes/SourceWrapper.html":{},"components/StagingComponent.html":{},"components/UploadButtonComponent.html":{}}}],["oncompletion",{"_index":5472,"title":{},"body":{"components/UploadButtonComponent.html":{}}}],["ondestroy",{"_index":285,"title":{},"body":{"components/AboutComponent.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"directives/CancelCdkDrag.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"classes/GitSelectionModel.html":{},"components/HomeComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/ServiceInfo.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"classes/SourceWrapper.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"classes/WebSocketService.html":{}}}],["onfail",{"_index":803,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["onfailure",{"_index":5018,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["onfiles",{"_index":3826,"title":{},"body":{"directives/NgFileSelect.html":{}}}],["onfinished",{"_index":5509,"title":{},"body":{"classes/UploadedFile.html":{}}}],["onfinished(status",{"_index":3712,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["ongitchange(event",{"_index":2755,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["oninit",{"_index":886,"title":{},"body":{"classes/Action-1.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"directives/CancelCdkDrag.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"classes/GitSelectionModel.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/ServiceInfo.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"classes/SourceWrapper.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["onnoclick",{"_index":276,"title":{},"body":{"components/AboutComponent.html":{}}}],["onselection",{"_index":923,"title":{},"body":{"classes/Action-1.html":{},"components/DockerImageVersionsComponent.html":{}}}],["onstart",{"_index":802,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["onsuccess",{"_index":804,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["onupload",{"_index":3799,"title":{},"body":{"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{}}}],["onwards",{"_index":1612,"title":{},"body":{"modules/AppModule.html":{}}}],["opacity",{"_index":1996,"title":{},"body":{"components/BuildComponent.html":{},"components/HomeComponent.html":{},"components/TestCaseComponent.html":{}}}],["opt/softwareag/api_portal/license.xml",{"_index":1545,"title":{},"body":{"components/ApiPortalInstallerComponent.html":{}}}],["opt/softwareag/api_portal/server/bin/agent.user.cfg",{"_index":1565,"title":{},"body":{"components/ApiPortalInstallerComponent.html":{}}}],["opt/softwareag/eventdatastore/data",{"_index":1320,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["opt/softwareag/integrationserver/application.properties",{"_index":3604,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["opt/softwareag/integrationserver/cache",{"_index":3580,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["opt/softwareag/integrationserver/config",{"_index":3591,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["opt/softwareag/integrationserver/db",{"_index":3572,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["opt/softwareag/integrationserver/instances/default/cache",{"_index":1312,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["opt/softwareag/integrationserver/instances/default/config/licensekey.xml",{"_index":1276,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["opt/softwareag/integrationserver/instances/default/db",{"_index":1305,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["opt/softwareag/integrationserver/lib/jars",{"_index":3595,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["opt/softwareag/integrationserver/packages/wmjdbcadapter/config",{"_index":3599,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["opt/softwareag/integrationserver/packages/wmjdbcadapter/config/keywords",{"_index":3602,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["opt/softwareag/internaldatastore/data",{"_index":1327,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["opt/softwareag/microgateway",{"_index":1452,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["opt/softwareag/microgateway.zip",{"_index":1457,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["opt/softwareag/microgateway/config/custom",{"_index":1492,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["opt/softwareag/microgateway/config/license.xml",{"_index":1381,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["opt/softwareag/microgateway/config/system",{"_index":1490,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["opt/softwareag/microgateway/setpermissions.sh",{"_index":1477,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["opt/softwareag/universalmessaging/server/umserver/license.xml",{"_index":5464,"title":{},"body":{"components/UMInstallerComponent.html":{}}}],["optional",{"_index":27,"title":{},"body":{"classes/API.html":{},"classes/APIDefinition.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"components/AboutComponent.html":{},"classes/Action.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"directives/BuildImageChooseDirective.html":{},"interfaces/BuildParams.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"directives/CancelCdkDrag.html":{},"classes/CommitInfo.html":{},"injectables/ContainerTemplates.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/DockerContainer.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"components/HomeComponent.html":{},"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/K8sPod.html":{},"injectables/K8sService.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"components/MicroServiceInstallerComponent.html":{},"injectables/Ng2Uploader.html":{},"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{},"injectables/PackagesService.html":{},"classes/Payload.html":{},"components/PodsListComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"interfaces/PropertiesChangedOwner.html":{},"classes/RepoSettings.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"directives/RuntimeActionsDirective.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/SearchObj.html":{},"classes/Server.html":{},"components/ServicePropertiesComponent.html":{},"injectables/Settings.html":{},"components/SimpleNameComponent.html":{},"classes/Source.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{},"classes/TestCase.html":{},"components/TestCaseComponent.html":{},"injectables/TestConfigService.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"classes/TestSuite.html":{},"injectables/TestTraceService.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"classes/UploadedFile.html":{},"classes/Values.html":{},"classes/WebSocketService.html":{},"classes/WmPackageInfo.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":125,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"injectables/Ng2Uploader.html":{},"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{},"classes/RepoSettings.html":{},"classes/Result.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"injectables/Settings.html":{},"components/TestHistoryComponent.html":{},"classes/Values.html":{}}}],["options).pipe(map",{"_index":127,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Result.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["options).pipe(map((response",{"_index":4061,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["options).subscribe((response",{"_index":4066,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["options.allowedextensions",{"_index":3726,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["options.authtoken",{"_index":3748,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["options.authtokenprefix",{"_index":3746,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["options.autoupload",{"_index":3734,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["options.cors",{"_index":3718,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["options.customheaders",{"_index":3742,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["options.data",{"_index":3730,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["options.debug",{"_index":3740,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["options.encodeheaders",{"_index":3744,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["options.fieldname",{"_index":3750,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["options.maxsize",{"_index":3728,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["options.maxuploads",{"_index":3724,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["options.method",{"_index":3738,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["options.multipart",{"_index":3736,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["options.multiple",{"_index":3722,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["options.noparams",{"_index":3732,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["options.url",{"_index":3716,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["options.withcredentials",{"_index":3720,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["orange",{"_index":989,"title":{},"body":{"classes/Action-1.html":{},"components/HomeComponent.html":{},"components/PodsListComponent.html":{}}}],["order",{"_index":1550,"title":{},"body":{"components/ApiPortalInstallerComponent.html":{}}}],["origin",{"_index":3853,"title":{},"body":{"classes/Payload.html":{}}}],["originalname",{"_index":3699,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["originalobject",{"_index":870,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["os",{"_index":1454,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["other.exclude",{"_index":5143,"title":{},"body":{"classes/Source.html":{}}}],["other.gitpassword",{"_index":5149,"title":{},"body":{"classes/Source.html":{}}}],["other.gitrepository",{"_index":5145,"title":{},"body":{"classes/Source.html":{}}}],["other.gituri",{"_index":5144,"title":{},"body":{"classes/Source.html":{}}}],["other.gituser",{"_index":5147,"title":{},"body":{"classes/Source.html":{}}}],["other.include",{"_index":5142,"title":{},"body":{"classes/Source.html":{}}}],["other.targetdir",{"_index":5152,"title":{},"body":{"classes/Source.html":{}}}],["other.type",{"_index":5151,"title":{},"body":{"classes/Source.html":{}}}],["otherid",{"_index":4148,"title":{},"body":{"classes/Result.html":{}}}],["otherwise",{"_index":2780,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["out",{"_index":1587,"title":{},"body":{"modules/AppModule.html":{},"classes/Result.html":{},"index.html":{},"overview.html":{}}}],["out.push(a",{"_index":4348,"title":{},"body":{"classes/Result.html":{}}}],["out.push(img",{"_index":4312,"title":{},"body":{"classes/Result.html":{}}}],["out.push(v",{"_index":4314,"title":{},"body":{"classes/Result.html":{}}}],["output",{"_index":890,"title":{},"body":{"classes/Action-1.html":{},"components/ActionComponent.html":{},"components/BuildExeComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"classes/GitSelectionModel.html":{},"components/PodsListComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"classes/SourceWrapper.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/UploadButtonComponent.html":{}}}],["outputs",{"_index":1069,"title":{},"body":{"components/ActionComponent.html":{},"components/DockerImageVersionsComponent.html":{},"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{},"components/PodsListComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/UploadButtonComponent.html":{}}}],["overflow",{"_index":1952,"title":{},"body":{"components/BuildComponent.html":{}}}],["overide",{"_index":2536,"title":{},"body":{"components/DockerImageVersionsComponent.html":{}}}],["override",{"_index":3613,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["overview",{"_index":5757,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":14,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"directives/BuildImageChooseDirective.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"classes/GitSelectionModel.html":{},"components/MicroServiceInstallerComponent.html":{},"interfaces/PropertiesChangedOwner.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/SourceWrapper.html":{},"components/UMInstallerComponent.html":{}}}],["p",{"_index":59,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Action.html":{},"components/ApiGatewayInstallerComponent.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/DependencyWrapper.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"injectables/PackagesService.html":{},"classes/Payload.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"classes/Sources.html":{},"classes/Stage.html":{},"classes/Test.html":{},"components/TestCaseComponent.html":{}}}],["p._contenttype",{"_index":3877,"title":{},"body":{"classes/Payload.html":{}}}],["p._endpoint",{"_index":3885,"title":{},"body":{"classes/Payload.html":{}}}],["p._origin",{"_index":3871,"title":{},"body":{"classes/Payload.html":{}}}],["p._service",{"_index":3884,"title":{},"body":{"classes/Payload.html":{}}}],["p.apis",{"_index":454,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["p.apis.push(apidefinition.make(a",{"_index":455,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["p.builds.push(builder.make(i",{"_index":860,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["p.containerport",{"_index":3194,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["p.deployments",{"_index":861,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["p.deployments.push(deployment.make(i",{"_index":863,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["p.description",{"_index":659,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/GitSelectionModel.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/SourceWrapper.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["p.external",{"_index":658,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["p.foreach((f",{"_index":1373,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/SagImageAlerterComponent.html":{}}}],["p.id",{"_index":449,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["p.initialdelayseconds",{"_index":675,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["p.name",{"_index":450,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/GitSelectionModel.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/SourceWrapper.html":{},"classes/Stage.html":{},"classes/Test.html":{},"components/TestCaseComponent.html":{}}}],["p.path",{"_index":671,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["p.periodseconds",{"_index":677,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["p.port",{"_index":673,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["p.publicport",{"_index":662,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["p.servicetype",{"_index":664,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["p.source",{"_index":452,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["p.stages.push(stage.make(s",{"_index":866,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["p.status",{"_index":3476,"title":{},"body":{"classes/LivePods.html":{},"classes/LivePodsCount.html":{}}}],["p.teststatus",{"_index":4894,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["p.timeoutseconds",{"_index":679,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["p.type",{"_index":660,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["p.version",{"_index":2854,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["p['testcounts",{"_index":4896,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["package",{"_index":170,"title":{"dependencies.html":{}},"body":{"classes/APIDefinition.html":{},"classes/Action.html":{},"modules/AppModule.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/CommitInfo.html":{},"classes/DependencyWrapper.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"components/EditContainerComponent.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"injectables/PackagesService.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"components/SagImageAlerterComponent.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"classes/SourceWrapper.html":{},"classes/Sources.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{},"components/TestCaseComponent.html":{},"injectables/TestConfigService.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"classes/WmPackageInfo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["package'},{'name",{"_index":338,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["package.name",{"_index":5316,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["packagechooserformgroup",{"_index":4867,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["packagectrl",{"_index":5268,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["packagedetails",{"_index":3837,"title":{},"body":{"injectables/PackagesService.html":{},"injectables/TestConfigService.html":{}}}],["packagedetails(name",{"_index":2420,"title":{},"body":{"classes/DependencyWrapper.html":{},"injectables/PackagesService.html":{},"classes/Sources.html":{},"injectables/TestConfigService.html":{}}}],["packageforvalue",{"_index":5272,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["packageforvalue(value",{"_index":5284,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["packages",{"_index":2267,"title":{},"body":{"classes/CommitInfo.html":{},"classes/DependencyWrapper.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"components/HomeComponent.html":{},"injectables/PackagesService.html":{},"classes/RepoSettings.html":{},"classes/ServiceInfo.html":{},"injectables/Settings.html":{},"classes/SourceWrapper.html":{},"classes/Sources.html":{},"components/TestCaseComponent.html":{},"injectables/TestConfigService.html":{},"classes/Values.html":{}}}],["packages(packagesdir",{"_index":2410,"title":{},"body":{"classes/DependencyWrapper.html":{},"injectables/PackagesService.html":{},"classes/Sources.html":{}}}],["packages.component",{"_index":1639,"title":{},"body":{"modules/AppModule.html":{}}}],["packages.component.ts",{"_index":5643,"title":{},"body":{"coverage.html":{}}}],["packages.foreach((p",{"_index":2437,"title":{},"body":{"classes/DependencyWrapper.html":{},"injectables/PackagesService.html":{},"classes/Sources.html":{}}}],["packages.push(wmpackageinfo.make(p",{"_index":2417,"title":{},"body":{"classes/DependencyWrapper.html":{},"injectables/PackagesService.html":{},"classes/Sources.html":{},"injectables/TestConfigService.html":{}}}],["packagesdir",{"_index":2414,"title":{},"body":{"classes/DependencyWrapper.html":{},"classes/GitSelectionModel.html":{},"injectables/PackagesService.html":{},"classes/SourceWrapper.html":{},"classes/Sources.html":{}}}],["packagesdir.startswith",{"_index":2425,"title":{},"body":{"classes/DependencyWrapper.html":{},"injectables/PackagesService.html":{},"classes/Sources.html":{}}}],["packagesdir.substring(packagesdir.indexof(\"/\")+1",{"_index":2426,"title":{},"body":{"classes/DependencyWrapper.html":{},"injectables/PackagesService.html":{},"classes/Sources.html":{}}}],["packagespaginator",{"_index":4885,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["packagesservice",{"_index":1582,"title":{"injectables/PackagesService.html":{}},"body":{"modules/AppModule.html":{},"classes/DependencyWrapper.html":{},"classes/GitSelectionModel.html":{},"injectables/PackagesService.html":{},"classes/ServiceInfo.html":{},"classes/SourceWrapper.html":{},"classes/Sources.html":{},"components/TestCaseComponent.html":{},"coverage.html":{},"overview.html":{}}}],["packagesservice.uri",{"_index":2411,"title":{},"body":{"classes/DependencyWrapper.html":{},"injectables/PackagesService.html":{},"classes/Sources.html":{}}}],["packagetabledatasource",{"_index":2729,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/ServiceInfo.html":{},"classes/SourceWrapper.html":{}}}],["packs",{"_index":2436,"title":{},"body":{"classes/DependencyWrapper.html":{},"injectables/PackagesService.html":{},"classes/Sources.html":{}}}],["padding",{"_index":1943,"title":{},"body":{"components/BuildComponent.html":{},"components/HomeComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/TestCaseComponent.html":{}}}],["page",{"_index":2938,"title":{},"body":{"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"classes/RepoSettings.html":{},"components/SagImageAlerterComponent.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["page\").offset().left",{"_index":2983,"title":{},"body":{"components/HomeComponent.html":{}}}],["page').height",{"_index":2975,"title":{},"body":{"components/HomeComponent.html":{}}}],["page').offset().top",{"_index":2974,"title":{},"body":{"components/HomeComponent.html":{}}}],["pageevent",{"_index":4866,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["pagesize",{"_index":4865,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["panel",{"_index":5399,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["panelopenstate",{"_index":1906,"title":{},"body":{"components/BuildComponent.html":{},"components/RuntimeDetailsComponent.html":{},"classes/ServiceInfo.html":{}}}],["parameters",{"_index":25,"title":{},"body":{"classes/API.html":{},"classes/APIDefinition.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"components/AboutComponent.html":{},"classes/Action.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"directives/BuildImageChooseDirective.html":{},"interfaces/BuildParams.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"directives/CancelCdkDrag.html":{},"classes/CommitInfo.html":{},"injectables/ContainerTemplates.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/DockerContainer.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"components/HomeComponent.html":{},"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/K8sPod.html":{},"injectables/K8sService.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"components/MicroServiceInstallerComponent.html":{},"injectables/Ng2Uploader.html":{},"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{},"injectables/PackagesService.html":{},"classes/Payload.html":{},"components/PodsListComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"interfaces/PropertiesChangedOwner.html":{},"classes/RepoSettings.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"directives/RuntimeActionsDirective.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/SearchObj.html":{},"classes/Server.html":{},"components/ServicePropertiesComponent.html":{},"injectables/Settings.html":{},"components/SimpleNameComponent.html":{},"classes/Source.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{},"classes/TestCase.html":{},"components/TestCaseComponent.html":{},"injectables/TestConfigService.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"classes/TestSuite.html":{},"injectables/TestTraceService.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"classes/UploadedFile.html":{},"classes/Values.html":{},"classes/WebSocketService.html":{},"classes/WmPackageInfo.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":3337,"title":{},"body":{"injectables/K8sService.html":{},"classes/Result.html":{}}}],["params['id",{"_index":4623,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["parent",{"_index":2537,"title":{},"body":{"components/DockerImageVersionsComponent.html":{}}}],["parse(data",{"_index":564,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["parserreviver",{"_index":5687,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["parserreviver(key",{"_index":876,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{},"miscellaneous/functions.html":{}}}],["parserreviver).install",{"_index":566,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["part",{"_index":3188,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["pased",{"_index":1004,"title":{},"body":{"classes/Action-1.html":{},"classes/ServiceInfo.html":{}}}],["passed",{"_index":5731,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["passedtests(element",{"_index":4915,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["passedtests(image",{"_index":996,"title":{},"body":{"classes/Action-1.html":{}}}],["password",{"_index":460,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildExeComponent.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{},"miscellaneous/enumerations.html":{}}}],["passwordencrypted",{"_index":2014,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["patch",{"_index":4608,"title":{},"body":{"components/SagImageAlerterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["patch+json",{"_index":3346,"title":{},"body":{"injectables/K8sService.html":{}}}],["path",{"_index":667,"title":{},"body":{"classes/Action.html":{},"modules/AppModule.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/CommitInfo.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/SourceWrapper.html":{},"classes/Stage.html":{},"classes/Test.html":{},"classes/WebSocketService.html":{}}}],["path.startswith",{"_index":5579,"title":{},"body":{"classes/WebSocketService.html":{}}}],["pause",{"_index":1194,"title":{},"body":{"components/ActionComponent.html":{}}}],["payload",{"_index":110,"title":{"classes/Payload.html":{}},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"injectables/K8sService.html":{},"classes/Payload.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/TestCase.html":{},"coverage.html":{}}}],["payload.make(json.origin",{"_index":3886,"title":{},"body":{"classes/Payload.html":{}}}],["payload.makefromjson(json[prop",{"_index":5256,"title":{},"body":{"classes/TestCase.html":{}}}],["payloadcontenttype",{"_index":3855,"title":{},"body":{"classes/Payload.html":{},"miscellaneous/enumerations.html":{}}}],["payloadcontenttype.empty",{"_index":3883,"title":{},"body":{"classes/Payload.html":{}}}],["payloadcontenttype.idata",{"_index":3879,"title":{},"body":{"classes/Payload.html":{}}}],["payloadcontenttype.json",{"_index":3878,"title":{},"body":{"classes/Payload.html":{}}}],["payloadcontenttype.object",{"_index":3882,"title":{},"body":{"classes/Payload.html":{}}}],["payloadcontenttype.string",{"_index":3881,"title":{},"body":{"classes/Payload.html":{}}}],["payloadcontenttype.xml",{"_index":3880,"title":{},"body":{"classes/Payload.html":{}}}],["payloadorigin",{"_index":3857,"title":{},"body":{"classes/Payload.html":{},"miscellaneous/enumerations.html":{}}}],["payloadorigin.error",{"_index":3875,"title":{},"body":{"classes/Payload.html":{}}}],["payloadorigin.file",{"_index":3873,"title":{},"body":{"classes/Payload.html":{}}}],["payloadorigin.none",{"_index":3876,"title":{},"body":{"classes/Payload.html":{}}}],["payloadorigin.service",{"_index":3872,"title":{},"body":{"classes/Payload.html":{}}}],["payloadorigin.url",{"_index":3874,"title":{},"body":{"classes/Payload.html":{}}}],["pck",{"_index":209,"title":{},"body":{"classes/APIDefinition.html":{},"classes/WmPackageInfo.html":{}}}],["pck.apis",{"_index":211,"title":{},"body":{"classes/APIDefinition.html":{},"classes/WmPackageInfo.html":{}}}],["pck.apis.push(api",{"_index":240,"title":{},"body":{"classes/APIDefinition.html":{},"classes/WmPackageInfo.html":{}}}],["pck.build",{"_index":214,"title":{},"body":{"classes/APIDefinition.html":{},"classes/WmPackageInfo.html":{}}}],["pck.description",{"_index":215,"title":{},"body":{"classes/APIDefinition.html":{},"classes/WmPackageInfo.html":{}}}],["pck.name",{"_index":236,"title":{},"body":{"classes/APIDefinition.html":{},"classes/WmPackageInfo.html":{}}}],["pck.requires",{"_index":241,"title":{},"body":{"classes/APIDefinition.html":{},"classes/WmPackageInfo.html":{}}}],["pck.requires.push(new",{"_index":246,"title":{},"body":{"classes/APIDefinition.html":{},"classes/WmPackageInfo.html":{}}}],["pck.requires.push(wmpackageinfo.make(r",{"_index":249,"title":{},"body":{"classes/APIDefinition.html":{},"classes/WmPackageInfo.html":{}}}],["pck.services",{"_index":232,"title":{},"body":{"classes/APIDefinition.html":{},"classes/WmPackageInfo.html":{}}}],["pck.shutdown",{"_index":219,"title":{},"body":{"classes/APIDefinition.html":{},"classes/WmPackageInfo.html":{}}}],["pck.startup",{"_index":217,"title":{},"body":{"classes/APIDefinition.html":{},"classes/WmPackageInfo.html":{}}}],["pck.teststatus",{"_index":223,"title":{},"body":{"classes/APIDefinition.html":{},"classes/WmPackageInfo.html":{}}}],["pck.version",{"_index":212,"title":{},"body":{"classes/APIDefinition.html":{},"classes/WmPackageInfo.html":{}}}],["pckg",{"_index":2870,"title":{},"body":{"injectables/GitSourceService.html":{}}}],["pckg.name",{"_index":2279,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["pckg.teststatus",{"_index":4946,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["pckg['testcounts",{"_index":4964,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["pending",{"_index":3209,"title":{},"body":{"classes/K8sPod.html":{},"miscellaneous/enumerations.html":{}}}],["percent",{"_index":3705,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["performance",{"_index":4421,"title":{},"body":{"components/RuntimeDetailsComponent.html":{}}}],["perhaps",{"_index":722,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["periodseconds",{"_index":669,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["permissions",{"_index":1472,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["persistent",{"_index":5091,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["pink",{"_index":983,"title":{},"body":{"classes/Action-1.html":{},"components/PodsListComponent.html":{}}}],["pipe",{"_index":4270,"title":{},"body":{"classes/Result.html":{},"components/ServicePropertiesComponent.html":{}}}],["pipe(map",{"_index":2252,"title":{},"body":{"classes/CommitInfo.html":{},"classes/DependencyWrapper.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"injectables/K8sService.html":{},"injectables/PackagesService.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/Sources.html":{},"injectables/TestConfigService.html":{}}}],["pipe(map((responsedata",{"_index":3350,"title":{},"body":{"injectables/K8sService.html":{},"injectables/TestConfigService.html":{},"injectables/TestTraceService.html":{}}}],["pipeline",{"_index":796,"title":{},"body":{"classes/Action.html":{},"components/ActionComponent.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"components/HomeComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["pipelineaction",{"_index":425,"title":{},"body":{"classes/Action.html":{}}}],["pipelinestatusctrl",{"_index":1058,"title":{},"body":{"components/ActionComponent.html":{}}}],["please",{"_index":2832,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{},"components/TestHistoryComponent.html":{}}}],["plugins/apimg",{"_index":4570,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["plugins/micro",{"_index":4569,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["pod",{"_index":3093,"title":{},"body":{"classes/K8sDeployment.html":{},"classes/K8sPod.html":{},"injectables/K8sService.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"components/PodsListComponent.html":{},"components/RuntimeScaleComponent.html":{}}}],["pod.containers.foreach((c",{"_index":3962,"title":{},"body":{"components/PodsListComponent.html":{}}}],["pod.status",{"_index":3958,"title":{},"body":{"components/PodsListComponent.html":{}}}],["pod.ts",{"_index":3197,"title":{},"body":{"classes/K8sPod.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["pod.ts:17",{"_index":3201,"title":{},"body":{"classes/K8sPod.html":{}}}],["pod.ts:19",{"_index":3203,"title":{},"body":{"classes/K8sPod.html":{}}}],["pod.ts:20",{"_index":3204,"title":{},"body":{"classes/K8sPod.html":{}}}],["pod.ts:21",{"_index":3202,"title":{},"body":{"classes/K8sPod.html":{}}}],["pod.ts:22",{"_index":3200,"title":{},"body":{"classes/K8sPod.html":{}}}],["pod.ts:24",{"_index":3199,"title":{},"body":{"classes/K8sPod.html":{}}}],["pod.ts:26",{"_index":3207,"title":{},"body":{"classes/K8sPod.html":{}}}],["pod.ts:28",{"_index":3208,"title":{},"body":{"classes/K8sPod.html":{}}}],["podcountchange",{"_index":4465,"title":{},"body":{"components/RuntimeScaleComponent.html":{}}}],["podcountchange(event",{"_index":4470,"title":{},"body":{"components/RuntimeScaleComponent.html":{}}}],["podcountchanged",{"_index":3906,"title":{},"body":{"components/PodsListComponent.html":{}}}],["pods",{"_index":3055,"title":{},"body":{"classes/K8sDeployment.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/ServicePropertiesComponent.html":{}}}],["pods'},{'name",{"_index":368,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["pods(service",{"_index":3083,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["pods.foreach((p",{"_index":3475,"title":{},"body":{"classes/LivePods.html":{},"classes/LivePodsCount.html":{}}}],["pods.ts",{"_index":3425,"title":{},"body":{"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"coverage.html":{}}}],["pods.ts:129",{"_index":3452,"title":{},"body":{"classes/LivePods.html":{}}}],["pods.ts:14",{"_index":3445,"title":{},"body":{"classes/LivePods.html":{}}}],["pods.ts:156",{"_index":3450,"title":{},"body":{"classes/LivePods.html":{}}}],["pods.ts:16",{"_index":3442,"title":{},"body":{"classes/LivePods.html":{}}}],["pods.ts:17",{"_index":3443,"title":{},"body":{"classes/LivePods.html":{}}}],["pods.ts:18",{"_index":3444,"title":{},"body":{"classes/LivePods.html":{}}}],["pods.ts:20",{"_index":3440,"title":{},"body":{"classes/LivePods.html":{}}}],["pods.ts:35",{"_index":3454,"title":{},"body":{"classes/LivePods.html":{}}}],["pods.ts:40",{"_index":3449,"title":{},"body":{"classes/LivePods.html":{}}}],["pods.ts:47",{"_index":3453,"title":{},"body":{"classes/LivePods.html":{}}}],["pods.ts:55",{"_index":3448,"title":{},"body":{"classes/LivePods.html":{}}}],["pods.ts:6",{"_index":3485,"title":{},"body":{"classes/LivePodsCount.html":{}}}],["pods.ts:67",{"_index":3456,"title":{},"body":{"classes/LivePods.html":{}}}],["pods.ts:8",{"_index":3486,"title":{},"body":{"classes/LivePodsCount.html":{}}}],["pods_list_refresh_interval",{"_index":3939,"title":{},"body":{"components/PodsListComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["podscount",{"_index":4463,"title":{},"body":{"components/RuntimeScaleComponent.html":{}}}],["podsforapplabel",{"_index":3253,"title":{},"body":{"injectables/K8sService.html":{}}}],["podsforapplabel(namespace",{"_index":3273,"title":{},"body":{"injectables/K8sService.html":{}}}],["podslistcomponent",{"_index":367,"title":{"components/PodsListComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["podstatus",{"_index":3205,"title":{},"body":{"classes/K8sPod.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"components/PodsListComponent.html":{},"miscellaneous/enumerations.html":{}}}],["podstatus.pending",{"_index":3206,"title":{},"body":{"classes/K8sPod.html":{},"components/PodsListComponent.html":{}}}],["podstatus.removed",{"_index":3960,"title":{},"body":{"components/PodsListComponent.html":{}}}],["podstatus.running",{"_index":3222,"title":{},"body":{"classes/K8sPod.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"components/PodsListComponent.html":{}}}],["podstatus.starting",{"_index":3221,"title":{},"body":{"classes/K8sPod.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"components/PodsListComponent.html":{}}}],["podstatus.stopping",{"_index":3223,"title":{},"body":{"classes/K8sPod.html":{},"components/PodsListComponent.html":{}}}],["podstatus.terminated",{"_index":3224,"title":{},"body":{"classes/K8sPod.html":{}}}],["podstatus[rawstatus",{"_index":3215,"title":{},"body":{"classes/K8sPod.html":{}}}],["pointer",{"_index":3009,"title":{},"body":{"components/HomeComponent.html":{}}}],["policies",{"_index":15,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["policy",{"_index":146,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"components/ServicePropertiesComponent.html":{},"miscellaneous/enumerations.html":{}}}],["policyscope','names",{"_index":106,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["port",{"_index":601,"title":{"classes/Port.html":{}},"body":{"classes/Action.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"injectables/ContainerTemplates.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"components/EditContainerComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"coverage.html":{}}}],["port(p.internal",{"_index":657,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["port.makearray(data.ports",{"_index":762,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["port.publicport",{"_index":661,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["port.servicetype",{"_index":663,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["portal",{"_index":1096,"title":{},"body":{"components/ActionComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"injectables/ContainerTemplates.html":{}}}],["portctrl",{"_index":2551,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["portlabel",{"_index":2552,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["ports",{"_index":656,"title":{},"body":{"classes/Action.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["ports.push(port",{"_index":665,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["position",{"_index":1979,"title":{},"body":{"components/BuildComponent.html":{},"components/HomeComponent.html":{},"components/TestCaseComponent.html":{}}}],["post",{"_index":1442,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{},"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["postprocessorservice",{"_index":5409,"title":{},"body":{"classes/TestSuite.html":{}}}],["powered",{"_index":2987,"title":{},"body":{"components/HomeComponent.html":{}}}],["pre",{"_index":1429,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{}}}],["preferences",{"_index":1787,"title":{},"body":{"modules/AppModule.html":{},"classes/GitSelectionModel.html":{},"components/SagImageAlerterComponent.html":{},"classes/SourceWrapper.html":{},"miscellaneous/variables.html":{}}}],["preferredimageversion",{"_index":729,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["prefs",{"_index":4037,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["preloaded",{"_index":4048,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["preparing",{"_index":4730,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["preprocessorservice",{"_index":5410,"title":{},"body":{"classes/TestSuite.html":{}}}],["previous",{"_index":1092,"title":{},"body":{"components/ActionComponent.html":{}}}],["primary",{"_index":1007,"title":{},"body":{"classes/Action-1.html":{},"components/EditContainerComponent.html":{},"classes/ServiceInfo.html":{},"components/StagingComponent.html":{}}}],["primaryport",{"_index":554,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"injectables/ContainerTemplates.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["primaryportctrl",{"_index":1212,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{}}}],["private",{"_index":85,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"classes/CommitInfo.html":{},"injectables/ContainerTemplates.html":{},"classes/DependencyWrapper.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"components/HomeComponent.html":{},"classes/K8sDeployment.html":{},"injectables/K8sService.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"components/MicroServiceInstallerComponent.html":{},"injectables/PackagesService.html":{},"classes/Payload.html":{},"components/PodsListComponent.html":{},"classes/RepoSettings.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/ServiceInfo.html":{},"components/ServicePropertiesComponent.html":{},"injectables/Settings.html":{},"classes/SourceWrapper.html":{},"classes/Sources.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"classes/TestSuite.html":{},"injectables/TestTraceService.html":{},"components/UMInstallerComponent.html":{},"classes/Values.html":{},"classes/WebSocketService.html":{}}}],["privatehost",{"_index":2553,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["privateport",{"_index":2554,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["probe",{"_index":666,"title":{"classes/Probe.html":{}},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"injectables/ContainerTemplates.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/K8sPod.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"classes/Stage.html":{},"classes/Test.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"coverage.html":{}}}],["probe.make(data.livenessprobe",{"_index":774,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["probe.make(data.readinessprobe",{"_index":771,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["processmessage",{"_index":2017,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["processmessage(message",{"_index":2025,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["prod",{"_index":5749,"title":{},"body":{"index.html":{}}}],["product",{"_index":1936,"title":{},"body":{"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{}}}],["productcodelabel",{"_index":2311,"title":{},"body":{"injectables/ContainerTemplates.html":{},"components/SagImageAlerterComponent.html":{}}}],["productcodelabel(code",{"_index":2325,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["productcodelabel(element",{"_index":942,"title":{},"body":{"classes/Action-1.html":{}}}],["productcodes",{"_index":2305,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["production",{"_index":80,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"components/ActionComponent.html":{},"components/EditContainerComponent.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"components/StagingComponent.html":{},"components/TestHistoryComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["products",{"_index":2306,"title":{},"body":{"injectables/ContainerTemplates.html":{},"components/HomeComponent.html":{}}}],["producttype",{"_index":552,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["progress",{"_index":3698,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["progressevent",{"_index":3768,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["project",{"_index":3986,"title":{"classes/Project.html":{}},"body":{"classes/Project.html":{},"coverage.html":{},"index.html":{}}}],["promote",{"_index":786,"title":{},"body":{"classes/Action.html":{},"components/ActionComponent.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["promoteapisctrl",{"_index":1059,"title":{},"body":{"components/ActionComponent.html":{}}}],["promotion",{"_index":1093,"title":{},"body":{"components/ActionComponent.html":{}}}],["prop",{"_index":5252,"title":{},"body":{"classes/TestCase.html":{},"classes/TestSuite.html":{}}}],["properties",{"_index":9,"title":{},"body":{"classes/API.html":{},"classes/APIDefinition.html":{},"injectables/APIGatewayService.html":{},"components/AboutComponent.html":{},"classes/Action.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"interfaces/ActionsComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"classes/BuildImage.html":{},"directives/BuildImageChooseDirective.html":{},"interfaces/BuildParams.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"directives/CancelCdkDrag.html":{},"classes/CommitInfo.html":{},"injectables/ContainerTemplates.html":{},"classes/DependencyWrapper.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/DockerContainer.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"components/HomeComponent.html":{},"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/K8sPod.html":{},"injectables/K8sService.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"components/MicroServiceInstallerComponent.html":{},"injectables/Ng2Uploader.html":{},"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{},"injectables/PackagesService.html":{},"classes/Payload.html":{},"components/PodsListComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"interfaces/PropertiesChangedOwner.html":{},"classes/RepoSettings.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"directives/RuntimeActionsDirective.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"components/ServicePropertiesComponent.html":{},"injectables/Settings.html":{},"components/SimpleNameComponent.html":{},"classes/Source.html":{},"classes/SourceWrapper.html":{},"classes/Sources.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{},"classes/TestCase.html":{},"components/TestCaseComponent.html":{},"injectables/TestConfigService.html":{},"components/TestHistoryComponent.html":{},"classes/TestSuite.html":{},"injectables/TestTraceService.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"classes/UploadedFile.html":{},"classes/Values.html":{},"classes/WebSocketService.html":{},"classes/WmPackageInfo.html":{}}}],["properties.component",{"_index":1671,"title":{},"body":{"modules/AppModule.html":{}}}],["properties.component.ts",{"_index":4996,"title":{},"body":{"components/ServicePropertiesComponent.html":{},"coverage.html":{}}}],["properties.component.ts:32",{"_index":5010,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["properties.component.ts:35",{"_index":5011,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["properties.component.ts:37",{"_index":5022,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["properties.component.ts:38",{"_index":5020,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["properties.component.ts:39",{"_index":5014,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["properties.component.ts:40",{"_index":5013,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["properties.component.ts:41",{"_index":5015,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["properties.component.ts:42",{"_index":5024,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["properties.component.ts:43",{"_index":5016,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["properties.component.ts:44",{"_index":5023,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["properties.component.ts:45",{"_index":5017,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["properties.component.ts:46",{"_index":5009,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["properties.component.ts:52",{"_index":5012,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["properties.html",{"_index":4998,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["propertieschangedinbuilder",{"_index":3993,"title":{},"body":{"interfaces/PropertiesChangedOwner.html":{}}}],["propertieschangedinbuilder(type",{"_index":2126,"title":{},"body":{"directives/BuildImageChooseDirective.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"interfaces/PropertiesChangedOwner.html":{},"components/SagImageAlerterComponent.html":{}}}],["propertieschangedowner",{"_index":1233,"title":{"interfaces/PropertiesChangedOwner.html":{}},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"directives/BuildImageChooseDirective.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"classes/GitSelectionModel.html":{},"components/MicroServiceInstallerComponent.html":{},"interfaces/PropertiesChangedOwner.html":{},"components/SagImageAlerterComponent.html":{},"classes/SourceWrapper.html":{},"components/UMInstallerComponent.html":{},"coverage.html":{}}}],["propertiesfileadded",{"_index":3497,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["propertiesfileadded(filename",{"_index":3511,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["propertiesformgroup",{"_index":4583,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["property",{"_index":5383,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["propertyfiles",{"_index":3493,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["props",{"_index":1329,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"classes/GitSelectionModel.html":{},"components/MicroServiceInstallerComponent.html":{},"components/ServicePropertiesComponent.html":{},"classes/SourceWrapper.html":{},"components/UMInstallerComponent.html":{}}}],["props'},{'name",{"_index":385,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["props.replace(/\\s/g",{"_index":3605,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["props.set(\"api",{"_index":1529,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["props.set(\"realm",{"_index":5465,"title":{},"body":{"components/UMInstallerComponent.html":{}}}],["props.set(\"ui",{"_index":1330,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{}}}],["props.set(p.name",{"_index":2856,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["propsctrl",{"_index":3494,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["propsfile",{"_index":3509,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["propsfile.source",{"_index":3543,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["propsfile.source.replace",{"_index":3529,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["protected",{"_index":925,"title":{},"body":{"classes/Action-1.html":{},"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/Payload.html":{},"classes/TestCase.html":{}}}],["protomarker",{"_index":4074,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["protractor",{"_index":1856,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provided",{"_index":4555,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["providers",{"_index":1573,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":10,"title":{},"body":{"classes/API.html":{},"classes/APIDefinition.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"components/AboutComponent.html":{},"classes/Action.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"classes/BuildImage.html":{},"directives/BuildImageChooseDirective.html":{},"interfaces/BuildParams.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"classes/CommitInfo.html":{},"injectables/ContainerTemplates.html":{},"classes/DependencyWrapper.html":{},"classes/Deployment.html":{},"components/DeploymentDetailsComponent.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/DockerContainer.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"components/HomeComponent.html":{},"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/K8sPod.html":{},"injectables/K8sService.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"components/MicroServiceInstallerComponent.html":{},"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{},"injectables/PackagesService.html":{},"classes/Payload.html":{},"components/PodsListComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"interfaces/PropertiesChangedOwner.html":{},"classes/RepoSettings.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"directives/RuntimeActionsDirective.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"components/ServicePropertiesComponent.html":{},"injectables/Settings.html":{},"components/SimpleNameComponent.html":{},"classes/Source.html":{},"classes/SourceWrapper.html":{},"classes/Sources.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{},"classes/TestCase.html":{},"components/TestCaseComponent.html":{},"injectables/TestConfigService.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"classes/TestSuite.html":{},"injectables/TestTraceService.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"classes/Values.html":{},"classes/WebSocketService.html":{},"classes/WmPackageInfo.html":{}}}],["publichost",{"_index":2555,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["publicport",{"_index":506,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"components/EditContainerComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{}}}],["publish",{"_index":1100,"title":{},"body":{"components/ActionComponent.html":{}}}],["pull",{"_index":907,"title":{},"body":{"classes/Action-1.html":{}}}],["pulled",{"_index":1039,"title":{},"body":{"classes/Action-1.html":{},"components/SagImageAlerterComponent.html":{}}}],["pullimage(image",{"_index":1036,"title":{},"body":{"classes/Action-1.html":{}}}],["pullimage(name",{"_index":4187,"title":{},"body":{"classes/Result.html":{}}}],["pulsebutton:before",{"_index":1976,"title":{},"body":{"components/BuildComponent.html":{},"components/TestCaseComponent.html":{}}}],["push",{"_index":908,"title":{},"body":{"classes/Action-1.html":{},"components/ActionComponent.html":{}}}],["pushed",{"_index":1029,"title":{},"body":{"classes/Action-1.html":{}}}],["pushimage(image",{"_index":1022,"title":{},"body":{"classes/Action-1.html":{},"classes/Result.html":{}}}],["px",{"_index":2612,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["queueindex",{"_index":3764,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["r",{"_index":2790,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/SourceWrapper.html":{},"classes/Values.html":{}}}],["r.configuration",{"_index":4094,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["r.id",{"_index":2296,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["r.name",{"_index":2295,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["r.packages",{"_index":4093,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["r1",{"_index":3405,"title":{},"body":{"injectables/K8sService.html":{}}}],["r1.description",{"_index":3408,"title":{},"body":{"injectables/K8sService.html":{}}}],["r1.id",{"_index":3406,"title":{},"body":{"injectables/K8sService.html":{}}}],["r1.name",{"_index":3407,"title":{},"body":{"injectables/K8sService.html":{}}}],["r2",{"_index":3409,"title":{},"body":{"injectables/K8sService.html":{}}}],["r2.description",{"_index":3412,"title":{},"body":{"injectables/K8sService.html":{}}}],["r2.id",{"_index":3410,"title":{},"body":{"injectables/K8sService.html":{}}}],["r2.name",{"_index":3411,"title":{},"body":{"injectables/K8sService.html":{}}}],["rad/jc.devops:api",{"_index":5341,"title":{},"body":{"injectables/TestConfigService.html":{}}}],["rad/jc.devops:api/configuration/user",{"_index":4044,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["rad/jc.devops:api/docker/build",{"_index":4157,"title":{},"body":{"classes/Result.html":{}}}],["rad/jc.devops:api/docker/containers",{"_index":4162,"title":{},"body":{"classes/Result.html":{}}}],["rad/jc.devops:api/docker/image",{"_index":4164,"title":{},"body":{"classes/Result.html":{}}}],["rad/jc.devops:api/docker/images",{"_index":4163,"title":{},"body":{"classes/Result.html":{}}}],["rad/jc.devops:api/docker/install",{"_index":4156,"title":{},"body":{"classes/Result.html":{}}}],["rad/jc.devops:api/docker/run",{"_index":4158,"title":{},"body":{"classes/Result.html":{}}}],["rad/jc.devops:api/docker/stop",{"_index":4161,"title":{},"body":{"classes/Result.html":{}}}],["rad/jc.devops:api/k8s/deployments",{"_index":3284,"title":{},"body":{"injectables/K8sService.html":{}}}],["rad/jc.devops:api/k8s/namespace",{"_index":3286,"title":{},"body":{"injectables/K8sService.html":{}}}],["rad/jc.devops:api/k8s/pods",{"_index":3288,"title":{},"body":{"injectables/K8sService.html":{}}}],["rad/jc.devops:api/k8s/run",{"_index":4160,"title":{},"body":{"classes/Result.html":{}}}],["rad/jc.devops:api/k8s/scale",{"_index":3290,"title":{},"body":{"injectables/K8sService.html":{}}}],["rad/jc.devops:api/k8s/update",{"_index":3310,"title":{},"body":{"injectables/K8sService.html":{}}}],["rad/jc.devops:api/package",{"_index":2409,"title":{},"body":{"classes/DependencyWrapper.html":{},"injectables/PackagesService.html":{},"classes/Sources.html":{}}}],["rad/jc.devops:api/resources",{"_index":4136,"title":{},"body":{"injectables/ResourceService.html":{}}}],["rad/jc.devops:api/test",{"_index":5438,"title":{},"body":{"injectables/TestTraceService.html":{}}}],["radius",{"_index":967,"title":{},"body":{"classes/Action-1.html":{},"components/BuildComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{}}}],["radius:5px",{"_index":1981,"title":{},"body":{"components/BuildComponent.html":{},"components/TestCaseComponent.html":{}}}],["raised",{"_index":2031,"title":{},"body":{"components/BuildExeComponent.html":{},"components/UploadButtonComponent.html":{}}}],["rawcontainers",{"_index":3178,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["rawcontainers.foreach((c",{"_index":3180,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["rawstatus",{"_index":3212,"title":{},"body":{"classes/K8sPod.html":{}}}],["rdx",{"_index":720,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["reactiveformsmodule",{"_index":1609,"title":{},"body":{"modules/AppModule.html":{}}}],["read",{"_index":3937,"title":{},"body":{"components/PodsListComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{}}}],["readiness",{"_index":3218,"title":{},"body":{"classes/K8sPod.html":{}}}],["readinessprobe",{"_index":687,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["readme",{"_index":5755,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":458,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{},"miscellaneous/enumerations.html":{}}}],["ready",{"_index":2496,"title":{},"body":{"classes/DockerContainer.html":{},"classes/K8sPod.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{}}}],["readyreplicas",{"_index":3049,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["realm",{"_index":5450,"title":{},"body":{"components/UMInstallerComponent.html":{}}}],["realmctrl",{"_index":5447,"title":{},"body":{"components/UMInstallerComponent.html":{}}}],["red",{"_index":982,"title":{},"body":{"classes/Action-1.html":{}}}],["ref",{"_index":2594,"title":{},"body":{"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/StagingComponent.html":{},"components/TestHistoryComponent.html":{}}}],["ref._dialogref.close",{"_index":4534,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["ref._save",{"_index":2597,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["ref._send(message",{"_index":5598,"title":{},"body":{"classes/WebSocketService.html":{}}}],["ref._showextrainfo(name",{"_index":2944,"title":{},"body":{"components/HomeComponent.html":{}}}],["ref.checkifloaded",{"_index":5365,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["ref.fetchpods().subscribe((d",{"_index":3469,"title":{},"body":{"classes/LivePods.html":{},"classes/LivePodsCount.html":{}}}],["ref.setactionscomponent",{"_index":4427,"title":{},"body":{"components/RuntimeDetailsComponent.html":{}}}],["ref.setoffsetforextradivs",{"_index":2971,"title":{},"body":{"components/HomeComponent.html":{}}}],["ref.table.renderrows",{"_index":3957,"title":{},"body":{"components/PodsListComponent.html":{}}}],["ref.updatepods(observer",{"_index":3470,"title":{},"body":{"classes/LivePods.html":{},"classes/LivePodsCount.html":{}}}],["ref.updateversion(image",{"_index":4533,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["refer",{"_index":4822,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["reference",{"_index":3053,"title":{},"body":{"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{}}}],["references",{"_index":136,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Action-1.html":{},"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"injectables/K8sService.html":{},"classes/Result.html":{},"components/RuntimeUpdateComponent.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["refresh",{"_index":3084,"title":{},"body":{"classes/K8sDeployment.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"classes/Result.html":{}}}],["refreshbuildcommands",{"_index":1216,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"interfaces/BuilderComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/UMInstallerComponent.html":{}}}],["refreshbuildcommands(show",{"_index":1223,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"directives/BuildImageChooseDirective.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"components/MicroServiceInstallerComponent.html":{},"interfaces/PropertiesChangedOwner.html":{},"components/UMInstallerComponent.html":{}}}],["refreshpods",{"_index":3434,"title":{},"body":{"classes/LivePods.html":{},"classes/LivePodsCount.html":{}}}],["refs",{"_index":4549,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["regular",{"_index":1693,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["reload",{"_index":5742,"title":{},"body":{"index.html":{}}}],["reloaded",{"_index":2935,"title":{},"body":{"components/HomeComponent.html":{}}}],["remove",{"_index":1089,"title":{},"body":{"components/ActionComponent.html":{},"components/MicroServiceInstallerComponent.html":{}}}],["removeapi",{"_index":2447,"title":{},"body":{"classes/Deployment.html":{},"components/StagingComponent.html":{}}}],["removeapi(a",{"_index":2462,"title":{},"body":{"classes/Deployment.html":{}}}],["removeapi(service",{"_index":2615,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["removecontainer",{"_index":2448,"title":{},"body":{"classes/Deployment.html":{},"components/StagingComponent.html":{}}}],["removecontainer(c",{"_index":859,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["removecontainer(service",{"_index":2617,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["removed",{"_index":2184,"title":{},"body":{"classes/CommitInfo.html":{},"classes/DockerContainer.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"classes/K8sPod.html":{},"miscellaneous/enumerations.html":{}}}],["removefilefortype(type",{"_index":605,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["removefilefromqueue",{"_index":3649,"title":{},"body":{"injectables/Ng2Uploader.html":{}}}],["removefilefromqueue(i",{"_index":3666,"title":{},"body":{"injectables/Ng2Uploader.html":{}}}],["removetestcase(testcase",{"_index":4988,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["replace('_",{"_index":2358,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["replace(/datestamp",{"_index":3368,"title":{},"body":{"injectables/K8sService.html":{}}}],["replace(/nameapp",{"_index":3373,"title":{},"body":{"injectables/K8sService.html":{}}}],["replace(/namedeploy",{"_index":3342,"title":{},"body":{"injectables/K8sService.html":{}}}],["replace(/newcount",{"_index":3370,"title":{},"body":{"injectables/K8sService.html":{}}}],["replace(/nmespce",{"_index":3340,"title":{},"body":{"injectables/K8sService.html":{}}}],["replace(/oldcount",{"_index":3371,"title":{},"body":{"injectables/K8sService.html":{}}}],["replace(/owner",{"_index":2263,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["replace(/path",{"_index":2265,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["replace(/repo",{"_index":2264,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["replace(/rsrcversion",{"_index":3366,"title":{},"body":{"injectables/K8sService.html":{}}}],["replace(/selfid",{"_index":3364,"title":{},"body":{"injectables/K8sService.html":{}}}],["replace(/selflnk",{"_index":3362,"title":{},"body":{"injectables/K8sService.html":{}}}],["replace(/token",{"_index":2266,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["replicas",{"_index":833,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{},"injectables/K8sService.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["replicasctrl",{"_index":5001,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["repo",{"_index":701,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/CommitInfo.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"components/SagImageAlerterComponent.html":{},"classes/Server.html":{},"classes/SourceWrapper.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["repo).pipe(map((c",{"_index":2282,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["repo.indexof(this.currentbuild.targetimage.name",{"_index":4757,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["repo.substring(0",{"_index":4756,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["repoforname",{"_index":5525,"title":{},"body":{"classes/Values.html":{}}}],["repoforname(name",{"_index":4026,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["reponamewithoutimagename",{"_index":4754,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["reporterror",{"_index":5356,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["repos",{"_index":2250,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["repos/owner/repo/contents/path",{"_index":2208,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["reposettings",{"_index":2179,"title":{"classes/RepoSettings.html":{}},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/SourceWrapper.html":{},"classes/Values.html":{},"coverage.html":{}}}],["reposettings(\"wm",{"_index":4013,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["reposettings(r.name",{"_index":4092,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["reposiotory",{"_index":1030,"title":{},"body":{"classes/Action-1.html":{}}}],["repositories",{"_index":2731,"title":{},"body":{"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"classes/SourceWrapper.html":{}}}],["repositories(git",{"_index":2243,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["repository",{"_index":705,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"components/SagImageAlerterComponent.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["request",{"_index":2813,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["requesttemplate",{"_index":5254,"title":{},"body":{"classes/TestCase.html":{}}}],["require",{"_index":5694,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":5768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":470,"title":{},"body":{"classes/Action.html":{},"components/ApiPortalInstallerComponent.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"components/EditContainerComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"components/RuntimeDetailsComponent.html":{},"classes/Server.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{}}}],["requirements",{"_index":2986,"title":{},"body":{"components/HomeComponent.html":{}}}],["requires",{"_index":203,"title":{},"body":{"classes/APIDefinition.html":{},"components/ServicePropertiesComponent.html":{},"classes/WmPackageInfo.html":{}}}],["requiresmonitoring",{"_index":835,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["requiresmonitoringctrl",{"_index":5002,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["reset",{"_index":1586,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resource",{"_index":1483,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{},"injectables/K8sService.html":{}}}],["resources",{"_index":1526,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["resourceservice",{"_index":1352,"title":{"injectables/ResourceService.html":{}},"body":{"components/ApiMicroGatewayInstallerComponent.html":{},"modules/AppModule.html":{},"components/MicroServiceInstallerComponent.html":{},"injectables/ResourceService.html":{},"components/SagImageAlerterComponent.html":{},"classes/ServiceInfo.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourceservice.uri_resources",{"_index":4137,"title":{},"body":{"injectables/ResourceService.html":{}}}],["resourcesfortype",{"_index":4122,"title":{},"body":{"injectables/ResourceService.html":{}}}],["resourcesfortype(type",{"_index":4129,"title":{},"body":{"injectables/ResourceService.html":{}}}],["resourcetypes",{"_index":4123,"title":{},"body":{"injectables/ResourceService.html":{}}}],["resourceversion",{"_index":3301,"title":{},"body":{"injectables/K8sService.html":{}}}],["response",{"_index":3700,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/RepoSettings.html":{},"injectables/Settings.html":{},"components/UploadButtonComponent.html":{},"classes/UploadedFile.html":{},"classes/Values.html":{}}}],["response).user",{"_index":4063,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["responsedata",{"_index":128,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/CommitInfo.html":{},"classes/DependencyWrapper.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"injectables/K8sService.html":{},"injectables/PackagesService.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/Sources.html":{},"injectables/TestConfigService.html":{}}}],["responsedata).content",{"_index":2273,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["responsedata).dependencies.foreach((p",{"_index":2442,"title":{},"body":{"classes/DependencyWrapper.html":{},"injectables/PackagesService.html":{},"classes/Sources.html":{}}}],["responsedata).files",{"_index":4139,"title":{},"body":{"injectables/ResourceService.html":{}}}],["responsedata).imageid",{"_index":4259,"title":{},"body":{"classes/Result.html":{}}}],["responsedata).packages.foreach((p",{"_index":2416,"title":{},"body":{"classes/DependencyWrapper.html":{},"injectables/PackagesService.html":{},"classes/Sources.html":{},"injectables/TestConfigService.html":{}}}],["responsedata).packages[0",{"_index":2422,"title":{},"body":{"classes/DependencyWrapper.html":{},"injectables/PackagesService.html":{},"classes/Sources.html":{},"injectables/TestConfigService.html":{}}}],["responsedata).services",{"_index":2419,"title":{},"body":{"classes/DependencyWrapper.html":{},"injectables/PackagesService.html":{},"classes/Sources.html":{}}}],["responsedata).types",{"_index":4138,"title":{},"body":{"injectables/ResourceService.html":{}}}],["responsedata).wmimagename",{"_index":4262,"title":{},"body":{"classes/Result.html":{}}}],["responsedata).zipfile",{"_index":4279,"title":{},"body":{"classes/Result.html":{}}}],["responsedata.containers.foreach((c",{"_index":4306,"title":{},"body":{"classes/Result.html":{}}}],["responsedata.foreach((i",{"_index":140,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["responsedata.foreach((r",{"_index":2292,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["responsedata.images.foreach((i",{"_index":4351,"title":{},"body":{"classes/Result.html":{}}}],["responsedata.packages.foreach((p",{"_index":2445,"title":{},"body":{"classes/DependencyWrapper.html":{},"injectables/PackagesService.html":{},"classes/Sources.html":{}}}],["responsedata.results.items",{"_index":3379,"title":{},"body":{"injectables/K8sService.html":{}}}],["responsedata.results.items.foreach((i",{"_index":3380,"title":{},"body":{"injectables/K8sService.html":{}}}],["responsedata.status",{"_index":5443,"title":{},"body":{"injectables/TestTraceService.html":{}}}],["responsedata.tests.foreach((t",{"_index":5347,"title":{},"body":{"injectables/TestConfigService.html":{}}}],["responsefields",{"_index":152,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["responsetemplate",{"_index":5257,"title":{},"body":{"classes/TestCase.html":{}}}],["responsetype",{"_index":4291,"title":{},"body":{"classes/Result.html":{}}}],["rest",{"_index":55,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"miscellaneous/enumerations.html":{}}}],["rest/apigateway/search",{"_index":84,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["restartonfailctrl",{"_index":5003,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["restartpolicies",{"_index":5004,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["restartpolicy",{"_index":834,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["result",{"_index":165,"title":{"classes/Result.html":{}},"body":{"classes/API.html":{},"classes/APIDefinition.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"components/AboutComponent.html":{},"classes/Action.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"interfaces/ActionsComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"classes/BuildImage.html":{},"directives/BuildImageChooseDirective.html":{},"interfaces/BuildParams.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"directives/CancelCdkDrag.html":{},"classes/CommitInfo.html":{},"injectables/ContainerTemplates.html":{},"classes/DependencyWrapper.html":{},"classes/Deployment.html":{},"components/DeploymentDetailsComponent.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/DockerContainer.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"components/HomeComponent.html":{},"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/K8sPod.html":{},"injectables/K8sService.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"components/MicroServiceInstallerComponent.html":{},"injectables/Ng2Uploader.html":{},"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{},"injectables/PackagesService.html":{},"classes/Payload.html":{},"components/PodsListComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"interfaces/PropertiesChangedOwner.html":{},"classes/RepoSettings.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"directives/RuntimeActionsDirective.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"components/ServicePropertiesComponent.html":{},"injectables/Settings.html":{},"components/SimpleNameComponent.html":{},"classes/Source.html":{},"classes/SourceWrapper.html":{},"classes/Sources.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{},"classes/TestCase.html":{},"components/TestCaseComponent.html":{},"injectables/TestConfigService.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"classes/TestSuite.html":{},"injectables/TestTraceService.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"classes/UploadedFile.html":{},"classes/Values.html":{},"classes/WebSocketService.html":{},"classes/WmPackageInfo.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result(false",{"_index":4263,"title":{},"body":{"classes/Result.html":{}}}],["result(true",{"_index":4261,"title":{},"body":{"classes/Result.html":{}}}],["result.id.substring(0",{"_index":1040,"title":{},"body":{"classes/Action-1.html":{}}}],["result.imageid",{"_index":2093,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["result.otherid",{"_index":2090,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["result.success",{"_index":2088,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["results",{"_index":167,"title":{},"body":{"classes/API.html":{},"classes/APIDefinition.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"components/AboutComponent.html":{},"classes/Action.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"interfaces/ActionsComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"classes/BuildImage.html":{},"directives/BuildImageChooseDirective.html":{},"interfaces/BuildParams.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"directives/CancelCdkDrag.html":{},"classes/CommitInfo.html":{},"injectables/ContainerTemplates.html":{},"classes/DependencyWrapper.html":{},"classes/Deployment.html":{},"components/DeploymentDetailsComponent.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/DockerContainer.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"components/HomeComponent.html":{},"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/K8sPod.html":{},"injectables/K8sService.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"components/MicroServiceInstallerComponent.html":{},"injectables/Ng2Uploader.html":{},"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{},"injectables/PackagesService.html":{},"classes/Payload.html":{},"components/PodsListComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"interfaces/PropertiesChangedOwner.html":{},"classes/RepoSettings.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"directives/RuntimeActionsDirective.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"components/ServicePropertiesComponent.html":{},"injectables/Settings.html":{},"components/SimpleNameComponent.html":{},"classes/Source.html":{},"classes/SourceWrapper.html":{},"classes/Sources.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{},"classes/TestCase.html":{},"components/TestCaseComponent.html":{},"injectables/TestConfigService.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"classes/TestSuite.html":{},"injectables/TestTraceService.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"classes/UploadedFile.html":{},"classes/Values.html":{},"classes/WebSocketService.html":{},"classes/WmPackageInfo.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results.foreach((a",{"_index":4324,"title":{},"body":{"classes/Result.html":{}}}],["resync).subscribe((p",{"_index":2820,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["resyncgitrepo",{"_index":2760,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["ret",{"_index":3464,"title":{},"body":{"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"components/PodsListComponent.html":{}}}],["ret.data",{"_index":3955,"title":{},"body":{"components/PodsListComponent.html":{}}}],["ret.haschanged",{"_index":3956,"title":{},"body":{"components/PodsListComponent.html":{}}}],["retries",{"_index":5565,"title":{},"body":{"classes/WebSocketService.html":{}}}],["return",{"_index":61,"title":{},"body":{"classes/API.html":{},"classes/APIDefinition.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Action.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildExeComponent.html":{},"interfaces/BuildParams.html":{},"classes/CommitInfo.html":{},"injectables/ContainerTemplates.html":{},"classes/DependencyWrapper.html":{},"classes/Deployment.html":{},"components/DeploymentDetailsComponent.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/DockerContainer.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"components/HomeComponent.html":{},"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/K8sPod.html":{},"injectables/K8sService.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"components/MicroServiceInstallerComponent.html":{},"injectables/Ng2Uploader.html":{},"injectables/PackagesService.html":{},"classes/Payload.html":{},"components/PodsListComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RepoSettings.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"components/SagImageAlerterComponent.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"injectables/Settings.html":{},"classes/Source.html":{},"classes/SourceWrapper.html":{},"classes/Sources.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{},"classes/TestCase.html":{},"components/TestCaseComponent.html":{},"injectables/TestConfigService.html":{},"classes/TestSuite.html":{},"injectables/TestTraceService.html":{},"classes/UploadedFile.html":{},"classes/Values.html":{},"classes/WebSocketService.html":{},"classes/WmPackageInfo.html":{}}}],["returned",{"_index":133,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"injectables/K8sService.html":{},"classes/Result.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["returns",{"_index":39,"title":{},"body":{"classes/API.html":{},"classes/APIDefinition.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"components/AboutComponent.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"classes/AppPage.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"interfaces/BuildParams.html":{},"interfaces/BuilderComponent.html":{},"directives/CancelCdkDrag.html":{},"classes/CommitInfo.html":{},"injectables/ContainerTemplates.html":{},"classes/Deployment.html":{},"components/DeploymentDetailsComponent.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/DockerContainer.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"components/HomeComponent.html":{},"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/K8sPod.html":{},"injectables/K8sService.html":{},"classes/LivePods.html":{},"components/MicroServiceInstallerComponent.html":{},"injectables/Ng2Uploader.html":{},"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{},"injectables/PackagesService.html":{},"classes/Payload.html":{},"components/PodsListComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"interfaces/PropertiesChangedOwner.html":{},"injectables/ResourceService.html":{},"classes/RunSet.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/SearchObj.html":{},"classes/Server.html":{},"components/ServicePropertiesComponent.html":{},"injectables/Settings.html":{},"classes/Source.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{},"classes/TestCase.html":{},"components/TestCaseComponent.html":{},"injectables/TestConfigService.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"classes/TestSuite.html":{},"injectables/TestTraceService.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"classes/UploadedFile.html":{},"classes/Values.html":{},"classes/WebSocketService.html":{},"classes/WmPackageInfo.html":{}}}],["reun",{"_index":5403,"title":{},"body":{"components/TestRunComponent.html":{}}}],["reun'},{'name",{"_index":398,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["review",{"_index":2995,"title":{},"body":{"components/HomeComponent.html":{}}}],["revisit",{"_index":2833,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["rgb(100,100,100",{"_index":993,"title":{},"body":{"classes/Action-1.html":{}}}],["rgb(23",{"_index":1956,"title":{},"body":{"components/BuildComponent.html":{},"components/HomeComponent.html":{},"components/RuntimeK8sComponent.html":{}}}],["rgb(240,240,240",{"_index":5326,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["rgba(0,0,0",{"_index":3021,"title":{},"body":{"components/HomeComponent.html":{}}}],["rgba(0,0,0,0.01",{"_index":5320,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["rgba(23",{"_index":3028,"title":{},"body":{"components/HomeComponent.html":{}}}],["rgba(255,255,255",{"_index":5401,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["rgba(255,255,255,0.1",{"_index":1941,"title":{},"body":{"components/BuildComponent.html":{},"components/RuntimeK8sComponent.html":{}}}],["right",{"_index":723,"title":{},"body":{"classes/Action.html":{},"modules/AppModule.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildComponent.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"components/RuntimeK8sComponent.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{},"components/TestCaseComponent.html":{}}}],["right:10px",{"_index":5322,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["rocket",{"_index":1782,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["rollback",{"_index":1091,"title":{},"body":{"components/ActionComponent.html":{},"components/RuntimeUpdateComponent.html":{}}}],["rollbackbutton",{"_index":4495,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["rollbacklastchange",{"_index":3254,"title":{},"body":{"injectables/K8sService.html":{}}}],["rollbacklastchange(deployment",{"_index":3275,"title":{},"body":{"injectables/K8sService.html":{}}}],["rollbackpossible",{"_index":4496,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["root",{"_index":1859,"title":{},"body":{"classes/AppPage.html":{},"components/SagImageAlerterComponent.html":{}}}],["root'},{'name",{"_index":327,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["route",{"_index":1598,"title":{},"body":{"modules/AppModule.html":{}}}],["router",{"_index":891,"title":{},"body":{"classes/Action-1.html":{},"components/ActionComponent.html":{},"components/BuildComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/PodsListComponent.html":{},"classes/RepoSettings.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/ServiceInfo.html":{},"components/ServicePropertiesComponent.html":{},"injectables/Settings.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"classes/Values.html":{}}}],["router.navigate([this._values.lastviewedpage",{"_index":4058,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["routermodule",{"_index":1596,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(sidenavroutes",{"_index":1830,"title":{},"body":{"modules/AppModule.html":{}}}],["routes",{"_index":1597,"title":{"routes.html":{}},"body":{"modules/AppModule.html":{},"routes.html":{}}}],["row",{"_index":1015,"title":{},"body":{"classes/Action-1.html":{},"classes/GitSelectionModel.html":{},"components/HomeComponent.html":{},"classes/SourceWrapper.html":{},"components/TestCaseComponent.html":{}}}],["rows",{"_index":2771,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["rside",{"_index":714,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["rsrcversion",{"_index":3302,"title":{},"body":{"injectables/K8sService.html":{}}}],["run",{"_index":789,"title":{},"body":{"classes/Action.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildExeComponent.html":{},"interfaces/BuildParams.html":{},"injectables/ContainerTemplates.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"classes/Stage.html":{},"classes/Test.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["run(run",{"_index":4281,"title":{},"body":{"classes/Result.html":{}}}],["run.component",{"_index":1675,"title":{},"body":{"modules/AppModule.html":{}}}],["run.component.ts",{"_index":5402,"title":{},"body":{"components/TestRunComponent.html":{},"coverage.html":{}}}],["run.component.ts:34",{"_index":5406,"title":{},"body":{"components/TestRunComponent.html":{}}}],["run.component.ts:42",{"_index":5407,"title":{},"body":{"components/TestRunComponent.html":{}}}],["run.css",{"_index":5404,"title":{},"body":{"components/TestRunComponent.html":{}}}],["run.deployments.foreach((s",{"_index":2359,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["run.html",{"_index":5405,"title":{},"body":{"components/TestRunComponent.html":{}}}],["run.name",{"_index":2356,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["run.name.tolocalelowercase().replace(/\\s/g",{"_index":2357,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["run.namespace",{"_index":2355,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["run/:id",{"_index":1769,"title":{},"body":{"modules/AppModule.html":{}}}],["runasks8",{"_index":4282,"title":{},"body":{"classes/Result.html":{}}}],["runk8s",{"_index":2015,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["runks8",{"_index":4159,"title":{},"body":{"classes/Result.html":{}}}],["runname",{"_index":5436,"title":{},"body":{"injectables/TestTraceService.html":{}}}],["running",{"_index":227,"title":{},"body":{"classes/APIDefinition.html":{},"classes/Action-1.html":{},"components/BuildExeComponent.html":{},"classes/DockerContainer.html":{},"classes/K8sDeployment.html":{},"classes/K8sPod.html":{},"classes/RepoSettings.html":{},"classes/ServiceInfo.html":{},"injectables/Settings.html":{},"components/TestHistoryComponent.html":{},"injectables/TestTraceService.html":{},"classes/Values.html":{},"classes/WmPackageInfo.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["runningdeployments",{"_index":3404,"title":{},"body":{"injectables/K8sService.html":{}}}],["runningdeployments.push(r1",{"_index":3413,"title":{},"body":{"injectables/K8sService.html":{}}}],["runningdeployments.push(r2",{"_index":3414,"title":{},"body":{"injectables/K8sService.html":{}}}],["runningtests(element",{"_index":4913,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["runningtests(image",{"_index":999,"title":{},"body":{"classes/Action-1.html":{}}}],["runset",{"_index":2048,"title":{"classes/RunSet.html":{}},"body":{"components/BuildExeComponent.html":{},"injectables/ContainerTemplates.html":{},"classes/Project.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"classes/ServiceInfo.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"coverage.html":{}}}],["runtests",{"_index":426,"title":{},"body":{"classes/Action.html":{}}}],["runtestsctrl",{"_index":1060,"title":{},"body":{"components/ActionComponent.html":{}}}],["runtime",{"_index":370,"title":{},"body":{"components/AboutComponent.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"interfaces/ActionsComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"interfaces/BuildParams.html":{},"injectables/ContainerTemplates.html":{},"classes/Deployment.html":{},"components/DeploymentDetailsComponent.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RepoSettings.html":{},"classes/RunSet.html":{},"directives/RuntimeActionsDirective.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/Server.html":{},"components/ServicePropertiesComponent.html":{},"injectables/Settings.html":{},"components/SimpleNameComponent.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"classes/Values.html":{}}}],["runtime'},{'name",{"_index":375,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["runtimeactionsdirective",{"_index":414,"title":{"directives/RuntimeActionsDirective.html":{}},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"interfaces/ActionsComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"directives/RuntimeActionsDirective.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["runtimecontainerscomponent",{"_index":369,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["runtimedeploycomponent",{"_index":371,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["runtimedetailscomponent",{"_index":373,"title":{"components/RuntimeDetailsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["runtimek8scomponent",{"_index":374,"title":{"components/RuntimeK8sComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["runtimescalecomponent",{"_index":376,"title":{"components/RuntimeScaleComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["runtimestagecomponent",{"_index":378,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["runtimeupdatecomponent",{"_index":380,"title":{"components/RuntimeUpdateComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["runtotal",{"_index":3472,"title":{},"body":{"classes/LivePods.html":{},"classes/LivePodsCount.html":{}}}],["runtypectrl",{"_index":2582,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["rxjs",{"_index":48,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/CommitInfo.html":{},"injectables/ContainerTemplates.html":{},"classes/DependencyWrapper.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"classes/K8sDeployment.html":{},"injectables/K8sService.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"injectables/PackagesService.html":{},"classes/RepoSettings.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"components/ServicePropertiesComponent.html":{},"injectables/Settings.html":{},"classes/Sources.html":{},"injectables/TestConfigService.html":{},"injectables/TestTraceService.html":{},"classes/Values.html":{},"classes/WebSocketService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":51,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/CommitInfo.html":{},"classes/DependencyWrapper.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"classes/K8sDeployment.html":{},"injectables/K8sService.html":{},"injectables/PackagesService.html":{},"classes/RepoSettings.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"components/ServicePropertiesComponent.html":{},"injectables/Settings.html":{},"classes/Sources.html":{},"injectables/TestConfigService.html":{},"injectables/TestTraceService.html":{},"classes/Values.html":{}}}],["s",{"_index":777,"title":{},"body":{"classes/Action.html":{},"classes/Action-1.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"classes/Source.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["s.apis.push(apidefinition.make(a",{"_index":852,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["s.appname",{"_index":842,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"injectables/ContainerTemplates.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["s.buildonstart",{"_index":819,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["s.containerhost",{"_index":815,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["s.containers.push(container.make(c",{"_index":855,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["s.dependson",{"_index":850,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["s.deployments.push(deployment.make(c",{"_index":822,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["s.exclude",{"_index":5165,"title":{},"body":{"classes/Source.html":{}}}],["s.gitpassword",{"_index":5158,"title":{},"body":{"classes/Source.html":{}}}],["s.gitrepository",{"_index":5155,"title":{},"body":{"classes/Source.html":{}}}],["s.gituri",{"_index":5154,"title":{},"body":{"classes/Source.html":{}}}],["s.gituser",{"_index":5157,"title":{},"body":{"classes/Source.html":{}}}],["s.hostname",{"_index":839,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["s.id",{"_index":814,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["s.include",{"_index":5163,"title":{},"body":{"classes/Source.html":{}}}],["s.name",{"_index":813,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["s.name.tolowercase().replace(/\\s/g",{"_index":2360,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["s.onfail",{"_index":830,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["s.onstart",{"_index":824,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["s.onsuccess",{"_index":827,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["s.replicas",{"_index":840,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"injectables/ContainerTemplates.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["s.requiresmonitoring",{"_index":848,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["s.restartpolicy",{"_index":846,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"injectables/ContainerTemplates.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["s.servicetype",{"_index":844,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"injectables/ContainerTemplates.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["s.targetdir",{"_index":5159,"title":{},"body":{"classes/Source.html":{}}}],["s.tests.push(test.make(t",{"_index":776,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["s.type",{"_index":5161,"title":{},"body":{"classes/Source.html":{}}}],["s.usekubernetes",{"_index":817,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["safeurl",{"_index":4568,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["sag",{"_index":382,"title":{},"body":{"components/AboutComponent.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"classes/Result.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"miscellaneous/enumerations.html":{}}}],["sagadmin",{"_index":4610,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["sagimagealertercomponent",{"_index":381,"title":{"components/SagImageAlerterComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sagimagecount",{"_index":1912,"title":{},"body":{"components/BuildComponent.html":{}}}],["sagimagecount(count",{"_index":1922,"title":{},"body":{"components/BuildComponent.html":{}}}],["sagimagecounter",{"_index":1907,"title":{},"body":{"components/BuildComponent.html":{}}}],["sagimages(refresh",{"_index":4215,"title":{},"body":{"classes/Result.html":{}}}],["save",{"_index":5391,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["savebutton",{"_index":4615,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["savechanges",{"_index":4064,"title":{},"body":{"classes/RepoSettings.html":{},"classes/ServiceInfo.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["savenewtestcase",{"_index":4986,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["savetemplate",{"_index":4721,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["scaffolding",{"_index":5743,"title":{},"body":{"index.html":{}}}],["scale",{"_index":1770,"title":{},"body":{"modules/AppModule.html":{},"injectables/K8sService.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeScaleComponent.html":{},"miscellaneous/variables.html":{}}}],["scale'},{'name",{"_index":377,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["scale.component",{"_index":1635,"title":{},"body":{"modules/AppModule.html":{},"components/RuntimeDetailsComponent.html":{}}}],["scale.component.ts",{"_index":4461,"title":{},"body":{"components/RuntimeScaleComponent.html":{},"coverage.html":{}}}],["scale.component.ts:24",{"_index":4468,"title":{},"body":{"components/RuntimeScaleComponent.html":{}}}],["scale.component.ts:26",{"_index":4476,"title":{},"body":{"components/RuntimeScaleComponent.html":{}}}],["scale.component.ts:27",{"_index":4474,"title":{},"body":{"components/RuntimeScaleComponent.html":{}}}],["scale.component.ts:29",{"_index":4467,"title":{},"body":{"components/RuntimeScaleComponent.html":{}}}],["scale.component.ts:35",{"_index":4469,"title":{},"body":{"components/RuntimeScaleComponent.html":{}}}],["scale.component.ts:40",{"_index":4471,"title":{},"body":{"components/RuntimeScaleComponent.html":{}}}],["scale.component.ts:48",{"_index":4473,"title":{},"body":{"components/RuntimeScaleComponent.html":{}}}],["scale.html",{"_index":4462,"title":{},"body":{"components/RuntimeScaleComponent.html":{}}}],["scalepods",{"_index":3255,"title":{},"body":{"injectables/K8sService.html":{}}}],["scalepods(deployment",{"_index":3277,"title":{},"body":{"injectables/K8sService.html":{}}}],["scaleput",{"_index":3249,"title":{},"body":{"injectables/K8sService.html":{}}}],["schedule",{"_index":3461,"title":{},"body":{"classes/LivePods.html":{},"classes/LivePodsCount.html":{}}}],["schema",{"_index":2350,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["scope",{"_index":148,"title":{"classes/Scope.html":{}},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"coverage.html":{}}}],["scope.attributename",{"_index":162,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["scope.keyword",{"_index":163,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["script",{"_index":1446,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["scripting",{"_index":5396,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["scroll",{"_index":5390,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["scrollingmodule",{"_index":1602,"title":{},"body":{"modules/AppModule.html":{}}}],["search",{"_index":83,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"injectables/ContainerTemplates.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"components/TestHistoryComponent.html":{}}}],["search.addscope('isactive",{"_index":107,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["search.addscope('maturitystate",{"_index":108,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["search.responsefields",{"_index":104,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["searchobj",{"_index":99,"title":{"classes/SearchObj.html":{}},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"coverage.html":{}}}],["searchobj([type.api",{"_index":100,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["secure",{"_index":682,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["secureport",{"_index":1220,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{}}}],["secureportctrl",{"_index":1535,"title":{},"body":{"components/ApiPortalInstallerComponent.html":{}}}],["secureuiportctrl",{"_index":1213,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["select",{"_index":2541,"title":{},"body":{"components/DockerImageVersionsComponent.html":{},"classes/GitSelectionModel.html":{},"components/HomeComponent.html":{},"directives/NgFileSelect.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/SourceWrapper.html":{},"components/TestCaseComponent.html":{}}}],["select(row",{"_index":2713,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["select.ts",{"_index":3825,"title":{},"body":{"directives/NgFileSelect.html":{},"coverage.html":{}}}],["select.ts:11",{"_index":3831,"title":{},"body":{"directives/NgFileSelect.html":{}}}],["select.ts:12",{"_index":3830,"title":{},"body":{"directives/NgFileSelect.html":{}}}],["select.ts:13",{"_index":3827,"title":{},"body":{"directives/NgFileSelect.html":{}}}],["select.ts:15",{"_index":3829,"title":{},"body":{"directives/NgFileSelect.html":{}}}],["select.ts:26",{"_index":3828,"title":{},"body":{"directives/NgFileSelect.html":{}}}],["select]'},{'name",{"_index":413,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["selected",{"_index":2767,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["selecteddeployment",{"_index":1199,"title":{},"body":{"interfaces/ActionsComponent.html":{},"directives/RuntimeActionsDirective.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{}}}],["selecteddeploymentcontrol",{"_index":4388,"title":{},"body":{"components/RuntimeDetailsComponent.html":{}}}],["selectedgit",{"_index":2732,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["selectedimage",{"_index":4574,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["selectedpackage",{"_index":4872,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["selectedpackagectrl",{"_index":4870,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["selectedrepo",{"_index":2728,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["selectedservice",{"_index":4877,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["selectedservicectrl",{"_index":4871,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["selectedsourceschanged",{"_index":2725,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["selectedsourcesloaded",{"_index":2726,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["selectedtestcase",{"_index":4878,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["selecthandler",{"_index":4532,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["selectionmodel",{"_index":1119,"title":{},"body":{"components/ActionComponent.html":{},"components/EditContainerComponent.html":{},"classes/GitSelectionModel.html":{},"components/SagImageAlerterComponent.html":{},"classes/ServiceInfo.html":{},"classes/SourceWrapper.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{}}}],["selector",{"_index":271,"title":{},"body":{"components/AboutComponent.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"interfaces/ActionsComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"directives/BuildImageChooseDirective.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"directives/CancelCdkDrag.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"injectables/K8sService.html":{},"components/MicroServiceInstallerComponent.html":{},"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{},"components/PodsListComponent.html":{},"interfaces/PropertiesChangedOwner.html":{},"directives/RuntimeActionsDirective.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/ServiceInfo.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["selectpackage(packageinfo",{"_index":4919,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["selectrow(row",{"_index":1011,"title":{},"body":{"classes/Action-1.html":{},"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["selects",{"_index":2779,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["selectservice(service",{"_index":4942,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["selectservicechip(service",{"_index":4970,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["selecttestcasechip(testcase",{"_index":4973,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["selectversion",{"_index":2514,"title":{},"body":{"components/DockerImageVersionsComponent.html":{}}}],["selectversion(image",{"_index":2526,"title":{},"body":{"components/DockerImageVersionsComponent.html":{}}}],["self._top",{"_index":1840,"title":{},"body":{"modules/AppModule.html":{}}}],["self:appmodule",{"_index":1836,"title":{},"body":{"modules/AppModule.html":{}}}],["selfid",{"_index":3300,"title":{},"body":{"injectables/K8sService.html":{}}}],["selflink",{"_index":3297,"title":{},"body":{"injectables/K8sService.html":{}}}],["selflnk",{"_index":3298,"title":{},"body":{"injectables/K8sService.html":{}}}],["send",{"_index":5555,"title":{},"body":{"classes/WebSocketService.html":{}}}],["send(message",{"_index":5576,"title":{},"body":{"classes/WebSocketService.html":{}}}],["separate",{"_index":4032,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["serve",{"_index":5739,"title":{},"body":{"index.html":{}}}],["server",{"_index":2807,"title":{"classes/Server.html":{}},"body":{"classes/GitSelectionModel.html":{},"components/HomeComponent.html":{},"classes/RepoSettings.html":{},"components/SagImageAlerterComponent.html":{},"classes/Server.html":{},"injectables/Settings.html":{},"classes/SourceWrapper.html":{},"components/TestHistoryComponent.html":{},"classes/Values.html":{},"classes/WebSocketService.html":{},"coverage.html":{},"index.html":{}}}],["server_api",{"_index":4029,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["serveralias",{"_index":5411,"title":{},"body":{"classes/TestSuite.html":{}}}],["service",{"_index":1647,"title":{},"body":{"modules/AppModule.html":{},"components/BuildComponent.html":{},"injectables/ContainerTemplates.html":{},"classes/GitSelectionModel.html":{},"components/HomeComponent.html":{},"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{},"components/MicroServiceInstallerComponent.html":{},"classes/Payload.html":{},"classes/Result.html":{},"components/SagImageAlerterComponent.html":{},"classes/ServiceInfo.html":{},"components/ServicePropertiesComponent.html":{},"classes/SourceWrapper.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["service.name",{"_index":5212,"title":{},"body":{"components/StagingComponent.html":{}}}],["service.podsforapplabel(this.namespace",{"_index":3102,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["service.removeapi(api",{"_index":2616,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["service.removecontainer(container",{"_index":2618,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["service.tests.length",{"_index":4966,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["servicectrl",{"_index":5269,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["servicefor",{"_index":4370,"title":{},"body":{"classes/RunSet.html":{}}}],["servicefor(id",{"_index":864,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["serviceid",{"_index":3054,"title":{},"body":{"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{}}}],["serviceinfo",{"_index":4848,"title":{"classes/ServiceInfo.html":{}},"body":{"classes/ServiceInfo.html":{},"coverage.html":{}}}],["servicepropertiescomponent",{"_index":384,"title":{"components/ServicePropertiesComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["services",{"_index":206,"title":{},"body":{"classes/APIDefinition.html":{},"components/ApiPortalInstallerComponent.html":{},"classes/DependencyWrapper.html":{},"components/HomeComponent.html":{},"injectables/PackagesService.html":{},"classes/Sources.html":{},"components/TestCaseComponent.html":{},"classes/WmPackageInfo.html":{}}}],["services/configuration.service",{"_index":1682,"title":{},"body":{"modules/AppModule.html":{},"injectables/ContainerTemplates.html":{},"components/MicroServiceInstallerComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/ServiceInfo.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{}}}],["services/docker.service",{"_index":899,"title":{},"body":{"classes/Action-1.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/ServiceInfo.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{}}}],["services/git",{"_index":1679,"title":{},"body":{"modules/AppModule.html":{},"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["services/k8s.service",{"_index":1678,"title":{},"body":{"modules/AppModule.html":{},"classes/K8sDeployment.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{}}}],["services/ng2",{"_index":3806,"title":{},"body":{"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{}}}],["services/packages.service",{"_index":1681,"title":{},"body":{"modules/AppModule.html":{},"classes/GitSelectionModel.html":{},"classes/ServiceInfo.html":{},"classes/SourceWrapper.html":{},"components/TestCaseComponent.html":{}}}],["services/resources.service",{"_index":1370,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{},"modules/AppModule.html":{},"components/MicroServiceInstallerComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/ServiceInfo.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{}}}],["services/test",{"_index":1683,"title":{},"body":{"modules/AppModule.html":{},"classes/ServiceInfo.html":{},"components/TestCaseComponent.html":{}}}],["servicesandapisforselectedpackage",{"_index":4874,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["servicesformgroup",{"_index":4868,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["servicesforpackage",{"_index":3838,"title":{},"body":{"injectables/PackagesService.html":{}}}],["servicesforpackage(name",{"_index":2418,"title":{},"body":{"classes/DependencyWrapper.html":{},"injectables/PackagesService.html":{},"classes/Sources.html":{}}}],["servicespaginator",{"_index":4887,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["servicestabledatasource",{"_index":4873,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["servicestates",{"_index":5005,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["servicetype",{"_index":653,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["servicetypectrl",{"_index":5006,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["serviceupdated",{"_index":5008,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["set",{"_index":790,"title":{},"body":{"classes/Action.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildExeComponent.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{},"components/TestHistoryComponent.html":{}}}],["set('accept",{"_index":2413,"title":{},"body":{"classes/DependencyWrapper.html":{},"injectables/PackagesService.html":{},"injectables/ResourceService.html":{},"classes/Sources.html":{},"injectables/TestConfigService.html":{}}}],["set('authorization",{"_index":122,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["set('content",{"_index":2412,"title":{},"body":{"classes/DependencyWrapper.html":{},"injectables/PackagesService.html":{},"injectables/ResourceService.html":{},"classes/Sources.html":{},"injectables/TestConfigService.html":{}}}],["set('server",{"_index":5345,"title":{},"body":{"injectables/TestConfigService.html":{}}}],["setabort",{"_index":3711,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["setactionscomponent",{"_index":4390,"title":{},"body":{"components/RuntimeDetailsComponent.html":{}}}],["setapigatewaylicense",{"_index":1346,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["setapigatewaylicense(license",{"_index":1359,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["setcurrentnamespace",{"_index":5099,"title":{},"body":{"injectables/Settings.html":{}}}],["setcurrentnamespace(namespace",{"_index":4055,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["setcurrentpage",{"_index":5100,"title":{},"body":{"injectables/Settings.html":{}}}],["setcurrentpage(page",{"_index":4051,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["setcurrentrepofrominput",{"_index":2800,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["setdefaults",{"_index":1217,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/UMInstallerComponent.html":{}}}],["setdefaultsforbuilding",{"_index":1347,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["setdefaultsforinstallation",{"_index":1348,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["setdefaultsfork8s",{"_index":2312,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["setdefaultsfork8s(run",{"_index":2328,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["seterror",{"_index":3710,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["setinitialselection",{"_index":2844,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["setlicensefile",{"_index":1218,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"interfaces/BuilderComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/UMInstallerComponent.html":{}}}],["setlicensefile(lic",{"_index":4759,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["setlicensefile(license",{"_index":1227,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"directives/BuildImageChooseDirective.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"components/MicroServiceInstallerComponent.html":{},"interfaces/PropertiesChangedOwner.html":{},"components/UMInstallerComponent.html":{}}}],["setmysqldriverfile",{"_index":3498,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["setmysqldriverfile(include",{"_index":3516,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["setmysqltypefile",{"_index":3499,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["setmysqltypefile(include",{"_index":3518,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["setnextversion(name",{"_index":4775,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["setoffsetforextradivs",{"_index":2905,"title":{},"body":{"components/HomeComponent.html":{}}}],["setoptions",{"_index":3650,"title":{},"body":{"injectables/Ng2Uploader.html":{}}}],["setoptions(options",{"_index":3668,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["setpermissions.sh",{"_index":1476,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["setprogres",{"_index":5510,"title":{},"body":{"classes/UploadedFile.html":{}}}],["setprogres(progress",{"_index":3709,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["setpropertiesfile",{"_index":3500,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["setpropertiesfile(props",{"_index":3520,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["setpublicport",{"_index":2129,"title":{},"body":{"interfaces/BuildParams.html":{}}}],["setpublicport(port",{"_index":507,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["setsourcemodel",{"_index":2711,"title":{},"body":{"classes/GitSelectionModel.html":{}}}],["setsourcemodel(packages",{"_index":2715,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["settemplate(name",{"_index":4731,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["settimeout",{"_index":2595,"title":{},"body":{"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/StagingComponent.html":{},"components/TestHistoryComponent.html":{},"classes/WebSocketService.html":{}}}],["setting",{"_index":4175,"title":{},"body":{"classes/Result.html":{},"components/TestHistoryComponent.html":{}}}],["settings",{"_index":52,"title":{"injectables/Settings.html":{}},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"classes/CommitInfo.html":{},"classes/DependencyWrapper.html":{},"components/DeploymentDetailsComponent.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"components/HomeComponent.html":{},"injectables/K8sService.html":{},"injectables/PackagesService.html":{},"components/PodsListComponent.html":{},"classes/RepoSettings.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/ServiceInfo.html":{},"components/ServicePropertiesComponent.html":{},"injectables/Settings.html":{},"classes/SourceWrapper.html":{},"classes/Sources.html":{},"components/TestCaseComponent.html":{},"injectables/TestConfigService.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"injectables/TestTraceService.html":{},"classes/Values.html":{},"classes/WebSocketService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["settings,values",{"_index":4152,"title":{},"body":{"classes/Result.html":{}}}],["settings.buildtarget",{"_index":1481,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["settings.commandtype",{"_index":1480,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["settings.config",{"_index":4060,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["settings.description",{"_index":1484,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["settings.dev_server_api",{"_index":5346,"title":{},"body":{"injectables/TestConfigService.html":{}}}],["settings.filetype",{"_index":1482,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["settings.k8snamespace",{"_index":4414,"title":{},"body":{"components/RuntimeDetailsComponent.html":{}}}],["settings.server_api",{"_index":2408,"title":{},"body":{"classes/DependencyWrapper.html":{},"injectables/K8sService.html":{},"injectables/PackagesService.html":{},"classes/RepoSettings.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"injectables/Settings.html":{},"classes/Sources.html":{},"injectables/TestConfigService.html":{},"injectables/TestTraceService.html":{},"classes/Values.html":{}}}],["settings.source",{"_index":1486,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["settings.target",{"_index":1489,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["settings.ws_server",{"_index":5562,"title":{},"body":{"classes/WebSocketService.html":{}}}],["settings.yml",{"_index":1488,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["settingscomponent",{"_index":386,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["settingsloaded",{"_index":1908,"title":{},"body":{"components/BuildComponent.html":{},"components/SagImageAlerterComponent.html":{}}}],["setup",{"_index":1792,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["setup(v",{"_index":4177,"title":{},"body":{"classes/Result.html":{}}}],["setupendpointsforcurrenttestsuite",{"_index":4947,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["setuptestdata",{"_index":3256,"title":{},"body":{"injectables/K8sService.html":{}}}],["setupvaluesforbuilding",{"_index":1349,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["setupvaluesforinstallation",{"_index":1350,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["sha",{"_index":2165,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["shadow",{"_index":5319,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["share",{"_index":4000,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["shared",{"_index":5092,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["sheep",{"_index":3400,"title":{},"body":{"injectables/K8sService.html":{}}}],["show",{"_index":1225,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"interfaces/BuilderComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/TestHistoryComponent.html":{},"components/UMInstallerComponent.html":{}}}],["showactions",{"_index":3905,"title":{},"body":{"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{}}}],["showdetailsinfo",{"_index":2906,"title":{},"body":{"components/HomeComponent.html":{}}}],["showdetailsinfo(name",{"_index":2930,"title":{},"body":{"components/HomeComponent.html":{}}}],["showtestresults(container",{"_index":4916,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["showtests(element",{"_index":944,"title":{},"body":{"classes/Action-1.html":{}}}],["shutdown",{"_index":205,"title":{},"body":{"classes/APIDefinition.html":{},"classes/WmPackageInfo.html":{}}}],["si",{"_index":4929,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["si.endpoint",{"_index":4930,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["si.tests",{"_index":4931,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["si.tests.push(t",{"_index":4934,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["side",{"_index":718,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/GitSelectionModel.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/SourceWrapper.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["sidenavroutes",{"_index":1764,"title":{},"body":{"modules/AppModule.html":{}}}],["sidenavroutes.foreach((r",{"_index":1832,"title":{},"body":{"modules/AppModule.html":{}}}],["simple",{"_index":3615,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{},"components/TestHistoryComponent.html":{}}}],["simplenamecomponent",{"_index":387,"title":{"components/SimpleNameComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["single",{"_index":137,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"components/HomeComponent.html":{},"injectables/K8sService.html":{},"classes/Result.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["size",{"_index":154,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Action-1.html":{},"components/BuildComponent.html":{},"components/HomeComponent.html":{},"injectables/Ng2Uploader.html":{},"components/RuntimeK8sComponent.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"components/TestCaseComponent.html":{},"components/UploadButtonComponent.html":{},"classes/UploadedFile.html":{}}}],["skiplocationchange",{"_index":946,"title":{},"body":{"classes/Action-1.html":{},"components/PodsListComponent.html":{}}}],["small",{"_index":5469,"title":{},"body":{"components/UploadButtonComponent.html":{}}}],["soa",{"_index":2341,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["soap",{"_index":56,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"miscellaneous/enumerations.html":{}}}],["socket",{"_index":57,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/WebSocketService.html":{},"miscellaneous/enumerations.html":{}}}],["software",{"_index":1514,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{},"components/HomeComponent.html":{},"components/SagImageAlerterComponent.html":{}}}],["software/license.xml",{"_index":3559,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["solid",{"_index":1761,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["solution",{"_index":2985,"title":{},"body":{"components/HomeComponent.html":{},"components/SagImageAlerterComponent.html":{}}}],["solution'},{'name",{"_index":335,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["source",{"_index":4,"title":{"classes/Source.html":{}},"body":{"classes/API.html":{},"classes/APIDefinition.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"components/AboutComponent.html":{},"classes/Action.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"interfaces/ActionsComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"classes/BuildImage.html":{},"directives/BuildImageChooseDirective.html":{},"interfaces/BuildParams.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"directives/CancelCdkDrag.html":{},"classes/CommitInfo.html":{},"injectables/ContainerTemplates.html":{},"classes/DependencyWrapper.html":{},"classes/Deployment.html":{},"components/DeploymentDetailsComponent.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/DockerContainer.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"components/HomeComponent.html":{},"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/K8sPod.html":{},"injectables/K8sService.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"components/MicroServiceInstallerComponent.html":{},"injectables/Ng2Uploader.html":{},"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{},"injectables/PackagesService.html":{},"classes/Payload.html":{},"components/PodsListComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"interfaces/PropertiesChangedOwner.html":{},"classes/RepoSettings.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"directives/RuntimeActionsDirective.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"components/ServicePropertiesComponent.html":{},"injectables/Settings.html":{},"components/SimpleNameComponent.html":{},"classes/Source.html":{},"classes/SourceWrapper.html":{},"classes/Sources.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{},"classes/TestCase.html":{},"components/TestCaseComponent.html":{},"injectables/TestConfigService.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"classes/TestSuite.html":{},"injectables/TestTraceService.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"classes/UploadedFile.html":{},"classes/Values.html":{},"classes/WebSocketService.html":{},"classes/WmPackageInfo.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["source'},{'name",{"_index":359,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["source.make(data.source",{"_index":453,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["source.ts",{"_index":5127,"title":{},"body":{"classes/Source.html":{},"coverage.html":{}}}],["source.ts:10",{"_index":5130,"title":{},"body":{"classes/Source.html":{}}}],["source.ts:11",{"_index":5129,"title":{},"body":{"classes/Source.html":{}}}],["source.ts:19",{"_index":5139,"title":{},"body":{"classes/Source.html":{}}}],["source.ts:4",{"_index":5133,"title":{},"body":{"classes/Source.html":{}}}],["source.ts:43",{"_index":5137,"title":{},"body":{"classes/Source.html":{}}}],["source.ts:5",{"_index":5134,"title":{},"body":{"classes/Source.html":{}}}],["source.ts:6",{"_index":5131,"title":{},"body":{"classes/Source.html":{}}}],["source.ts:7",{"_index":5132,"title":{},"body":{"classes/Source.html":{}}}],["source.ts:8",{"_index":5136,"title":{},"body":{"classes/Source.html":{}}}],["source.ts:9",{"_index":5135,"title":{},"body":{"classes/Source.html":{}}}],["sourceimage",{"_index":613,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"classes/BuildImage.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["sourceimagetag",{"_index":549,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["sources",{"_index":2400,"title":{"classes/Sources.html":{}},"body":{"classes/DependencyWrapper.html":{},"injectables/PackagesService.html":{},"classes/Sources.html":{},"coverage.html":{}}}],["sources).forcereindex",{"_index":2431,"title":{},"body":{"classes/DependencyWrapper.html":{},"injectables/PackagesService.html":{},"classes/Sources.html":{}}}],["sources.component",{"_index":1645,"title":{},"body":{"modules/AppModule.html":{}}}],["sources.component.ts",{"_index":2708,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{},"coverage.html":{}}}],["sources.component.ts:19",{"_index":5167,"title":{},"body":{"classes/SourceWrapper.html":{}}}],["sources.component.ts:20",{"_index":5166,"title":{},"body":{"classes/SourceWrapper.html":{}}}],["sources.component.ts:25",{"_index":2712,"title":{},"body":{"classes/GitSelectionModel.html":{}}}],["sources.component.ts:31",{"_index":2716,"title":{},"body":{"classes/GitSelectionModel.html":{}}}],["sources.component.ts:35",{"_index":2714,"title":{},"body":{"classes/GitSelectionModel.html":{}}}],["sourcetag",{"_index":4808,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["sourceversion",{"_index":2114,"title":{},"body":{"classes/BuildImage.html":{}}}],["sourcewrapper",{"_index":2720,"title":{"classes/SourceWrapper.html":{}},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{},"coverage.html":{}}}],["space",{"_index":2980,"title":{},"body":{"components/HomeComponent.html":{},"components/RuntimeK8sComponent.html":{}}}],["spec",{"_index":3305,"title":{},"body":{"injectables/K8sService.html":{}}}],["spec\\.ts",{"_index":5769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specific",{"_index":3614,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["specified",{"_index":2829,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["specifies",{"_index":5093,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["specify",{"_index":5214,"title":{},"body":{"components/StagingComponent.html":{}}}],["split",{"_index":3184,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["splitv",{"_index":3189,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["spread",{"_index":875,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["src/.../api",{"_index":5723,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../app.module.ts",{"_index":5762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../docker",{"_index":5724,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../docker.service.ts",{"_index":5727,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["src/.../environment.prod.ts",{"_index":5764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":5765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../git",{"_index":5728,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../k8s",{"_index":5725,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../ng2",{"_index":5767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../payload.ts",{"_index":5730,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../pods",{"_index":5766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../project.ts",{"_index":5726,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["src/.../settings.ts",{"_index":5729,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../test.ts",{"_index":5763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":5629,"title":{},"body":{"coverage.html":{}}}],["src/app/app.module.ts",{"_index":1588,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/about.component.ts",{"_index":269,"title":{},"body":{"components/AboutComponent.html":{},"coverage.html":{}}}],["src/app/components/about.component.ts:12",{"_index":282,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/components/about.component.ts:16",{"_index":280,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/components/about.component.ts:9",{"_index":279,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/components/action.component.ts",{"_index":1045,"title":{},"body":{"components/ActionComponent.html":{},"coverage.html":{}}}],["src/app/components/action.component.ts:106",{"_index":1082,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/components/action.component.ts:111",{"_index":1085,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/components/action.component.ts:136",{"_index":1079,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/components/action.component.ts:210",{"_index":1078,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/components/action.component.ts:26",{"_index":1075,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/components/action.component.ts:29",{"_index":1074,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/components/action.component.ts:32",{"_index":1076,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/components/action.component.ts:35",{"_index":1077,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/components/action.component.ts:37",{"_index":1111,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/components/action.component.ts:39",{"_index":1105,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/components/action.component.ts:40",{"_index":1101,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/components/action.component.ts:46",{"_index":1097,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/components/action.component.ts:52",{"_index":1109,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/components/action.component.ts:54",{"_index":1115,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/components/action.component.ts:55",{"_index":1112,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/components/action.component.ts:56",{"_index":1102,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/components/action.component.ts:57",{"_index":1106,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/components/action.component.ts:58",{"_index":1114,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/components/action.component.ts:59",{"_index":1103,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/components/action.component.ts:60",{"_index":1116,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/components/action.component.ts:61",{"_index":1087,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/components/action.component.ts:62",{"_index":1113,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/components/action.component.ts:64",{"_index":1072,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/components/action.component.ts:69",{"_index":1084,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/components/action.component.ts:75",{"_index":1083,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/components/action.component.ts:79",{"_index":1081,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/components/action.component.ts:94",{"_index":1080,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/components/build",{"_index":1999,"title":{},"body":{"components/BuildExeComponent.html":{},"components/SagImageAlerterComponent.html":{},"coverage.html":{}}}],["src/app/components/build.component.ts",{"_index":1899,"title":{},"body":{"components/BuildComponent.html":{},"coverage.html":{}}}],["src/app/components/build.component.ts:22",{"_index":1924,"title":{},"body":{"components/BuildComponent.html":{}}}],["src/app/components/build.component.ts:23",{"_index":1925,"title":{},"body":{"components/BuildComponent.html":{}}}],["src/app/components/build.component.ts:25",{"_index":1926,"title":{},"body":{"components/BuildComponent.html":{}}}],["src/app/components/build.component.ts:26",{"_index":1928,"title":{},"body":{"components/BuildComponent.html":{}}}],["src/app/components/build.component.ts:28",{"_index":1927,"title":{},"body":{"components/BuildComponent.html":{}}}],["src/app/components/build.component.ts:29",{"_index":1915,"title":{},"body":{"components/BuildComponent.html":{}}}],["src/app/components/build.component.ts:40",{"_index":1921,"title":{},"body":{"components/BuildComponent.html":{}}}],["src/app/components/build.component.ts:43",{"_index":1923,"title":{},"body":{"components/BuildComponent.html":{}}}],["src/app/components/build.component.ts:48",{"_index":1917,"title":{},"body":{"components/BuildComponent.html":{}}}],["src/app/components/build.component.ts:53",{"_index":1920,"title":{},"body":{"components/BuildComponent.html":{}}}],["src/app/components/build.component.ts:58",{"_index":1919,"title":{},"body":{"components/BuildComponent.html":{}}}],["src/app/components/container.component.ts",{"_index":5646,"title":{},"body":{"coverage.html":{}}}],["src/app/components/containers.component.ts",{"_index":5648,"title":{},"body":{"coverage.html":{}}}],["src/app/components/elements/build",{"_index":2118,"title":{},"body":{"directives/BuildImageChooseDirective.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"interfaces/PropertiesChangedOwner.html":{},"coverage.html":{}}}],["src/app/components/elements/docker",{"_index":881,"title":{},"body":{"classes/Action-1.html":{},"components/DockerImageVersionsComponent.html":{},"coverage.html":{}}}],["src/app/components/elements/git",{"_index":2707,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{},"coverage.html":{}}}],["src/app/components/elements/simple",{"_index":5119,"title":{},"body":{"components/SimpleNameComponent.html":{},"coverage.html":{}}}],["src/app/components/elements/upload",{"_index":5467,"title":{},"body":{"components/UploadButtonComponent.html":{},"coverage.html":{}}}],["src/app/components/home.component.ts",{"_index":2889,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/components/home.component.ts:102",{"_index":2923,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home.component.ts:106",{"_index":2922,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home.component.ts:110",{"_index":2913,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home.component.ts:118",{"_index":2929,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home.component.ts:139",{"_index":2928,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home.component.ts:150",{"_index":2926,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home.component.ts:155",{"_index":2932,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home.component.ts:18",{"_index":2910,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home.component.ts:36",{"_index":2925,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home.component.ts:41",{"_index":2931,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home.component.ts:56",{"_index":2924,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home.component.ts:70",{"_index":2914,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home.component.ts:74",{"_index":2916,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home.component.ts:78",{"_index":2919,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home.component.ts:82",{"_index":2917,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home.component.ts:86",{"_index":2915,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home.component.ts:90",{"_index":2918,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home.component.ts:94",{"_index":2920,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home.component.ts:98",{"_index":2921,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/k8s/deployment",{"_index":2465,"title":{},"body":{"components/DeploymentDetailsComponent.html":{},"coverage.html":{}}}],["src/app/components/k8s/pods",{"_index":3894,"title":{},"body":{"components/PodsListComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/k8s/runtime",{"_index":1197,"title":{},"body":{"interfaces/ActionsComponent.html":{},"directives/RuntimeActionsDirective.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"coverage.html":{}}}],["src/app/components/k8s/service",{"_index":4995,"title":{},"body":{"components/ServicePropertiesComponent.html":{},"coverage.html":{}}}],["src/app/components/plugins/apigw",{"_index":1204,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"coverage.html":{}}}],["src/app/components/plugins/apimg",{"_index":1335,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{},"coverage.html":{}}}],["src/app/components/plugins/apipr",{"_index":1533,"title":{},"body":{"components/ApiPortalInstallerComponent.html":{},"coverage.html":{}}}],["src/app/components/plugins/installer.component.ts",{"_index":5665,"title":{},"body":{"coverage.html":{}}}],["src/app/components/plugins/micro",{"_index":3487,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{},"coverage.html":{}}}],["src/app/components/plugins/um",{"_index":5445,"title":{},"body":{"components/UMInstallerComponent.html":{},"coverage.html":{}}}],["src/app/components/runtime",{"_index":5671,"title":{},"body":{"coverage.html":{}}}],["src/app/components/settings.component.ts",{"_index":5678,"title":{},"body":{"coverage.html":{}}}],["src/app/components/staging.component.ts",{"_index":2542,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{},"coverage.html":{}}}],["src/app/components/staging.component.ts:100",{"_index":5197,"title":{},"body":{"components/StagingComponent.html":{}}}],["src/app/components/staging.component.ts:109",{"_index":5199,"title":{},"body":{"components/StagingComponent.html":{}}}],["src/app/components/staging.component.ts:119",{"_index":5200,"title":{},"body":{"components/StagingComponent.html":{}}}],["src/app/components/staging.component.ts:141",{"_index":5204,"title":{},"body":{"components/StagingComponent.html":{}}}],["src/app/components/staging.component.ts:147",{"_index":5205,"title":{},"body":{"components/StagingComponent.html":{}}}],["src/app/components/staging.component.ts:153",{"_index":5206,"title":{},"body":{"components/StagingComponent.html":{}}}],["src/app/components/staging.component.ts:168",{"_index":5195,"title":{},"body":{"components/StagingComponent.html":{}}}],["src/app/components/staging.component.ts:203",{"_index":5194,"title":{},"body":{"components/StagingComponent.html":{}}}],["src/app/components/staging.component.ts:221",{"_index":2562,"title":{},"body":{"components/EditContainerComponent.html":{}}}],["src/app/components/staging.component.ts:223",{"_index":2564,"title":{},"body":{"components/EditContainerComponent.html":{}}}],["src/app/components/staging.component.ts:224",{"_index":2565,"title":{},"body":{"components/EditContainerComponent.html":{}}}],["src/app/components/staging.component.ts:225",{"_index":2561,"title":{},"body":{"components/EditContainerComponent.html":{}}}],["src/app/components/staging.component.ts:226",{"_index":2567,"title":{},"body":{"components/EditContainerComponent.html":{}}}],["src/app/components/staging.component.ts:227",{"_index":2570,"title":{},"body":{"components/EditContainerComponent.html":{}}}],["src/app/components/staging.component.ts:228",{"_index":2569,"title":{},"body":{"components/EditContainerComponent.html":{}}}],["src/app/components/staging.component.ts:230",{"_index":2566,"title":{},"body":{"components/EditContainerComponent.html":{}}}],["src/app/components/staging.component.ts:232",{"_index":2568,"title":{},"body":{"components/EditContainerComponent.html":{}}}],["src/app/components/staging.component.ts:233",{"_index":2571,"title":{},"body":{"components/EditContainerComponent.html":{}}}],["src/app/components/staging.component.ts:234",{"_index":2574,"title":{},"body":{"components/EditContainerComponent.html":{}}}],["src/app/components/staging.component.ts:235",{"_index":2575,"title":{},"body":{"components/EditContainerComponent.html":{}}}],["src/app/components/staging.component.ts:236",{"_index":2572,"title":{},"body":{"components/EditContainerComponent.html":{}}}],["src/app/components/staging.component.ts:237",{"_index":2573,"title":{},"body":{"components/EditContainerComponent.html":{}}}],["src/app/components/staging.component.ts:239",{"_index":2558,"title":{},"body":{"components/EditContainerComponent.html":{}}}],["src/app/components/staging.component.ts:241",{"_index":2563,"title":{},"body":{"components/EditContainerComponent.html":{}}}],["src/app/components/staging.component.ts:27",{"_index":5192,"title":{},"body":{"components/StagingComponent.html":{}}}],["src/app/components/staging.component.ts:30",{"_index":5191,"title":{},"body":{"components/StagingComponent.html":{}}}],["src/app/components/staging.component.ts:319",{"_index":2559,"title":{},"body":{"components/EditContainerComponent.html":{}}}],["src/app/components/staging.component.ts:324",{"_index":2560,"title":{},"body":{"components/EditContainerComponent.html":{}}}],["src/app/components/staging.component.ts:33",{"_index":5193,"title":{},"body":{"components/StagingComponent.html":{}}}],["src/app/components/staging.component.ts:35",{"_index":5207,"title":{},"body":{"components/StagingComponent.html":{}}}],["src/app/components/staging.component.ts:37",{"_index":5211,"title":{},"body":{"components/StagingComponent.html":{}}}],["src/app/components/staging.component.ts:38",{"_index":5209,"title":{},"body":{"components/StagingComponent.html":{}}}],["src/app/components/staging.component.ts:39",{"_index":5208,"title":{},"body":{"components/StagingComponent.html":{}}}],["src/app/components/staging.component.ts:40",{"_index":5210,"title":{},"body":{"components/StagingComponent.html":{}}}],["src/app/components/staging.component.ts:42",{"_index":5190,"title":{},"body":{"components/StagingComponent.html":{}}}],["src/app/components/staging.component.ts:47",{"_index":5203,"title":{},"body":{"components/StagingComponent.html":{}}}],["src/app/components/staging.component.ts:54",{"_index":5202,"title":{},"body":{"components/StagingComponent.html":{}}}],["src/app/components/staging.component.ts:59",{"_index":5201,"title":{},"body":{"components/StagingComponent.html":{}}}],["src/app/components/staging.component.ts:74",{"_index":5196,"title":{},"body":{"components/StagingComponent.html":{}}}],["src/app/components/test",{"_index":4849,"title":{},"body":{"classes/ServiceInfo.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"coverage.html":{}}}],["src/app/extras/directives/cancelcdkdrag.directive.ts",{"_index":2140,"title":{},"body":{"directives/CancelCdkDrag.html":{},"coverage.html":{}}}],["src/app/extras/directives/cancelcdkdrag.directive.ts:13",{"_index":2149,"title":{},"body":{"directives/CancelCdkDrag.html":{}}}],["src/app/extras/directives/cancelcdkdrag.directive.ts:17",{"_index":2150,"title":{},"body":{"directives/CancelCdkDrag.html":{}}}],["src/app/extras/directives/cancelcdkdrag.directive.ts:22",{"_index":2151,"title":{},"body":{"directives/CancelCdkDrag.html":{}}}],["src/app/extras/directives/cancelcdkdrag.directive.ts:7",{"_index":2145,"title":{},"body":{"directives/CancelCdkDrag.html":{}}}],["src/app/extras/directives/ng",{"_index":3797,"title":{},"body":{"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{},"coverage.html":{}}}],["src/app/extras/ng2",{"_index":5682,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/extras/services/ng2",{"_index":3623,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{},"coverage.html":{}}}],["src/app/models/build",{"_index":2112,"title":{},"body":{"classes/BuildImage.html":{},"coverage.html":{}}}],["src/app/models/docker",{"_index":2493,"title":{},"body":{"classes/DockerContainer.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/models/git",{"_index":5126,"title":{},"body":{"classes/Source.html":{},"coverage.html":{}}}],["src/app/models/k8s",{"_index":3044,"title":{},"body":{"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/K8sPod.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/models/payload.ts",{"_index":3846,"title":{},"body":{"classes/Payload.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/models/payload.ts:21",{"_index":3858,"title":{},"body":{"classes/Payload.html":{}}}],["src/app/models/payload.ts:22",{"_index":3856,"title":{},"body":{"classes/Payload.html":{}}}],["src/app/models/payload.ts:23",{"_index":3859,"title":{},"body":{"classes/Payload.html":{}}}],["src/app/models/payload.ts:24",{"_index":3854,"title":{},"body":{"classes/Payload.html":{}}}],["src/app/models/payload.ts:30",{"_index":3862,"title":{},"body":{"classes/Payload.html":{}}}],["src/app/models/payload.ts:68",{"_index":3864,"title":{},"body":{"classes/Payload.html":{}}}],["src/app/models/payload.ts:73",{"_index":3866,"title":{},"body":{"classes/Payload.html":{}}}],["src/app/models/payload.ts:78",{"_index":3860,"title":{},"body":{"classes/Payload.html":{}}}],["src/app/models/payload.ts:83",{"_index":3867,"title":{},"body":{"classes/Payload.html":{}}}],["src/app/models/payload.ts:88",{"_index":3868,"title":{},"body":{"classes/Payload.html":{}}}],["src/app/models/project.ts",{"_index":418,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["src/app/models/project.ts:10",{"_index":2478,"title":{},"body":{"classes/DeploymentSet.html":{}}}],["src/app/models/project.ts:1024",{"_index":2454,"title":{},"body":{"classes/Deployment.html":{}}}],["src/app/models/project.ts:1025",{"_index":2453,"title":{},"body":{"classes/Deployment.html":{}}}],["src/app/models/project.ts:1026",{"_index":2451,"title":{},"body":{"classes/Deployment.html":{}}}],["src/app/models/project.ts:1027",{"_index":2450,"title":{},"body":{"classes/Deployment.html":{}}}],["src/app/models/project.ts:1028",{"_index":2452,"title":{},"body":{"classes/Deployment.html":{}}}],["src/app/models/project.ts:1029",{"_index":2455,"title":{},"body":{"classes/Deployment.html":{}}}],["src/app/models/project.ts:1030",{"_index":2458,"title":{},"body":{"classes/Deployment.html":{}}}],["src/app/models/project.ts:1031",{"_index":2457,"title":{},"body":{"classes/Deployment.html":{}}}],["src/app/models/project.ts:1032",{"_index":2456,"title":{},"body":{"classes/Deployment.html":{}}}],["src/app/models/project.ts:1033",{"_index":2449,"title":{},"body":{"classes/Deployment.html":{}}}],["src/app/models/project.ts:104",{"_index":2133,"title":{},"body":{"interfaces/BuildParams.html":{}}}],["src/app/models/project.ts:1041",{"_index":2460,"title":{},"body":{"classes/Deployment.html":{}}}],["src/app/models/project.ts:1045",{"_index":2461,"title":{},"body":{"classes/Deployment.html":{}}}],["src/app/models/project.ts:105",{"_index":2134,"title":{},"body":{"interfaces/BuildParams.html":{}}}],["src/app/models/project.ts:106",{"_index":2130,"title":{},"body":{"interfaces/BuildParams.html":{}}}],["src/app/models/project.ts:1072",{"_index":2459,"title":{},"body":{"classes/Deployment.html":{}}}],["src/app/models/project.ts:1086",{"_index":2464,"title":{},"body":{"classes/Deployment.html":{}}}],["src/app/models/project.ts:11",{"_index":2477,"title":{},"body":{"classes/DeploymentSet.html":{}}}],["src/app/models/project.ts:1101",{"_index":2463,"title":{},"body":{"classes/Deployment.html":{}}}],["src/app/models/project.ts:1119",{"_index":4375,"title":{},"body":{"classes/RunSet.html":{}}}],["src/app/models/project.ts:1120",{"_index":4372,"title":{},"body":{"classes/RunSet.html":{}}}],["src/app/models/project.ts:1121",{"_index":4373,"title":{},"body":{"classes/RunSet.html":{}}}],["src/app/models/project.ts:1123",{"_index":4376,"title":{},"body":{"classes/RunSet.html":{}}}],["src/app/models/project.ts:1124",{"_index":4377,"title":{},"body":{"classes/RunSet.html":{}}}],["src/app/models/project.ts:1125",{"_index":4374,"title":{},"body":{"classes/RunSet.html":{}}}],["src/app/models/project.ts:1126",{"_index":4371,"title":{},"body":{"classes/RunSet.html":{}}}],["src/app/models/project.ts:1137",{"_index":4382,"title":{},"body":{"classes/RunSet.html":{}}}],["src/app/models/project.ts:114",{"_index":2131,"title":{},"body":{"interfaces/BuildParams.html":{}}}],["src/app/models/project.ts:115",{"_index":2132,"title":{},"body":{"interfaces/BuildParams.html":{}}}],["src/app/models/project.ts:1163",{"_index":4383,"title":{},"body":{"classes/RunSet.html":{}}}],["src/app/models/project.ts:1180",{"_index":4381,"title":{},"body":{"classes/RunSet.html":{}}}],["src/app/models/project.ts:1195",{"_index":4379,"title":{},"body":{"classes/RunSet.html":{}}}],["src/app/models/project.ts:120",{"_index":1874,"title":{},"body":{"classes/ArgDisplayType.html":{}}}],["src/app/models/project.ts:121",{"_index":1872,"title":{},"body":{"classes/ArgDisplayType.html":{}}}],["src/app/models/project.ts:122",{"_index":1873,"title":{},"body":{"classes/ArgDisplayType.html":{}}}],["src/app/models/project.ts:1222",{"_index":3989,"title":{},"body":{"classes/Project.html":{}}}],["src/app/models/project.ts:1223",{"_index":3990,"title":{},"body":{"classes/Project.html":{}}}],["src/app/models/project.ts:1224",{"_index":3988,"title":{},"body":{"classes/Project.html":{}}}],["src/app/models/project.ts:123",{"_index":1871,"title":{},"body":{"classes/ArgDisplayType.html":{}}}],["src/app/models/project.ts:1234",{"_index":3991,"title":{},"body":{"classes/Project.html":{}}}],["src/app/models/project.ts:124",{"_index":1870,"title":{},"body":{"classes/ArgDisplayType.html":{}}}],["src/app/models/project.ts:125",{"_index":1869,"title":{},"body":{"classes/ArgDisplayType.html":{}}}],["src/app/models/project.ts:134",{"_index":1876,"title":{},"body":{"classes/ArgDisplayType.html":{}}}],["src/app/models/project.ts:146",{"_index":1877,"title":{},"body":{"classes/ArgDisplayType.html":{}}}],["src/app/models/project.ts:179",{"_index":1878,"title":{},"body":{"classes/ArgDisplayType.html":{}}}],["src/app/models/project.ts:18",{"_index":2482,"title":{},"body":{"classes/DeploymentSet.html":{}}}],["src/app/models/project.ts:184",{"_index":1875,"title":{},"body":{"classes/ArgDisplayType.html":{}}}],["src/app/models/project.ts:220",{"_index":1865,"title":{},"body":{"classes/Arg.html":{}}}],["src/app/models/project.ts:221",{"_index":1863,"title":{},"body":{"classes/Arg.html":{}}}],["src/app/models/project.ts:222",{"_index":1862,"title":{},"body":{"classes/Arg.html":{}}}],["src/app/models/project.ts:224",{"_index":1864,"title":{},"body":{"classes/Arg.html":{}}}],["src/app/models/project.ts:228",{"_index":1866,"title":{},"body":{"classes/Arg.html":{}}}],["src/app/models/project.ts:495",{"_index":2489,"title":{},"body":{"classes/DockerBuild.html":{}}}],["src/app/models/project.ts:496",{"_index":2490,"title":{},"body":{"classes/DockerBuild.html":{}}}],["src/app/models/project.ts:497",{"_index":2486,"title":{},"body":{"classes/DockerBuild.html":{}}}],["src/app/models/project.ts:506",{"_index":2491,"title":{},"body":{"classes/DockerBuild.html":{}}}],["src/app/models/project.ts:52",{"_index":1886,"title":{},"body":{"classes/BuildCommand.html":{}}}],["src/app/models/project.ts:525",{"_index":3978,"title":{},"body":{"classes/Port.html":{}}}],["src/app/models/project.ts:526",{"_index":3976,"title":{},"body":{"classes/Port.html":{}}}],["src/app/models/project.ts:528",{"_index":3977,"title":{},"body":{"classes/Port.html":{}}}],["src/app/models/project.ts:53",{"_index":1885,"title":{},"body":{"classes/BuildCommand.html":{}}}],["src/app/models/project.ts:532",{"_index":3979,"title":{},"body":{"classes/Port.html":{}}}],["src/app/models/project.ts:54",{"_index":1890,"title":{},"body":{"classes/BuildCommand.html":{}}}],["src/app/models/project.ts:55",{"_index":1892,"title":{},"body":{"classes/BuildCommand.html":{}}}],["src/app/models/project.ts:550",{"_index":3981,"title":{},"body":{"classes/Probe.html":{}}}],["src/app/models/project.ts:551",{"_index":3983,"title":{},"body":{"classes/Probe.html":{}}}],["src/app/models/project.ts:552",{"_index":3980,"title":{},"body":{"classes/Probe.html":{}}}],["src/app/models/project.ts:553",{"_index":3982,"title":{},"body":{"classes/Probe.html":{}}}],["src/app/models/project.ts:554",{"_index":3984,"title":{},"body":{"classes/Probe.html":{}}}],["src/app/models/project.ts:556",{"_index":3985,"title":{},"body":{"classes/Probe.html":{}}}],["src/app/models/project.ts:56",{"_index":1893,"title":{},"body":{"classes/BuildCommand.html":{}}}],["src/app/models/project.ts:57",{"_index":1888,"title":{},"body":{"classes/BuildCommand.html":{}}}],["src/app/models/project.ts:58",{"_index":1889,"title":{},"body":{"classes/BuildCommand.html":{}}}],["src/app/models/project.ts:59",{"_index":1891,"title":{},"body":{"classes/BuildCommand.html":{}}}],["src/app/models/project.ts:60",{"_index":1887,"title":{},"body":{"classes/BuildCommand.html":{}}}],["src/app/models/project.ts:62",{"_index":1896,"title":{},"body":{"classes/BuildCommand.html":{}}}],["src/app/models/project.ts:7",{"_index":2479,"title":{},"body":{"classes/DeploymentSet.html":{}}}],["src/app/models/project.ts:782",{"_index":5218,"title":{},"body":{"classes/Test.html":{}}}],["src/app/models/project.ts:783",{"_index":5217,"title":{},"body":{"classes/Test.html":{}}}],["src/app/models/project.ts:789",{"_index":5219,"title":{},"body":{"classes/Test.html":{}}}],["src/app/models/project.ts:8",{"_index":2480,"title":{},"body":{"classes/DeploymentSet.html":{}}}],["src/app/models/project.ts:802",{"_index":1881,"title":{},"body":{"classes/Authentication.html":{}}}],["src/app/models/project.ts:803",{"_index":1882,"title":{},"body":{"classes/Authentication.html":{}}}],["src/app/models/project.ts:804",{"_index":1880,"title":{},"body":{"classes/Authentication.html":{}}}],["src/app/models/project.ts:810",{"_index":1883,"title":{},"body":{"classes/Authentication.html":{}}}],["src/app/models/project.ts:828",{"_index":4846,"title":{},"body":{"classes/Server.html":{}}}],["src/app/models/project.ts:829",{"_index":4845,"title":{},"body":{"classes/Server.html":{}}}],["src/app/models/project.ts:835",{"_index":4847,"title":{},"body":{"classes/Server.html":{}}}],["src/app/models/project.ts:850",{"_index":431,"title":{},"body":{"classes/Action.html":{}}}],["src/app/models/project.ts:851",{"_index":432,"title":{},"body":{"classes/Action.html":{}}}],["src/app/models/project.ts:852",{"_index":434,"title":{},"body":{"classes/Action.html":{}}}],["src/app/models/project.ts:853",{"_index":433,"title":{},"body":{"classes/Action.html":{}}}],["src/app/models/project.ts:854",{"_index":437,"title":{},"body":{"classes/Action.html":{}}}],["src/app/models/project.ts:855",{"_index":435,"title":{},"body":{"classes/Action.html":{}}}],["src/app/models/project.ts:856",{"_index":436,"title":{},"body":{"classes/Action.html":{}}}],["src/app/models/project.ts:857",{"_index":439,"title":{},"body":{"classes/Action.html":{}}}],["src/app/models/project.ts:858",{"_index":438,"title":{},"body":{"classes/Action.html":{}}}],["src/app/models/project.ts:859",{"_index":430,"title":{},"body":{"classes/Action.html":{}}}],["src/app/models/project.ts:86",{"_index":1894,"title":{},"body":{"classes/BuildCommand.html":{}}}],["src/app/models/project.ts:867",{"_index":441,"title":{},"body":{"classes/Action.html":{}}}],["src/app/models/project.ts:892",{"_index":440,"title":{},"body":{"classes/Action.html":{}}}],["src/app/models/project.ts:898",{"_index":442,"title":{},"body":{"classes/Action.html":{}}}],["src/app/models/project.ts:9",{"_index":2481,"title":{},"body":{"classes/DeploymentSet.html":{}}}],["src/app/models/project.ts:90",{"_index":1895,"title":{},"body":{"classes/BuildCommand.html":{}}}],["src/app/models/project.ts:95",{"_index":1897,"title":{},"body":{"classes/BuildCommand.html":{}}}],["src/app/models/project.ts:961",{"_index":5179,"title":{},"body":{"classes/Stage.html":{}}}],["src/app/models/project.ts:962",{"_index":5180,"title":{},"body":{"classes/Stage.html":{}}}],["src/app/models/project.ts:963",{"_index":5177,"title":{},"body":{"classes/Stage.html":{}}}],["src/app/models/project.ts:964",{"_index":5183,"title":{},"body":{"classes/Stage.html":{}}}],["src/app/models/project.ts:965",{"_index":5176,"title":{},"body":{"classes/Stage.html":{}}}],["src/app/models/project.ts:966",{"_index":5178,"title":{},"body":{"classes/Stage.html":{}}}],["src/app/models/project.ts:967",{"_index":5182,"title":{},"body":{"classes/Stage.html":{}}}],["src/app/models/project.ts:968",{"_index":5181,"title":{},"body":{"classes/Stage.html":{}}}],["src/app/models/project.ts:969",{"_index":5175,"title":{},"body":{"classes/Stage.html":{}}}],["src/app/models/project.ts:980",{"_index":5184,"title":{},"body":{"classes/Stage.html":{}}}],["src/app/models/project.ts:990",{"_index":5185,"title":{},"body":{"classes/Stage.html":{}}}],["src/app/models/test",{"_index":5220,"title":{},"body":{"classes/TestCase.html":{},"classes/TestSuite.html":{},"coverage.html":{}}}],["src/app/models/wm",{"_index":169,"title":{},"body":{"classes/APIDefinition.html":{},"classes/WmPackageInfo.html":{},"coverage.html":{}}}],["src/app/services/api",{"_index":6,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/services/configuration.service.ts",{"_index":5689,"title":{},"body":{"coverage.html":{}}}],["src/app/services/docker.service.ts",{"_index":4146,"title":{},"body":{"classes/Result.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["src/app/services/docker.service.ts:674",{"_index":4150,"title":{},"body":{"classes/Result.html":{}}}],["src/app/services/docker.service.ts:676",{"_index":4151,"title":{},"body":{"classes/Result.html":{}}}],["src/app/services/git",{"_index":2161,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/services/k8s.service.ts",{"_index":3245,"title":{},"body":{"injectables/K8sService.html":{},"coverage.html":{}}}],["src/app/services/k8s.service.ts:102",{"_index":3274,"title":{},"body":{"injectables/K8sService.html":{}}}],["src/app/services/k8s.service.ts:128",{"_index":3281,"title":{},"body":{"injectables/K8sService.html":{}}}],["src/app/services/k8s.service.ts:159",{"_index":3276,"title":{},"body":{"injectables/K8sService.html":{}}}],["src/app/services/k8s.service.ts:164",{"_index":3278,"title":{},"body":{"injectables/K8sService.html":{}}}],["src/app/services/k8s.service.ts:22",{"_index":3287,"title":{},"body":{"injectables/K8sService.html":{}}}],["src/app/services/k8s.service.ts:220",{"_index":3264,"title":{},"body":{"injectables/K8sService.html":{}}}],["src/app/services/k8s.service.ts:23",{"_index":3285,"title":{},"body":{"injectables/K8sService.html":{}}}],["src/app/services/k8s.service.ts:236",{"_index":3259,"title":{},"body":{"injectables/K8sService.html":{}}}],["src/app/services/k8s.service.ts:24",{"_index":3291,"title":{},"body":{"injectables/K8sService.html":{}}}],["src/app/services/k8s.service.ts:25",{"_index":3311,"title":{},"body":{"injectables/K8sService.html":{}}}],["src/app/services/k8s.service.ts:251",{"_index":3262,"title":{},"body":{"injectables/K8sService.html":{}}}],["src/app/services/k8s.service.ts:269",{"_index":3279,"title":{},"body":{"injectables/K8sService.html":{}}}],["src/app/services/k8s.service.ts:29",{"_index":3289,"title":{},"body":{"injectables/K8sService.html":{}}}],["src/app/services/k8s.service.ts:306",{"_index":3266,"title":{},"body":{"injectables/K8sService.html":{}}}],["src/app/services/k8s.service.ts:325",{"_index":3309,"title":{},"body":{"injectables/K8sService.html":{}}}],["src/app/services/k8s.service.ts:33",{"_index":3283,"title":{},"body":{"injectables/K8sService.html":{}}}],["src/app/services/k8s.service.ts:34",{"_index":3282,"title":{},"body":{"injectables/K8sService.html":{}}}],["src/app/services/k8s.service.ts:36",{"_index":3257,"title":{},"body":{"injectables/K8sService.html":{}}}],["src/app/services/k8s.service.ts:48",{"_index":3271,"title":{},"body":{"injectables/K8sService.html":{}}}],["src/app/services/k8s.service.ts:75",{"_index":3268,"title":{},"body":{"injectables/K8sService.html":{}}}],["src/app/services/packages.service.ts",{"_index":2397,"title":{},"body":{"classes/DependencyWrapper.html":{},"injectables/PackagesService.html":{},"classes/Sources.html":{},"coverage.html":{}}}],["src/app/services/packages.service.ts:104",{"_index":3842,"title":{},"body":{"injectables/PackagesService.html":{}}}],["src/app/services/packages.service.ts:129",{"_index":3841,"title":{},"body":{"injectables/PackagesService.html":{}}}],["src/app/services/packages.service.ts:14",{"_index":2399,"title":{},"body":{"classes/DependencyWrapper.html":{}}}],["src/app/services/packages.service.ts:15",{"_index":2398,"title":{},"body":{"classes/DependencyWrapper.html":{}}}],["src/app/services/packages.service.ts:171",{"_index":3840,"title":{},"body":{"injectables/PackagesService.html":{}}}],["src/app/services/packages.service.ts:20",{"_index":5170,"title":{},"body":{"classes/Sources.html":{}}}],["src/app/services/packages.service.ts:21",{"_index":5169,"title":{},"body":{"classes/Sources.html":{}}}],["src/app/services/packages.service.ts:22",{"_index":5171,"title":{},"body":{"classes/Sources.html":{}}}],["src/app/services/packages.service.ts:23",{"_index":5168,"title":{},"body":{"classes/Sources.html":{}}}],["src/app/services/packages.service.ts:24",{"_index":5174,"title":{},"body":{"classes/Sources.html":{}}}],["src/app/services/packages.service.ts:25",{"_index":5172,"title":{},"body":{"classes/Sources.html":{}}}],["src/app/services/packages.service.ts:26",{"_index":5173,"title":{},"body":{"classes/Sources.html":{}}}],["src/app/services/packages.service.ts:32",{"_index":3839,"title":{},"body":{"injectables/PackagesService.html":{}}}],["src/app/services/packages.service.ts:38",{"_index":3844,"title":{},"body":{"injectables/PackagesService.html":{}}}],["src/app/services/packages.service.ts:64",{"_index":3845,"title":{},"body":{"injectables/PackagesService.html":{}}}],["src/app/services/packages.service.ts:84",{"_index":3843,"title":{},"body":{"injectables/PackagesService.html":{}}}],["src/app/services/resources.service.ts",{"_index":4119,"title":{},"body":{"injectables/ResourceService.html":{},"coverage.html":{}}}],["src/app/services/resources.service.ts:15",{"_index":4126,"title":{},"body":{"injectables/ResourceService.html":{}}}],["src/app/services/resources.service.ts:21",{"_index":4131,"title":{},"body":{"injectables/ResourceService.html":{}}}],["src/app/services/resources.service.ts:38",{"_index":4130,"title":{},"body":{"injectables/ResourceService.html":{}}}],["src/app/services/resources.service.ts:55",{"_index":4128,"title":{},"body":{"injectables/ResourceService.html":{}}}],["src/app/services/resources.service.ts:60",{"_index":4135,"title":{},"body":{"injectables/ResourceService.html":{}}}],["src/app/services/resources.service.ts:65",{"_index":4133,"title":{},"body":{"injectables/ResourceService.html":{}}}],["src/app/services/test",{"_index":5332,"title":{},"body":{"injectables/TestConfigService.html":{},"injectables/TestTraceService.html":{},"coverage.html":{}}}],["src/app/services/websocket.service.ts",{"_index":5548,"title":{},"body":{"classes/WebSocketService.html":{},"coverage.html":{}}}],["src/app/services/websocket.service.ts:10",{"_index":5558,"title":{},"body":{"classes/WebSocketService.html":{}}}],["src/app/services/websocket.service.ts:12",{"_index":5561,"title":{},"body":{"classes/WebSocketService.html":{}}}],["src/app/services/websocket.service.ts:13",{"_index":5559,"title":{},"body":{"classes/WebSocketService.html":{}}}],["src/app/services/websocket.service.ts:134",{"_index":5567,"title":{},"body":{"classes/WebSocketService.html":{}}}],["src/app/services/websocket.service.ts:14",{"_index":5557,"title":{},"body":{"classes/WebSocketService.html":{}}}],["src/app/services/websocket.service.ts:30",{"_index":5575,"title":{},"body":{"classes/WebSocketService.html":{}}}],["src/app/services/websocket.service.ts:36",{"_index":5570,"title":{},"body":{"classes/WebSocketService.html":{}}}],["src/app/services/websocket.service.ts:49",{"_index":5568,"title":{},"body":{"classes/WebSocketService.html":{}}}],["src/app/services/websocket.service.ts:55",{"_index":5571,"title":{},"body":{"classes/WebSocketService.html":{}}}],["src/app/services/websocket.service.ts:66",{"_index":5577,"title":{},"body":{"classes/WebSocketService.html":{}}}],["src/app/services/websocket.service.ts:71",{"_index":5566,"title":{},"body":{"classes/WebSocketService.html":{}}}],["src/app/services/websocket.service.ts:8",{"_index":5563,"title":{},"body":{"classes/WebSocketService.html":{}}}],["src/app/services/websocket.service.ts:92",{"_index":5573,"title":{},"body":{"classes/WebSocketService.html":{}}}],["src/app/settings.ts",{"_index":3997,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/settings.ts:112",{"_index":5108,"title":{},"body":{"injectables/Settings.html":{}}}],["src/app/settings.ts:121",{"_index":5107,"title":{},"body":{"injectables/Settings.html":{}}}],["src/app/settings.ts:129",{"_index":5105,"title":{},"body":{"injectables/Settings.html":{}}}],["src/app/settings.ts:142",{"_index":5104,"title":{},"body":{"injectables/Settings.html":{}}}],["src/app/settings.ts:162",{"_index":5106,"title":{},"body":{"injectables/Settings.html":{}}}],["src/app/settings.ts:185",{"_index":5103,"title":{},"body":{"injectables/Settings.html":{}}}],["src/app/settings.ts:21",{"_index":5539,"title":{},"body":{"classes/Values.html":{}}}],["src/app/settings.ts:22",{"_index":5533,"title":{},"body":{"classes/Values.html":{}}}],["src/app/settings.ts:23",{"_index":5538,"title":{},"body":{"classes/Values.html":{}}}],["src/app/settings.ts:24",{"_index":5535,"title":{},"body":{"classes/Values.html":{}}}],["src/app/settings.ts:25",{"_index":5540,"title":{},"body":{"classes/Values.html":{}}}],["src/app/settings.ts:26",{"_index":5534,"title":{},"body":{"classes/Values.html":{}}}],["src/app/settings.ts:27",{"_index":5536,"title":{},"body":{"classes/Values.html":{}}}],["src/app/settings.ts:28",{"_index":5537,"title":{},"body":{"classes/Values.html":{}}}],["src/app/settings.ts:30",{"_index":5527,"title":{},"body":{"classes/Values.html":{}}}],["src/app/settings.ts:31",{"_index":5541,"title":{},"body":{"classes/Values.html":{}}}],["src/app/settings.ts:33",{"_index":5545,"title":{},"body":{"classes/Values.html":{}}}],["src/app/settings.ts:34",{"_index":5546,"title":{},"body":{"classes/Values.html":{}}}],["src/app/settings.ts:36",{"_index":5544,"title":{},"body":{"classes/Values.html":{}}}],["src/app/settings.ts:37",{"_index":5542,"title":{},"body":{"classes/Values.html":{}}}],["src/app/settings.ts:38",{"_index":5543,"title":{},"body":{"classes/Values.html":{}}}],["src/app/settings.ts:40",{"_index":5526,"title":{},"body":{"classes/Values.html":{}}}],["src/app/settings.ts:41",{"_index":5529,"title":{},"body":{"classes/Values.html":{}}}],["src/app/settings.ts:42",{"_index":5528,"title":{},"body":{"classes/Values.html":{}}}],["src/app/settings.ts:44",{"_index":5532,"title":{},"body":{"classes/Values.html":{}}}],["src/app/settings.ts:45",{"_index":5531,"title":{},"body":{"classes/Values.html":{}}}],["src/app/settings.ts:46",{"_index":5530,"title":{},"body":{"classes/Values.html":{}}}],["src/app/settings.ts:48",{"_index":5547,"title":{},"body":{"classes/Values.html":{}}}],["src/app/settings.ts:67",{"_index":5117,"title":{},"body":{"injectables/Settings.html":{}}}],["src/app/settings.ts:68",{"_index":5113,"title":{},"body":{"injectables/Settings.html":{}}}],["src/app/settings.ts:7",{"_index":3998,"title":{},"body":{"classes/RepoSettings.html":{}}}],["src/app/settings.ts:74",{"_index":5118,"title":{},"body":{"injectables/Settings.html":{}}}],["src/app/settings.ts:78",{"_index":5112,"title":{},"body":{"injectables/Settings.html":{}}}],["src/app/settings.ts:79",{"_index":5116,"title":{},"body":{"injectables/Settings.html":{}}}],["src/app/settings.ts:80",{"_index":5114,"title":{},"body":{"injectables/Settings.html":{}}}],["src/app/settings.ts:81",{"_index":5115,"title":{},"body":{"injectables/Settings.html":{}}}],["src/app/settings.ts:85",{"_index":5110,"title":{},"body":{"injectables/Settings.html":{}}}],["src/app/settings.ts:86",{"_index":5111,"title":{},"body":{"injectables/Settings.html":{}}}],["src/app/settings.ts:88",{"_index":5102,"title":{},"body":{"injectables/Settings.html":{}}}],["src/app/settings.ts:9",{"_index":3999,"title":{},"body":{"classes/RepoSettings.html":{}}}],["src/app/settings.ts:97",{"_index":5109,"title":{},"body":{"injectables/Settings.html":{}}}],["src/app/support/container.templates.ts",{"_index":2304,"title":{},"body":{"injectables/ContainerTemplates.html":{},"coverage.html":{}}}],["src/app/support/container.templates.ts:10",{"_index":2352,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["src/app/support/container.templates.ts:103",{"_index":2324,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["src/app/support/container.templates.ts:11",{"_index":2314,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["src/app/support/container.templates.ts:118",{"_index":2321,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["src/app/support/container.templates.ts:17",{"_index":2326,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["src/app/support/container.templates.ts:25",{"_index":2329,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["src/app/support/container.templates.ts:46",{"_index":2319,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["src/app/support/container.templates.ts:57",{"_index":2317,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["src/app/support/live",{"_index":3424,"title":{},"body":{"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":5691,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":5692,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":5693,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":3010,"title":{},"body":{"components/HomeComponent.html":{}}}],["stage",{"_index":798,"title":{"classes/Stage.html":{}},"body":{"classes/Action.html":{},"components/ActionComponent.html":{},"modules/AppModule.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"components/EditContainerComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stage'},{'name",{"_index":379,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["stage.component",{"_index":1642,"title":{},"body":{"modules/AppModule.html":{}}}],["stage.component.ts",{"_index":5676,"title":{},"body":{"coverage.html":{}}}],["stage.make(this",{"_index":811,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["stagenamectrl",{"_index":2579,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["stages",{"_index":3987,"title":{},"body":{"classes/Project.html":{}}}],["stageupdated",{"_index":2578,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["staging",{"_index":1789,"title":{},"body":{"modules/AppModule.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/StagingComponent.html":{},"miscellaneous/variables.html":{}}}],["staging'},{'name",{"_index":390,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["stagingcomponent",{"_index":389,"title":{"components/StagingComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["start",{"_index":1551,"title":{},"body":{"components/ApiPortalInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{}}}],["started",{"_index":1558,"title":{"index.html":{}},"body":{"components/ApiPortalInstallerComponent.html":{}}}],["starting",{"_index":1560,"title":{},"body":{"components/ApiPortalInstallerComponent.html":{},"classes/DockerContainer.html":{},"classes/K8sPod.html":{},"miscellaneous/enumerations.html":{}}}],["startup",{"_index":204,"title":{},"body":{"classes/APIDefinition.html":{},"components/ActionComponent.html":{},"components/HomeComponent.html":{},"classes/WmPackageInfo.html":{}}}],["state",{"_index":691,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"components/ServicePropertiesComponent.html":{},"classes/Stage.html":{},"classes/Test.html":{},"classes/WebSocketService.html":{}}}],["state('collapsed",{"_index":5031,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["state('expanded",{"_index":5034,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["stateful",{"_index":5021,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["stateless",{"_index":2361,"title":{},"body":{"injectables/ContainerTemplates.html":{},"components/ServicePropertiesComponent.html":{}}}],["statements",{"_index":5627,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":18,"title":{},"body":{"classes/API.html":{},"classes/APIDefinition.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/CommitInfo.html":{},"injectables/ContainerTemplates.html":{},"classes/DependencyWrapper.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/DockerContainer.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/K8sPod.html":{},"injectables/K8sService.html":{},"injectables/PackagesService.html":{},"classes/Payload.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RepoSettings.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/Server.html":{},"injectables/Settings.html":{},"classes/Source.html":{},"classes/Sources.html":{},"classes/Stage.html":{},"classes/Test.html":{},"classes/TestCase.html":{},"injectables/TestConfigService.html":{},"classes/TestSuite.html":{},"injectables/TestTraceService.html":{},"classes/Values.html":{},"classes/WebSocketService.html":{},"classes/WmPackageInfo.html":{}}}],["status",{"_index":692,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/CommitInfo.html":{},"classes/Deployment.html":{},"components/DeploymentDetailsComponent.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/DockerContainer.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"classes/K8sDeployment.html":{},"classes/K8sPod.html":{},"injectables/K8sService.html":{},"injectables/Ng2Uploader.html":{},"components/PodsListComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"classes/Stage.html":{},"classes/Test.html":{},"injectables/TestTraceService.html":{},"components/UploadButtonComponent.html":{},"classes/UploadedFile.html":{}}}],["statustext",{"_index":3697,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["stepchanged(event",{"_index":4976,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["stepper",{"_index":4883,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["stop",{"_index":427,"title":{},"body":{"classes/Action.html":{},"components/ActionComponent.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["stop(run",{"_index":4294,"title":{},"body":{"classes/Result.html":{}}}],["stopcontainer(containerid",{"_index":4298,"title":{},"body":{"classes/Result.html":{}}}],["stopped",{"_index":3097,"title":{},"body":{"classes/K8sDeployment.html":{},"miscellaneous/enumerations.html":{}}}],["stopping",{"_index":793,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/K8sPod.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{},"miscellaneous/enumerations.html":{}}}],["store",{"_index":119,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"injectables/K8sService.html":{},"classes/RepoSettings.html":{},"classes/Result.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"injectables/Settings.html":{},"injectables/TestTraceService.html":{},"classes/Values.html":{}}}],["stored",{"_index":5746,"title":{},"body":{"index.html":{}}}],["str",{"_index":2002,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["stretch",{"_index":1962,"title":{},"body":{"components/BuildComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/TestCaseComponent.html":{}}}],["string",{"_index":22,"title":{},"body":{"classes/API.html":{},"classes/APIDefinition.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Action.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildExeComponent.html":{},"directives/BuildImageChooseDirective.html":{},"interfaces/BuildParams.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"classes/CommitInfo.html":{},"injectables/ContainerTemplates.html":{},"classes/DependencyWrapper.html":{},"classes/Deployment.html":{},"components/DeploymentDetailsComponent.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/DockerContainer.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"components/HomeComponent.html":{},"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/K8sPod.html":{},"injectables/K8sService.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"components/MicroServiceInstallerComponent.html":{},"injectables/Ng2Uploader.html":{},"directives/NgFileDrop.html":{},"injectables/PackagesService.html":{},"classes/Payload.html":{},"components/PodsListComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"interfaces/PropertiesChangedOwner.html":{},"classes/RepoSettings.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"components/ServicePropertiesComponent.html":{},"injectables/Settings.html":{},"components/SimpleNameComponent.html":{},"classes/Source.html":{},"classes/SourceWrapper.html":{},"classes/Sources.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{},"classes/TestCase.html":{},"components/TestCaseComponent.html":{},"injectables/TestConfigService.html":{},"classes/TestSuite.html":{},"injectables/TestTraceService.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"classes/UploadedFile.html":{},"classes/Values.html":{},"classes/WebSocketService.html":{},"classes/WmPackageInfo.html":{},"miscellaneous/enumerations.html":{}}}],["string):observable",{"_index":4194,"title":{},"body":{"classes/Result.html":{}}}],["stringifyreplacer",{"_index":609,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["stringifyreplacer(key",{"_index":868,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{},"miscellaneous/functions.html":{}}}],["style",{"_index":962,"title":{},"body":{"classes/Action-1.html":{},"components/BuildExeComponent.html":{},"components/PodsListComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/TestCaseComponent.html":{},"components/UploadButtonComponent.html":{}}}],["style['background",{"_index":973,"title":{},"body":{"classes/Action-1.html":{},"components/PodsListComponent.html":{}}}],["style['border",{"_index":966,"title":{},"body":{"classes/Action-1.html":{},"components/PodsListComponent.html":{}}}],["style['color",{"_index":987,"title":{},"body":{"classes/Action-1.html":{},"components/PodsListComponent.html":{}}}],["style['padding",{"_index":969,"title":{},"body":{"classes/Action-1.html":{},"components/PodsListComponent.html":{}}}],["style['text",{"_index":963,"title":{},"body":{"classes/Action-1.html":{},"components/PodsListComponent.html":{}}}],["styleforaction",{"_index":3902,"title":{},"body":{"components/PodsListComponent.html":{}}}],["styleforaction(image",{"_index":986,"title":{},"body":{"classes/Action-1.html":{},"components/PodsListComponent.html":{}}}],["styleforrunningpods",{"_index":3903,"title":{},"body":{"components/PodsListComponent.html":{}}}],["styleforrunningpods(image",{"_index":3929,"title":{},"body":{"components/PodsListComponent.html":{}}}],["styleforstatus",{"_index":3904,"title":{},"body":{"components/PodsListComponent.html":{}}}],["styleforstatus(image",{"_index":961,"title":{},"body":{"classes/Action-1.html":{}}}],["styleforstatus(pod",{"_index":3931,"title":{},"body":{"components/PodsListComponent.html":{}}}],["styleforversioncolumn(image",{"_index":990,"title":{},"body":{"classes/Action-1.html":{}}}],["styles",{"_index":1898,"title":{},"body":{"components/BuildComponent.html":{},"components/HomeComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{}}}],["styleurls",{"_index":1900,"title":{},"body":{"components/BuildComponent.html":{},"components/HomeComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/ServiceInfo.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{}}}],["sub",{"_index":4620,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["subject",{"_index":3018,"title":{},"body":{"components/HomeComponent.html":{},"classes/WebSocketService.html":{}}}],["subjectextra",{"_index":3034,"title":{},"body":{"components/HomeComponent.html":{}}}],["subscribe((responsedata",{"_index":3376,"title":{},"body":{"injectables/K8sService.html":{}}}],["subscriber",{"_index":3447,"title":{},"body":{"classes/LivePods.html":{},"classes/LivePodsCount.html":{}}}],["success",{"_index":222,"title":{},"body":{"classes/APIDefinition.html":{},"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"classes/Result.html":{},"components/StagingComponent.html":{},"injectables/TestTraceService.html":{},"classes/WmPackageInfo.html":{}}}],["successed",{"_index":4486,"title":{},"body":{"components/RuntimeScaleComponent.html":{},"components/SagImageAlerterComponent.html":{}}}],["successfully",{"_index":1005,"title":{},"body":{"classes/Action-1.html":{},"components/BuildExeComponent.html":{},"classes/ServiceInfo.html":{},"components/UploadButtonComponent.html":{}}}],["suite",{"_index":1793,"title":{},"body":{"modules/AppModule.html":{},"classes/ServiceInfo.html":{},"components/TestCaseComponent.html":{},"injectables/TestConfigService.html":{},"miscellaneous/variables.html":{}}}],["suite.ts",{"_index":5408,"title":{},"body":{"classes/TestSuite.html":{},"coverage.html":{}}}],["suite.ts:10",{"_index":5418,"title":{},"body":{"classes/TestSuite.html":{}}}],["suite.ts:11",{"_index":5417,"title":{},"body":{"classes/TestSuite.html":{}}}],["suite.ts:12",{"_index":5416,"title":{},"body":{"classes/TestSuite.html":{}}}],["suite.ts:14",{"_index":5412,"title":{},"body":{"classes/TestSuite.html":{}}}],["suite.ts:21",{"_index":5421,"title":{},"body":{"classes/TestSuite.html":{}}}],["suite.ts:30",{"_index":5422,"title":{},"body":{"classes/TestSuite.html":{}}}],["suite.ts:5",{"_index":5413,"title":{},"body":{"classes/TestSuite.html":{}}}],["suite.ts:61",{"_index":5419,"title":{},"body":{"classes/TestSuite.html":{}}}],["suite.ts:7",{"_index":5415,"title":{},"body":{"classes/TestSuite.html":{}}}],["suite.ts:8",{"_index":5414,"title":{},"body":{"classes/TestSuite.html":{}}}],["suiteid",{"_index":5227,"title":{},"body":{"classes/TestCase.html":{}}}],["summary",{"_index":429,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"components/HomeComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["super(true",{"_index":2722,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["super.select",{"_index":2724,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["support",{"_index":1499,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"modules.html":{}}}],["support/container.templates",{"_index":901,"title":{},"body":{"classes/Action-1.html":{},"modules/AppModule.html":{},"classes/ServiceInfo.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{}}}],["support/live",{"_index":3938,"title":{},"body":{"components/PodsListComponent.html":{}}}],["suspended",{"_index":3096,"title":{},"body":{"classes/K8sDeployment.html":{},"miscellaneous/enumerations.html":{}}}],["svg",{"_index":1621,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["swaggerendpoint",{"_index":174,"title":{},"body":{"classes/APIDefinition.html":{},"classes/WmPackageInfo.html":{}}}],["switchmap",{"_index":49,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/CommitInfo.html":{},"classes/DependencyWrapper.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"classes/K8sDeployment.html":{},"injectables/K8sService.html":{},"injectables/PackagesService.html":{},"classes/RepoSettings.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"injectables/Settings.html":{},"classes/Sources.html":{},"injectables/TestConfigService.html":{},"injectables/TestTraceService.html":{},"classes/Values.html":{}}}],["system",{"_index":1485,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["t",{"_index":5247,"title":{},"body":{"classes/TestCase.html":{},"classes/TestSuite.html":{}}}],["t._id",{"_index":5249,"title":{},"body":{"classes/TestCase.html":{},"classes/TestSuite.html":{}}}],["t._requesttemplate",{"_index":5255,"title":{},"body":{"classes/TestCase.html":{}}}],["t._responsetemplate",{"_index":5258,"title":{},"body":{"classes/TestCase.html":{}}}],["t.description",{"_index":2378,"title":{},"body":{"injectables/ContainerTemplates.html":{},"classes/TestCase.html":{}}}],["t.description.length",{"_index":5261,"title":{},"body":{"classes/TestCase.html":{}}}],["t.description.substring(0",{"_index":5263,"title":{},"body":{"classes/TestCase.html":{}}}],["t.description.tolowercase().replace(/\\s/g",{"_index":2379,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["t.endpoint",{"_index":4933,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["t.env",{"_index":2392,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["t.image",{"_index":2384,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["t.livenessprobe",{"_index":2386,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["t.name",{"_index":5260,"title":{},"body":{"classes/TestCase.html":{}}}],["t.ports",{"_index":2390,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["t.readinessprobe",{"_index":2388,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["t.suiteid",{"_index":5248,"title":{},"body":{"classes/TestCase.html":{}}}],["t.volumes",{"_index":2394,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["t[prop",{"_index":5259,"title":{},"body":{"classes/TestCase.html":{}}}],["tab",{"_index":1951,"title":{},"body":{"components/BuildComponent.html":{}}}],["table",{"_index":3897,"title":{},"body":{"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/TestCaseComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":5695,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":791,"title":{},"body":{"classes/Action.html":{},"classes/Action-1.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"components/SagImageAlerterComponent.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["tagimagectrl",{"_index":1061,"title":{},"body":{"components/ActionComponent.html":{}}}],["target",{"_index":467,"title":{},"body":{"classes/Action.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["targetdir",{"_index":2406,"title":{},"body":{"classes/DependencyWrapper.html":{},"injectables/PackagesService.html":{},"classes/Source.html":{},"classes/Sources.html":{}}}],["targetimage",{"_index":551,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"classes/BuildImage.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["targetimage.availableversions.unshift(builder.targetimage",{"_index":4274,"title":{},"body":{"classes/Result.html":{}}}],["targetimage.availableversions.unshift(installer.targetimage",{"_index":4258,"title":{},"body":{"classes/Result.html":{}}}],["targetimagectrl",{"_index":4590,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["targetimageformgroup",{"_index":4585,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["targetname",{"_index":4807,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["targetrepoctrl",{"_index":4589,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["targettag",{"_index":4810,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["targetversionctrl",{"_index":4591,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["tc",{"_index":2333,"title":{},"body":{"injectables/ContainerTemplates.html":{},"classes/TestSuite.html":{}}}],["template",{"_index":266,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"classes/CommitInfo.html":{},"injectables/ContainerTemplates.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"components/HomeComponent.html":{},"injectables/K8sService.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"interfaces/PropertiesChangedOwner.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["template.indexof",{"_index":2381,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["template.substring(0",{"_index":2383,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["templates/about.html",{"_index":274,"title":{},"body":{"components/AboutComponent.html":{}}}],["templates/action.html",{"_index":1046,"title":{},"body":{"components/ActionComponent.html":{}}}],["templates/build",{"_index":4571,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["templates/build.css",{"_index":1901,"title":{},"body":{"components/BuildComponent.html":{}}}],["templates/build.html",{"_index":1902,"title":{},"body":{"components/BuildComponent.html":{}}}],["templates/container",{"_index":2543,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["templates/elements/docker",{"_index":904,"title":{},"body":{"classes/Action-1.html":{},"components/DockerImageVersionsComponent.html":{}}}],["templates/home.css",{"_index":2890,"title":{},"body":{"components/HomeComponent.html":{}}}],["templates/home.html",{"_index":2891,"title":{},"body":{"components/HomeComponent.html":{}}}],["templates/k8s/deployment",{"_index":2467,"title":{},"body":{"components/DeploymentDetailsComponent.html":{}}}],["templates/k8s/pods",{"_index":3895,"title":{},"body":{"components/PodsListComponent.html":{}}}],["templates/k8s/runtime",{"_index":4386,"title":{},"body":{"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{}}}],["templates/k8s/service",{"_index":4997,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["templates/plugins/apigw",{"_index":1208,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["templates/plugins/apimg",{"_index":1336,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["templates/plugins/apipr",{"_index":1534,"title":{},"body":{"components/ApiPortalInstallerComponent.html":{}}}],["templates/plugins/msc",{"_index":3488,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["templates/plugins/um",{"_index":5446,"title":{},"body":{"components/UMInstallerComponent.html":{}}}],["templates/stage.html",{"_index":2577,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["templates/test",{"_index":4861,"title":{},"body":{"classes/ServiceInfo.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{}}}],["templateurl",{"_index":273,"title":{},"body":{"components/AboutComponent.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/ServiceInfo.html":{},"components/ServicePropertiesComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{}}}],["terminated",{"_index":2506,"title":{},"body":{"classes/DockerContainer.html":{},"classes/K8sPod.html":{},"miscellaneous/enumerations.html":{}}}],["terminating",{"_index":2505,"title":{},"body":{"classes/DockerContainer.html":{},"miscellaneous/enumerations.html":{}}}],["terracotta",{"_index":2342,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["test",{"_index":81,"title":{"classes/Test.html":{}},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"components/AboutComponent.html":{},"classes/Action.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/ServiceInfo.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"classes/Test.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"classes/TestSuite.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["test(image",{"_index":1009,"title":{},"body":{"classes/Action-1.html":{}}}],["test?testsuiteid",{"_index":5344,"title":{},"body":{"injectables/TestConfigService.html":{}}}],["test_url",{"_index":5431,"title":{},"body":{"injectables/TestTraceService.html":{}}}],["testcase",{"_index":4854,"title":{"classes/TestCase.html":{}},"body":{"classes/ServiceInfo.html":{},"classes/TestCase.html":{},"components/TestCaseComponent.html":{},"injectables/TestConfigService.html":{},"classes/TestSuite.html":{},"coverage.html":{}}}],["testcase.apiresource",{"_index":5315,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["testcase.description",{"_index":5314,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["testcase.makefromjson(t",{"_index":5427,"title":{},"body":{"classes/TestSuite.html":{}}}],["testcase.name",{"_index":5313,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["testcasechanged",{"_index":5273,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["testcasecomponent",{"_index":391,"title":{"components/TestCaseComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["testcaseformgroup",{"_index":4869,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["testcaseupdated(testcase",{"_index":4983,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["testconfigservice",{"_index":1583,"title":{"injectables/TestConfigService.html":{}},"body":{"modules/AppModule.html":{},"classes/ServiceInfo.html":{},"components/TestCaseComponent.html":{},"injectables/TestConfigService.html":{},"coverage.html":{},"overview.html":{}}}],["testconfigservice.testsuite_url",{"_index":5343,"title":{},"body":{"injectables/TestConfigService.html":{}}}],["testcountforservice(service",{"_index":4967,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["testcountfortestsuite(pckg",{"_index":4963,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["testdefinition",{"_index":1773,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["testdefinitioncomponent",{"_index":393,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/ServiceInfo.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tested",{"_index":912,"title":{},"body":{"classes/Action-1.html":{},"components/ActionComponent.html":{},"components/DockerImageVersionsComponent.html":{}}}],["testextra",{"_index":3040,"title":{},"body":{"components/HomeComponent.html":{}}}],["testextra').css({left",{"_index":2970,"title":{},"body":{"components/HomeComponent.html":{}}}],["testhistorycomponent",{"_index":395,"title":{"components/TestHistoryComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["testing",{"_index":3002,"title":{},"body":{"components/HomeComponent.html":{}}}],["testlabelfor(container",{"_index":4910,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["testlabelfor(image",{"_index":1002,"title":{},"body":{"classes/Action-1.html":{}}}],["testrun",{"_index":1772,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["testruncomponent",{"_index":397,"title":{"components/TestRunComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tests",{"_index":428,"title":{},"body":{"classes/Action.html":{},"components/ActionComponent.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"components/HomeComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"classes/Stage.html":{},"classes/Test.html":{},"injectables/TestConfigService.html":{},"classes/TestSuite.html":{},"index.html":{}}}],["tests.foreach((t",{"_index":5426,"title":{},"body":{"classes/TestSuite.html":{}}}],["tests.push(testsuite.makefromjson(t",{"_index":5348,"title":{},"body":{"injectables/TestConfigService.html":{}}}],["teststatus",{"_index":185,"title":{},"body":{"classes/APIDefinition.html":{},"classes/Action.html":{},"classes/Action-1.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"components/DockerImageVersionsComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"classes/Stage.html":{},"classes/Test.html":{},"injectables/TestTraceService.html":{},"classes/WmPackageInfo.html":{},"miscellaneous/enumerations.html":{}}}],["teststatus.failed",{"_index":226,"title":{},"body":{"classes/APIDefinition.html":{},"classes/Action-1.html":{},"classes/ServiceInfo.html":{},"injectables/TestTraceService.html":{},"classes/WmPackageInfo.html":{}}}],["teststatus.none",{"_index":231,"title":{},"body":{"classes/APIDefinition.html":{},"classes/Action-1.html":{},"classes/ServiceInfo.html":{},"injectables/TestTraceService.html":{},"classes/WmPackageInfo.html":{}}}],["teststatus.passed",{"_index":224,"title":{},"body":{"classes/APIDefinition.html":{},"classes/Action-1.html":{},"classes/ServiceInfo.html":{},"injectables/TestTraceService.html":{},"classes/WmPackageInfo.html":{}}}],["teststatus.running",{"_index":228,"title":{},"body":{"classes/APIDefinition.html":{},"classes/Action-1.html":{},"classes/ServiceInfo.html":{},"injectables/TestTraceService.html":{},"classes/WmPackageInfo.html":{}}}],["teststatus.todo",{"_index":230,"title":{},"body":{"classes/APIDefinition.html":{},"classes/Action-1.html":{},"classes/ServiceInfo.html":{},"injectables/TestTraceService.html":{},"classes/WmPackageInfo.html":{}}}],["teststatus.unknown",{"_index":1001,"title":{},"body":{"classes/Action-1.html":{}}}],["testsuite",{"_index":4857,"title":{"classes/TestSuite.html":{}},"body":{"classes/ServiceInfo.html":{},"components/TestCaseComponent.html":{},"injectables/TestConfigService.html":{},"components/TestHistoryComponent.html":{},"classes/TestSuite.html":{},"coverage.html":{}}}],["testsuite_url",{"_index":5334,"title":{},"body":{"injectables/TestConfigService.html":{}}}],["testsuites[0",{"_index":4922,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["testsuites[0].tests.size",{"_index":4897,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["testtraceservice",{"_index":1584,"title":{"injectables/TestTraceService.html":{}},"body":{"modules/AppModule.html":{},"injectables/TestTraceService.html":{},"coverage.html":{},"overview.html":{}}}],["testtraceservice.test_url",{"_index":5442,"title":{},"body":{"injectables/TestTraceService.html":{}}}],["testtypectrl",{"_index":5270,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["tex/plain",{"_index":4143,"title":{},"body":{"injectables/ResourceService.html":{}}}],["text",{"_index":1937,"title":{},"body":{"components/BuildComponent.html":{},"components/HomeComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/TestCaseComponent.html":{}}}],["text/xml",{"_index":2286,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["this.$element",{"_index":2153,"title":{},"body":{"directives/CancelCdkDrag.html":{}}}],["this.$element.addeventlistener('mousedown",{"_index":2159,"title":{},"body":{"directives/CancelCdkDrag.html":{}}}],["this.$element.removeeventlistener('keydown",{"_index":2158,"title":{},"body":{"directives/CancelCdkDrag.html":{}}}],["this.$element.removeeventlistener('mousedown",{"_index":2156,"title":{},"body":{"directives/CancelCdkDrag.html":{}}}],["this.__allimages",{"_index":4323,"title":{},"body":{"classes/Result.html":{}}}],["this.__allimages.foreach((a",{"_index":4346,"title":{},"body":{"classes/Result.html":{}}}],["this.__allimages.length",{"_index":4319,"title":{},"body":{"classes/Result.html":{}}}],["this.__allimages.push(a",{"_index":4325,"title":{},"body":{"classes/Result.html":{}}}],["this.__allimages.push(targetimage",{"_index":4257,"title":{},"body":{"classes/Result.html":{}}}],["this.__websocketservice",{"_index":5585,"title":{},"body":{"classes/WebSocketService.html":{}}}],["this.__websocketservice._arg",{"_index":5588,"title":{},"body":{"classes/WebSocketService.html":{}}}],["this.__websocketservice.close",{"_index":5589,"title":{},"body":{"classes/WebSocketService.html":{}}}],["this.__websocketservice.isactive",{"_index":5586,"title":{},"body":{"classes/WebSocketService.html":{}}}],["this.__websocketservice.path",{"_index":5587,"title":{},"body":{"classes/WebSocketService.html":{}}}],["this._allimages(refresh",{"_index":4210,"title":{},"body":{"classes/Result.html":{}}}],["this._baseimages",{"_index":4213,"title":{},"body":{"classes/Result.html":{}}}],["this._baseimages.length",{"_index":4208,"title":{},"body":{"classes/Result.html":{}}}],["this._baseimages.unshift(installer.targetimage",{"_index":4260,"title":{},"body":{"classes/Result.html":{}}}],["this._cache",{"_index":3104,"title":{},"body":{"classes/K8sDeployment.html":{},"injectables/K8sService.html":{}}}],["this._cache.get(namespace",{"_index":3329,"title":{},"body":{"injectables/K8sService.html":{}}}],["this._cache.length",{"_index":3100,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["this._cache.set('default",{"_index":3403,"title":{},"body":{"injectables/K8sService.html":{}}}],["this._cache.set('run",{"_index":3415,"title":{},"body":{"injectables/K8sService.html":{}}}],["this._cache.set(filter",{"_index":3384,"title":{},"body":{"injectables/K8sService.html":{}}}],["this._cachevalues",{"_index":4062,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["this._configservice.build(name).subscribe((build",{"_index":4734,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this._configservice.builds().subscribe((b",{"_index":4632,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this._configservice.deletebuild(this.currentbuild.name).subscribe((success",{"_index":4725,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this._configservice.runtimetemplate(template).subscribe((t",{"_index":2376,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["this._configservice.uploadbuild(this.currentbuild).subscribe((success",{"_index":4719,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this._configuredgitrepos.push(r",{"_index":2751,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this._contenttype",{"_index":3891,"title":{},"body":{"classes/Payload.html":{}}}],["this._currentextra",{"_index":2946,"title":{},"body":{"components/HomeComponent.html":{}}}],["this._currentextra).animate",{"_index":2947,"title":{},"body":{"components/HomeComponent.html":{}}}],["this._currentextra).css({display",{"_index":2950,"title":{},"body":{"components/HomeComponent.html":{}}}],["this._custombuildercomponent",{"_index":4803,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this._custombuildercomponent.setlicensefile(lic",{"_index":4760,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this._customimages",{"_index":4224,"title":{},"body":{"classes/Result.html":{}}}],["this._customimages.length",{"_index":4221,"title":{},"body":{"classes/Result.html":{}}}],["this._customimages.push(targetimage",{"_index":4273,"title":{},"body":{"classes/Result.html":{}}}],["this._customimages.unshift(builder.targetimage",{"_index":4275,"title":{},"body":{"classes/Result.html":{}}}],["this._data",{"_index":2723,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this._datasource",{"_index":3460,"title":{},"body":{"classes/LivePods.html":{},"classes/LivePodsCount.html":{}}}],["this._datasource.push(p",{"_index":3477,"title":{},"body":{"classes/LivePods.html":{},"classes/LivePodsCount.html":{}}}],["this._deploymentid",{"_index":3483,"title":{},"body":{"classes/LivePods.html":{},"classes/LivePodsCount.html":{}}}],["this._dialog.open(buildexecomponent",{"_index":4824,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this._dialog.open(editcontainercomponent",{"_index":2604,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this._dialog.open(sagimagealertercomponent",{"_index":4707,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this._dialogref",{"_index":4528,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["this._dialogref.close",{"_index":4542,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["this._displayedcolumnsbase",{"_index":956,"title":{},"body":{"classes/Action-1.html":{},"components/PodsListComponent.html":{}}}],["this._displayedcolumnsbase.pop",{"_index":3941,"title":{},"body":{"components/PodsListComponent.html":{}}}],["this._displayedcolumnsbasemin",{"_index":957,"title":{},"body":{"classes/Action-1.html":{}}}],["this._displayedcolumnscustom",{"_index":958,"title":{},"body":{"classes/Action-1.html":{}}}],["this._displayedcolumnscustommin",{"_index":959,"title":{},"body":{"classes/Action-1.html":{}}}],["this._displayededitcustom",{"_index":960,"title":{},"body":{"classes/Action-1.html":{}}}],["this._div.nativeelement.innerhtml",{"_index":5372,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["this._dockeremail",{"_index":4181,"title":{},"body":{"classes/Result.html":{}}}],["this._dockeremail).append('dockeruser",{"_index":4365,"title":{},"body":{"classes/Result.html":{}}}],["this._dockerhost",{"_index":4179,"title":{},"body":{"classes/Result.html":{},"injectables/TestTraceService.html":{}}}],["this._dockerhost).pipe(map",{"_index":4197,"title":{},"body":{"classes/Result.html":{}}}],["this._dockerimageservice.baseimages(true).subscribe((d",{"_index":936,"title":{},"body":{"classes/Action-1.html":{}}}],["this._dockerimageservice.customimages(true).subscribe((d",{"_index":938,"title":{},"body":{"classes/Action-1.html":{}}}],["this._dockerimageservice.pullimage(image.tag()).subscribe((result",{"_index":1038,"title":{},"body":{"classes/Action-1.html":{}}}],["this._dockerimageservice.pushimage(image).subscribe((result",{"_index":1026,"title":{},"body":{"classes/Action-1.html":{}}}],["this._dockerimageservice.sagimages(true).subscribe((d",{"_index":932,"title":{},"body":{"classes/Action-1.html":{}}}],["this._dockerpassword",{"_index":4185,"title":{},"body":{"classes/Result.html":{}}}],["this._dockerservice.build(this.build",{"_index":2094,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["this._dockerservice.closelog",{"_index":2099,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["this._dockerservice.containerlog(this.containerid).subscribe((result",{"_index":2084,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["this._dockerservice.customimages(true",{"_index":4629,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this._dockerservice.downloadbuild(this.currentbuild",{"_index":4819,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this._dockerservice.install(this.installer",{"_index":2086,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["this._dockerservice.run(this.run",{"_index":2097,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["this._dockerservice.sagimages(true",{"_index":4625,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this._dockerservice.versions(action.image.uniquename()).subscribe((images",{"_index":4527,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["this._dockerservice.versions(name).subscribe((images",{"_index":4776,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this._dockeruserid",{"_index":4183,"title":{},"body":{"classes/Result.html":{}}}],["this._dockeruserid).append('dockerpassword",{"_index":4366,"title":{},"body":{"classes/Result.html":{}}}],["this._emitter.emit(uploadingfile",{"_index":3774,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["this._endpoint",{"_index":3893,"title":{},"body":{"classes/Payload.html":{}}}],["this._filteralllist(filtertype",{"_index":4326,"title":{},"body":{"classes/Result.html":{}}}],["this._formbuilder",{"_index":2605,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this._formbuilder.group",{"_index":1164,"title":{},"body":{"components/ActionComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{}}}],["this._frame.nativeelement.contentdocument.location.pathname",{"_index":5366,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["this._gitapiurl",{"_index":2228,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"classes/SourceWrapper.html":{}}}],["this._gitapiurl.endswith",{"_index":2238,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["this._gitapiurl.length",{"_index":2240,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["this._gitapiurl.substring(0",{"_index":2239,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["this._gitispacpassword",{"_index":2236,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["this._gitname",{"_index":2230,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["this._gitpassword",{"_index":2234,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["this._gitservice.repositories(this.selectedgit).subscribe((r",{"_index":2788,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this._gitservice.values().subscribe((v",{"_index":2742,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this._gittoken",{"_index":2747,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this._gittype",{"_index":2226,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["this._gituser",{"_index":2232,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"classes/SourceWrapper.html":{}}}],["this._groupimagesbyversion(results",{"_index":4214,"title":{},"body":{"classes/Result.html":{}}}],["this._haschanges",{"_index":3466,"title":{},"body":{"classes/LivePods.html":{},"classes/LivePodsCount.html":{}}}],["this._http.get(all",{"_index":2251,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["this._http.get(url",{"_index":2268,"title":{},"body":{"classes/CommitInfo.html":{},"classes/DependencyWrapper.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"injectables/K8sService.html":{},"injectables/PackagesService.html":{},"classes/RepoSettings.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"injectables/Settings.html":{},"classes/Sources.html":{},"injectables/TestConfigService.html":{},"injectables/TestTraceService.html":{},"classes/Values.html":{}}}],["this._http.patch(url",{"_index":3349,"title":{},"body":{"injectables/K8sService.html":{}}}],["this._http.post(url",{"_index":126,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/DependencyWrapper.html":{},"injectables/PackagesService.html":{},"classes/RepoSettings.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"injectables/Settings.html":{},"classes/Sources.html":{},"classes/Values.html":{}}}],["this._http.put(url",{"_index":3375,"title":{},"body":{"injectables/K8sService.html":{},"classes/Result.html":{}}}],["this._id",{"_index":4622,"title":{},"body":{"components/SagImageAlerterComponent.html":{},"classes/TestCase.html":{},"classes/TestSuite.html":{}}}],["this._ignore",{"_index":2663,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this._ignorevaluechanges",{"_index":1135,"title":{},"body":{"components/ActionComponent.html":{},"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this._ignorevalueschange",{"_index":3545,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{},"components/SagImageAlerterComponent.html":{}}}],["this._image",{"_index":4525,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["this._image(name",{"_index":4198,"title":{},"body":{"classes/Result.html":{}}}],["this._image.latestversion().version",{"_index":4539,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["this._image.teststatus",{"_index":4537,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["this._inboundrouter.params.subscribe(params",{"_index":4621,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this._k8sservice.deployments(settings.k8snamespace",{"_index":4415,"title":{},"body":{"components/RuntimeDetailsComponent.html":{}}}],["this._k8sservice.namespaces(v.k8surl",{"_index":4454,"title":{},"body":{"components/RuntimeK8sComponent.html":{}}}],["this._k8sservice.podsforapplabel(this._namespace",{"_index":3482,"title":{},"body":{"classes/LivePods.html":{},"classes/LivePodsCount.html":{}}}],["this._k8sservice.rollbacklastchange(this.selecteddeployment).subscribe(result",{"_index":4548,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["this._k8sservice.scalepods(this.selecteddeployment",{"_index":4483,"title":{},"body":{"components/RuntimeScaleComponent.html":{}}}],["this._k8sservice.updateversion(this.selecteddeployment).subscribe(result",{"_index":4544,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["this._k8stoken",{"_index":3322,"title":{},"body":{"injectables/K8sService.html":{}}}],["this._k8surl",{"_index":3320,"title":{},"body":{"injectables/K8sService.html":{}}}],["this._keyedimages",{"_index":4174,"title":{},"body":{"classes/Result.html":{}}}],["this._keyedimages.get(builder.targetimage.uniquename",{"_index":4271,"title":{},"body":{"classes/Result.html":{}}}],["this._keyedimages.get(d.uniquename",{"_index":4331,"title":{},"body":{"classes/Result.html":{}}}],["this._keyedimages.get(installer.targetimage.uniquename",{"_index":4253,"title":{},"body":{"classes/Result.html":{}}}],["this._keyedimages.get(name",{"_index":4316,"title":{},"body":{"classes/Result.html":{}}}],["this._keyedimages.get(uniquename",{"_index":4309,"title":{},"body":{"classes/Result.html":{}}}],["this._keyedimages.set(d.uniquename",{"_index":4332,"title":{},"body":{"classes/Result.html":{}}}],["this._keyedimages.set(targetimage.uniquename",{"_index":4255,"title":{},"body":{"classes/Result.html":{}}}],["this._keyedimages.size",{"_index":4195,"title":{},"body":{"classes/Result.html":{}}}],["this._keyedimages.values",{"_index":4337,"title":{},"body":{"classes/Result.html":{}}}],["this._location.path",{"_index":2934,"title":{},"body":{"components/HomeComponent.html":{}}}],["this._makepackage(responsedata",{"_index":2434,"title":{},"body":{"classes/DependencyWrapper.html":{},"injectables/PackagesService.html":{},"classes/Sources.html":{}}}],["this._mapcontainerresponse(filtervalue",{"_index":4231,"title":{},"body":{"classes/Result.html":{}}}],["this._mapimagesresponse(filtervalue",{"_index":4206,"title":{},"body":{"classes/Result.html":{}}}],["this._mappackagesresponse(dir",{"_index":2269,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["this._mappodsresponse(namespace",{"_index":3338,"title":{},"body":{"injectables/K8sService.html":{}}}],["this._mapreporesponse(this._gitapiurl",{"_index":2253,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["this._mapresponse(namespace",{"_index":3333,"title":{},"body":{"injectables/K8sService.html":{}}}],["this._mapresponse(responsedata",{"_index":129,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["this._mapresponsenamespace(responsedata",{"_index":3328,"title":{},"body":{"injectables/K8sService.html":{}}}],["this._matdialog.open(dockerimageversionscomponent",{"_index":4529,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["this._origin",{"_index":3890,"title":{},"body":{"classes/Payload.html":{}}}],["this._packages.length",{"_index":2259,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["this._packagesservice.index(this.selectedrepo.name",{"_index":2818,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this._pleasestop",{"_index":3463,"title":{},"body":{"classes/LivePods.html":{},"classes/LivePodsCount.html":{}}}],["this._podservice",{"_index":3950,"title":{},"body":{"components/PodsListComponent.html":{}}}],["this._podssource",{"_index":3944,"title":{},"body":{"components/PodsListComponent.html":{}}}],["this._podssource.appid",{"_index":3945,"title":{},"body":{"components/PodsListComponent.html":{}}}],["this._podssource.datasource",{"_index":3953,"title":{},"body":{"components/PodsListComponent.html":{}}}],["this._podssource.refreshpods().subscribe((podscount",{"_index":3951,"title":{},"body":{"components/PodsListComponent.html":{}}}],["this._podssource.stop",{"_index":3946,"title":{},"body":{"components/PodsListComponent.html":{}}}],["this._queue.filter((f",{"_index":3752,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["this._queue.indexof(file",{"_index":3765,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["this._refreshinterval",{"_index":3471,"title":{},"body":{"classes/LivePods.html":{},"classes/LivePodsCount.html":{}}}],["this._refreshpods(observer",{"_index":3468,"title":{},"body":{"classes/LivePods.html":{},"classes/LivePodsCount.html":{}}}],["this._resources.downloadresource(\"licenses",{"_index":4814,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this._resources.downloadresource(\"properties",{"_index":3563,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["this._resources.resourcesfortype(\"licenses\").subscribe((p",{"_index":1371,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{},"components/SagImageAlerterComponent.html":{}}}],["this._resources.resourcesfortype(\"properties\").subscribe((p",{"_index":3523,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["this._restore().pipe(share",{"_index":4050,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["this._route.snapshot.url.tostring().indexof(\"scale",{"_index":4418,"title":{},"body":{"components/RuntimeDetailsComponent.html":{}}}],["this._route.snapshot.url.tostring().indexof(\"update",{"_index":4422,"title":{},"body":{"components/RuntimeDetailsComponent.html":{}}}],["this._router.navigate([\"/runtime",{"_index":4426,"title":{},"body":{"components/RuntimeDetailsComponent.html":{}}}],["this._router.navigate(['/build",{"_index":2951,"title":{},"body":{"components/HomeComponent.html":{}}}],["this._router.navigate(['/deploy",{"_index":2955,"title":{},"body":{"components/HomeComponent.html":{}}}],["this._router.navigate(['/image",{"_index":2954,"title":{},"body":{"components/HomeComponent.html":{}}}],["this._router.navigate(['/install",{"_index":2952,"title":{},"body":{"components/HomeComponent.html":{}}}],["this._router.navigate(['/package",{"_index":2953,"title":{},"body":{"components/HomeComponent.html":{}}}],["this._router.navigate(['/run",{"_index":2956,"title":{},"body":{"components/HomeComponent.html":{}}}],["this._router.navigate(['/solution",{"_index":3967,"title":{},"body":{"components/PodsListComponent.html":{}}}],["this._router.navigate(['/stage",{"_index":2957,"title":{},"body":{"components/HomeComponent.html":{}}}],["this._router.navigate(['/test",{"_index":945,"title":{},"body":{"classes/Action-1.html":{},"components/HomeComponent.html":{}}}],["this._router.navigate(['/testdefinition",{"_index":2958,"title":{},"body":{"components/HomeComponent.html":{}}}],["this._router.navigate(['/testrun",{"_index":2959,"title":{},"body":{"components/HomeComponent.html":{}}}],["this._router.navigate(['image",{"_index":1935,"title":{},"body":{"components/BuildComponent.html":{}}}],["this._router.navigate(['install",{"_index":1934,"title":{},"body":{"components/BuildComponent.html":{}}}],["this._sagimages",{"_index":4219,"title":{},"body":{"classes/Result.html":{}}}],["this._sagimages.length",{"_index":4216,"title":{},"body":{"classes/Result.html":{}}}],["this._sagimages.push(targetimage",{"_index":4256,"title":{},"body":{"classes/Result.html":{}}}],["this._save",{"_index":1189,"title":{},"body":{"components/ActionComponent.html":{},"components/EditContainerComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/StagingComponent.html":{}}}],["this._selectedversion",{"_index":1014,"title":{},"body":{"classes/Action-1.html":{},"components/DockerImageVersionsComponent.html":{}}}],["this._selectedversion.version",{"_index":2538,"title":{},"body":{"components/DockerImageVersionsComponent.html":{}}}],["this._send(message",{"_index":5595,"title":{},"body":{"classes/WebSocketService.html":{}}}],["this._service",{"_index":3892,"title":{},"body":{"classes/Payload.html":{}}}],["this._setctrlversion(\"0.0.1",{"_index":4782,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this._setctrlversion(\"0.1",{"_index":4784,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this._setctrlversion(\"1.0",{"_index":4786,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this._setctrlversion(nextversion",{"_index":4779,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this._setctrlversion(this.currentbuild.targetimage.version",{"_index":4750,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this._setmodel(p",{"_index":2822,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this._setmodel(packages",{"_index":2801,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this._settings.gotolastviewedpage(this._router",{"_index":2941,"title":{},"body":{"components/HomeComponent.html":{}}}],["this._settings.setcurrentnamespace(this.namespace",{"_index":4459,"title":{},"body":{"components/RuntimeK8sComponent.html":{}}}],["this._settings.setcurrentpage(\"build",{"_index":1931,"title":{},"body":{"components/BuildComponent.html":{}}}],["this._settings.setcurrentpage(\"image",{"_index":4634,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this._settings.setcurrentpage(\"k8s",{"_index":4458,"title":{},"body":{"components/RuntimeK8sComponent.html":{}}}],["this._settings.values",{"_index":2242,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["this._settings.values().subscribe((settings",{"_index":4413,"title":{},"body":{"components/RuntimeDetailsComponent.html":{}}}],["this._settings.values().subscribe((v",{"_index":1929,"title":{},"body":{"components/BuildComponent.html":{},"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"injectables/K8sService.html":{},"classes/Result.html":{},"components/RuntimeK8sComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/SourceWrapper.html":{},"injectables/TestTraceService.html":{}}}],["this._settings.values().subscribe(values",{"_index":2939,"title":{},"body":{"components/HomeComponent.html":{}}}],["this._setupform",{"_index":1127,"title":{},"body":{"components/ActionComponent.html":{},"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this._showextrainfo(name",{"_index":2945,"title":{},"body":{"components/HomeComponent.html":{}}}],["this._snackbar.open(\"pulling",{"_index":1037,"title":{},"body":{"classes/Action-1.html":{}}}],["this._snackbar.open(\"pushing",{"_index":1024,"title":{},"body":{"classes/Action-1.html":{}}}],["this._snackbar.open(\"update",{"_index":4485,"title":{},"body":{"components/RuntimeScaleComponent.html":{}}}],["this._snackbar.open(message",{"_index":1032,"title":{},"body":{"classes/Action-1.html":{}}}],["this._source",{"_index":2756,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this._source.gitrepository",{"_index":2758,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this._source.include",{"_index":2847,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this._source.include.push(p.name",{"_index":2857,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this._testsuiteconfig.gettestsuitedefinition(p.name).subscribe((testsuites",{"_index":4895,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["this._testsuiteconfig.gettestsuitedefinition(packageinfo.name).subscribe((testsuites",{"_index":4920,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["this._testsuiteconfig.packagedetails(packageinfo.name).subscribe((p",{"_index":4925,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["this._testsuiteconfig.packages().subscribe((p",{"_index":4889,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["this._top.push(r.path",{"_index":1835,"title":{},"body":{"modules/AppModule.html":{}}}],["this._values",{"_index":2225,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["this._values.dockeremail",{"_index":4105,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["this._values.dockerhost",{"_index":4096,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["this._values.dockerpassword",{"_index":4109,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["this._values.dockeruserid",{"_index":4107,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["this._values.empowerencryptedpassword",{"_index":4115,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["this._values.empowerpassword",{"_index":4113,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["this._values.empoweruserid",{"_index":4111,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["this._values.gitapiurl",{"_index":4076,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["this._values.gitispacpassword",{"_index":4087,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["this._values.gitname",{"_index":4083,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["this._values.gitpassword",{"_index":4085,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["this._values.gitrepos",{"_index":4089,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["this._values.gitrepos.push(new",{"_index":4091,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["this._values.gittype",{"_index":4071,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["this._values.gituri",{"_index":4070,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["this._values.gituser",{"_index":4081,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["this._values.imageprefix",{"_index":4098,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["this._values.k8snamespace",{"_index":4056,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["this._values.k8stoken",{"_index":4103,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["this._values.k8surl",{"_index":4100,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["this._values.lastviewedpage",{"_index":4052,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["this._values.lastviewedpagearg",{"_index":4053,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["this._valuesloaded",{"_index":4046,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["this._versions(uniquename",{"_index":4227,"title":{},"body":{"classes/Result.html":{}}}],["this._ws",{"_index":5582,"title":{},"body":{"classes/WebSocketService.html":{}}}],["this._ws.close",{"_index":5584,"title":{},"body":{"classes/WebSocketService.html":{}}}],["this._ws.onclose",{"_index":5602,"title":{},"body":{"classes/WebSocketService.html":{}}}],["this._ws.onerror",{"_index":5606,"title":{},"body":{"classes/WebSocketService.html":{}}}],["this._ws.onmessage",{"_index":5599,"title":{},"body":{"classes/WebSocketService.html":{}}}],["this._ws.readystate",{"_index":5591,"title":{},"body":{"classes/WebSocketService.html":{}}}],["this._ws.send(message",{"_index":5597,"title":{},"body":{"classes/WebSocketService.html":{}}}],["this.abort",{"_index":3708,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["this.action",{"_index":903,"title":{},"body":{"classes/Action-1.html":{}}}],["this.action.active",{"_index":1188,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.action.apideploytype",{"_index":1138,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.action.apimaturity",{"_index":1143,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.action.apistage",{"_index":1140,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.action.dockeraction",{"_index":1180,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.action.dockertag",{"_index":1183,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.action.isactive",{"_index":1187,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.action.pipelineaction",{"_index":1148,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.action.runtests",{"_index":1168,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.action.stop",{"_index":1171,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.actioncomponent",{"_index":4419,"title":{},"body":{"components/RuntimeDetailsComponent.html":{}}}],["this.actionimagectrl",{"_index":1159,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.actionimagectrl.dirty",{"_index":1179,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.actionimagectrl.setvalue(this.action.dockeraction",{"_index":1145,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.actionimagectrl.value",{"_index":1181,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.actions",{"_index":4430,"title":{},"body":{"components/RuntimeDetailsComponent.html":{}}}],["this.actions.viewcontainerref",{"_index":4431,"title":{},"body":{"components/RuntimeDetailsComponent.html":{}}}],["this.active",{"_index":695,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["this.activectrl",{"_index":2648,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.activectrl.value",{"_index":2650,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.addmysqldriverctrl",{"_index":3532,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["this.addmysqldriverctrl.dirty",{"_index":3552,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["this.addmysqldriverctrl.markaspristine",{"_index":3555,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["this.alias",{"_index":5499,"title":{},"body":{"components/UploadButtonComponent.html":{}}}],["this.allowedextensions",{"_index":3725,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["this.apiactionsnegative",{"_index":1131,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.apiactionspositive",{"_index":1132,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.apiactivated.emit(false",{"_index":2823,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this.apiactivated.emit(true",{"_index":2802,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this.apictrl",{"_index":5298,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["this.apideployctrl",{"_index":1153,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.apideployctrl.dirty",{"_index":1173,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.apideployctrl.setvalue(this.action.apideploytype",{"_index":1137,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.apideployctrl.value",{"_index":1133,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.apideploytype",{"_index":778,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["this.apigatewaypasswordctrl",{"_index":1392,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.apigatewaypasswordctrl.dirty",{"_index":1419,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.apigatewaypasswordctrl.markaspristine",{"_index":1422,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.apigatewaypasswordctrl.value",{"_index":1421,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.apigatewayurlctrl",{"_index":1388,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.apigatewayurlctrl.dirty",{"_index":1411,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.apigatewayurlctrl.markaspristine",{"_index":1414,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.apigatewayurlctrl.value",{"_index":1413,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.apigatewayuserctrl",{"_index":1390,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.apigatewayuserctrl.dirty",{"_index":1415,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.apigatewayuserctrl.markaspristine",{"_index":1418,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.apigatewayuserctrl.value",{"_index":1417,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.apimaturity",{"_index":781,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["this.apimaturityctrl",{"_index":1156,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.apimaturityctrl.dirty",{"_index":1177,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.apimaturityctrl.setvalue(this.action.apimaturity",{"_index":1142,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.apimaturityctrl.value",{"_index":1178,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.apis",{"_index":447,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["this.apistage",{"_index":787,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["this.apistagectrl",{"_index":1134,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.apistagectrl.dirty",{"_index":1175,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.apistagectrl.disable",{"_index":1151,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.apistagectrl.enable",{"_index":1152,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.apistagectrl.setvalue(this.action.apistage",{"_index":1139,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.apistagectrl.value",{"_index":1176,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.appid",{"_index":3458,"title":{},"body":{"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"components/PodsListComponent.html":{}}}],["this.applytemplate(container",{"_index":2367,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["this.appnamectrl",{"_index":5042,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["this.appnamectrl.dirty",{"_index":5060,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["this.appnamectrl.markaspristine",{"_index":5063,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["this.appnamectrl.value",{"_index":5062,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["this.archivewmimage",{"_index":2070,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["this.archivewmimage).subscribe(result",{"_index":2087,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["this.args",{"_index":562,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["this.authtoken",{"_index":3747,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["this.authtokenprefix",{"_index":3745,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["this.autoupload",{"_index":3733,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["this.availablereplicas",{"_index":3114,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["this.baseimagectrl",{"_index":4636,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.baseimagectrl.setvalue(build.sourceimage.name",{"_index":4739,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.baseimagectrl.setvalue(image.name",{"_index":4704,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.baseimageformgroup",{"_index":4652,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.baseimageformgroup.valuechanges.subscribe(values",{"_index":4658,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.baseimages",{"_index":4627,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.baseimageselected(this.imagefor(this._id",{"_index":4628,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.build",{"_index":2072,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["this.build.targetimage.tag",{"_index":2103,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["this.buildbutton.disabled",{"_index":4816,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.buildcommands",{"_index":561,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["this.buildctrl",{"_index":4637,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.buildctrl.dirty",{"_index":4659,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.buildctrl.setvalue(this.currentbuild.name",{"_index":4723,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.buildctrl.value",{"_index":4718,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.builderdisplayableentries",{"_index":4793,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.builderdisplayableentries.push(result.value",{"_index":4795,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.builderdisplayableproperties",{"_index":4806,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.builderdisplayableproperties.get(this.builderdisplayableproperties.keys().next().value",{"_index":4797,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.builderdisplayableproperties.keys",{"_index":4792,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.builderformgroup",{"_index":4653,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.buildnamectrl",{"_index":4646,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.buildnamectrl.dirty",{"_index":4694,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.buildnamectrl.setvalue(name",{"_index":4732,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.buildnamectrl.setvalue(this.currentbuild.name",{"_index":4747,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.buildnamectrl.value",{"_index":4696,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.buildonstart",{"_index":807,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["this.builds",{"_index":4633,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.builds.push(this.currentbuild.name",{"_index":4720,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.builds.splice(this.indexoftemplate(this.currentbuild.name",{"_index":4726,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.buildservicectrl",{"_index":2630,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.buildservicectrl.dirty",{"_index":2641,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.buildservicectrl.setvalue(this.stage",{"_index":2625,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.buildservicectrl.value",{"_index":2642,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.buildtemplatename",{"_index":4695,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.builduserctrl",{"_index":4649,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.builduserctrl.dirty",{"_index":4663,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.builduserctrl.markaspristine",{"_index":4664,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.builduserctrl.setvalue(this.currentbuild.builduser",{"_index":4745,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.builduserctrl.value",{"_index":4666,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.buttonclass",{"_index":5492,"title":{},"body":{"components/UploadButtonComponent.html":{}}}],["this.change.emit(this.action",{"_index":1190,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.choices",{"_index":520,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["this.columns",{"_index":955,"title":{},"body":{"classes/Action-1.html":{}}}],["this.commandsformgroup",{"_index":4657,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.comments",{"_index":2082,"title":{},"body":{"components/BuildExeComponent.html":{},"components/SagImageAlerterComponent.html":{}}}],["this.comments).subscribe(result",{"_index":2095,"title":{},"body":{"components/BuildExeComponent.html":{},"components/SagImageAlerterComponent.html":{}}}],["this.commentsctrl",{"_index":4639,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.commentsctrl.dirty",{"_index":4692,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.commentsctrl.value",{"_index":4693,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.commitformgroup",{"_index":4656,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.commitformgroup.valuechanges.subscribe(values",{"_index":4691,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.completioncode",{"_index":2089,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["this.componentfactoryresolver.resolvecomponentfactory(this.actioncomponent",{"_index":4429,"title":{},"body":{"components/RuntimeDetailsComponent.html":{}}}],["this.condition",{"_index":157,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["this.conditions",{"_index":519,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["this.configforrepo(this.selectedrepo.name",{"_index":2763,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this.configforrepo(this.selectedrepo.name).packages",{"_index":2819,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this.confirmupdate",{"_index":4546,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["this.container",{"_index":2644,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.container.active",{"_index":2664,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.container.hostname",{"_index":2665,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.container.hostname.length",{"_index":2674,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.container.name",{"_index":2676,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.container.ports[0].external",{"_index":2673,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.container.ports[0].internal",{"_index":2671,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.containerid",{"_index":2058,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["this.containername",{"_index":2059,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["this.containernamectrl",{"_index":2627,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.containernamectrl.dirty",{"_index":2637,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.containernamectrl.setvalue(this.stage",{"_index":2621,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.containernamectrl.value",{"_index":2638,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.containers",{"_index":837,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["this.containers.foreach((c",{"_index":858,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["this.containers.push(image",{"_index":3196,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["this.containers.push(m1",{"_index":3159,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["this.containers.push(m2",{"_index":3160,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["this.cors",{"_index":3717,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["this.creationdate",{"_index":3173,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["this.currentbuild",{"_index":4635,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.currentbuild.builduser",{"_index":4665,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.currentbuild.deploymenttype",{"_index":4805,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.currentbuild.entryuser",{"_index":4669,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.currentbuild.filefortype(\"licenses",{"_index":4742,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.currentbuild.name",{"_index":4717,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.currentbuild.sourceimage",{"_index":4700,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.currentbuild.sourceimage.availableversions.foreach((v",{"_index":4711,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.currentbuild.sourceimage.availableversions.length",{"_index":4710,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.currentbuild.sourceimage.name",{"_index":4701,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.currentbuild.sourceimage.repository",{"_index":4817,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.currentbuild.sourceimage.tag",{"_index":4809,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.currentbuild.targetimage",{"_index":4678,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.currentbuild.targetimage.dedicatedrepository",{"_index":4755,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.currentbuild.targetimage.name",{"_index":4673,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.currentbuild.targetimage.repository",{"_index":4736,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.currentbuild.targetimage.setdedicatedrepository(this.dedicatedrepoctrl.value",{"_index":4681,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.currentbuild.targetimage.setname(this.targetimagectrl.value",{"_index":4769,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.currentbuild.targetimage.setname(this.targetimagectrl.value.name",{"_index":4682,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.currentbuild.targetimage.setrepository(this.targetrepoctrl.value",{"_index":4675,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.currentbuild.targetimage.setversion(this.targetversionctrl.value",{"_index":4686,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.currentinstaller",{"_index":3525,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["this.currentinstaller.buildcommands",{"_index":3561,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["this.currentinstaller.buildcommands.push(file",{"_index":3562,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["this.currentinstaller.buildcommands.push(glob",{"_index":3592,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["this.currentinstaller.buildcommands.push(touchcache",{"_index":3575,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["this.currentinstaller.buildcommands.push(touchdb",{"_index":3567,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["this.currentinstaller.buildcommands.splice(this.currentinstaller.buildcommands.indexof(file",{"_index":3596,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["this.currentinstaller.filefortype(\"properties",{"_index":3526,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["this.currentinstaller.filefortype(\"support",{"_index":3593,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["this.currentinstaller.filefortype(\"touchcache",{"_index":3574,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["this.currentinstaller.filefortype(\"touchdb",{"_index":3566,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["this.currentinstaller.filewithdescription(\"build",{"_index":3582,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["this.currentinstaller.filewithdescription(\"licenses",{"_index":3557,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["this.currentinstaller.producttype",{"_index":3550,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["this.currenttargetversionexists",{"_index":4749,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.currenttestsuite",{"_index":4921,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["this.currenttestsuite.id",{"_index":4980,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["this.currenttestsuite.tests.delete(testcase.id",{"_index":4989,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["this.currenttestsuite.tests.foreach((t",{"_index":4932,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["this.currenttestsuite.tests.get(key.value).apimethod",{"_index":4956,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["this.currenttestsuite.tests.get(key.value).endpoint",{"_index":4954,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["this.currenttestsuite.tests.keys",{"_index":4949,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["this.currenttestsuite.tests.set(this.selectedtestcase.id",{"_index":4987,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["this.currenttestsuiteendpoints",{"_index":4951,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["this.currenttestsuiteendpoints.foreach((e",{"_index":4993,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["this.currenttestsuiteendpoints.push(v",{"_index":4961,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["this.currentversion",{"_index":1013,"title":{},"body":{"classes/Action-1.html":{},"components/DockerImageVersionsComponent.html":{}}}],["this.customheaders",{"_index":3741,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["this.customheaders[key",{"_index":3791,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["this.customimagecounter",{"_index":1933,"title":{},"body":{"components/BuildComponent.html":{}}}],["this.customimages",{"_index":4630,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.customimages(false",{"_index":4196,"title":{},"body":{"classes/Result.html":{}}}],["this.customimages(true).pipe(map((imgs",{"_index":4226,"title":{},"body":{"classes/Result.html":{}}}],["this.customimages.push(i.name",{"_index":4631,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.data",{"_index":3729,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["this.datasource",{"_index":933,"title":{},"body":{"classes/Action-1.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/UMInstallerComponent.html":{}}}],["this.datasource).producttype",{"_index":1375,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.datasource.args.get(\"elkporthttp",{"_index":1291,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["this.datasource.args.get(\"elkporttcp",{"_index":1294,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["this.datasource.args.get(\"realm",{"_index":5461,"title":{},"body":{"components/UMInstallerComponent.html":{}}}],["this.datasource.args.get(\"secureport",{"_index":1546,"title":{},"body":{"components/ApiPortalInstallerComponent.html":{}}}],["this.datasource.args.get(\"uiport",{"_index":1285,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["this.datasource.args.get(\"uiportsecure",{"_index":1288,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["this.datasource.args.set(\"apigatewaylicensefile",{"_index":1516,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.datasource.args.set(\"elkporthttp",{"_index":1292,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["this.datasource.args.set(\"elkporttcp",{"_index":1295,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["this.datasource.args.set(\"env_mcgw",{"_index":1493,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.datasource.args.set(\"mcgw_api_gateway_password",{"_index":1420,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.datasource.args.set(\"mcgw_api_gateway_url",{"_index":1412,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.datasource.args.set(\"mcgw_api_gateway_user",{"_index":1416,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.datasource.args.set(\"realm",{"_index":5462,"title":{},"body":{"components/UMInstallerComponent.html":{}}}],["this.datasource.args.set(\"secureport",{"_index":1547,"title":{},"body":{"components/ApiPortalInstallerComponent.html":{}}}],["this.datasource.args.set(\"uiport",{"_index":1286,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["this.datasource.args.set(\"uiportsecure",{"_index":1289,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["this.datasource.args.set('elkporthttp",{"_index":1266,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["this.datasource.args.set('elkporttcp",{"_index":1268,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["this.datasource.args.set('env_realm",{"_index":5459,"title":{},"body":{"components/UMInstallerComponent.html":{}}}],["this.datasource.args.set('mcgw_ports_http",{"_index":1401,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.datasource.args.set('mcgw_ports_https",{"_index":1405,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.datasource.args.set('realm",{"_index":5457,"title":{},"body":{"components/UMInstallerComponent.html":{}}}],["this.datasource.args.set('secureport",{"_index":1544,"title":{},"body":{"components/ApiPortalInstallerComponent.html":{}}}],["this.datasource.args.set('uiport",{"_index":1263,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["this.datasource.args.set('uiportsecure",{"_index":1265,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["this.datasource.assignedlicense",{"_index":1527,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.datasource.buildcommands",{"_index":1280,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/UMInstallerComponent.html":{}}}],["this.datasource.buildcommands.push(altlic",{"_index":1524,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.datasource.buildcommands.push(cache",{"_index":1313,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["this.datasource.buildcommands.push(config",{"_index":1566,"title":{},"body":{"components/ApiPortalInstallerComponent.html":{}}}],["this.datasource.buildcommands.push(configure",{"_index":1478,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.datasource.buildcommands.push(create",{"_index":1459,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.datasource.buildcommands.push(db",{"_index":1306,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["this.datasource.buildcommands.push(eventstore",{"_index":1321,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["this.datasource.buildcommands.push(extract",{"_index":1466,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.datasource.buildcommands.push(file",{"_index":1282,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/UMInstallerComponent.html":{}}}],["this.datasource.buildcommands.push(init",{"_index":1505,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.datasource.buildcommands.push(internal",{"_index":1328,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["this.datasource.buildcommands.push(lic",{"_index":1515,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.datasource.buildcommands.push(settings",{"_index":1491,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.datasource.buildcommands.push(yum",{"_index":1438,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{}}}],["this.datasource.entrypoint",{"_index":1506,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.datasource.filefortype(\"cache",{"_index":1307,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["this.datasource.filefortype(\"eventstore",{"_index":1315,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["this.datasource.filefortype(\"internal",{"_index":1322,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["this.datasource.filefortype(\"isdb",{"_index":1298,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["this.datasource.filefortype(\"lic",{"_index":1518,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.datasource.filefortype(\"licenses",{"_index":1270,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/UMInstallerComponent.html":{}}}],["this.datasource.filefortype(\"resource",{"_index":1479,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.datasource.filefortype(\"yum",{"_index":1424,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{}}}],["this.datasource.hostname",{"_index":1549,"title":{},"body":{"components/ApiPortalInstallerComponent.html":{},"components/UMInstallerComponent.html":{}}}],["this.datasource.iscustomimage",{"_index":1494,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.datasource.publicport",{"_index":1382,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.datasource.push(i.imageforversion(v",{"_index":951,"title":{},"body":{"classes/Action-1.html":{}}}],["this.datasource.setpublicport(this.primaryportctrl.value",{"_index":1400,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.debug",{"_index":3739,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["this.dedicatedrepoctrl",{"_index":4644,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.dedicatedrepoctrl.dirty",{"_index":4683,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.dedicatedrepoctrl.markaspristine",{"_index":4684,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.dedicatedrepoctrl.setvalue(this.currentbuild.targetimage.dedicatedrepository",{"_index":4738,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.dedicatedrepoctrl.value",{"_index":4812,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.deploymentid",{"_index":3167,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["this.deployments",{"_index":805,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"components/RuntimeDetailsComponent.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["this.description",{"_index":518,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["this.description).pipe(map((pods",{"_index":3103,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["this.determineversiontype",{"_index":4780,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.dialogref.close",{"_index":292,"title":{},"body":{"components/AboutComponent.html":{}}}],["this.dialogref.close(this.container",{"_index":2678,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.display",{"_index":524,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["this.dockeraction",{"_index":782,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["this.dockertag",{"_index":783,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["this.done",{"_index":3706,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["this.downloadctrl",{"_index":4647,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.downloadctrl.dirty",{"_index":4697,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.downloadctrl.markaspristine",{"_index":4698,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.downloadctrl.value",{"_index":4728,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.downloadref",{"_index":4699,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.el.nativeelement.addeventlistener('dragenter",{"_index":3822,"title":{},"body":{"directives/NgFileDrop.html":{}}}],["this.el.nativeelement.addeventlistener('dragover",{"_index":3824,"title":{},"body":{"directives/NgFileDrop.html":{}}}],["this.el.nativeelement.addeventlistener('drop",{"_index":3814,"title":{},"body":{"directives/NgFileDrop.html":{}}}],["this.el.nativeelement.files",{"_index":3834,"title":{},"body":{"directives/NgFileSelect.html":{}}}],["this.elkporthttpctrl",{"_index":1250,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["this.elkporthttpctrl.value",{"_index":1267,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["this.elkporttcpctrl",{"_index":1252,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["this.elkporttcpctrl.value",{"_index":1269,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["this.enablecontrols",{"_index":2668,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.encodeheaders",{"_index":3743,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["this.entryuserctrl",{"_index":4651,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.entryuserctrl.dirty",{"_index":4667,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.entryuserctrl.markaspristine",{"_index":4668,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.entryuserctrl.setvalue(this.currentbuild.entryuser",{"_index":4746,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.entryuserctrl.value",{"_index":4670,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.env",{"_index":697,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["this.error",{"_index":3707,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["this.exclude",{"_index":5141,"title":{},"body":{"classes/Source.html":{}}}],["this.featuresctrl",{"_index":3530,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["this.featuresctrl.dirty",{"_index":3549,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["this.featuresctrl.markaspristine",{"_index":3551,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["this.featuresctrl.value",{"_index":3541,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["this.fetchpackagecontents(true",{"_index":2761,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this.fetchpods().subscribe((d",{"_index":3459,"title":{},"body":{"classes/LivePods.html":{},"classes/LivePodsCount.html":{}}}],["this.fetchrepositories",{"_index":2752,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this.fieldname",{"_index":3749,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["this.filecontents(path",{"_index":2281,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["this.filewithdescription(\"licenses\",'product",{"_index":645,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["this.firemouseup",{"_index":2157,"title":{},"body":{"directives/CancelCdkDrag.html":{}}}],["this.firepropertieschanged",{"_index":2778,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this.flagchanges(propsfile",{"_index":3542,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["this.flagchanges(this.primaryportctrl.value",{"_index":1398,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{}}}],["this.flagchanges(this.propsctrl.value",{"_index":3556,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["this.flagchanges(this.realmctrl.value",{"_index":5456,"title":{},"body":{"components/UMInstallerComponent.html":{}}}],["this.flagchanges(this.uiportctrl.value",{"_index":1260,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["this.flaghaveactions(true",{"_index":4543,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["this.form",{"_index":1163,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.form.addcontrol(\"apictrl",{"_index":5303,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["this.form.addcontrol(\"buildservicectrl",{"_index":2634,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.form.addcontrol(\"containernamectrl",{"_index":2632,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.form.addcontrol(\"packagectrl",{"_index":5300,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["this.form.addcontrol(\"runtypectrl",{"_index":2633,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.form.addcontrol(\"servicectrl",{"_index":5302,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["this.form.addcontrol(\"stagenamectrl",{"_index":2631,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.form.addcontrol(\"testtypectrl",{"_index":5301,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["this.form.valuechanges.subscribe((d",{"_index":1166,"title":{},"body":{"components/ActionComponent.html":{},"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.form.valuechanges.subscribe((f",{"_index":5304,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["this.formbuilder",{"_index":2646,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.formbuilder.group",{"_index":2661,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.formgroup",{"_index":2660,"title":{},"body":{"components/EditContainerComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/StagingComponent.html":{}}}],["this.formgroup.addcontrol(\"addmysqldriverctrl",{"_index":3540,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["this.formgroup.addcontrol(\"apigatewaypasswordctrl",{"_index":1397,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.formgroup.addcontrol(\"apigatewayurlctrl",{"_index":1395,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.formgroup.addcontrol(\"apigatewayuserctrl",{"_index":1396,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.formgroup.addcontrol(\"appnamectrl",{"_index":5054,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["this.formgroup.addcontrol(\"elkporthttpctrl",{"_index":1258,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["this.formgroup.addcontrol(\"elkporttcpctrl",{"_index":1259,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["this.formgroup.addcontrol(\"featuresctrl",{"_index":3539,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["this.formgroup.addcontrol(\"hostnamectrl",{"_index":5055,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["this.formgroup.addcontrol(\"httpsportctrl",{"_index":1394,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.formgroup.addcontrol(\"licctrl",{"_index":1385,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.formgroup.addcontrol(\"primaryportctrl",{"_index":1255,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{}}}],["this.formgroup.addcontrol(\"propsctrl",{"_index":3538,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["this.formgroup.addcontrol(\"realmctrl",{"_index":5455,"title":{},"body":{"components/UMInstallerComponent.html":{}}}],["this.formgroup.addcontrol(\"replicasctrl",{"_index":5056,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["this.formgroup.addcontrol(\"requiresmonitoringctrl",{"_index":5058,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["this.formgroup.addcontrol(\"restartonfailctrl",{"_index":5059,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["this.formgroup.addcontrol(\"secureportctrl",{"_index":1542,"title":{},"body":{"components/ApiPortalInstallerComponent.html":{}}}],["this.formgroup.addcontrol(\"secureuiportctrl",{"_index":1257,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["this.formgroup.addcontrol(\"servicetypectrl",{"_index":5057,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["this.formgroup.addcontrol(\"uiportctrl",{"_index":1256,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["this.formgroup.valuechanges.subscribe((d",{"_index":2662,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.formgroup.valuechanges.subscribe((v",{"_index":1262,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/UMInstallerComponent.html":{}}}],["this.formgroup.valuechanges.subscribe(values",{"_index":3544,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["this.from",{"_index":158,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["this.generaterandomindex",{"_index":3762,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["this.gitpaginator",{"_index":2839,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this.gitpassword",{"_index":5150,"title":{},"body":{"classes/Source.html":{}}}],["this.gitrepos.foreach((r",{"_index":4027,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["this.gitrepository",{"_index":5146,"title":{},"body":{"classes/Source.html":{}}}],["this.gits",{"_index":2746,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this.gits[0",{"_index":2749,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this.gituri",{"_index":2743,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/Source.html":{},"classes/SourceWrapper.html":{}}}],["this.gituri.endswith",{"_index":2745,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this.gituser",{"_index":5148,"title":{},"body":{"classes/Source.html":{}}}],["this.haveactions",{"_index":4535,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["this.havechanges",{"_index":4482,"title":{},"body":{"components/RuntimeScaleComponent.html":{}}}],["this.headers",{"_index":4189,"title":{},"body":{"classes/Result.html":{},"injectables/TestTraceService.html":{}}}],["this.headers(dockerhost",{"_index":4204,"title":{},"body":{"classes/Result.html":{}}}],["this.hideextrainfo",{"_index":2943,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.hint",{"_index":2687,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.hostctrl",{"_index":2651,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.hostctrl.disable",{"_index":2679,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.hostctrl.enable",{"_index":2694,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.hostctrl.setvalue(this.privatehost",{"_index":2685,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.hostctrl.setvalue(this.publichost",{"_index":2696,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.hostctrl.value",{"_index":2669,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.hostctrl.value.length",{"_index":2670,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.hostlabel",{"_index":2681,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.hostnamectrl",{"_index":5044,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["this.hostnamectrl.dirty",{"_index":5064,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["this.hostnamectrl.markaspristine",{"_index":5067,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["this.hostnamectrl.value",{"_index":5066,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["this.httpsportctrl",{"_index":1386,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.httpsportctrl.dirty",{"_index":1404,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.httpsportctrl.markaspristine",{"_index":1407,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.httpsportctrl.value",{"_index":1406,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.id",{"_index":62,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/K8sDeploymentDefinition.html":{},"injectables/Ng2Uploader.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{},"classes/UploadedFile.html":{}}}],["this.image",{"_index":709,"title":{},"body":{"classes/Action.html":{},"classes/Action-1.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"components/SagImageAlerterComponent.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["this.image.indexof",{"_index":706,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["this.image.lastindexof",{"_index":719,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["this.image.length",{"_index":731,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["this.image.name",{"_index":4833,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.image.substring(0",{"_index":707,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["this.image.substring(idx+1",{"_index":721,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["this.image.substring(this.image.indexof(\":\")+1",{"_index":730,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["this.imagecount.emit(d.length",{"_index":934,"title":{},"body":{"classes/Action-1.html":{}}}],["this.imagectrl",{"_index":2657,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.imagectrl.disable",{"_index":2659,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.imagefor(this.currentbuild.targetimage.name",{"_index":4752,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.imagefor(this.targetimagectrl.value",{"_index":4765,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.imagename",{"_index":704,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["this.images(false",{"_index":4322,"title":{},"body":{"classes/Result.html":{}}}],["this.include",{"_index":5140,"title":{},"body":{"classes/Source.html":{}}}],["this.includetests",{"_index":2075,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["this.indexoftemplate(name",{"_index":4733,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.indexoftemplate(this.currentbuild.name",{"_index":4715,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.initevents",{"_index":3813,"title":{},"body":{"directives/NgFileDrop.html":{}}}],["this.installer",{"_index":2063,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["this.installer.targetimage.tag",{"_index":2101,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["this.isactive",{"_index":5596,"title":{},"body":{"classes/WebSocketService.html":{}}}],["this.isallselected",{"_index":2783,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this.isapistagecontroldisabled",{"_index":1150,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.isbuilding",{"_index":4818,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.isbusy",{"_index":2061,"title":{},"body":{"components/BuildExeComponent.html":{},"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this.isinstall",{"_index":1376,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.islinearstepper",{"_index":4735,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.isnewtestcase",{"_index":4974,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["this.k8sdashboardurl",{"_index":4448,"title":{},"body":{"components/RuntimeK8sComponent.html":{}}}],["this.k8sdashboardurl.lastindexof",{"_index":4449,"title":{},"body":{"components/RuntimeK8sComponent.html":{}}}],["this.k8sdashboardurl.substring(0",{"_index":4450,"title":{},"body":{"components/RuntimeK8sComponent.html":{}}}],["this.keepalivectrl",{"_index":1158,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.keepalivectrl.dirty",{"_index":1170,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.keepalivectrl.setvalue(this.action.stop",{"_index":1144,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.keepalivectrl.value",{"_index":1172,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.licctrl",{"_index":1383,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{},"components/SagImageAlerterComponent.html":{}}}],["this.licctrl.dirty",{"_index":1408,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{},"components/SagImageAlerterComponent.html":{}}}],["this.licctrl.markaspristine",{"_index":1410,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{},"components/SagImageAlerterComponent.html":{}}}],["this.licctrl.setvalue(licfile",{"_index":4743,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.licencefiles",{"_index":1372,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{},"components/SagImageAlerterComponent.html":{}}}],["this.licencefiles.push(f.name",{"_index":1374,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{},"components/SagImageAlerterComponent.html":{}}}],["this.licensefile",{"_index":602,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["this.log.length",{"_index":2107,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["this.log.push(this.timenow",{"_index":2106,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["this.log.splice(0,100",{"_index":2109,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["this.make(json.parse(data",{"_index":565,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["this.manualsyncrequired",{"_index":2821,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this.maxsize",{"_index":3727,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["this.maxuploads",{"_index":3723,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["this.method",{"_index":3737,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["this.multipart",{"_index":3735,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["this.multiple",{"_index":3721,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["this.name",{"_index":208,"title":{},"body":{"classes/APIDefinition.html":{},"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{},"classes/WmPackageInfo.html":{}}}],["this.name.tolowercase().replace(/\\s/g",{"_index":620,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["this.namespace",{"_index":3169,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{}}}],["this.namespaces",{"_index":4456,"title":{},"body":{"components/RuntimeK8sComponent.html":{}}}],["this.namespaces[0",{"_index":4457,"title":{},"body":{"components/RuntimeK8sComponent.html":{}}}],["this.nextversion",{"_index":4820,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.noparams",{"_index":3731,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["this.offset",{"_index":2977,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.offsetforextrainfo(name",{"_index":2963,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.onaction.emit(new",{"_index":1043,"title":{},"body":{"classes/Action-1.html":{}}}],["this.oncompletion.emit(json.parse(response).filename",{"_index":5507,"title":{},"body":{"components/UploadButtonComponent.html":{}}}],["this.onfail",{"_index":810,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["this.ongitchange",{"_index":2754,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this.onselection",{"_index":1016,"title":{},"body":{"classes/Action-1.html":{}}}],["this.onselection.emit(null",{"_index":2540,"title":{},"body":{"components/DockerImageVersionsComponent.html":{}}}],["this.onselection.emit(this._selectedversion",{"_index":1017,"title":{},"body":{"classes/Action-1.html":{},"components/DockerImageVersionsComponent.html":{}}}],["this.onselection.subscribe((obj",{"_index":2534,"title":{},"body":{"components/DockerImageVersionsComponent.html":{}}}],["this.onstart",{"_index":808,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["this.onsuccess",{"_index":809,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["this.onupload.emit",{"_index":3811,"title":{},"body":{"directives/NgFileDrop.html":{}}}],["this.onupload.emit(data",{"_index":3833,"title":{},"body":{"directives/NgFileSelect.html":{}}}],["this.originalname",{"_index":3702,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["this.owner",{"_index":2858,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this.owner.initialproperties",{"_index":1242,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/UMInstallerComponent.html":{}}}],["this.owner.propertieschangedinbuilder(\"api",{"_index":1333,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{}}}],["this.owner.propertieschangedinbuilder(\"micro",{"_index":1531,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.owner.propertieschangedinbuilder(\"msc",{"_index":2859,"title":{},"body":{"classes/GitSelectionModel.html":{},"components/MicroServiceInstallerComponent.html":{},"classes/SourceWrapper.html":{}}}],["this.owner.propertieschangedinbuilder(\"um",{"_index":5466,"title":{},"body":{"components/UMInstallerComponent.html":{}}}],["this.package",{"_index":5306,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["this.package.apis",{"_index":5310,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["this.package.apis.foreach((a",{"_index":5311,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["this.package.services",{"_index":5309,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["this.packagechooserformgroup",{"_index":4902,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["this.packagectrl",{"_index":5292,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["this.packagectrl.dirty",{"_index":5305,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["this.packagectrl.markaspristine",{"_index":5308,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["this.packagectrl.value",{"_index":5307,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["this.packages",{"_index":4890,"title":{},"body":{"classes/ServiceInfo.html":{},"components/TestCaseComponent.html":{}}}],["this.packages.foreach((p",{"_index":4893,"title":{},"body":{"classes/ServiceInfo.html":{},"components/TestCaseComponent.html":{}}}],["this.packagespaginator",{"_index":4892,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["this.packagetabledatasource",{"_index":2836,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/ServiceInfo.html":{},"classes/SourceWrapper.html":{}}}],["this.packagetabledatasource.data.foreach(row",{"_index":2785,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this.packagetabledatasource.data.length",{"_index":2776,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this.packagetabledatasource.paginator",{"_index":2838,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/ServiceInfo.html":{},"classes/SourceWrapper.html":{}}}],["this.password",{"_index":2066,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["this.passwordencrypted",{"_index":2068,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["this.path",{"_index":5578,"title":{},"body":{"classes/WebSocketService.html":{}}}],["this.pipelineaction",{"_index":795,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["this.pipelinestatusctrl",{"_index":1161,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.pipelinestatusctrl.dirty",{"_index":1185,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.pipelinestatusctrl.setvalue(this.action.pipelineaction",{"_index":1147,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.pipelinestatusctrl.value",{"_index":1186,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.podcountchanged.emit(podscount",{"_index":3952,"title":{},"body":{"components/PodsListComponent.html":{}}}],["this.podscount",{"_index":4478,"title":{},"body":{"components/RuntimeScaleComponent.html":{}}}],["this.podscount).subscribe((result",{"_index":4484,"title":{},"body":{"components/RuntimeScaleComponent.html":{}}}],["this.policies",{"_index":63,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["this.portctrl",{"_index":2653,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.portctrl.disable",{"_index":2680,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.portctrl.enable",{"_index":2695,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.portctrl.setvalue(this.privateport",{"_index":2686,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.portctrl.setvalue(this.publicport",{"_index":2697,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.portctrl.value",{"_index":2672,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.portlabel",{"_index":2684,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.ports",{"_index":696,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["this.primaryport",{"_index":600,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["this.primaryportctrl",{"_index":1244,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{}}}],["this.primaryportctrl.dirty",{"_index":1399,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.primaryportctrl.disable",{"_index":1254,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{}}}],["this.primaryportctrl.markaspristine",{"_index":1403,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.primaryportctrl.value",{"_index":1402,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.privatehost",{"_index":2666,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.privateport",{"_index":2677,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.processmessage(\"build",{"_index":2096,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["this.processmessage(\"installation",{"_index":2091,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["this.processmessage(result",{"_index":2085,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["this.products[this.productcodes.indexof(code",{"_index":2354,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["this.progress",{"_index":3703,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["this.propertiesformgroup",{"_index":4654,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.propertiesformgroup.valuechanges.subscribe(values",{"_index":4661,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.propertyfiles",{"_index":3522,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["this.propertyfiles.push(f.name",{"_index":3524,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["this.propsctrl",{"_index":3527,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["this.propsctrl.dirty",{"_index":3546,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["this.propsctrl.markaspristine",{"_index":3548,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["this.propsctrl.setvalue(f.name",{"_index":3564,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["this.publichost",{"_index":2667,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.publicport",{"_index":2675,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.readyreplicas",{"_index":3113,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["this.realmctrl",{"_index":5453,"title":{},"body":{"components/UMInstallerComponent.html":{}}}],["this.realmctrl.value",{"_index":5458,"title":{},"body":{"components/UMInstallerComponent.html":{}}}],["this.reference",{"_index":3171,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["this.references",{"_index":939,"title":{},"body":{"classes/Action-1.html":{},"components/RuntimeUpdateComponent.html":{}}}],["this.references.push({name",{"_index":4523,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["this.refreshpods",{"_index":3462,"title":{},"body":{"classes/LivePods.html":{},"classes/LivePodsCount.html":{}}}],["this.removefilefromqueue(queueindex",{"_index":3786,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["this.replicas",{"_index":3112,"title":{},"body":{"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{}}}],["this.replicasctrl",{"_index":5046,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["this.replicasctrl.dirty",{"_index":5068,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["this.replicasctrl.markaspristine",{"_index":5071,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["this.replicasctrl.value",{"_index":5070,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["this.repoforid(this._configuredgitrepos[0].name",{"_index":2792,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this.reporterror",{"_index":5369,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["this.repositories",{"_index":2789,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this.repositories.length",{"_index":2791,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this.repositories.push(new",{"_index":2796,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this.repository",{"_index":702,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["this.required",{"_index":528,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["this.requiresmonitoringctrl",{"_index":5050,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["this.requiresmonitoringctrl.dirty",{"_index":5080,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["this.requiresmonitoringctrl.markaspristine",{"_index":5083,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["this.requiresmonitoringctrl.value",{"_index":5082,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["this.response",{"_index":3714,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["this.restartonfailctrl",{"_index":5052,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["this.restartonfailctrl.dirty",{"_index":5076,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["this.restartonfailctrl.markaspristine",{"_index":5079,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["this.restartonfailctrl.value",{"_index":5078,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["this.restartpolicy",{"_index":3175,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["this.rollbackbutton.disabled",{"_index":4547,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["this.rollbackpossible",{"_index":4545,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["this.run",{"_index":2073,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["this.run.name",{"_index":2104,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["this.runk8s",{"_index":2079,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["this.runtests",{"_index":788,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["this.runtestsctrl",{"_index":1157,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.runtestsctrl.dirty",{"_index":1167,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.runtestsctrl.setvalue(this.action.runtests",{"_index":1136,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.runtestsctrl.value",{"_index":1169,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.runtypectrl",{"_index":2628,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.runtypectrl.dirty",{"_index":2639,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.runtypectrl.setvalue(this.stage",{"_index":2623,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.runtypectrl.value",{"_index":2640,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.sagimagecounter",{"_index":1932,"title":{},"body":{"components/BuildComponent.html":{}}}],["this.savebutton.disabled",{"_index":4722,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.savechanges",{"_index":4054,"title":{},"body":{"classes/RepoSettings.html":{},"classes/ServiceInfo.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["this.scaleput.replace(/namedeploy",{"_index":3361,"title":{},"body":{"injectables/K8sService.html":{}}}],["this.scope",{"_index":160,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["this.scope.push(scope",{"_index":164,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["this.secureportctrl",{"_index":1540,"title":{},"body":{"components/ApiPortalInstallerComponent.html":{}}}],["this.secureportctrl.value",{"_index":1543,"title":{},"body":{"components/ApiPortalInstallerComponent.html":{}}}],["this.secureuiportctrl",{"_index":1248,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["this.secureuiportctrl.value",{"_index":1261,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["this.selected",{"_index":2845,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this.selected.foreach((s",{"_index":2846,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this.selecteddeployment",{"_index":4417,"title":{},"body":{"components/RuntimeDetailsComponent.html":{}}}],["this.selecteddeployment.containers.foreach((c",{"_index":4522,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["this.selecteddeployment.replicas",{"_index":4479,"title":{},"body":{"components/RuntimeScaleComponent.html":{}}}],["this.selecteddeploymentcontrol.value",{"_index":4424,"title":{},"body":{"components/RuntimeDetailsComponent.html":{}}}],["this.selectedgit",{"_index":2748,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this.selectedpackage",{"_index":4926,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["this.selectedpackage.apis.foreach((a",{"_index":4936,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["this.selectedpackage.services.foreach((s",{"_index":4928,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["this.selectedpackagectrl",{"_index":4898,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["this.selectedpackagectrl.setvalue(packageinfo.name",{"_index":4923,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["this.selectedrepo",{"_index":2762,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this.selectedrepo.id",{"_index":2757,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this.selectedreponame",{"_index":2799,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this.selectedservice",{"_index":4944,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["this.selectedservice.endpoint",{"_index":4982,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["this.selectedservice.tests",{"_index":4990,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["this.selectedservice.tests.push(t",{"_index":4991,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["this.selectedservicectrl",{"_index":4901,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["this.selectedservicectrl.setvalue(service.endpoint",{"_index":4943,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["this.selectedsourceschanged.emit({source:this._source",{"_index":2860,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this.selectedsourcesloaded.emit({source:this._source",{"_index":2842,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this.selectedtestcase",{"_index":4975,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["this.selectedtestcase.endpoint",{"_index":4981,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["this.selectedtestcase.suiteid",{"_index":4979,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["this.selectionmodel",{"_index":2843,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this.selectionmodel.clear",{"_index":2784,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this.selectionmodel.select(row",{"_index":2786,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this.selectionmodel.selected.foreach((p",{"_index":2848,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this.selectionmodel.selected.length",{"_index":2774,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this.selectionmodel.setsourcemodel(packages",{"_index":2840,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this.selectionmodel.toggle(row",{"_index":2777,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this.selectservice(service",{"_index":4971,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["this.service.appname",{"_index":5061,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["this.service.hostname",{"_index":5065,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["this.service.replicas",{"_index":5069,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["this.service.requiresmonitoring",{"_index":5081,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["this.service.restartpolicy",{"_index":5077,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["this.service.servicetype",{"_index":5073,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["this.servicectrl",{"_index":5294,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["this.serviceid",{"_index":3165,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{}}}],["this.servicesandapisforselectedpackage",{"_index":4927,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["this.servicesandapisforselectedpackage.push(si",{"_index":4935,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["this.servicesformgroup",{"_index":4904,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["this.servicespaginator",{"_index":4941,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["this.servicestabledatasource",{"_index":4938,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["this.servicestabledatasource.paginator",{"_index":4940,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["this.servicetypectrl",{"_index":5048,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["this.servicetypectrl.dirty",{"_index":5072,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["this.servicetypectrl.markaspristine",{"_index":5075,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["this.servicetypectrl.value",{"_index":5074,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["this.serviceupdated.emit(this.service",{"_index":5084,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["this.setapigatewaylicense(this.licctrl.value",{"_index":1409,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.setbuildercomponent(image.type",{"_index":4706,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.setbuildercomponent(this.currentbuild.sourceimage.type",{"_index":4748,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.setcurrentrepo(repo",{"_index":2793,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this.setcurrentrepo(this.repositories[0",{"_index":2794,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this.setcurrentrepo(this.selectedrepo",{"_index":2759,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this.setcurrentrepofrominput",{"_index":2753,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this.setdefaults",{"_index":1243,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/UMInstallerComponent.html":{}}}],["this.setdefaultsforbuilding",{"_index":1379,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.setdefaultsforinstallation",{"_index":1377,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.setinitialselection",{"_index":2841,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["this.setlicensefile(this.licctrl.value",{"_index":4662,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.setmysqldriverfile(this.addmysqldriverctrl.value",{"_index":3553,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["this.setmysqltypefile(this.addmysqldriverctrl.value",{"_index":3554,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["this.setnextversion(this.currentbuild.targetimage.uniquename",{"_index":4772,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.setnextversion(this.targetimagectrl.value.uniquename",{"_index":4689,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.setoffsetforextradivs",{"_index":2942,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.setpropertiesfile(this.propsctrl.value",{"_index":3547,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["this.settemplate(this.buildctrl.value",{"_index":4660,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.settingsloaded",{"_index":1930,"title":{},"body":{"components/BuildComponent.html":{},"components/SagImageAlerterComponent.html":{}}}],["this.setup(v",{"_index":4176,"title":{},"body":{"classes/Result.html":{}}}],["this.setupendpointsforcurrenttestsuite",{"_index":4924,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["this.setupvaluesforbuilding",{"_index":1380,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.setupvaluesforinstallation",{"_index":1378,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["this.showactions",{"_index":3940,"title":{},"body":{"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{}}}],["this.size",{"_index":159,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"injectables/Ng2Uploader.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/UploadedFile.html":{}}}],["this.small",{"_index":5491,"title":{},"body":{"components/UploadButtonComponent.html":{}}}],["this.source",{"_index":448,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["this.sourceimage",{"_index":618,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["this.sourceimage.iscustom",{"_index":649,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["this.sourceimage.primaryport",{"_index":643,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["this.sourceimagetag",{"_index":558,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["this.stage.buildonstart",{"_index":2626,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.stage.containerhost",{"_index":2622,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.stage.name",{"_index":1141,"title":{},"body":{"components/ActionComponent.html":{},"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.stage.onfail",{"_index":2588,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.stage.onfail.active",{"_index":2590,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.stage.onfail.isactive",{"_index":2592,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.stage.onstart.runtests",{"_index":2586,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.stage.onsuccess",{"_index":2587,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.stage.onsuccess.active",{"_index":2589,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.stage.onsuccess.isactive",{"_index":2591,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.stage.usekubernetes",{"_index":2624,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.stagenamectrl",{"_index":2619,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.stagenamectrl.dirty",{"_index":2635,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.stagenamectrl.setvalue(this.stage",{"_index":2620,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.stagenamectrl.value",{"_index":2636,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.stageupdated.emit(this.stage",{"_index":2643,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.start",{"_index":3943,"title":{},"body":{"components/PodsListComponent.html":{}}}],["this.status",{"_index":2187,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"classes/K8sDeployment.html":{},"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["this.statustext",{"_index":3713,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["this.stepper.next",{"_index":4972,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["this.stop",{"_index":780,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["this.style[\"color",{"_index":5495,"title":{},"body":{"components/UploadButtonComponent.html":{}}}],["this.style[\"font",{"_index":5493,"title":{},"body":{"components/UploadButtonComponent.html":{}}}],["this.tagimagectrl",{"_index":1160,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.tagimagectrl.dirty",{"_index":1182,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.tagimagectrl.setvalue(this.action.dockertag",{"_index":1146,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.tagimagectrl.value",{"_index":1184,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.target",{"_index":500,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["this.targetdir",{"_index":5153,"title":{},"body":{"classes/Source.html":{}}}],["this.targetimage",{"_index":560,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["this.targetimagectrl",{"_index":4638,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.targetimagectrl.dirty",{"_index":4676,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.targetimagectrl.markaspristine",{"_index":4677,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.targetimagectrl.setvalue(this.currentbuild.targetimage",{"_index":4740,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.targetimagectrl.value",{"_index":4679,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.targetimagectrl.value.copy",{"_index":4770,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.targetimagectrl.value.name",{"_index":4811,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.targetimageformgroup",{"_index":4655,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.targetimageformgroup.valuechanges.subscribe(values",{"_index":4671,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.targetrepoctrl",{"_index":4645,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.targetrepoctrl.dirty",{"_index":4672,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.targetrepoctrl.markaspristine",{"_index":4674,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.targetrepoctrl.setvalue(this.reponamewithoutimagename",{"_index":4737,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.targetrepoctrl.value",{"_index":4766,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.targetversionctrl",{"_index":4640,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.targetversionctrl.dirty",{"_index":4685,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.targetversionctrl.markaspristine",{"_index":4687,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.targetversionctrl.setvalue(this.currentbuild.targetimage.version",{"_index":4771,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.targetversionctrl.setvalue(value",{"_index":4788,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.targetversionctrl.value",{"_index":4774,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.testcaseformgroup",{"_index":4906,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["this.tests",{"_index":5423,"title":{},"body":{"classes/TestSuite.html":{}}}],["this.testtypectrl",{"_index":5296,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["this.title",{"_index":4420,"title":{},"body":{"components/RuntimeDetailsComponent.html":{},"components/SimpleNameComponent.html":{}}}],["this.titlecolor",{"_index":5494,"title":{},"body":{"components/UploadButtonComponent.html":{}}}],["this.type",{"_index":931,"title":{},"body":{"classes/Action-1.html":{},"components/ActionComponent.html":{},"classes/Source.html":{},"components/UploadButtonComponent.html":{}}}],["this.types",{"_index":156,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["this.uiportctrl",{"_index":1246,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["this.uiportctrl.value",{"_index":1264,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["this.unavailablereplicas",{"_index":3115,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["this.updatebutton",{"_index":4480,"title":{},"body":{"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{}}}],["this.updatebutton.disabled",{"_index":4481,"title":{},"body":{"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{}}}],["this.updateform",{"_index":1165,"title":{},"body":{"components/ActionComponent.html":{},"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["this.updatereferences(d",{"_index":940,"title":{},"body":{"classes/Action-1.html":{}}}],["this.updatestatus(replicas",{"_index":3099,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["this.updatetargetimage",{"_index":4680,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.uploadapis",{"_index":2077,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["this.uploadapis).subscribe((result",{"_index":2098,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["this.uploader",{"_index":3807,"title":{},"body":{"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{},"components/UploadButtonComponent.html":{}}}],["this.uploader._emitter.subscribe((data",{"_index":3832,"title":{},"body":{"directives/NgFileSelect.html":{}}}],["this.uploader._emitter.subscribe((filenamestr",{"_index":3809,"title":{},"body":{"directives/NgFileDrop.html":{}}}],["this.uploader.addfilestoqueue(files",{"_index":3821,"title":{},"body":{"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{}}}],["this.uploader.onafteraddingfile",{"_index":5500,"title":{},"body":{"components/UploadButtonComponent.html":{}}}],["this.uploader.oncompleteitem",{"_index":5502,"title":{},"body":{"components/UploadButtonComponent.html":{}}}],["this.uploader.setoptions(this.options",{"_index":3808,"title":{},"body":{"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{}}}],["this.uploader.uploadall",{"_index":5508,"title":{},"body":{"components/UploadButtonComponent.html":{}}}],["this.uploadfile(f",{"_index":3755,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["this.uploadurl",{"_index":5496,"title":{},"body":{"components/UploadButtonComponent.html":{}}}],["this.url",{"_index":3715,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["this.usekubernetes",{"_index":806,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["this.user",{"_index":2064,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["this.values",{"_index":4045,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["this.version",{"_index":2081,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["this.versiontypectrl",{"_index":4642,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.versiontypectrl.dirty",{"_index":4688,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.versiontypectrl.markaspristine",{"_index":4690,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.versiontypectrl.value",{"_index":4830,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["this.volumes",{"_index":698,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["this.withcredentials",{"_index":3719,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["this.xposofmaindiv",{"_index":2964,"title":{},"body":{"components/HomeComponent.html":{}}}],["this[key",{"_index":871,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["through",{"_index":2993,"title":{},"body":{"components/HomeComponent.html":{}}}],["timenow",{"_index":2018,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["timeoutseconds",{"_index":670,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["timestamp_format",{"_index":5228,"title":{},"body":{"classes/TestCase.html":{}}}],["title",{"_index":916,"title":{},"body":{"classes/Action-1.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/HomeComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/SimpleNameComponent.html":{},"components/UploadButtonComponent.html":{}}}],["titlecolor",{"_index":5470,"title":{},"body":{"components/UploadButtonComponent.html":{}}}],["titleextra",{"_index":3030,"title":{},"body":{"components/HomeComponent.html":{}}}],["to(#da005b",{"_index":1994,"title":{},"body":{"components/BuildComponent.html":{},"components/TestCaseComponent.html":{}}}],["todo",{"_index":229,"title":{},"body":{"classes/APIDefinition.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"injectables/TestTraceService.html":{},"classes/WmPackageInfo.html":{},"miscellaneous/enumerations.html":{}}}],["todotests(element",{"_index":4912,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["todotests(image",{"_index":998,"title":{},"body":{"classes/Action-1.html":{}}}],["tool",{"_index":3619,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["toolbar",{"_index":1953,"title":{},"body":{"components/BuildComponent.html":{},"components/RuntimeK8sComponent.html":{}}}],["top",{"_index":1944,"title":{},"body":{"components/BuildComponent.html":{},"classes/CommitInfo.html":{},"components/EditContainerComponent.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"components/HomeComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/StagingComponent.html":{},"components/TestHistoryComponent.html":{}}}],["top:50",{"_index":1982,"title":{},"body":{"components/BuildComponent.html":{},"components/TestCaseComponent.html":{}}}],["tostring",{"_index":607,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["total",{"_index":2770,"title":{},"body":{"classes/GitSelectionModel.html":{},"injectables/Ng2Uploader.html":{},"classes/SourceWrapper.html":{},"classes/UploadedFile.html":{}}}],["touchcache",{"_index":3573,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["touchcache.buildtarget",{"_index":3577,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["touchcache.commandtype",{"_index":3576,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["touchcache.filetype",{"_index":3578,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["touchcache.target",{"_index":3579,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["touchdb",{"_index":3565,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["touchdb.buildtarget",{"_index":3569,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["touchdb.commandtype",{"_index":3568,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["touchdb.filetype",{"_index":3570,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["touchdb.target",{"_index":3571,"title":{},"body":{"components/MicroServiceInstallerComponent.html":{}}}],["trace.service",{"_index":1685,"title":{},"body":{"modules/AppModule.html":{}}}],["trace.service.ts",{"_index":5430,"title":{},"body":{"injectables/TestTraceService.html":{},"coverage.html":{}}}],["trace.service.ts:15",{"_index":5439,"title":{},"body":{"injectables/TestTraceService.html":{}}}],["trace.service.ts:17",{"_index":5433,"title":{},"body":{"injectables/TestTraceService.html":{}}}],["trace.service.ts:26",{"_index":5435,"title":{},"body":{"injectables/TestTraceService.html":{}}}],["trace.service.ts:52",{"_index":5437,"title":{},"body":{"injectables/TestTraceService.html":{}}}],["transform",{"_index":3023,"title":{},"body":{"components/HomeComponent.html":{}}}],["transform:translate",{"_index":1985,"title":{},"body":{"components/BuildComponent.html":{},"components/TestCaseComponent.html":{}}}],["transition",{"_index":5026,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["transition('expanded",{"_index":5035,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["tree",{"_index":268,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["trigger",{"_index":5027,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["trigger('detailexpand",{"_index":5030,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["true",{"_index":69,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Action.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"modules/AppModule.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"interfaces/BuildParams.html":{},"directives/CancelCdkDrag.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"components/EditContainerComponent.html":{},"classes/GitSelectionModel.html":{},"components/HomeComponent.html":{},"classes/K8sPod.html":{},"injectables/K8sService.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"injectables/Ng2Uploader.html":{},"components/PodsListComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RepoSettings.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"components/ServicePropertiesComponent.html":{},"injectables/Settings.html":{},"classes/SourceWrapper.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{},"classes/UploadedFile.html":{},"classes/Values.html":{},"miscellaneous/variables.html":{}}}],["true).subscribe((d",{"_index":4416,"title":{},"body":{"components/RuntimeDetailsComponent.html":{}}}],["try",{"_index":2805,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{},"components/TestHistoryComponent.html":{}}}],["trying",{"_index":2814,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["ts",{"_index":5424,"title":{},"body":{"classes/TestSuite.html":{}}}],["ts._id",{"_index":5425,"title":{},"body":{"classes/TestSuite.html":{}}}],["ts.tests.set(tc.id",{"_index":5428,"title":{},"body":{"classes/TestSuite.html":{}}}],["ts[prop",{"_index":5429,"title":{},"body":{"classes/TestSuite.html":{}}}],["tslib",{"_index":5717,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":4577,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["type",{"_index":16,"title":{},"body":{"classes/API.html":{},"classes/APIDefinition.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"components/AboutComponent.html":{},"classes/Action.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"interfaces/ActionsComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"directives/BuildImageChooseDirective.html":{},"interfaces/BuildParams.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"directives/CancelCdkDrag.html":{},"classes/CommitInfo.html":{},"injectables/ContainerTemplates.html":{},"classes/DependencyWrapper.html":{},"classes/Deployment.html":{},"components/DeploymentDetailsComponent.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/DockerContainer.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"components/HomeComponent.html":{},"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/K8sPod.html":{},"injectables/K8sService.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"components/MicroServiceInstallerComponent.html":{},"injectables/Ng2Uploader.html":{},"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{},"injectables/PackagesService.html":{},"classes/Payload.html":{},"components/PodsListComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"interfaces/PropertiesChangedOwner.html":{},"classes/RepoSettings.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"directives/RuntimeActionsDirective.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"components/ServicePropertiesComponent.html":{},"injectables/Settings.html":{},"components/SimpleNameComponent.html":{},"classes/Source.html":{},"classes/SourceWrapper.html":{},"classes/Sources.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{},"classes/TestCase.html":{},"components/TestCaseComponent.html":{},"injectables/TestConfigService.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"classes/TestSuite.html":{},"injectables/TestTraceService.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"classes/UploadedFile.html":{},"classes/Values.html":{},"classes/WebSocketService.html":{},"classes/WmPackageInfo.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["typectrl",{"_index":5007,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["typeof",{"_index":4762,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["types",{"_index":151,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{}}}],["u+x",{"_index":1475,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["uid",{"_index":3299,"title":{},"body":{"injectables/K8sService.html":{}}}],["uiportctrl",{"_index":1214,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{}}}],["um",{"_index":400,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"injectables/ContainerTemplates.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["uminstallercomponent",{"_index":399,"title":{"components/UMInstallerComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["umserver",{"_index":5463,"title":{},"body":{"components/UMInstallerComponent.html":{}}}],["unavailable",{"_index":3098,"title":{},"body":{"classes/K8sDeployment.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"miscellaneous/enumerations.html":{}}}],["unavailablereplicas",{"_index":3050,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["unavailabletotal",{"_index":3474,"title":{},"body":{"classes/LivePods.html":{},"classes/LivePodsCount.html":{}}}],["undefined",{"_index":3677,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["uniquename(usesdedicatedrepo",{"_index":700,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["unit",{"_index":3003,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["universal",{"_index":2338,"title":{},"body":{"injectables/ContainerTemplates.html":{}}}],["unknown",{"_index":3094,"title":{},"body":{"classes/K8sDeployment.html":{},"components/PodsListComponent.html":{},"miscellaneous/enumerations.html":{}}}],["unknowntests(image",{"_index":1000,"title":{},"body":{"classes/Action-1.html":{}}}],["unpublish",{"_index":1095,"title":{},"body":{"components/ActionComponent.html":{}}}],["unresponsive",{"_index":5096,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["until",{"_index":4984,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["unzip",{"_index":1432,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["up",{"_index":1561,"title":{},"body":{"components/ApiPortalInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/StagingComponent.html":{}}}],["update",{"_index":1771,"title":{},"body":{"modules/AppModule.html":{},"components/DockerImageVersionsComponent.html":{},"injectables/K8sService.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"miscellaneous/variables.html":{}}}],["update(event",{"_index":4472,"title":{},"body":{"components/RuntimeScaleComponent.html":{}}}],["update.component",{"_index":1636,"title":{},"body":{"modules/AppModule.html":{},"components/RuntimeDetailsComponent.html":{}}}],["update.component.ts",{"_index":4490,"title":{},"body":{"components/RuntimeUpdateComponent.html":{},"coverage.html":{}}}],["update.component.ts:105",{"_index":4505,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["update.component.ts:117",{"_index":4512,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["update.component.ts:130",{"_index":4506,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["update.component.ts:25",{"_index":4504,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["update.component.ts:27",{"_index":4516,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["update.component.ts:28",{"_index":4519,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["update.component.ts:30",{"_index":4517,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["update.component.ts:32",{"_index":4514,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["update.component.ts:33",{"_index":4515,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["update.component.ts:35",{"_index":4520,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["update.component.ts:36",{"_index":4503,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["update.component.ts:42",{"_index":4511,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["update.component.ts:51",{"_index":4510,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["update.component.ts:73",{"_index":4508,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["update.component.ts:81",{"_index":4513,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["update.css",{"_index":4491,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["update.html",{"_index":4492,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["updatebutton",{"_index":4464,"title":{},"body":{"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{}}}],["updated",{"_index":298,"title":{},"body":{"components/AboutComponent.html":{},"classes/Action-1.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/UMInstallerComponent.html":{}}}],["updateform",{"_index":1067,"title":{},"body":{"components/ActionComponent.html":{},"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["updatepodcount",{"_index":3056,"title":{},"body":{"classes/K8sDeployment.html":{},"components/RuntimeDetailsComponent.html":{}}}],["updatepodcount(event",{"_index":4403,"title":{},"body":{"components/RuntimeDetailsComponent.html":{}}}],["updatepodcount(replicas",{"_index":3086,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["updatepods",{"_index":3435,"title":{},"body":{"classes/LivePods.html":{}}}],["updatepods(observer",{"_index":3455,"title":{},"body":{"classes/LivePods.html":{},"classes/LivePodsCount.html":{}}}],["updatereferences(d",{"_index":947,"title":{},"body":{"classes/Action-1.html":{}}}],["updatestatus",{"_index":3057,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["updatestatus(replicas",{"_index":3088,"title":{},"body":{"classes/K8sDeployment.html":{}}}],["updatetargetimage",{"_index":4761,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["updateversion",{"_index":2515,"title":{},"body":{"components/DockerImageVersionsComponent.html":{},"injectables/K8sService.html":{},"components/RuntimeUpdateComponent.html":{}}}],["updateversion(deployment",{"_index":3280,"title":{},"body":{"injectables/K8sService.html":{}}}],["updateversion(image",{"_index":1042,"title":{},"body":{"classes/Action-1.html":{},"components/RuntimeUpdateComponent.html":{}}}],["updateversionbuttonlabel(image",{"_index":1019,"title":{},"body":{"classes/Action-1.html":{}}}],["updating",{"_index":3095,"title":{},"body":{"classes/K8sDeployment.html":{},"miscellaneous/enumerations.html":{}}}],["upload",{"_index":1098,"title":{},"body":{"components/ActionComponent.html":{},"modules/AppModule.html":{},"components/PodsListComponent.html":{},"components/UploadButtonComponent.html":{},"dependencies.html":{}}}],["upload(event",{"_index":5483,"title":{},"body":{"components/UploadButtonComponent.html":{}}}],["upload/ng2",{"_index":5490,"title":{},"body":{"components/UploadButtonComponent.html":{}}}],["upload_directives",{"_index":1626,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uploadapi",{"_index":4283,"title":{},"body":{"classes/Result.html":{}}}],["uploadapis",{"_index":2016,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["uploadbuttoncomponent",{"_index":401,"title":{"components/UploadButtonComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uploaded",{"_index":5506,"title":{},"body":{"components/UploadButtonComponent.html":{}}}],["uploadedfile",{"_index":3696,"title":{"classes/UploadedFile.html":{}},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{},"coverage.html":{}}}],["uploader",{"_index":402,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"modules/AppModule.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["uploader.ts",{"_index":3624,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uploader.ts:10",{"_index":5517,"title":{},"body":{"classes/UploadedFile.html":{}}}],["uploader.ts:101",{"_index":3672,"title":{},"body":{"injectables/Ng2Uploader.html":{}}}],["uploader.ts:108",{"_index":3671,"title":{},"body":{"injectables/Ng2Uploader.html":{}}}],["uploader.ts:11",{"_index":5512,"title":{},"body":{"classes/UploadedFile.html":{}}}],["uploader.ts:12",{"_index":5513,"title":{},"body":{"classes/UploadedFile.html":{}}}],["uploader.ts:13",{"_index":5511,"title":{},"body":{"classes/UploadedFile.html":{}}}],["uploader.ts:172",{"_index":3655,"title":{},"body":{"injectables/Ng2Uploader.html":{}}}],["uploader.ts:187",{"_index":3667,"title":{},"body":{"injectables/Ng2Uploader.html":{}}}],["uploader.ts:191",{"_index":3656,"title":{},"body":{"injectables/Ng2Uploader.html":{}}}],["uploader.ts:195",{"_index":3658,"title":{},"body":{"injectables/Ng2Uploader.html":{}}}],["uploader.ts:199",{"_index":3660,"title":{},"body":{"injectables/Ng2Uploader.html":{}}}],["uploader.ts:204",{"_index":3662,"title":{},"body":{"injectables/Ng2Uploader.html":{}}}],["uploader.ts:208",{"_index":3664,"title":{},"body":{"injectables/Ng2Uploader.html":{}}}],["uploader.ts:214",{"_index":3657,"title":{},"body":{"injectables/Ng2Uploader.html":{}}}],["uploader.ts:29",{"_index":5524,"title":{},"body":{"classes/UploadedFile.html":{}}}],["uploader.ts:33",{"_index":5523,"title":{},"body":{"classes/UploadedFile.html":{}}}],["uploader.ts:38",{"_index":5522,"title":{},"body":{"classes/UploadedFile.html":{}}}],["uploader.ts:4",{"_index":5514,"title":{},"body":{"classes/UploadedFile.html":{}}}],["uploader.ts:43",{"_index":5521,"title":{},"body":{"classes/UploadedFile.html":{}}}],["uploader.ts:5",{"_index":5519,"title":{},"body":{"classes/UploadedFile.html":{}}}],["uploader.ts:53",{"_index":3694,"title":{},"body":{"injectables/Ng2Uploader.html":{}}}],["uploader.ts:54",{"_index":3681,"title":{},"body":{"injectables/Ng2Uploader.html":{}}}],["uploader.ts:55",{"_index":3695,"title":{},"body":{"injectables/Ng2Uploader.html":{}}}],["uploader.ts:56",{"_index":3692,"title":{},"body":{"injectables/Ng2Uploader.html":{}}}],["uploader.ts:57",{"_index":3689,"title":{},"body":{"injectables/Ng2Uploader.html":{}}}],["uploader.ts:58",{"_index":3676,"title":{},"body":{"injectables/Ng2Uploader.html":{}}}],["uploader.ts:59",{"_index":3687,"title":{},"body":{"injectables/Ng2Uploader.html":{}}}],["uploader.ts:6",{"_index":5520,"title":{},"body":{"classes/UploadedFile.html":{}}}],["uploader.ts:60",{"_index":3683,"title":{},"body":{"injectables/Ng2Uploader.html":{}}}],["uploader.ts:61",{"_index":3693,"title":{},"body":{"injectables/Ng2Uploader.html":{}}}],["uploader.ts:62",{"_index":3680,"title":{},"body":{"injectables/Ng2Uploader.html":{}}}],["uploader.ts:63",{"_index":3691,"title":{},"body":{"injectables/Ng2Uploader.html":{}}}],["uploader.ts:64",{"_index":3690,"title":{},"body":{"injectables/Ng2Uploader.html":{}}}],["uploader.ts:65",{"_index":3684,"title":{},"body":{"injectables/Ng2Uploader.html":{}}}],["uploader.ts:66",{"_index":3682,"title":{},"body":{"injectables/Ng2Uploader.html":{}}}],["uploader.ts:67",{"_index":3685,"title":{},"body":{"injectables/Ng2Uploader.html":{}}}],["uploader.ts:68",{"_index":3679,"title":{},"body":{"injectables/Ng2Uploader.html":{}}}],["uploader.ts:69",{"_index":3678,"title":{},"body":{"injectables/Ng2Uploader.html":{}}}],["uploader.ts:7",{"_index":5516,"title":{},"body":{"classes/UploadedFile.html":{}}}],["uploader.ts:70",{"_index":3686,"title":{},"body":{"injectables/Ng2Uploader.html":{}}}],["uploader.ts:72",{"_index":3675,"title":{},"body":{"injectables/Ng2Uploader.html":{}}}],["uploader.ts:73",{"_index":3674,"title":{},"body":{"injectables/Ng2Uploader.html":{}}}],["uploader.ts:75",{"_index":3669,"title":{},"body":{"injectables/Ng2Uploader.html":{}}}],["uploader.ts:8",{"_index":5515,"title":{},"body":{"classes/UploadedFile.html":{}}}],["uploader.ts:9",{"_index":5518,"title":{},"body":{"classes/UploadedFile.html":{}}}],["uploadfile",{"_index":3651,"title":{},"body":{"injectables/Ng2Uploader.html":{}}}],["uploadfile(file",{"_index":3670,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["uploadfilesinqueue",{"_index":3652,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["uploadingfile",{"_index":3761,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["uploadingfile.onfinished",{"_index":3782,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["uploadingfile.setabort",{"_index":3776,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["uploadingfile.seterror",{"_index":3778,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["uploadingfile.setprogres",{"_index":3772,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["uploadresource",{"_index":4124,"title":{},"body":{"injectables/ResourceService.html":{}}}],["uploadresource(type",{"_index":4132,"title":{},"body":{"injectables/ResourceService.html":{}}}],["uploadresourceurl",{"_index":4125,"title":{},"body":{"injectables/ResourceService.html":{}}}],["uploadresourceurl(type",{"_index":4134,"title":{},"body":{"injectables/ResourceService.html":{}}}],["uploadurl",{"_index":5471,"title":{},"body":{"components/UploadButtonComponent.html":{}}}],["uppercase",{"_index":3024,"title":{},"body":{"components/HomeComponent.html":{}}}],["uri",{"_index":2407,"title":{},"body":{"classes/DependencyWrapper.html":{},"injectables/PackagesService.html":{},"classes/Payload.html":{},"classes/Sources.html":{}}}],["uri_resources",{"_index":4120,"title":{},"body":{"injectables/ResourceService.html":{}}}],["url",{"_index":96,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/CommitInfo.html":{},"classes/DependencyWrapper.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"injectables/K8sService.html":{},"injectables/Ng2Uploader.html":{},"injectables/PackagesService.html":{},"classes/Payload.html":{},"classes/RepoSettings.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"injectables/Settings.html":{},"classes/Sources.html":{},"injectables/TestConfigService.html":{},"injectables/TestTraceService.html":{},"components/UploadButtonComponent.html":{},"classes/UploadedFile.html":{},"classes/Values.html":{},"classes/WebSocketService.html":{},"miscellaneous/enumerations.html":{}}}],["usage",{"_index":4559,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["use",{"_index":2692,"title":{},"body":{"components/EditContainerComponent.html":{},"classes/RepoSettings.html":{},"injectables/Settings.html":{},"components/StagingComponent.html":{},"classes/Values.html":{},"index.html":{}}}],["usecache",{"_index":2256,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"injectables/K8sService.html":{}}}],["used",{"_index":617,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"components/ServicePropertiesComponent.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["usekubernetes",{"_index":800,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["user",{"_index":144,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Authentication.html":{},"components/BuildExeComponent.html":{},"classes/GitSelectionModel.html":{},"components/HomeComponent.html":{},"classes/Result.html":{},"components/SagImageAlerterComponent.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/SourceWrapper.html":{},"miscellaneous/enumerations.html":{}}}],["user/repos",{"_index":2206,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["usermgmt",{"_index":3396,"title":{},"body":{"injectables/K8sService.html":{}}}],["usertypes",{"_index":4609,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["usesdedicatedrepo",{"_index":703,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["using",{"_index":2991,"title":{},"body":{"components/HomeComponent.html":{}}}],["v",{"_index":949,"title":{},"body":{"classes/Action-1.html":{},"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"classes/ServiceInfo.html":{}}}],["v.dockeremail",{"_index":4182,"title":{},"body":{"classes/Result.html":{}}}],["v.dockerhost",{"_index":4180,"title":{},"body":{"classes/Result.html":{},"components/SagImageAlerterComponent.html":{},"injectables/TestTraceService.html":{}}}],["v.dockerhost).subscribe((d",{"_index":4626,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["v.dockerpassword",{"_index":4186,"title":{},"body":{"classes/Result.html":{}}}],["v.dockeruserid",{"_index":4184,"title":{},"body":{"classes/Result.html":{}}}],["v.endpoint",{"_index":4953,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["v.gitapiurl",{"_index":2229,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"classes/SourceWrapper.html":{}}}],["v.gitispacpassword",{"_index":2237,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["v.gitname",{"_index":2231,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"classes/SourceWrapper.html":{}}}],["v.gitpassword",{"_index":2235,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"classes/SourceWrapper.html":{}}}],["v.gitrepos.foreach((g",{"_index":2795,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["v.gitrepos.foreach((r",{"_index":2750,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["v.gittype",{"_index":2227,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["v.gituri",{"_index":2744,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["v.gituser",{"_index":2233,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"classes/SourceWrapper.html":{}}}],["v.isapi",{"_index":4955,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["v.k8snamespace",{"_index":4447,"title":{},"body":{"components/RuntimeK8sComponent.html":{}}}],["v.k8stoken",{"_index":3323,"title":{},"body":{"injectables/K8sService.html":{}}}],["v.k8stoken).subscribe((names",{"_index":4455,"title":{},"body":{"components/RuntimeK8sComponent.html":{}}}],["v.k8surl",{"_index":3321,"title":{},"body":{"injectables/K8sService.html":{},"components/RuntimeK8sComponent.html":{}}}],["v.tests",{"_index":4957,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["v.tests.push(this.currenttestsuite.tests.get(key.value",{"_index":4958,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["v5",{"_index":1611,"title":{},"body":{"modules/AppModule.html":{}}}],["v=this._version(i.uniquename",{"_index":950,"title":{},"body":{"classes/Action-1.html":{}}}],["valid",{"_index":2831,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["validators",{"_index":1117,"title":{},"body":{"components/ActionComponent.html":{},"components/EditContainerComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/ServiceInfo.html":{},"components/ServicePropertiesComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UploadButtonComponent.html":{}}}],["validators.required",{"_index":4900,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["value",{"_index":260,"title":{},"body":{"injectables/APIGatewayService.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"interfaces/BuildParams.html":{},"classes/CommitInfo.html":{},"injectables/ContainerTemplates.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"injectables/GitSourceService.html":{},"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/K8sPod.html":{},"injectables/K8sService.html":{},"classes/LivePods.html":{},"components/MicroServiceInstallerComponent.html":{},"injectables/Ng2Uploader.html":{},"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{},"injectables/PackagesService.html":{},"components/PodsListComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"classes/Server.html":{},"components/ServicePropertiesComponent.html":{},"injectables/Settings.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{},"classes/TestCase.html":{},"components/TestCaseComponent.html":{},"injectables/TestConfigService.html":{},"components/TestHistoryComponent.html":{},"injectables/TestTraceService.html":{},"components/UploadButtonComponent.html":{},"classes/Values.html":{},"classes/WebSocketService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.datatype",{"_index":879,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["values",{"_index":2123,"title":{"classes/Values.html":{}},"body":{"directives/BuildImageChooseDirective.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"interfaces/PropertiesChangedOwner.html":{},"classes/RepoSettings.html":{},"classes/Result.html":{},"components/SagImageAlerterComponent.html":{},"injectables/Settings.html":{},"classes/Values.html":{},"coverage.html":{}}}],["values.lastviewedpage",{"_index":2940,"title":{},"body":{"components/HomeComponent.html":{}}}],["var",{"_index":312,"title":{},"body":{"components/AboutComponent.html":{},"classes/Action.html":{},"classes/Action-1.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"interfaces/BuildParams.html":{},"classes/CommitInfo.html":{},"injectables/ContainerTemplates.html":{},"classes/DependencyWrapper.html":{},"classes/Deployment.html":{},"components/DeploymentDetailsComponent.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"components/HomeComponent.html":{},"classes/LivePods.html":{},"classes/LivePodsCount.html":{},"components/MicroServiceInstallerComponent.html":{},"injectables/PackagesService.html":{},"components/PodsListComponent.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/Server.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"classes/SourceWrapper.html":{},"classes/Sources.html":{},"classes/Stage.html":{},"components/StagingComponent.html":{},"classes/Test.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["variable",{"_index":5631,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":5761,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":200,"title":{},"body":{"classes/APIDefinition.html":{},"components/AboutComponent.html":{},"classes/Action.html":{},"classes/Action-1.html":{},"modules/AppModule.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildExeComponent.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"components/DockerImageVersionsComponent.html":{},"classes/GitSelectionModel.html":{},"classes/K8sDeployment.html":{},"classes/K8sDeploymentDefinition.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/Server.html":{},"classes/ServiceInfo.html":{},"classes/SourceWrapper.html":{},"classes/Stage.html":{},"classes/Test.html":{},"classes/WmPackageInfo.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["version(s",{"_index":4423,"title":{},"body":{"components/RuntimeDetailsComponent.html":{}}}],["version.indexof",{"_index":732,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["version.lastindexof",{"_index":733,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["version.length",{"_index":735,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["version.substring(idx+1",{"_index":734,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["versioning",{"_index":736,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["versions",{"_index":2510,"title":{},"body":{"components/DockerImageVersionsComponent.html":{},"classes/Result.html":{},"components/SagImageAlerterComponent.html":{}}}],["versions'},{'name",{"_index":354,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/DeploymentDetailsComponent.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/ServicePropertiesComponent.html":{},"components/SimpleNameComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{}}}],["versions(uniquename",{"_index":4225,"title":{},"body":{"classes/Result.html":{}}}],["versions.component",{"_index":1663,"title":{},"body":{"modules/AppModule.html":{},"components/RuntimeUpdateComponent.html":{}}}],["versions.component.ts",{"_index":2509,"title":{},"body":{"components/DockerImageVersionsComponent.html":{},"coverage.html":{}}}],["versions.component.ts:19",{"_index":2519,"title":{},"body":{"components/DockerImageVersionsComponent.html":{}}}],["versions.component.ts:22",{"_index":2518,"title":{},"body":{"components/DockerImageVersionsComponent.html":{}}}],["versions.component.ts:25",{"_index":2520,"title":{},"body":{"components/DockerImageVersionsComponent.html":{}}}],["versions.component.ts:27",{"_index":2530,"title":{},"body":{"components/DockerImageVersionsComponent.html":{}}}],["versions.component.ts:29",{"_index":2517,"title":{},"body":{"components/DockerImageVersionsComponent.html":{}}}],["versions.component.ts:31",{"_index":2531,"title":{},"body":{"components/DockerImageVersionsComponent.html":{}}}],["versions.component.ts:41",{"_index":2525,"title":{},"body":{"components/DockerImageVersionsComponent.html":{}}}],["versions.component.ts:46",{"_index":2524,"title":{},"body":{"components/DockerImageVersionsComponent.html":{}}}],["versions.component.ts:54",{"_index":2522,"title":{},"body":{"components/DockerImageVersionsComponent.html":{}}}],["versions.component.ts:59",{"_index":2527,"title":{},"body":{"components/DockerImageVersionsComponent.html":{}}}],["versions.component.ts:64",{"_index":2521,"title":{},"body":{"components/DockerImageVersionsComponent.html":{}}}],["versions.component.ts:68",{"_index":2528,"title":{},"body":{"components/DockerImageVersionsComponent.html":{}}}],["versions.foreach((v",{"_index":4313,"title":{},"body":{"classes/Result.html":{}}}],["versions.html",{"_index":2511,"title":{},"body":{"components/DockerImageVersionsComponent.html":{}}}],["versions.length",{"_index":4311,"title":{},"body":{"classes/Result.html":{}}}],["versions.push(v",{"_index":4712,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["versiontype",{"_index":3312,"title":{},"body":{"injectables/K8sService.html":{},"classes/Result.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["versiontype.major",{"_index":4785,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["versiontype.minor",{"_index":4783,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["versiontype.patch",{"_index":4781,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["versiontypectrl",{"_index":4593,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["versiontypes",{"_index":4605,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["vertical",{"_index":3011,"title":{},"body":{"components/HomeComponent.html":{}}}],["via",{"_index":2691,"title":{},"body":{"components/EditContainerComponent.html":{},"classes/GitSelectionModel.html":{},"components/MicroServiceInstallerComponent.html":{},"classes/SourceWrapper.html":{},"components/StagingComponent.html":{},"index.html":{}}}],["vial",{"_index":1783,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["view",{"_index":1278,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/MicroServiceInstallerComponent.html":{},"components/UMInstallerComponent.html":{}}}],["viewchild",{"_index":1238,"title":{},"body":{"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildExeComponent.html":{},"classes/GitSelectionModel.html":{},"components/PodsListComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"classes/ServiceInfo.html":{},"classes/SourceWrapper.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/UMInstallerComponent.html":{}}}],["viewchild('buildbutton",{"_index":4612,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["viewchild('gitpaginator",{"_index":2735,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["viewchild('logdiv",{"_index":2045,"title":{},"body":{"components/BuildExeComponent.html":{}}}],["viewchild('packagespaginator",{"_index":4884,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["viewchild('podstable",{"_index":3936,"title":{},"body":{"components/PodsListComponent.html":{}}}],["viewchild('rollbackbutton",{"_index":4518,"title":{},"body":{"components/RuntimeUpdateComponent.html":{}}}],["viewchild('savebutton",{"_index":4614,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["viewchild('servicespaginator",{"_index":4886,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["viewchild('stepper",{"_index":4882,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["viewchild('testframe",{"_index":5362,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["viewchild('testframewrapper",{"_index":5361,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["viewchild('updatebutton",{"_index":4477,"title":{},"body":{"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{}}}],["viewchild(buildimagechoosedirective",{"_index":4611,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["viewchild(matselect",{"_index":4410,"title":{},"body":{"components/RuntimeDetailsComponent.html":{}}}],["viewchild(runtimeactionsdirective",{"_index":4405,"title":{},"body":{"components/RuntimeDetailsComponent.html":{}}}],["viewcontainerref",{"_index":1201,"title":{},"body":{"interfaces/ActionsComponent.html":{},"directives/BuildImageChooseDirective.html":{},"interfaces/BuilderComponent.html":{},"classes/BuilderProperties.html":{},"interfaces/PropertiesChangedOwner.html":{},"directives/RuntimeActionsDirective.html":{},"components/RuntimeDetailsComponent.html":{}}}],["viewcontainerref.clear",{"_index":4432,"title":{},"body":{"components/RuntimeDetailsComponent.html":{}}}],["viewcontainerref.createcomponent(componentfactory",{"_index":4434,"title":{},"body":{"components/RuntimeDetailsComponent.html":{},"components/SagImageAlerterComponent.html":{}}}],["virtual",{"_index":5085,"title":{},"body":{"components/ServicePropertiesComponent.html":{}}}],["visibility",{"_index":3042,"title":{},"body":{"components/HomeComponent.html":{},"components/ServicePropertiesComponent.html":{}}}],["visible",{"_index":3043,"title":{},"body":{"components/HomeComponent.html":{},"components/ServicePropertiesComponent.html":{}}}],["void",{"_index":281,"title":{},"body":{"components/AboutComponent.html":{},"components/ActionComponent.html":{},"components/ApiGatewayInstallerComponent.html":{},"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"directives/CancelCdkDrag.html":{},"injectables/ContainerTemplates.html":{},"classes/Deployment.html":{},"components/DockerImageVersionsComponent.html":{},"components/EditContainerComponent.html":{},"classes/GitSelectionModel.html":{},"components/HomeComponent.html":{},"classes/K8sDeployment.html":{},"injectables/K8sService.html":{},"classes/LivePods.html":{},"components/MicroServiceInstallerComponent.html":{},"injectables/Ng2Uploader.html":{},"directives/NgFileDrop.html":{},"directives/NgFileSelect.html":{},"components/PodsListComponent.html":{},"injectables/ResourceService.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeScaleComponent.html":{},"components/RuntimeUpdateComponent.html":{},"classes/SearchObj.html":{},"components/ServicePropertiesComponent.html":{},"injectables/Settings.html":{},"classes/Source.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"components/UMInstallerComponent.html":{},"components/UploadButtonComponent.html":{},"classes/UploadedFile.html":{},"classes/WebSocketService.html":{}}}],["volumes",{"_index":686,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"components/ServicePropertiesComponent.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["warn",{"_index":1008,"title":{},"body":{"classes/Action-1.html":{},"classes/ServiceInfo.html":{}}}],["warning",{"_index":2440,"title":{},"body":{"classes/DependencyWrapper.html":{},"injectables/PackagesService.html":{},"classes/Sources.html":{}}}],["watt.server.http.x",{"_index":5384,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["web",{"_index":58,"title":{},"body":{"classes/API.html":{},"injectables/APIGatewayService.html":{},"classes/APIPolicy.html":{},"classes/Scope.html":{},"classes/SearchObj.html":{},"classes/WebSocketService.html":{},"miscellaneous/enumerations.html":{}}}],["webkit",{"_index":1984,"title":{},"body":{"components/BuildComponent.html":{},"components/TestCaseComponent.html":{}}}],["webmethods",{"_index":302,"title":{},"body":{"components/AboutComponent.html":{},"components/BuildComponent.html":{},"injectables/ContainerTemplates.html":{},"components/HomeComponent.html":{}}}],["websocket",{"_index":5560,"title":{},"body":{"classes/WebSocketService.html":{}}}],["websocket(url",{"_index":5583,"title":{},"body":{"classes/WebSocketService.html":{}}}],["websocket.closing",{"_index":5594,"title":{},"body":{"classes/WebSocketService.html":{}}}],["websocket.connecting",{"_index":5593,"title":{},"body":{"classes/WebSocketService.html":{}}}],["websocket.open",{"_index":5592,"title":{},"body":{"classes/WebSocketService.html":{}}}],["websocket.service",{"_index":4154,"title":{},"body":{"classes/Result.html":{}}}],["websocketservice",{"_index":4153,"title":{"classes/WebSocketService.html":{}},"body":{"classes/Result.html":{},"classes/WebSocketService.html":{},"coverage.html":{}}}],["websocketservice(path",{"_index":5590,"title":{},"body":{"classes/WebSocketService.html":{}}}],["websocketservice.closedefault",{"_index":4277,"title":{},"body":{"classes/Result.html":{}}}],["websocketservice.default(\"docker/container",{"_index":4234,"title":{},"body":{"classes/Result.html":{}}}],["websocketservice.default(\"docker/log\").listen(obs",{"_index":4264,"title":{},"body":{"classes/Result.html":{}}}],["websocketservice.url",{"_index":5580,"title":{},"body":{"classes/WebSocketService.html":{}}}],["weight",{"_index":3032,"title":{},"body":{"components/HomeComponent.html":{}}}],["welcome",{"_index":2984,"title":{},"body":{"components/HomeComponent.html":{}}}],["whether",{"_index":2766,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["while(!(result=it.next()).done",{"_index":4794,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["while(!key.done",{"_index":4952,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["white",{"_index":988,"title":{},"body":{"classes/Action-1.html":{},"components/BuildComponent.html":{},"components/BuildExeComponent.html":{},"components/HomeComponent.html":{},"components/PodsListComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/UploadButtonComponent.html":{}}}],["wide",{"_index":954,"title":{},"body":{"classes/Action-1.html":{}}}],["width",{"_index":1963,"title":{},"body":{"components/BuildComponent.html":{},"components/EditContainerComponent.html":{},"components/HomeComponent.html":{},"components/RuntimeDetailsComponent.html":{},"components/RuntimeK8sComponent.html":{},"components/RuntimeUpdateComponent.html":{},"components/SagImageAlerterComponent.html":{},"components/StagingComponent.html":{},"components/TestCaseComponent.html":{}}}],["window.alert(\"build",{"_index":4821,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["window.alert(\"error",{"_index":2828,"title":{},"body":{"classes/GitSelectionModel.html":{},"classes/SourceWrapper.html":{}}}],["window.open(\"/rad/jc.devops:api/docker/build",{"_index":4827,"title":{},"body":{"components/SagImageAlerterComponent.html":{}}}],["window.open(resourceservice.uri_resources",{"_index":4140,"title":{},"body":{"injectables/ResourceService.html":{}}}],["window.open(settings.server_api",{"_index":4917,"title":{},"body":{"classes/ServiceInfo.html":{}}}],["withcredentials",{"_index":3642,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["wm",{"_index":5460,"title":{},"body":{"components/UMInstallerComponent.html":{}}}],["wmdevopsconsole",{"_index":5734,"title":{},"body":{"index.html":{}}}],["wminstallerimage",{"_index":555,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{}}}],["wmpackageinfo",{"_index":199,"title":{"classes/WmPackageInfo.html":{}},"body":{"classes/APIDefinition.html":{},"classes/CommitInfo.html":{},"classes/DependencyWrapper.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"classes/GitSelectionModel.html":{},"injectables/GitSourceService.html":{},"injectables/PackagesService.html":{},"components/SagImageAlerterComponent.html":{},"classes/ServiceInfo.html":{},"classes/SourceWrapper.html":{},"classes/Sources.html":{},"components/TestCaseComponent.html":{},"injectables/TestConfigService.html":{},"components/TestHistoryComponent.html":{},"components/TestRunComponent.html":{},"classes/WmPackageInfo.html":{},"coverage.html":{}}}],["wmpackageinfo(data.name",{"_index":210,"title":{},"body":{"classes/APIDefinition.html":{},"classes/WmPackageInfo.html":{}}}],["wmpackageinfo(r",{"_index":247,"title":{},"body":{"classes/APIDefinition.html":{},"classes/WmPackageInfo.html":{}}}],["wmpackageinfo.make",{"_index":2421,"title":{},"body":{"classes/DependencyWrapper.html":{},"injectables/PackagesService.html":{},"classes/Sources.html":{},"injectables/TestConfigService.html":{}}}],["wmpackages",{"_index":2865,"title":{},"body":{"injectables/GitSourceService.html":{}}}],["wmpackages(git",{"_index":2254,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["workstation",{"_index":5376,"title":{},"body":{"components/TestHistoryComponent.html":{}}}],["world",{"_index":3143,"title":{},"body":{"classes/K8sDeploymentDefinition.html":{},"injectables/K8sService.html":{}}}],["wrap",{"_index":5323,"title":{},"body":{"components/TestCaseComponent.html":{}}}],["wrapper",{"_index":1501,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{},"classes/Result.html":{}}}],["ws",{"_index":4233,"title":{},"body":{"classes/Result.html":{}}}],["ws.isactive",{"_index":4236,"title":{},"body":{"classes/Result.html":{}}}],["ws.listen().subscribe((log",{"_index":4240,"title":{},"body":{"classes/Result.html":{}}}],["ws.send(json.stringify(def)).subscribe((result",{"_index":4239,"title":{},"body":{"classes/Result.html":{}}}],["ws://localhost:9191",{"_index":4036,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["ws_server",{"_index":4035,"title":{},"body":{"classes/RepoSettings.html":{},"injectables/Settings.html":{},"classes/Values.html":{}}}],["x",{"_index":2601,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["xhr",{"_index":3756,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["xhr.onreadystatechange",{"_index":3779,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["xhr.open(this.method",{"_index":3787,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["xhr.readystate",{"_index":3780,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["xhr.response",{"_index":3785,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["xhr.send(form",{"_index":3793,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["xhr.setrequestheader(\"authorization",{"_index":3792,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["xhr.setrequestheader(key",{"_index":3790,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["xhr.status",{"_index":3783,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["xhr.statustext",{"_index":3784,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["xhr.upload.onabort",{"_index":3775,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["xhr.upload.onerror",{"_index":3777,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["xhr.upload.onprogress",{"_index":3766,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["xhr.withcredentials",{"_index":3788,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["xml",{"_index":1528,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{},"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"classes/Payload.html":{},"miscellaneous/enumerations.html":{}}}],["xml.getelementsbytagname('values",{"_index":2287,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["xml2json",{"_index":2177,"title":{},"body":{"classes/CommitInfo.html":{},"classes/DependencyWrapper.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{},"injectables/PackagesService.html":{},"injectables/ResourceService.html":{},"classes/Result.html":{},"classes/Sources.html":{},"dependencies.html":{}}}],["xmlhttprequest",{"_index":3757,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["xmlhttprequest.done",{"_index":3781,"title":{},"body":{"injectables/Ng2Uploader.html":{},"classes/UploadedFile.html":{}}}],["xmlstring",{"_index":2283,"title":{},"body":{"classes/CommitInfo.html":{},"classes/FileInfo.html":{},"classes/GitRepo.html":{},"injectables/GitSourceService.html":{}}}],["xposofmaindiv",{"_index":2907,"title":{},"body":{"components/HomeComponent.html":{}}}],["x}px",{"_index":2609,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["y",{"_index":1437,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{},"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["yellow",{"_index":3959,"title":{},"body":{"components/PodsListComponent.html":{}}}],["yes",{"_index":2488,"title":{},"body":{"classes/DockerBuild.html":{},"injectables/GitSourceService.html":{},"classes/K8sDeployment.html":{},"injectables/K8sService.html":{},"injectables/PackagesService.html":{},"classes/Port.html":{},"classes/Result.html":{},"classes/RunSet.html":{},"injectables/Settings.html":{},"classes/WebSocketService.html":{}}}],["yesno",{"_index":462,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{},"miscellaneous/enumerations.html":{}}}],["yum",{"_index":1423,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{}}}],["yum.buildtarget",{"_index":1428,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{}}}],["yum.commandtype",{"_index":1427,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{}}}],["yum.description",{"_index":1431,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{}}}],["yum.filetype",{"_index":1430,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{}}}],["yum.target",{"_index":1436,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{},"components/ApiPortalInstallerComponent.html":{}}}],["yymmddhhmmss",{"_index":5241,"title":{},"body":{"classes/TestCase.html":{}}}],["y}px",{"_index":2610,"title":{},"body":{"components/EditContainerComponent.html":{},"components/StagingComponent.html":{}}}],["z",{"_index":865,"title":{},"body":{"classes/Action.html":{},"classes/Arg.html":{},"classes/ArgDisplayType.html":{},"classes/Authentication.html":{},"classes/BuildCommand.html":{},"components/BuildComponent.html":{},"interfaces/BuildParams.html":{},"classes/Deployment.html":{},"classes/DeploymentSet.html":{},"classes/DockerBuild.html":{},"classes/Port.html":{},"classes/Probe.html":{},"classes/Project.html":{},"classes/RunSet.html":{},"classes/Server.html":{},"classes/Stage.html":{},"classes/Test.html":{},"components/TestCaseComponent.html":{}}}],["zip",{"_index":1449,"title":{},"body":{"components/ApiMicroGatewayInstallerComponent.html":{}}}],["zone.js",{"_index":5719,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":1585,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/API.html":{"url":"classes/API.html","title":"class - API","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  API\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api-gateway.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                isActive\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                owner\n                            \n                            \n                                    Public\n                                policies\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                make\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api-gateway.service.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/api-gateway.service.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/api-gateway.service.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/api-gateway.service.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            owner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/api-gateway.service.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            policies\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     APIPolicy[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/api-gateway.service.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         APIType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/api-gateway.service.ts:30\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            make\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    make(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api-gateway.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         API\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } \t           \t \tfrom '@angular/core';\nimport { HttpClient, HttpHeaders, \n                      HttpParams }      from '@angular/common/http';\nimport { Observable, of }               from 'rxjs';\nimport { switchMap, map } \t\t\t\tfrom 'rxjs/operators';\n\nimport { Settings }                     from '../settings';\n\nexport enum APIType {\n\tREST = \"REST\",\n\tSOAP = \"SOAP\",\n\tSOCKET =\"Web Socket\"\n}\n\nexport class APIPolicy {\n\n\tpublic static make(data: any): APIPolicy {\n\n\t\tlet p: APIPolicy = new APIPolicy();\n\n\t\treturn p;\n\t}\n}\n\nexport class API {\n\n\tpublic id: string;\n\tpublic name: string;\n\tpublic isActive: boolean;\n\tpublic type: APIType;\n\tpublic policies: APIPolicy[];\n\tpublic owner: string;\n\n\tconstructor(id: string) {\n\t\t\n\t\tthis.id = id;\n\t\tthis.policies = [];\n\t}\n\n\tpublic static make(data: any): API {\n\n\t\tlet api: API = new API(data.id);\n\t\tapi.name = data.apiName;\n\t\tapi.isActive = data.isActive == 'true',\n\t\tapi.type = APIType[ data.type];\n\t\tapi.owner = data.owner;\n\n\t\tif (data.policy) {\n\t\t\tapi.policies.push(APIPolicy.make(data.policy));\n\t\t}\n\n\t\treturn api;\n\t}\n}\n\nexport enum Maturity {\n\tBeta = \"Beta\",\n\tDeprecated = \"Deprecated\",\n\tExperimental = \"Experimental\",\n\tProduction = \"Production\",\n\tTest = \"Test\"\n}\n\n@Injectable()\nexport class APIGatewayService {\n\t\n\tpublic static SEARCH: string = \"/rest/apigateway/search\";\n\n\tprivate _gatewayUrl: string;\n\tprivate _gatewayUser: string;\n\tprivate _gatewayPwd: string;\n\n\tconstructor(private _settings: Settings, private _http: HttpClient) {   \n\t\t\n    }\n\n\tpublic apiList(apiGatewayUrl: string, apiGatewayUser: string, apiGatewayPassword: string, maturity: string, activeOnly: boolean): Observable {\n\n\t\tlet url: string = apiGatewayUrl + APIGatewayService.SEARCH;\n\n\t\tlet search: SearchObj = new SearchObj([Type.api], Condition.and, 0, -1);\n\t\tsearch.responseFields = ['apiName', 'id', 'name', 'owner', 'policyScope','names'];\n\n\t\tif (activeOnly)\n\t\t\tsearch.addScope('isActive', true);\n\n\t\tsearch.addScope('maturityState', maturity.toString());\n\n\t\tlet payload: string = JSON.stringify(search);\n\n\t\tlet headers = new HttpHeaders()\n                    .append('Content-Type', 'application/json')\n                    .append('Accept', 'application/json')\n                    .append('Cache-Control', 'no-cache')\n                    .append('Cache-Control', 'no-store')\n                    .append('Pragma','no-cache')\n                    .append('Expires', '0')\n                    .append('Accept', 'application/json')\n                    .set('Authorization', `Basic ${btoa(apiGatewayUser + \":\" + apiGatewayPassword)}`);\n\n\t\tlet options: any = { headers };\n\n      \treturn this._http.post(url, payload, options).pipe(map( (responseData) => {\n\n            return this._mapResponse(responseData);\n            \n          },\n          error => {\n            return null;\n       \t}));\n\t}\n\n\t private _mapResponse(responseData: any): API[]\n    {\n // data is returned as list called references or as a single entity\n\n \t\tlet images: API[] = [];\n\n \t\tresponseData.forEach((i) => {\n \t\t\timages.push(API.make(i));\n \t\t});\n\n \t\treturn images;\n    }\n}\n\nenum Type {\n\tapi = \"api\",\n\tapplication = \"application\",\n\talias = \"application\",\n\tuser = \"user\",\n\tgroup = \"group\",\n\tpolicy = \"policy\"\n}\n\nenum Condition {\n\tor = \"or\",\n\tand = \"and\"\n}\n\nclass Scope {\n\tattributeName: string;\n\tkeyWord: any;\n}\n\nclass SearchObj {\n\n\tpublic types: Type[];\n\tpublic condition: Condition;\n\tpublic scope: Scope[];\n\tpublic responseFields: string[];\n\tpublic from: number;\n\tpublic size: number;\n\n\tconstructor(types: Type[], condition: Condition, from: number, size: number) {\n\n\t\tthis.types = types;\n\t\tthis.condition = condition;\n\t\tthis.from = from;\n\t\tthis.size = size;\n\t\tthis.scope = [];\n\t}\n\n\tpublic addScope(attributeName: string, keyWord: any) {\n\n\t\tlet scope: Scope = new Scope();\n\t\tscope.attributeName = attributeName;\n\t\tscope.keyWord = keyWord;\n\n\t\tthis.scope.push(scope);\n\t}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/APIDefinition.html":{"url":"classes/APIDefinition.html","title":"class - APIDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  APIDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/wm-package-info.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                deployment\n                            \n                            \n                                    Public\n                                endPoint\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                package\n                            \n                            \n                                    Public\n                                swaggerEndPoint\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                make\n                            \n                            \n                                    Static\n                                makeArray\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            deployment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/wm-package-info.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            endPoint\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/wm-package-info.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/wm-package-info.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            package\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/wm-package-info.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            swaggerEndPoint\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/wm-package-info.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            make\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    make(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/wm-package-info.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         APIDefinition\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            makeArray\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    makeArray(array: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/wm-package-info.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    array\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     APIDefinition[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TestStatus } \t\t\t\t\t\t\tfrom '../models/docker-image';\n\nexport class APIDefinition {\n\n\tpublic package: string;\n\tpublic name: string;\n\tpublic swaggerEndPoint: string;\n\tpublic endPoint: string;\n\tpublic deployment: string;\n\t\n\tpublic static make(data: any) {\n\n\t\tlet api = new APIDefinition();\n\t\tapi.package = data.package;\n\t\tapi.name = data.name;\n\t\tapi.swaggerEndPoint = data.swaggerEndPoint;\n\t\tapi.endPoint = data.endPoint;\n\n\t\treturn api;\n\t}\n\n\tpublic static makeArray(array: any): APIDefinition[] {\n\n    let apis: APIDefinition[] = [];\n\n    array.foreach((p) => {\n      apis.push(APIDefinition. make(p));\n    });\n\n    return apis;\n  }\n}\n\nexport class WmPackageInfo {\n\n\tpublic name: string;\n\tpublic version: number;\n\tpublic build: number;\n\tpublic description: string;\n\tpublic requires: WmPackageInfo[];\n\tpublic startup: string;\n\tpublic shutdown: string;\n\tpublic testStatus: TestStatus;\n\tpublic services: string[];\n\tpublic apis: APIDefinition[];\n\n\tconstructor(name: string) {\n\t\tthis.name = name;\n\t}\n\n\tpublic static make(data: any): WmPackageInfo {\n\n\t\tlet pck: WmPackageInfo = new WmPackageInfo(data.name);\n\n\t\tpck.apis = [];\n\t\tpck.version = data.version;\n\t\tpck.build = data.version;\n\t\tpck.description = data.description;\n\t\tpck.startup = data.startup;\n\t\tpck.shutdown = data.shutdown;\n\n\t\tif (data.testStatus == \"success\")\n\t\t\tpck.testStatus = TestStatus.passed;\n\t\telse if (data.testStatus == \"failed\")\n\t\t\tpck.testStatus = TestStatus.failed;\n\t\telse if (data.testStatus == \"running\")\n\t\t\tpck.testStatus = TestStatus.running;\n\t\telse if (data.testStatus == \"todo\")\n\t\t\tpck.testStatus = TestStatus.todo;\n\t\telse\n\t\t\tpck.testStatus = TestStatus.none;\n\n\t\tpck.services = data.services;\n\t\t\n\t\tif (data.apis) {\n\t\t\tdata.apis.forEach((a) => {\n\n\t\t\t\tlet api: APIDefinition = new APIDefinition();\n\t\t\t\tapi.package = pck.name;\n\t\t\t\tapi.name = a.name;\n\t\t\t\tapi.swaggerEndPoint = a.swaggerEndPoint;\n\t\t\t\tapi.endPoint = a.endPoint;\n\t\t\t\tpck.apis.push(api);\n\t\t\t});\n\t\t}\n\n\t\tpck.requires = [];\n\n\t\tif (data.requires) {\n\n\t\t\tif (data.requires instanceof String)  {\n\n\t\t\t\tlet array: string[] = data.required.split(\",\");\n\n\t\t\t\tarray.forEach((r) => {\n\t\t\t\t\tpck.requires.push(new WmPackageInfo(r));\n\n\t\t\t\t});\n\t\t\t} else {\n\n\t\t\t\tdata.requires.forEach((r) => {\n\t\t\t\t\tpck.requires.push(WmPackageInfo.make(r));\n\n\t\t\t\t});\n\n\t\t\t}\n\t\t}\n\n\t\treturn pck;\n\t}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/APIGatewayService.html":{"url":"injectables/APIGatewayService.html","title":"injectable - APIGatewayService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  APIGatewayService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api-gateway.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _gatewayPwd\n                            \n                            \n                                    Private\n                                _gatewayUrl\n                            \n                            \n                                    Private\n                                _gatewayUser\n                            \n                            \n                                    Static\n                                SEARCH\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _mapResponse\n                            \n                            \n                                    Public\n                                apiList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_settings: Settings, _http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api-gateway.service.ts:71\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _settings\n                                                  \n                                                        \n                                                                        Settings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _mapResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _mapResponse(responseData: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api-gateway.service.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    responseData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         API[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            apiList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    apiList(apiGatewayUrl: string, apiGatewayUser: string, apiGatewayPassword: string, maturity: string, activeOnly: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api-gateway.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    apiGatewayUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    apiGatewayUser\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    apiGatewayPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    maturity\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    activeOnly\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _gatewayPwd\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/api-gateway.service.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _gatewayUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/api-gateway.service.ts:69\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _gatewayUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/api-gateway.service.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            SEARCH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"/rest/apigateway/search\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/api-gateway.service.ts:67\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } \t           \t \tfrom '@angular/core';\nimport { HttpClient, HttpHeaders, \n                      HttpParams }      from '@angular/common/http';\nimport { Observable, of }               from 'rxjs';\nimport { switchMap, map } \t\t\t\tfrom 'rxjs/operators';\n\nimport { Settings }                     from '../settings';\n\nexport enum APIType {\n\tREST = \"REST\",\n\tSOAP = \"SOAP\",\n\tSOCKET =\"Web Socket\"\n}\n\nexport class APIPolicy {\n\n\tpublic static make(data: any): APIPolicy {\n\n\t\tlet p: APIPolicy = new APIPolicy();\n\n\t\treturn p;\n\t}\n}\n\nexport class API {\n\n\tpublic id: string;\n\tpublic name: string;\n\tpublic isActive: boolean;\n\tpublic type: APIType;\n\tpublic policies: APIPolicy[];\n\tpublic owner: string;\n\n\tconstructor(id: string) {\n\t\t\n\t\tthis.id = id;\n\t\tthis.policies = [];\n\t}\n\n\tpublic static make(data: any): API {\n\n\t\tlet api: API = new API(data.id);\n\t\tapi.name = data.apiName;\n\t\tapi.isActive = data.isActive == 'true',\n\t\tapi.type = APIType[ data.type];\n\t\tapi.owner = data.owner;\n\n\t\tif (data.policy) {\n\t\t\tapi.policies.push(APIPolicy.make(data.policy));\n\t\t}\n\n\t\treturn api;\n\t}\n}\n\nexport enum Maturity {\n\tBeta = \"Beta\",\n\tDeprecated = \"Deprecated\",\n\tExperimental = \"Experimental\",\n\tProduction = \"Production\",\n\tTest = \"Test\"\n}\n\n@Injectable()\nexport class APIGatewayService {\n\t\n\tpublic static SEARCH: string = \"/rest/apigateway/search\";\n\n\tprivate _gatewayUrl: string;\n\tprivate _gatewayUser: string;\n\tprivate _gatewayPwd: string;\n\n\tconstructor(private _settings: Settings, private _http: HttpClient) {   \n\t\t\n    }\n\n\tpublic apiList(apiGatewayUrl: string, apiGatewayUser: string, apiGatewayPassword: string, maturity: string, activeOnly: boolean): Observable {\n\n\t\tlet url: string = apiGatewayUrl + APIGatewayService.SEARCH;\n\n\t\tlet search: SearchObj = new SearchObj([Type.api], Condition.and, 0, -1);\n\t\tsearch.responseFields = ['apiName', 'id', 'name', 'owner', 'policyScope','names'];\n\n\t\tif (activeOnly)\n\t\t\tsearch.addScope('isActive', true);\n\n\t\tsearch.addScope('maturityState', maturity.toString());\n\n\t\tlet payload: string = JSON.stringify(search);\n\n\t\tlet headers = new HttpHeaders()\n                    .append('Content-Type', 'application/json')\n                    .append('Accept', 'application/json')\n                    .append('Cache-Control', 'no-cache')\n                    .append('Cache-Control', 'no-store')\n                    .append('Pragma','no-cache')\n                    .append('Expires', '0')\n                    .append('Accept', 'application/json')\n                    .set('Authorization', `Basic ${btoa(apiGatewayUser + \":\" + apiGatewayPassword)}`);\n\n\t\tlet options: any = { headers };\n\n      \treturn this._http.post(url, payload, options).pipe(map( (responseData) => {\n\n            return this._mapResponse(responseData);\n            \n          },\n          error => {\n            return null;\n       \t}));\n\t}\n\n\t private _mapResponse(responseData: any): API[]\n    {\n // data is returned as list called references or as a single entity\n\n \t\tlet images: API[] = [];\n\n \t\tresponseData.forEach((i) => {\n \t\t\timages.push(API.make(i));\n \t\t});\n\n \t\treturn images;\n    }\n}\n\nenum Type {\n\tapi = \"api\",\n\tapplication = \"application\",\n\talias = \"application\",\n\tuser = \"user\",\n\tgroup = \"group\",\n\tpolicy = \"policy\"\n}\n\nenum Condition {\n\tor = \"or\",\n\tand = \"and\"\n}\n\nclass Scope {\n\tattributeName: string;\n\tkeyWord: any;\n}\n\nclass SearchObj {\n\n\tpublic types: Type[];\n\tpublic condition: Condition;\n\tpublic scope: Scope[];\n\tpublic responseFields: string[];\n\tpublic from: number;\n\tpublic size: number;\n\n\tconstructor(types: Type[], condition: Condition, from: number, size: number) {\n\n\t\tthis.types = types;\n\t\tthis.condition = condition;\n\t\tthis.from = from;\n\t\tthis.size = size;\n\t\tthis.scope = [];\n\t}\n\n\tpublic addScope(attributeName: string, keyWord: any) {\n\n\t\tlet scope: Scope = new Scope();\n\t\tscope.attributeName = attributeName;\n\t\tscope.keyWord = keyWord;\n\n\t\tthis.scope.push(scope);\n\t}\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/APIPolicy.html":{"url":"classes/APIPolicy.html","title":"class - APIPolicy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  APIPolicy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api-gateway.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                make\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            make\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    make(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api-gateway.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         APIPolicy\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } \t           \t \tfrom '@angular/core';\nimport { HttpClient, HttpHeaders, \n                      HttpParams }      from '@angular/common/http';\nimport { Observable, of }               from 'rxjs';\nimport { switchMap, map } \t\t\t\tfrom 'rxjs/operators';\n\nimport { Settings }                     from '../settings';\n\nexport enum APIType {\n\tREST = \"REST\",\n\tSOAP = \"SOAP\",\n\tSOCKET =\"Web Socket\"\n}\n\nexport class APIPolicy {\n\n\tpublic static make(data: any): APIPolicy {\n\n\t\tlet p: APIPolicy = new APIPolicy();\n\n\t\treturn p;\n\t}\n}\n\nexport class API {\n\n\tpublic id: string;\n\tpublic name: string;\n\tpublic isActive: boolean;\n\tpublic type: APIType;\n\tpublic policies: APIPolicy[];\n\tpublic owner: string;\n\n\tconstructor(id: string) {\n\t\t\n\t\tthis.id = id;\n\t\tthis.policies = [];\n\t}\n\n\tpublic static make(data: any): API {\n\n\t\tlet api: API = new API(data.id);\n\t\tapi.name = data.apiName;\n\t\tapi.isActive = data.isActive == 'true',\n\t\tapi.type = APIType[ data.type];\n\t\tapi.owner = data.owner;\n\n\t\tif (data.policy) {\n\t\t\tapi.policies.push(APIPolicy.make(data.policy));\n\t\t}\n\n\t\treturn api;\n\t}\n}\n\nexport enum Maturity {\n\tBeta = \"Beta\",\n\tDeprecated = \"Deprecated\",\n\tExperimental = \"Experimental\",\n\tProduction = \"Production\",\n\tTest = \"Test\"\n}\n\n@Injectable()\nexport class APIGatewayService {\n\t\n\tpublic static SEARCH: string = \"/rest/apigateway/search\";\n\n\tprivate _gatewayUrl: string;\n\tprivate _gatewayUser: string;\n\tprivate _gatewayPwd: string;\n\n\tconstructor(private _settings: Settings, private _http: HttpClient) {   \n\t\t\n    }\n\n\tpublic apiList(apiGatewayUrl: string, apiGatewayUser: string, apiGatewayPassword: string, maturity: string, activeOnly: boolean): Observable {\n\n\t\tlet url: string = apiGatewayUrl + APIGatewayService.SEARCH;\n\n\t\tlet search: SearchObj = new SearchObj([Type.api], Condition.and, 0, -1);\n\t\tsearch.responseFields = ['apiName', 'id', 'name', 'owner', 'policyScope','names'];\n\n\t\tif (activeOnly)\n\t\t\tsearch.addScope('isActive', true);\n\n\t\tsearch.addScope('maturityState', maturity.toString());\n\n\t\tlet payload: string = JSON.stringify(search);\n\n\t\tlet headers = new HttpHeaders()\n                    .append('Content-Type', 'application/json')\n                    .append('Accept', 'application/json')\n                    .append('Cache-Control', 'no-cache')\n                    .append('Cache-Control', 'no-store')\n                    .append('Pragma','no-cache')\n                    .append('Expires', '0')\n                    .append('Accept', 'application/json')\n                    .set('Authorization', `Basic ${btoa(apiGatewayUser + \":\" + apiGatewayPassword)}`);\n\n\t\tlet options: any = { headers };\n\n      \treturn this._http.post(url, payload, options).pipe(map( (responseData) => {\n\n            return this._mapResponse(responseData);\n            \n          },\n          error => {\n            return null;\n       \t}));\n\t}\n\n\t private _mapResponse(responseData: any): API[]\n    {\n // data is returned as list called references or as a single entity\n\n \t\tlet images: API[] = [];\n\n \t\tresponseData.forEach((i) => {\n \t\t\timages.push(API.make(i));\n \t\t});\n\n \t\treturn images;\n    }\n}\n\nenum Type {\n\tapi = \"api\",\n\tapplication = \"application\",\n\talias = \"application\",\n\tuser = \"user\",\n\tgroup = \"group\",\n\tpolicy = \"policy\"\n}\n\nenum Condition {\n\tor = \"or\",\n\tand = \"and\"\n}\n\nclass Scope {\n\tattributeName: string;\n\tkeyWord: any;\n}\n\nclass SearchObj {\n\n\tpublic types: Type[];\n\tpublic condition: Condition;\n\tpublic scope: Scope[];\n\tpublic responseFields: string[];\n\tpublic from: number;\n\tpublic size: number;\n\n\tconstructor(types: Type[], condition: Condition, from: number, size: number) {\n\n\t\tthis.types = types;\n\t\tthis.condition = condition;\n\t\tthis.from = from;\n\t\tthis.size = size;\n\t\tthis.scope = [];\n\t}\n\n\tpublic addScope(attributeName: string, keyWord: any) {\n\n\t\tlet scope: Scope = new Scope();\n\t\tscope.attributeName = attributeName;\n\t\tscope.keyWord = keyWord;\n\n\t\tthis.scope.push(scope);\n\t}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AboutComponent.html":{"url":"components/AboutComponent.html","title":"component - AboutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AboutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/about.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                about-app\n            \n\n\n\n\n            \n                templateUrl\n                ../templates/about.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onNoClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/about.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNoClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/about.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/about.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ChangeDetectorRef, Inject, \n\t\t\t\t\t\t\t\t\tOnDestroy }        from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} \t   from '@angular/material';\n\n@Component({\n  selector: 'about-app',\n  templateUrl: '../templates/about.html',\n})\nexport class AboutComponent {\n\n  // constructor(public dialogRef: MatDialogRef, @Inject(MAT_DIALOG_DATA) public data: DialogData) {\n   constructor(public dialogRef: MatDialogRef) {\n   \t\n   }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n    \n\n    \n        \n\n  \tDevops Console\n\tVersion: 0.1\n\tBuild: 100\n\tLast Updated: December 2018\n\t\n\t\tConsole to facilitate webmethods image container creation and deployment to kubernetes environment\n\t\n\n\n  Close\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  \tDevops Console\tVersion: 0.1\tBuild: 100\tLast Updated: December 2018\t\t\tConsole to facilitate webmethods image container creation and deployment to kubernetes environment\t  Close'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about-app'},{'name': 'ActionComponent', 'selector': 'action'},{'name': 'ApiGatewayInstallerComponent', 'selector': 'jc-apigw-install'},{'name': 'ApiMicroGatewayInstallerComponent', 'selector': 'jc-apimg-install'},{'name': 'ApiPortalInstallerComponent', 'selector': 'jc-apipr-installer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildCommandsComponent', 'selector': 'build-commands'},{'name': 'BuildComponent', 'selector': 'build'},{'name': 'BuildExeComponent', 'selector': 'build-exe'},{'name': 'BuildImageComponent', 'selector': 'build-solution'},{'name': 'BuildInstallComponent', 'selector': 'build-install'},{'name': 'BuildPackagesComponent', 'selector': 'build-package'},{'name': 'ContainerComponent', 'selector': 'container'},{'name': 'ContainersComponent', 'selector': 'app-containers'},{'name': 'DeploymentDetailsComponent', 'selector': 'jc-deployment-details'},{'name': 'DeploymentListComponent', 'selector': 'jc-k8s-deployments'},{'name': 'DockerImageChooserComponent', 'selector': 'docker-image-chooser'},{'name': 'DockerImageListComponent', 'selector': 'jc-docker-images'},{'name': 'DockerImageVersionsComponent', 'selector': 'jc-docker-image-versions'},{'name': 'EditContainerComponent', 'selector': 'edit-container'},{'name': 'GitSourcesComponent', 'selector': 'git-source'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'InstallerComponent', 'selector': 'jc-install'},{'name': 'MicroServiceBuilderComponent', 'selector': 'jc-msc-configure'},{'name': 'MicroServiceInstallerComponent', 'selector': 'jc-msc-install'},{'name': 'PodsListComponent', 'selector': 'jc-pods'},{'name': 'RuntimeContainersComponent', 'selector': 'runtime-containers'},{'name': 'RuntimeDeployComponent', 'selector': 'runtime-deploy'},{'name': 'RuntimeDetailsComponent', 'selector': ''},{'name': 'RuntimeK8sComponent', 'selector': 'runtime'},{'name': 'RuntimeScaleComponent', 'selector': 'jc-runtime-scale'},{'name': 'RuntimeStageComponent', 'selector': 'runtime-stage'},{'name': 'RuntimeUpdateComponent', 'selector': ''},{'name': 'SagImageAlerterComponent', 'selector': 'sag-image-alerter'},{'name': 'ServicePropertiesComponent', 'selector': 'k8s-props'},{'name': 'SettingsComponent', 'selector': 'home'},{'name': 'SimpleNameComponent', 'selector': 'name-dialog'},{'name': 'StagingComponent', 'selector': 'staging'},{'name': 'TestCaseComponent', 'selector': 'test-case'},{'name': 'TestDefinitionComponent', 'selector': 'test-definitions'},{'name': 'TestHistoryComponent', 'selector': 'test-history'},{'name': 'TestRunComponent', 'selector': 'test-reun'},{'name': 'UMInstallerComponent', 'selector': 'jc-um-install'},{'name': 'UploadButtonComponent', 'selector': 'file-uploader-button'}];\n    var DIRECTIVES = [{'name': 'BuildImageChooseDirective', 'selector': '[builder]'},{'name': 'CancelCdkDrag', 'selector': '[appCancelCdkDrag]'},{'name': 'NgFileDrop', 'selector': '[ng-file-drop]'},{'name': 'NgFileSelect', 'selector': '[ng-file-select]'},{'name': 'RuntimeActionsDirective', 'selector': '[runtime-actions]'}];\n    var ACTUAL_COMPONENT = {'name': 'AboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Action.html":{"url":"classes/Action.html","title":"class - Action","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Action\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/project.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                active\n                            \n                            \n                                    Public\n                                apiDeployType\n                            \n                            \n                                    Public\n                                apiMaturity\n                            \n                            \n                                    Public\n                                apiStage\n                            \n                            \n                                    Public\n                                dockerAction\n                            \n                            \n                                    Public\n                                dockerTag\n                            \n                            \n                                    Public\n                                pipelineAction\n                            \n                            \n                                    Public\n                                runTests\n                            \n                            \n                                    Public\n                                stop\n                            \n                            \n                                    Public\n                                tests\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isActive\n                            \n                            \n                                    Static\n                                make\n                            \n                            \n                                    Public\n                                summary\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/models/project.ts:859\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:850\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiDeployType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:851\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiMaturity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:853\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiStage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:852\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dockerAction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:855\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dockerTag\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:856\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pipelineAction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:859\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            runTests\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:854\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stop\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:858\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tests\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Test[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:857\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isActive\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isActive()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/project.ts:892\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            make\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    make(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/project.ts:867\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Action\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            summary\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    summary()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/project.ts:898\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { APIDefinition }                        from '../models/wm-package-info'\nimport { Source }                               from '../models/git-source';\nimport { DockerImage, TestStatus }              from '../models/docker-image';\n\nexport class DeploymentSet {\n\n  public id: string;\n  public name: string;\n  public source: Source;\n  public active: string;\n  public apis: APIDefinition[];\n\n  public constructor() {\n      this.apis = [];\n      this.source = new Source();\n  }\n\n  public static make(data: any): DeploymentSet {\n\n      let p: DeploymentSet = new DeploymentSet();\n      p.id = data.name;\n      p.name = data.name;\n\n      if (data.source)\n       p.source = Source.make(data.source);\n\n      p.apis = [];\n\n      if (data.apis) {\n\n        data.apis.forEach((a) => {\n          p.apis.push(APIDefinition.make(a));\n        });\n      }\n\n      return p;\n  }\n}\n\nexport enum DisplayType {\n  hidden = \"hidden\",\n  readonly = \"readonly\",\n  editable = \"editable\",\n  password = \"password\",\n  file = \"file\",\n  dropdown = \"dropdown\",\n  yesno = \"yesno\"\n}\n\nexport class BuildCommand {\n\n  public commandType: string;\n  public buildTarget: string;\n  public fileType: string;\n  public source: string;\n  public target: string;\n  public description: string = \"\";\n  public display: DisplayType = DisplayType.hidden;\n  public required: boolean = true;\n  public conditions: string[];\n\n  public static make(d: any): BuildCommand {\n\n    let f: BuildCommand = new BuildCommand();\n    f.commandType = d.commandType;\n    f.buildTarget = d.buildTarget;\n    f.fileType = d.fileType;\n    f.source = d.source;\n    f.target = d.target;\n    f.description = d.description;\n    f.conditions = d.conditions;\n\n    if (d.display == \"editable\")\n      f.display = DisplayType.editable;\n    else if (d.display == \"readonly\")\n      f.display = DisplayType.readonly;\n    else if (d.display == \"file\")\n      f.display = DisplayType.file;\n    else\n      f.display = DisplayType.hidden;\n\n    f.required = false;\n    return f;\n  }\n\n  copy() {\n    return BuildCommand.make(this);\n  }\n\n  public equals(b: BuildCommand): boolean {\n\n    return (b.source && b.source == this.source) || (!b.source && b.target == this.target);\n  }\n\n  public matchConditions(args: Map): boolean {\n\n    return ArgDisplayType._matchConditions(this.conditions, args);\n  }\n}\n\nexport interface BuildParams {\n\n  name: string;\n  publicPort(): string;\n  setPublicPort(port: string);\n  assignedLicense(): string;\n  hostName: string;\n  entryPoint: string;\n  exitPoint: string;\n  healthCheck: string;\n  args: Map\n  buildCommands: BuildCommand[];\n\n  fileForType(type: string): BuildCommand;\n  isCustomImage(): boolean;\n}\n\nexport class ArgDisplayType {\n\n  public name: string;\n  public description: string;\n  public display: DisplayType = DisplayType.hidden;\n  public conditions: string[];\n  public choices: string[];\n  public required: boolean = true;\n\n  public constructor(name: string) {\n    this.name = name;\n    this.description = this.name;\n    this.conditions = [];\n    this.choices = [];\n  }\n\n  public copy(): ArgDisplayType {\n\n      let copy: ArgDisplayType = new ArgDisplayType(this.name);\n      copy.description = this.description;\n      copy.display = this.display;\n      copy.conditions = this.conditions;\n      copy.choices = this.choices;\n      copy.required = this.required;\n\n      return copy;\n  }\n\n  public static make(d: any): ArgDisplayType {\n\n    let a: ArgDisplayType = new ArgDisplayType(d.name);\n\n    if (d.display == \"editable\")\n      a.display = DisplayType.editable;\n    else if (d.display == \"readonly\")\n      a.display = DisplayType.readonly;\n    else if (d.display == \"file\")\n      a.display = DisplayType.file;\n    else if (d.display == \"password\")\n      a.display = DisplayType.password;\n    else if (d.display == \"yesno\")\n      a.display = DisplayType.yesno;\n    else if (d.display == \"dropdown\")\n      a.display = DisplayType.dropdown;\n    else\n      a.display = DisplayType.hidden;\n\n    if (d.required != null)\n      a.required = d.required;\n\n    a.description = d.description || d.name;\n\n    if (d.conditions)\n      a.conditions = d.conditions;\n\n    if (a.choices)\n      a.choices = d.choices;\n\n    return a;\n  }\n\n  public matchConditions(args: Map): boolean {\n\n      return ArgDisplayType._matchConditions(this.conditions, args);\n  }\n\n  public static _matchConditions(conditions: string[], args: Map): boolean {\n\n      if (conditions && conditions.length > 0) {\n\n        let matched: boolean = false;\n\n        for (let i = 0; i  {\n      args.push(new Arg(a.source, a.target, a.description));\n    });\n\n    return args;\n  }\n\n}\n\nexport class Installer implements BuildParams {\n\n    public name: string;\n    public sourceImageTag: string;\n    public isNew: string = \"true\";\n    public targetImage: DockerImage;\n    public productType: string;\n    public licenseFile: string;\n    public primaryPort: string;\n    public hostName: string;\n    public wmInstallerImage: string;\n    public includeUpdate: string = \"false\";\n    public buildCommands: BuildCommand[];\n    public args: Map;\n    public isSAGProduct: string = \"true\";\n\n    public entryPoint: string;\n    public exitPoint: string;\n    public healthCheck: string;\n\n    public constructor() {\n\n    this.sourceImageTag = \"centos:latest\";\n    this.targetImage = new DockerImage();\n    this.buildCommands = [];\n    this.args = new Map();\n  }\n\n  public copy(): Installer {\n\n    return Installer.make(this);\n  }\n\n  public static parse(data: string): Installer {\n\n    return this.make(JSON.parse(data, parserReviver).install);\n  }\n\n  public isCustomImage(): boolean {\n    return true;\n  }\n\n  public static make(data: any): Installer {\n\n    let i: Installer = new Installer();\n    i.name = data.name;\n    i.isSAGProduct = data.isSAGProduct;\n    i.args = data.args;\n    i.productType = data.productType;\n    i.wmInstallerImage = data.wmInstallerImage;\n    i.sourceImageTag = data.sourceImageTag;\n\n    if (data.targetImage)\n      i.targetImage = DockerImage.make(data.targetImage);\n\n    i.licenseFile = data.licenseFile;\n    i.primaryPort = data.primaryPort;\n    i.isNew = data.isNew;\n    i.includeUpdate = data.includeUpdate;\n    i.hostName = data.hostName;\n    i.entryPoint = data.entryPoint;\n    i.exitPoint = data.exitPoint;\n    i.healthCheck = data.healthCheck;\n    i.healthCheck = data.healthCheck;\n\n    if (!i.args)\n       i.args = new Map();\n\n    if (data.buildCommands) {\n      data.buildCommands.forEach((f) => {\n        i.buildCommands.push(BuildCommand.make(f));\n      });\n    }\n\n    return i;\n  }\n\n  public publicPort(): string {\n    return this.primaryPort;\n  }\n\n  public setPublicPort(port: string) {\n    this.primaryPort = port;\n  }\n\n  public assignedLicense(): string {\n\n    return this.licenseFile;\n  }\n\n  public fileForType(type: string, name?: string): BuildCommand {\n\n      return Builder._fileForSource(this.buildCommands, type, name, null);\n  }\n\n  public fileWithDescription(type: string, description: string): BuildCommand {\n      return Builder._fileForSource(this.buildCommands, type, null, description);\n  }\n\n  public removeFileForType(type: string, name?: string) {\n\n      return Builder._removeFileForType(this.buildCommands, type, name);\n  }\n\n  public toString(): string {\n    return JSON.stringify(this, stringifyReplacer);\n  }\n}\n\nexport class Builder implements BuildParams {\n\n  public name: string;\n  public deploymentType: string;\n  public deployments: DeploymentSet[];\n\n  public sourceImage: DockerImage;\n  public targetImage: DockerImage;\n  public version: string;\n  public testStatus: string;\n  public buildCommands: BuildCommand[];\n  public hasTests: string;\n  public buildUser: string;\n  public entryUser: string;\n  public entryPoint: string;\n  public exitPoint: string;\n  public healthCheck: string;\n  public args: Map;\n\n  public hostName: string; // not used!!\n\n  public constructor() {\n\n    this.sourceImage = new DockerImage();\n    this.targetImage = new DockerImage();\n    this.buildCommands = [];\n\n    this.args = new Map();\n  }\n\n  public hyphenatedName(): string {\n\n    return this.name.toLowerCase().replace(/\\s/g, \"-\");\n  }\n\n  public static make(data: any): Builder {\n\n    let b: Builder = new Builder();\n    b.name = data.name;\n    b.deploymentType = data.type;\n\n    b.deployments = [];\n\n    if (data.deployments) {\n      data.deployments.forEach((d) => {\n            b.deployments.push(DeploymentSet.make(d));\n      });\n    }\n\n    if (data.buildCommands) {\n      data.buildCommands.forEach((f) => {\n            b.buildCommands.push(BuildCommand.make(f));\n      });\n    }\n\n    b.sourceImage = DockerImage.make(data.sourceImage);\n    b.targetImage = DockerImage.make(data.targetImage);\n    b.version = data.version;\n    b.testStatus = data.testStatus;\n    b.buildUser = data.buildUser;\n    b.entryUser = data.entryUser;\n    b.entryPoint = data.entryPoint;\n    b.exitPoint = data.exitPoint;\n    b.healthCheck = data.healthCheck;\n\n    if (data.hasTests && data.hasTests == 'true')\n      b.hasTests = \"true\";\n\n    return b;\n  }\n\n  public publicPort(): string {\n    return this.sourceImage.primaryPort;\n  }\n\n  public setPublicPort(port: string) {\n    this.sourceImage.primaryPort = port;\n  }\n\n  public assignedLicense(): string {\n\n    let lic: BuildCommand = this.fileWithDescription(\"licenses\",'Product License');\n\n    if (lic) {\n      return lic.target.replace(/\\-/g, \" \");\n    } else {\n      return null;\n    }\n  }\n\n  public isCustomImage(): boolean {\n    return this.sourceImage.isCustom;\n  }\n\n  public fileForType(type: string, name?: string): BuildCommand {\n      return Builder._fileForSource(this.buildCommands, type, name, null);\n  }\n\n  public fileWithDescription(type: string, description: string): BuildCommand {\n      return Builder._fileForSource(this.buildCommands, type, null, description);\n  }\n\n  public removeFileForType(type: string, name?: string) {\n\n      return Builder._removeFileForType(this.buildCommands, type, name);\n  }\n\n  public static _fileForSource(buildCommands: BuildCommand[], type: string, name: string, description: string): BuildCommand {\n\n      let file: BuildCommand = null;\n\n      for (var i = 0; i  {\n         d.buildCommands.push(BuildCommand.make(b));\n       });\n     }\n\n     return d;\n  }\n}\n\nexport class Port {\n\n  public publicPort: string;\n  public serviceType: string;\n\n  constructor(public internal: string, public external: string, public description: string, public type?: string) {\n\n  }\n\n  public static makeArray(array: any[]): Port[] {\n\n    let ports: Port[] = [];\n\n    array.forEach((p) => {\n      let port: Port = new Port(p.internal, p.external, p.description, p.type);\n      port.publicPort = p.publicPort;\n      port.serviceType = p.serviceType;\n\n      ports.push(port);\n    });\n\n    return ports;\n  }\n}\n\nexport class Probe {\n\n  public path: string;\n  public port: string;\n  public initialDelaySeconds: number;\n  public periodSeconds: number;\n  public timeoutSeconds: number;\n\n  public static make(data: any): Probe {\n\n    let p = new Probe();\n    p.path = data.path;\n    p.port = data.port;\n    p.initialDelaySeconds = Number(data.initialDelaySeconds);\n    p.periodSeconds = Number(data.periodSeconds);\n    p.timeoutSeconds = Number(data.timeoutSeconds);\n\n    return p;\n  }\n}\n\nexport class Container {\n\n  public name: string;\n  public names: string[];\n  public active: string;\n  public type: string;\n  public description: string;\n  public hostname: string;\n  public secure: string;\n  public image: string;\n  public build: DockerBuild;\n  public ports: Port[];\n  public env: Arg[];\n  public volumes: Arg[];\n  public readinessProbe;\n  public livenessProbe;\n  public testStatus : TestStatus;\n  public adminUser: string;\n  public adminPassword: string;\n\n  // runtime only\n\n  public id: string;\n  public state: string;\n  public status: string;\n  public created: Date;\n\n  constructor() {\n\n    this.active = \"true\";\n    this.ports = [];\n    this.env = [];\n    this.volumes = [];\n  }\n\n  public copy() {\n    return Container.make(this);\n  }\n\n  public uniqueName(usesDedicatedRepo: boolean): string {\n\n    let repo: string = this.repository();\n\n    if (repo)\n      return repo + (usesDedicatedRepo ? \"/\" : \":\") + this.imageName();\n    else\n      return this.imageName();\n  }\n\n  public repository(): string {\n\n    if (this.image.indexOf(\":\") != -1) {\n\n      return this.image.substring(0, this.image.indexOf(\":\"));\n    } else {\n      return null;\n    }\n  }\n\n  public imageName(): string {\n\n    let name: string = this.image;\n\n    let idx: number = name.indexOf(\":\");\n\n    if (idx != -1) {\n\n      let lside = name.substring(0, idx);\n      let rside = name.substring(idx+1);\n\n      if (DockerImage.isVersionNumber(rside)) {\n\n        // name is on left side\n\n         if (this.image.lastIndexOf(\"/\") != -1) {\n          let idx: number = this.image.lastIndexOf(\"/\");\n          let rdx: number = this.image.indexOf(\":\");\n\n          name = this.image.substring(idx+1, rdx);\n        }\n      } else {\n\n        // name and perhaps version is in right side\n\n        name = rside;\n\n        if (name.indexOf(\"-\") != -1) {\n\n          let idx: number = name.lastIndexOf(\"-\");\n          let b4: string = name.substring(0, idx);\n          let af: string = name.substring(idx+1, name.length);\n\n          if (DockerImage.isVersionNumber(af)) {\n            name = b4;\n          }\n        }\n      }\n    }\n\n    return name;\n  }\n\n  public preferredImageVersion(): string {\n\n    if (this.image && this.image.indexOf(\":\")) {\n\n      let version: string = this.image.substring(this.image.indexOf(\":\")+1, this.image.length);\n\n      if (version.indexOf(\"-\") != -1) {\n        let idx: number = version.lastIndexOf(\"-\");\n        version = version.substring(idx+1, version.length);\n      }\n\n      // no versioning, only a name\n\n      if (!DockerImage.isVersionNumber(version))\n          version = \"latest\";\n\n      return version;\n    } else {\n\n      return \"latest\";\n    }\n  }\n\n  public static make(data: any): Container {\n\n    let c: Container = new Container();\n    c.names = data.names;\n    if (data.names)\n      c.name = data.names[0];\n    else\n      c.name = data.name;\n\n    c.active = data.active;\n    c.description = data.description;\n    c.hostname = data.hostname;\n    c.secure  = data.secure;\n    c.image = data.image;\n    c.type = data.type;\n    c.adminUser = data.adminUser;\n    c.adminPassword = data.adminPassword;\n\n    if (data.build)\n      c.build = DockerBuild.make(data.build);\n\n    if (data.ports)\n      c.ports = Port.makeArray(data.ports);\n\n    if (data.env)\n      c.env = Arg.makeArray(data.env);\n\n    if (data.volumes)\n      c.volumes = Arg.makeArray(data.volumes);\n\n    if (data.readinessProbe)\n      c.readinessProbe = Probe.make(data.readinessProbe);\n\n    if (data.livenessProbe)\n      c.livenessProbe = Probe.make(data.livenessProbe);\n\n    return c;\n  }\n\n  public environmentVariable(id: string): Arg {\n\n    var arg: Arg = null;\n\n    for (var i = 0; i  {\n          s.tests.push(Test.make(t));\n        });\n    }\n\n    return s;\n  }\n\n  public isActive(): boolean {\n\n    return (this.apiDeployType != \"none\" && this.apiDeployType != null) || this.stop == \"true\" || (this.apiMaturity != \"none\" &&  this.apiMaturity != null) ||\n                  (this.dockerAction != \"none\"  && this.dockerAction != null) || this.dockerTag != null || this.stop != null;\n  }\n\n  public summary(): string {\n\n      var status: string = null;\n\n      if (this.apiDeployType == \"deploy\")\n          status = \"Deploy API's \";\n      else if (this.apiDeployType == \"promote\")\n        status = \"Promote API's to \" + this.apiStage;\n\n      if (this.runTests == \"true\") {\n\n        if (status != null)\n          status = status + \", run tests\";\n        else\n          status = \"Run tests\";\n      }\n\n      if (this.apiMaturity) {\n\n        if (status != null)\n            status = status + \", and set maturity to \" + this.apiMaturity;\n        else\n          status = \"Set maturity to \" + this.apiMaturity;\n      }\n\n      if (this.dockerTag) {\n\n        if (status != null)\n          status = status + \", then tag image\";\n        else\n          status = \"Tag image \";\n      }\n\n      if (this.dockerAction) {\n        if (status != null)\n          status = status + \", \" + this.dockerAction;\n        else\n          status = this.dockerAction;\n\n        status = status + \" image\";\n      }\n\n      if (this.stop == \"true\") {\n        if (status != null)\n            status = status + \" before stopping\";\n        else\n            status = \"stop containers\";\n      }\n\n      if (this.pipelineAction) {\n\n        if (status != null)\n            status = status + \", then \" + this.pipelineAction + \" pipeline\";\n        else\n            status = \"and \" + this.pipelineAction + \" pipeline execution\";\n      }\n\n      return status;\n    }\n}\n\nexport class Stage {\n\n    public id: string;\n    public name: string;\n    public containerHost: string;\n    public useKubernetes: string;\n    public buildOnStart: string;\n    public deployments: Deployment[];\n    public onStart: Action;\n    public onFail: Action;\n    public onSuccess: Action;\n\n    constructor() {\n      this.deployments = [];\n      this.useKubernetes = \"false\";\n      this.buildOnStart = \"false\";\n      this.onStart = new Action();\n      this.onSuccess = new Action();\n      this.onFail = new Action();\n    }\n\n    public copy(): Stage {\n\n      let c = Stage.make(this);\n\n      c.id = this.id + \" copy\";\n      c.name = this.name + \" copy\";\n\n      return c;\n    }\n\n    public static make(data: any): Stage {\n\n      let s: Stage = new Stage();\n\n      s.name = data.name;\n      s.id = s.name;\n      s.containerHost = data.containerHost;\n      s.useKubernetes = data.useKubernetes;\n      s.buildOnStart = data.buildOnStart;\n\n      if (data.deployments) {\n        data.deployments.forEach((c) => {\n          s.deployments.push(Deployment.make(c));\n        });\n      }\n\n      if (data.onStart) {\n        s.onStart = Action.make(data.onStart);\n      }\n\n      if (data.onSuccess) {\n        s.onSuccess = Action.make(data.onSuccess);\n      }\n\n      if (data.onFail) {\n        s.onFail = Action.make(data.onFail);\n      }\n\n      return s;\n    }\n}\n\nexport class Deployment {\n\n  public name: string;\n  public hostname: string;\n  public appName: string;\n  public apis: APIDefinition[];\n  public containers: Container[];\n  public replicas: string;\n  public serviceType: string;\n  public restartPolicy: string;\n  public requiresMonitoring: string;\n  public dependsOn: string;\n\n  constructor() {\n\n    this.containers = [];\n    this.apis = [];\n  }\n\n  public copy() {\n    return Deployment.make(this);\n  }\n\n  public static make(data: any): Deployment {\n\n    let s: Deployment = new Deployment();\n    s.name = data.name;\n    s.hostname = data.hostname;\n    s.replicas = data.replicas;\n    s.appName = data.appName;\n    s.serviceType = data.serviceType;\n    s.restartPolicy = data.restartPolicy;\n    s.requiresMonitoring = data.requiresMonitoring;\n    s.dependsOn = data.dependsOn;\n\n    if (data.apis) {\n       data.apis.forEach((a) => {\n         s.apis.push(APIDefinition.make(a));\n       });\n    }\n\n    if (data.containers) {\n       data.containers.forEach((c) => {\n         s.containers.push(Container.make(c));\n       });\n    }\n\n    return s;\n  }\n\n  public containerForType(type: string): Container {\n\n    let found: Container = null;\n\n    this.containers.forEach((c) => {\n\n      if (c.type == type) {\n        found = c;\n      }\n    });\n\n    return found;\n  }\n\n  public removeContainer(c: Container) {\n\n    var found : number = -1;\n\n    for (var i = 0; i  {\n         p.builds.push(Builder.make(i));\n       });\n    }\n\n    if (data.deployments) {\n      p.deployments = [];\n       data.deployments.forEach((i) => {\n         p.deployments.push(Deployment.make(i));\n       });\n    }\n\n    return p;\n  }\n\n  public serviceFor(id: string): Deployment {\n\n      let found: Deployment = null;\n\n      for (var z = 0; z  {\n         p.stages.push(Stage.make(s));\n       });\n    }\n\n    return p;\n  }\n}\n\nfunction stringifyReplacer(key, value) {\n  const originalObject = this[key];\n  if(originalObject instanceof Map) {\n    return {\n      dataType: 'Map',\n      value: Array.from(originalObject.entries()), // or with spread: value: [...originalObject]\n    };\n  } else {\n    return value;\n  }\n}\n\nfunction parserReviver(key, value) {\n  if(typeof value === 'object' && value !== null) {\n    if (value.dataType === 'Map') {\n      return new Map(value.value);\n    }\n  }\n  return value;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Action-1.html":{"url":"classes/Action-1.html","title":"class - Action-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Action\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/elements/docker-images-list.component.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                action\n                            \n                            \n                                    Public\n                                image\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(action: string, image: DockerImage)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/elements/docker-images-list.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        action\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        image\n                                                  \n                                                        \n                                                                        DockerImage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            action\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/elements/docker-images-list.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            image\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DockerImage\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/elements/docker-images-list.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, ChangeDetectorRef, OnInit, OnDestroy, OnChanges,\n          EventEmitter, Input, Output }                           from '@angular/core';\nimport { Router }                                                 from '@angular/router';\n\nimport { MatSnackBar }                                            from '@angular/material/snack-bar';\n\nimport { BuildInstallComponent }                                  from '../build-install.component';\n\nimport { DockerImage, ImageStatus, TestStatus }                   from '../../models/docker-image';\nimport { DockerService }                                          from '../../services/docker.service';\n\nimport { ContainerTemplates }                                     from '../../support/container.templates';\n\nimport * as $ from 'jquery';\n\nexport class Action {\n\n  public action: string;\n  public image: DockerImage;\n\n  constructor(action: string, image: DockerImage) {\n    this.action = action;\n    this.image = image;\n  }\n}\n\n@Component({\n  selector: 'jc-docker-images',\n  templateUrl: '../../templates/elements/docker-images-list.html'\n})\n\nexport class DockerImageListComponent implements OnInit, OnChanges {\n\n  public _displayedColumnsBase: string[] = ['Name', 'Type', 'Description', \"Size\", 'Last Updated', 'Version', \"Pull\", \"Push\"];\n  public _displayedColumnsBaseMin: string[] = ['Name', 'Type', 'Version', \"Push\"];\n  public _displayedColumnsCustom: string[] = ['Name', 'Type', 'Description', \"Size\", \"Author\",'Last Updated', 'Version', 'Tested', \"Pull\", \"Push\"];\n  public _displayedColumnsCustomMin: string[] = ['Name', 'Last Updated', 'Version', 'Tested'];\n\n  public _displayedEditCustom: string[] = ['Name', 'Type', 'Description', \"Size\", \"Author\", 'Last Updated', 'Tested', 'Version', 'Edit Version'];\n\n  @Input()\n  public title: string;\n\n  @Input()\n  public type: string;\n\n  @Input()\n  public namespace: string;\n\n  @Input()\n  public references: any[];\n\n  @Input()\n  public dataSource: DockerImage[];\n\n  @Input()\n  public currentVersion: number;\n\n  @Input()\n  public columns: string[];\n\n  @Output()\n  public haveChanges: EventEmitter = new EventEmitter();\n\n  @Output()\n  public onAction: EventEmitter = new EventEmitter();\n\n  @Output()\n  public onSelection: EventEmitter = new EventEmitter();\n\n  @Output()\n  public imageCount: EventEmitter = new EventEmitter();\n\n  protected _selectedVersion: DockerImage;\n\n  public constructor(private _router: Router, private _snackBar: MatSnackBar, private _dockerImageService: DockerService) {\n\n  }\n\n  public ngOnInit() {\n\n    if (this.type == 'sag') {\n\n      this._dockerImageService.sagImages(true).subscribe((d) => {\n        this.dataSource = d;\n        this.imageCount.emit(d.length);\n      });\n    } else if (this.type == 'base') {\n\n      this._dockerImageService.baseImages(true).subscribe((d) => {\n        this.dataSource = d;\n        this.imageCount.emit(d.length);\n      });\n    } else if (this.type == 'custom') {\n\n      this._dockerImageService.customImages(true).subscribe((d) => {\n\n        if (this.references) {\n\n         this.updateReferences(d);\n\n        } else {\n          this.dataSource = d;\n          this.imageCount.emit(d.length);\n        }\n      });\n    }\n\n  }\n\n  public ngOnChanges() {\n\n    //if (this.type == 'custom' && this.references) {\n    if (this.references) {\n      this._dockerImageService.baseImages(true).subscribe((d) => {\n\n         this.updateReferences(d);\n      });\n    }\n  }\n\n  public productCodeLabel(element: DockerImage): string {\n\n    return ContainerTemplates.productCodeLabel(element.type);\n  }\n\n  public showTests(element: DockerImage) {\n\n    this._router.navigate(['/test'], { skipLocationChange: false });\n  }\n\n  private updateReferences(d: DockerImage[]) {\n\n    this.dataSource = [];\n\n      d.forEach((i) => {\n        let v: number = -1;\n\n        if ((v=this._version(i.uniqueName())) != -1) {\n          this.dataSource.push(i.imageForVersion(v));\n        }\n    });\n\n  }\n  private _version(name: string): number {\n\n    let found: number = -1;\n\n    for (var i = 0; i  1200)\n        wide = true;\n\n      if (this.columns)\n        return this.columns;\n      else if (this.type == 'base' || this.type == 'sag')\n        return wide ? this._displayedColumnsBase : this._displayedColumnsBaseMin;\n      else if (this.type == 'custom')\n        return wide ? this._displayedColumnsCustom : this._displayedColumnsCustomMin;\n      else\n        return this._displayedEditCustom;\n  }\n\n  public styleForStatus(image: DockerImage): any {\n\n      let style: any = {};\n      style['text-align'] = 'center';\n      style['border-radius'] = '5px';\n      style['padding'] = '10px';\n\n      if (image.status == ImageStatus.deprecated)\n        style['background-color'] = 'light-gray';\n      else if (image.status == ImageStatus.deployed)\n        style['background-color'] = 'blue';\n      else if (image.status == ImageStatus.running)\n        style['background-color'] = 'green';\n      else if (image.status == ImageStatus.failed)\n        style['background-color'] = 'red';\n      else\n        style['background-color'] = 'pink';\n\n      return style;\n    }\n\n     public localizedStatus(image: DockerImage): string {\n\n      if (image.status == ImageStatus.deprecated)\n        return \"deprecated\";\n      else if (image.status == ImageStatus.deployed)\n        return \"deployed\";\n      else if (image.status == ImageStatus.running)\n        return \"running\";\n      else if (image.status == ImageStatus.failed)\n        return \"failed\";\n      else\n        return \"new\";\n    }\n\n    public styleForAction(image: DockerImage): string {\n\n      let style: any = {};\n      style['text-align'] = 'center';\n      style['border-radius'] = '5px';\n      style['padding'] = '10px';\n      style['color'] = \"white\";\n\n      if (this.type == 'base')\n        style['background-color'] = 'pink';\n      else if (image.status == ImageStatus.deprecated)\n        style['background-color'] = 'light-gray';\n      else if (image.status == ImageStatus.running)\n        style['background-color'] = 'orange';\n      else\n        style['background-color'] = 'green';\n\n      return style;\n    }\n\n    public styleForVersionColumn(image: DockerImage): string {\n\n      let style: any = {};\n      style['text-align'] = 'center';\n\n      if (this.type == 'edit' && image.version() != image.latestVersion().version())\n        style['color'] = 'orange';\n      else\n        style['color'] = 'rgb(100,100,100)';\n\n      return style;\n    }\n\n    public haveTests(image: DockerImage) {\n\n      return image.testStatus != TestStatus.none;\n    }\n\n    public passedTests(image: DockerImage) {\n\n      return image.testStatus == TestStatus.passed;\n    }\n\n    public failedTests(image: DockerImage) {\n\n      return image.testStatus == TestStatus.failed;\n    }\n\n    public todoTests(image: DockerImage) {\n\n      return image.testStatus == TestStatus.todo;\n    }\n\n    public runningTests(image: DockerImage) {\n\n      return image.testStatus == TestStatus.running;\n    }\n\n    public unknownTests(image: DockerImage) {\n\n      return (this.type != 'edit' || image.version() != image.latestVersion().version()) && image.testStatus == TestStatus.unknown;\n    }\n\n    public testLabelFor(image: DockerImage): string {\n\n      let s: string = \"\";\n\n      if (image.testStatus == TestStatus.none)\n        s = \"No test cases defined\";\n      else if (image.testStatus == TestStatus.passed)\n        s = \"All test cases pased successfully\";\n      if (image.testStatus == TestStatus.failed)\n        s = \"Some test cases failed\";\n      if (image.testStatus == TestStatus.running)\n        s = \"Test Cases are running\";\n      if (image.testStatus == TestStatus.todo)\n        s = \"Test cases defined, but not yet run\";\n\n      return s;\n    }\n\n    public colorForTest(image: DockerImage): string {\n\n      if (image.testStatus == TestStatus.none)\n        return \"basic\";\n      else if (image.testStatus == TestStatus.passed)\n        return \"primary\";\n      else\n        return \"warn\";\n\n    }\n\n    public test(image: DockerImage) {\n\n      this._router.navigate(['/test', {id: image.id}]);\n    }\n\n    public selectRow(row: DockerImage) {\n\n      if (Number(row.version())!= this.currentVersion) {\n\n        if (this._selectedVersion == row)\n          this._selectedVersion = null;\n        else\n          this._selectedVersion = row;\n      }\n\n      if (this.onSelection)\n        this.onSelection.emit(this._selectedVersion);\n    }\n\n\n    public colorForEditButton(image: DockerImage) {\n\n      if (image.version() == image.latestVersion().version())\n        return \"primary\";\n      else\n        return \"warn\";\n    }\n\n    public updateVersionButtonLabel(image: DockerImage) {\n\n      if (image.version() == image.latestVersion().version())\n        return \"Change\";\n      else\n        return image.latestVersion();\n    }\n\n    public pushImage(image: DockerImage) {\n\n      let busy = this._snackBar.open(\"Pushing \" + image.tag() + \" ...\");\n\n      this._dockerImageService.pushImage(image).subscribe((result) => {\n\n        busy.dismiss();\n\n        let message = null;\n\n        if (result)\n          message = \"Container successfully pushed\";\n        else\n         message = \"Container push failed for reposiotory \" + image.repository();\n\n        this._snackBar.open(message, \"Dismiss\", {\n          duration: 5000,\n        });\n      });\n    }\n\n    public pullImage(image: DockerImage) {\n\n      let busy = this._snackBar.open(\"Pulling \" + image.tag() + \" ...\");\n\n      this._dockerImageService.pullImage(image.tag()).subscribe((result) => {\n\n        busy.dismiss();\n\n        let message = null;\n\n        if (result)\n          message = \"Container pulled with id #\" + result.id.substring(0, 6);\n        else\n         message = \"Container pull failed with tag \" + image.tag();\n\n        this._snackBar.open(message, \"Dismiss\", {\n          duration: 5000,\n        });\n      });\n    }\n\n    private updateVersion(image: DockerImage) {\n\n      this.onAction.emit(new Action(\"update\", image));\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ActionComponent.html":{"url":"components/ActionComponent.html","title":"component - ActionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ActionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/action.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                action\n            \n\n\n\n\n            \n                templateUrl\n                ../templates/action.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _ignoreValueChanges\n                            \n                            \n                                    Public\n                                actionImageCtrl\n                            \n                            \n                                    Public\n                                apiActionsNegative\n                            \n                            \n                                    Public\n                                apiActionsPositive\n                            \n                            \n                                    Public\n                                apiDeployCtrl\n                            \n                            \n                                    Public\n                                apiMaturityCtrl\n                            \n                            \n                                    Public\n                                apiMaturityList\n                            \n                            \n                                    Public\n                                apiStageCtrl\n                            \n                            \n                                    Public\n                                dockerActions\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Public\n                                keepAliveCtrl\n                            \n                            \n                                    Public\n                                pipelineStatusCtrl\n                            \n                            \n                                    Public\n                                promoteAPIsCtrl\n                            \n                            \n                                    Public\n                                runTestsCtrl\n                            \n                            \n                                    Public\n                                tagImageCtrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _save\n                            \n                            \n                                    Private\n                                _setupForm\n                            \n                            \n                                    Public\n                                apiActions\n                            \n                            \n                                    Public\n                                haveAPIs\n                            \n                            \n                                    Public\n                                isAPIStageControlDisabled\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Private\n                                updateForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                stage\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/action.component.ts:64\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        action\n                    \n                \n                \n                    \n                        Type :         Action\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/action.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        stage\n                    \n                \n                \n                    \n                        Type :         Stage\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/action.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/action.component.ts:32\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/action.component.ts:35\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _save()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/action.component.ts:210\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _setupForm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _setupForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/action.component.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            apiActions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    apiActions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/action.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            haveAPIs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    haveAPIs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/action.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isAPIStageControlDisabled\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isAPIStageControlDisabled()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/action.component.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/action.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/action.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateForm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/action.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _ignoreValueChanges\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/action.component.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            actionImageCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/action.component.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiActionsNegative\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [{key: \"none\", value: \"none\"}, \n\t\t\t\t\t\t\t\t\t\t{key: \"remove\", value: \"Remove API API Gateway\"}, \n\t\t\t\t\t\t\t\t\t\t{key: \"rollback\", value: \"Rollback previous Promotion\"},\n\t\t\t\t\t\t\t\t\t\t{key: \"deactivate\", value: \"Deactivate\"}, \n\t\t\t\t\t\t\t\t\t\t{key: \"unpublish\", value: \"Unpublish from Portal\"}]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/action.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiActionsPositive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [{key: \"none\", value: \"none\"}, \n\t\t\t\t\t\t\t\t\t\t{key: \"upload\", value: \"Upload to API API Gateway\"}, \n\t\t\t\t\t\t\t\t\t\t{key: \"promote\", value: \"Promote\"},\n\t\t\t\t\t\t\t\t\t\t{key: \"activate\", value: \"Activate\"}, \n\t\t\t\t\t\t\t\t\t\t{key: \"publish\", value: \"Publish to Portal\"}]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/action.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiDeployCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/action.component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiMaturityCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/action.component.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiMaturityList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\"none\",\" Beta\", \"Development\", \"Test\", \"Tested\", \"Failed\", \"Production\", \"Deprecated\"]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/action.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiStageCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/action.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dockerActions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\"none\", \"push\", \"archive\", \"delete\"]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/action.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/action.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            keepAliveCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/action.component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pipelineStatusCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/action.component.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            promoteAPIsCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/action.component.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            runTestsCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/action.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tagImageCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/action.component.ts:60\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ChangeDetectorRef, EventEmitter,\n\t\t\tOnInit, OnChanges, OnDestroy, Input, \n\t\t\t\t\t\t\t\t\t\tOutput }   \t\tfrom '@angular/core';\n\nimport { Router }\t\t\t\t\t\t\t\t\t  \tfrom '@angular/router';\nimport {FormBuilder, FormGroup, FormControl, \n\t\t\t\t\t\t\t\tValidators} \t\t\tfrom '@angular/forms';\nimport { SelectionModel }                             \tfrom '@angular/cdk/collections';\n\nimport { MediaMatcher }                               \tfrom '@angular/cdk/layout';\nimport { MatAccordion }                               \tfrom '@angular/material';\nimport { MatInput, MatButton }\t\t\t\t\t\t\tfrom '@angular/material';\nimport { MatDialog, MatDialogRef,\n\t\t\t\t\tMAT_DIALOG_DATA }\t  \t\t\t\tfrom '@angular/material';\n\nimport { Stage, Container, Action }            \t\t\tfrom '../models/project';\n\n@Component({\n  selector: 'action',\n  templateUrl: '../templates/action.html'\n})\n\nexport class ActionComponent implements OnInit, OnChanges {\n\n\t@Input() \n\tpublic stage: Stage;\n\n\t@Input()\n\tpublic action: Action;\n\n\t@Input()\n\tpublic type: string;\n\n\t@Output()\n\tpublic change: EventEmitter = new EventEmitter();\n\n\tpublic form: FormGroup;\n\n\tpublic apiMaturityList: string[] = [\"none\",\" Beta\", \"Development\", \"Test\", \"Tested\", \"Failed\", \"Production\", \"Deprecated\"];\n\tpublic apiActionsPositive: any[] = [{key: \"none\", value: \"none\"}, \n\t\t\t\t\t\t\t\t\t\t{key: \"upload\", value: \"Upload to API API Gateway\"}, \n\t\t\t\t\t\t\t\t\t\t{key: \"promote\", value: \"Promote\"},\n\t\t\t\t\t\t\t\t\t\t{key: \"activate\", value: \"Activate\"}, \n\t\t\t\t\t\t\t\t\t\t{key: \"publish\", value: \"Publish to Portal\"}];\n\n\tpublic apiActionsNegative: any[] = [{key: \"none\", value: \"none\"}, \n\t\t\t\t\t\t\t\t\t\t{key: \"remove\", value: \"Remove API API Gateway\"}, \n\t\t\t\t\t\t\t\t\t\t{key: \"rollback\", value: \"Rollback previous Promotion\"},\n\t\t\t\t\t\t\t\t\t\t{key: \"deactivate\", value: \"Deactivate\"}, \n\t\t\t\t\t\t\t\t\t\t{key: \"unpublish\", value: \"Unpublish from Portal\"}];\n\n\tpublic dockerActions: string[] = [\"none\", \"push\", \"archive\", \"delete\"];\n\n  \tpublic runTestsCtrl: FormControl;\n  \tpublic keepAliveCtrl: FormControl;\n  \tpublic apiDeployCtrl: FormControl;\n  \tpublic apiStageCtrl: FormControl;\n  \tpublic promoteAPIsCtrl: FormControl;\n  \tpublic apiMaturityCtrl: FormControl;\n  \tpublic tagImageCtrl: FormControl;\n  \tpublic actionImageCtrl: FormControl;\n  \tpublic pipelineStatusCtrl: FormControl;\n\n  \tprivate _ignoreValueChanges: boolean;\n\n  \tpublic constructor(private _formBuilder: FormBuilder) {\n  \t}\n\n\tpublic ngOnInit() {\n\n\n\t\tthis._setupForm();\n\t}\n\n\tpublic ngOnChanges() {\n\t\t\n\t}\n\n\tpublic haveAPIs(): boolean {\n\n\t\tvar found: boolean = false;\n\n\t\tfor (var i=0; i  0) {\n\t\t\t\tfound = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn found;\n\t}\n\n\tpublic apiActions() {\n\t\t\n\t\tif (this.type == 'fail') {\n\n\t\t\treturn this.apiActionsNegative;\n\n\t\t} else {\n\n\t\t\treturn this.apiActionsPositive;\n\t\t}\n\t}\n\n\tpublic isAPIStageControlDisabled() {\n\n\t\treturn this.apiDeployCtrl.value != 'promote';\n\t}\n\n\tprivate updateForm() {\n\n\t\tif (this.apiStageCtrl) {\n\t\t\t\n\t\t\tthis._ignoreValueChanges = true;\n\t  \t\t\n\t  \t\tthis.runTestsCtrl.setValue(this.action.runTests == \"true\" ? true : false);\n\t  \t\tthis.apiDeployCtrl.setValue(this.action.apiDeployType ? this.action.apiDeployType : \"none\");\n\t  \t\tthis.apiStageCtrl.setValue(this.action.apiStage ? this.action.apiStage : this.stage.name);\n\t  \t\tthis.apiMaturityCtrl.setValue(this.action.apiMaturity ? this.action.apiMaturity : \"none\");\n\t  \t\tthis.keepAliveCtrl.setValue(this.action.stop == \"false\" ? true : false);\n\t  \t\tthis.actionImageCtrl.setValue(this.action.dockerAction);\n\t  \t\tthis.tagImageCtrl.setValue(this.action.dockerTag);\n\t  \t\tthis.pipelineStatusCtrl.setValue(this.action.pipelineAction ? this.action.pipelineAction : this.type == 'fail' ? \"stop\" : \"continue\");\n\n\n\t\t\tif (this.isAPIStageControlDisabled())\n\t\t\t\tthis.apiStageCtrl.disable();\n\t\t\telse \n\t\t\t\tthis.apiStageCtrl.enable();\n\n\t  \t\tthis._ignoreValueChanges = false;\n  \t\t}\n\t}\n\n\tprivate _setupForm() {\n\n  \t\tthis.apiDeployCtrl = new FormControl(\"none\");\n  \t\tthis.apiStageCtrl = new FormControl({ value: '', disabled: this.isAPIStageControlDisabled() });\n\t  \tthis.apiMaturityCtrl = new FormControl(\"none\");\n\t  \tthis.runTestsCtrl = new FormControl();\n\t  \tthis.keepAliveCtrl = new FormControl();\n\t  \tthis.actionImageCtrl = new FormControl();\n\t  \tthis.tagImageCtrl = new FormControl();\n\t  \tthis.pipelineStatusCtrl = new FormControl(\"continue\");\n\n\t  \tthis.form = this._formBuilder.group({\n  \t\t\trunTestsCtrl: this.runTestsCtrl,\n  \t\t\tkeepAliveCtrl: this.keepAliveCtrl,\n  \t\t\tapiDeployCtrl: this.apiDeployCtrl,\n  \t\t\tapiStageCtrl: this.apiStageCtrl,\n  \t\t\tapiMaturityCtrl: this.apiMaturityCtrl,\n  \t\t\tactionImageCtrl: this.actionImageCtrl,\n  \t\t\ttagImageCtrl: this.tagImageCtrl,\n  \t\t\tpipelineStatusCtrl: this.pipelineStatusCtrl\n  \t\t});\n\n  \t\tthis.updateForm();\n\n  \t\tthis.form.valueChanges.subscribe((d) => {\n\n  \t\t\tif (this._ignoreValueChanges)\n  \t\t\t\treturn;\n\n\t\t\tif (this.runTestsCtrl.dirty)\n\t\t\t\tthis.action.runTests = \"\" + this.runTestsCtrl.value;\n\n\t\t\tif (this.keepAliveCtrl.dirty)\n\t\t\t\tthis.action.stop = \"\" + !this.keepAliveCtrl.value;\n\n\t\t\tif (this.apiDeployCtrl.dirty) {\n\n\t\t\t\tlet oldValue: string = this.action.apiDeployType;\n\n\t\t\t\tthis.action.apiDeployType = this.apiDeployCtrl.value;\n\n\t\t\t\tif (this.apiDeployCtrl.value != oldValue) {\n\n\t\t\t\t\tif (this.apiDeployCtrl.value == 'promote')\n\t\t\t\t\tthis.apiStageCtrl.enable();\n\t\t\t\telse \n\t\t\t\t\tthis.apiStageCtrl.disable();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.apiStageCtrl.dirty)\n\t\t\t\tthis.action.apiStage = this.apiStageCtrl.value;\n\n\t\t\tif (this.apiMaturityCtrl.dirty)\n\t\t\t\tthis.action.apiMaturity = this.apiMaturityCtrl.value != \"none\" ? this.apiMaturityCtrl.value : null;\n\t\t\t\n\t\t\tif (this.actionImageCtrl.dirty)\n\t\t\t\tthis.action.dockerAction = this.actionImageCtrl.value;\n\n\t\t\tif (this.tagImageCtrl.dirty)\n\t\t\t\tthis.action.dockerTag = this.tagImageCtrl.value;\n\n\t\t\tif (this.pipelineStatusCtrl.dirty)\n\t\t\t\tthis.action.pipelineAction = this.pipelineStatusCtrl.value;\n\n\t\t\tif (this.action.isActive())\n\t\t\t\tthis.action.active = \"true\";\n\t\t\telse\n\t\t\t\tthis.action.active = \"false\";\n\t\t\t\n\t\t\tthis._save();\n\t\t}); \n  \t}\n\n  \tprivate _save() {\n  \t\tthis.change.emit(this.action);\n  \t}\n}\n\n    \n\n    \n        \n\t\n\t\tAPI Deployment\n\t\t\n\t        \n\t\t    \t\n\t\t        \t\n\t          \t\t\t{{action.value}}\n\t           \t\t\n\t\t        \n\t    \t\n\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\t\n\t\t        \t\n\t\t          \t\t{{maturity}}\n\t\t           \t\n\t\t       \t\n\t\t   \t\n\t\t\n\t\tImage\n\t\t\n\t\t\t\n\t\t\t\t\n\t    \t\n\t    \t\n\t\t    \t\n\t\t        \t\n\t          \t\t\t{{action}}\n\t           \t\t\n\t\t        \n\t    \t\n\t\t\n\t\t\n\t\t\tRun tests on startup\n\t\t\n\t\t\n\t\t\tKeep Container Alive\n\t\t\n\t\tPipeline Execution\n\t\t\n\t\t  Continue\n\t\t  Pause\n\t\t  Stop\n\t\t\n\t\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\tAPI Deployment\t\t\t        \t\t    \t\t\t        \t\t          \t\t\t{{action.value}}\t           \t\t\t\t        \t    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t        \t\t\t          \t\t{{maturity}}\t\t           \t\t\t       \t\t\t   \t\t\t\t\tImage\t\t\t\t\t\t\t\t\t\t    \t\t    \t\t\t    \t\t\t        \t\t          \t\t\t{{action}}\t           \t\t\t\t        \t    \t\t\t\t\t\t\t\tRun tests on startup\t\t\t\t\t\t\tKeep Container Alive\t\t\t\tPipeline Execution\t\t\t\t  Continue\t\t  Pause\t\t  Stop\t\t\t'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about-app'},{'name': 'ActionComponent', 'selector': 'action'},{'name': 'ApiGatewayInstallerComponent', 'selector': 'jc-apigw-install'},{'name': 'ApiMicroGatewayInstallerComponent', 'selector': 'jc-apimg-install'},{'name': 'ApiPortalInstallerComponent', 'selector': 'jc-apipr-installer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildCommandsComponent', 'selector': 'build-commands'},{'name': 'BuildComponent', 'selector': 'build'},{'name': 'BuildExeComponent', 'selector': 'build-exe'},{'name': 'BuildImageComponent', 'selector': 'build-solution'},{'name': 'BuildInstallComponent', 'selector': 'build-install'},{'name': 'BuildPackagesComponent', 'selector': 'build-package'},{'name': 'ContainerComponent', 'selector': 'container'},{'name': 'ContainersComponent', 'selector': 'app-containers'},{'name': 'DeploymentDetailsComponent', 'selector': 'jc-deployment-details'},{'name': 'DeploymentListComponent', 'selector': 'jc-k8s-deployments'},{'name': 'DockerImageChooserComponent', 'selector': 'docker-image-chooser'},{'name': 'DockerImageListComponent', 'selector': 'jc-docker-images'},{'name': 'DockerImageVersionsComponent', 'selector': 'jc-docker-image-versions'},{'name': 'EditContainerComponent', 'selector': 'edit-container'},{'name': 'GitSourcesComponent', 'selector': 'git-source'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'InstallerComponent', 'selector': 'jc-install'},{'name': 'MicroServiceBuilderComponent', 'selector': 'jc-msc-configure'},{'name': 'MicroServiceInstallerComponent', 'selector': 'jc-msc-install'},{'name': 'PodsListComponent', 'selector': 'jc-pods'},{'name': 'RuntimeContainersComponent', 'selector': 'runtime-containers'},{'name': 'RuntimeDeployComponent', 'selector': 'runtime-deploy'},{'name': 'RuntimeDetailsComponent', 'selector': ''},{'name': 'RuntimeK8sComponent', 'selector': 'runtime'},{'name': 'RuntimeScaleComponent', 'selector': 'jc-runtime-scale'},{'name': 'RuntimeStageComponent', 'selector': 'runtime-stage'},{'name': 'RuntimeUpdateComponent', 'selector': ''},{'name': 'SagImageAlerterComponent', 'selector': 'sag-image-alerter'},{'name': 'ServicePropertiesComponent', 'selector': 'k8s-props'},{'name': 'SettingsComponent', 'selector': 'home'},{'name': 'SimpleNameComponent', 'selector': 'name-dialog'},{'name': 'StagingComponent', 'selector': 'staging'},{'name': 'TestCaseComponent', 'selector': 'test-case'},{'name': 'TestDefinitionComponent', 'selector': 'test-definitions'},{'name': 'TestHistoryComponent', 'selector': 'test-history'},{'name': 'TestRunComponent', 'selector': 'test-reun'},{'name': 'UMInstallerComponent', 'selector': 'jc-um-install'},{'name': 'UploadButtonComponent', 'selector': 'file-uploader-button'}];\n    var DIRECTIVES = [{'name': 'BuildImageChooseDirective', 'selector': '[builder]'},{'name': 'CancelCdkDrag', 'selector': '[appCancelCdkDrag]'},{'name': 'NgFileDrop', 'selector': '[ng-file-drop]'},{'name': 'NgFileSelect', 'selector': '[ng-file-select]'},{'name': 'RuntimeActionsDirective', 'selector': '[runtime-actions]'}];\n    var ACTUAL_COMPONENT = {'name': 'ActionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionsComponent.html":{"url":"interfaces/ActionsComponent.html","title":"interface - ActionsComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/k8s/runtime-actions.directive.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        selectedDeployment\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        selectedDeployment\n                                    \n                                \n                                \n                                    \n                                        selectedDeployment:         K8sDeploymentDefinition\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         K8sDeploymentDefinition\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Directive, ViewContainerRef } \t\t\t\t\tfrom '@angular/core';\n\nimport { K8sDeploymentDefinition }                      from '../../models/k8s-deployment-definition';\n\n@Directive({\n  selector: '[runtime-actions]',\n})\n\nexport class RuntimeActionsDirective {\n  constructor(public viewContainerRef: ViewContainerRef) { }\n}\n\nexport interface ActionsComponent {\n  selectedDeployment: K8sDeploymentDefinition;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ApiGatewayInstallerComponent.html":{"url":"components/ApiGatewayInstallerComponent.html","title":"component - ApiGatewayInstallerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ApiGatewayInstallerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/plugins/apigw-installer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    BuilderComponent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                jc-apigw-install\n            \n\n\n\n\n            \n                templateUrl\n                ../../templates/plugins/apigw-install.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dataSource\n                            \n                            \n                                    Public\n                                ElkPortHttpCtrl\n                            \n                            \n                                    Public\n                                ElkPortTcpCtrl\n                            \n                            \n                                    Public\n                                formGroup\n                            \n                            \n                                    Public\n                                owner\n                            \n                            \n                                    Public\n                                primaryPortCtrl\n                            \n                            \n                                    Public\n                                secureUIPortCtrl\n                            \n                            \n                                    Public\n                                uIPortCtrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                flagChanges\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                refreshBuildCommands\n                            \n                            \n                                    Private\n                                setDefaults\n                            \n                            \n                                    Public\n                                setLicenseFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            flagChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    flagChanges(port: string, securePort: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/plugins/apigw-installer.component.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    port\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    securePort\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/plugins/apigw-installer.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            refreshBuildCommands\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshBuildCommands(show: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/plugins/apigw-installer.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    show\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setDefaults\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDefaults()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/plugins/apigw-installer.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setLicenseFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setLicenseFile(license: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/plugins/apigw-installer.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    license\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BuildParams\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/plugins/apigw-installer.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ElkPortHttpCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/plugins/apigw-installer.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ElkPortTcpCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/plugins/apigw-installer.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/plugins/apigw-installer.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            owner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PropertiesChangedOwner\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/plugins/apigw-installer.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            primaryPortCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/plugins/apigw-installer.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            secureUIPortCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/plugins/apigw-installer.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uIPortCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/plugins/apigw-installer.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ChangeDetectorRef, Input,\n\t\t\tOnInit, OnDestroy, ViewChild }   \tfrom '@angular/core';\nimport { FormBuilder, FormGroup, FormControl }  from '@angular/forms';\n\nimport { BuilderComponent, BuilderProperties,\n\t\t\t\tPropertiesChangedOwner }\t\tfrom '../elements/build-image-choose.directive';\n\nimport { BuildParams, BuildCommand }       \t\tfrom '../../models/project';\n\n@Component({\n  selector: 'jc-apigw-install',\n  templateUrl: '../../templates/plugins/apigw-install.html'\n})\nexport class ApiGatewayInstallerComponent implements BuilderComponent {\n\n\tpublic formGroup: FormGroup;\n\tpublic owner: PropertiesChangedOwner;\n\tpublic dataSource: BuildParams;\n\n\tpublic primaryPortCtrl: FormControl;\n\tpublic uIPortCtrl: FormControl;\n\tpublic secureUIPortCtrl: FormControl;\n\n\tpublic ElkPortHttpCtrl: FormControl;\n\tpublic ElkPortTcpCtrl: FormControl;\n\n\tpublic ngOnInit() {\n\n\t\tthis.dataSource = this.owner.initialProperties();\n\n\t\tthis.setDefaults();\n\n\t\tthis.primaryPortCtrl = new FormControl(this.dataSource.publicPort());\n\t\tthis.uIPortCtrl = new FormControl(this.dataSource.args.get(\"uIPort\"));\n\t\tthis.secureUIPortCtrl = new FormControl(this.dataSource.args.get(\"uIPortSecure\"));\n\n\t\tthis.ElkPortHttpCtrl = new FormControl(this.dataSource.args.get(\"ElkPortHttp\"));\n\t\tthis.ElkPortTcpCtrl = new FormControl(this.dataSource.args.get(\"ElkPortTCP\"));\n\n\t\tthis.primaryPortCtrl.disable();\n\n\t\tthis.formGroup.addControl(\"primaryPortCtrl\", this.primaryPortCtrl);\n\t\tthis.formGroup.addControl(\"uIPortCtrl\", this.uIPortCtrl);\n\t\tthis.formGroup.addControl(\"secureUIPortCtrl\", this.secureUIPortCtrl);\n\t\tthis.formGroup.addControl(\"ElkPortHttpCtrl\", this.ElkPortHttpCtrl);\n\t\tthis.formGroup.addControl(\"ElkPortTcpCtrl\", this.ElkPortTcpCtrl);\n\n\t\tthis.flagChanges(this.uIPortCtrl.value, this.secureUIPortCtrl.value);\n\n\t\tthis.formGroup.valueChanges.subscribe((v) => {\n\t\t\tthis.dataSource.args.set('uIPort', this.uIPortCtrl.value);\n\t\t\tthis.dataSource.args.set('uIPortSecure', this.secureUIPortCtrl.value);\n\t\t\tthis.dataSource.args.set('ElkPortHttp', this.ElkPortHttpCtrl.value);\n\t\t\tthis.dataSource.args.set('ElkPortTCP', this.ElkPortTcpCtrl.value);\n\n\t\t\tthis.flagChanges(this.uIPortCtrl.value, this.secureUIPortCtrl.value)\n\t\t});\n\t}\n\n\tpublic refreshBuildCommands(show: boolean) {\n\n  }\n\n\tpublic setLicenseFile(license: string) {\n\n\t\tlet file: BuildCommand = this.dataSource.fileForType(\"licenses\");\n\n\t    if (!file) {\n\t        file = new BuildCommand();\n\t        file.commandType = \"file\"\n\t        file.fileType = \"licenses\";\n\t        file.description = \"License file\"\n\t        file.target = \"/opt/softwareag/IntegrationServer/instances/default/config/licenseKey.xml\";\n\n\t        //ensures that the build-components view gets updated\n\t        this.dataSource.buildCommands = Object.assign([], this.dataSource.buildCommands);\n\n\t        this.dataSource.buildCommands.push(file);\n\t    }\n\n      \tfile.source = license.replace(/\\s/g, \"-\");\n\t}\n\n\tprivate setDefaults() {\n\n\t\tif (!this.dataSource.args.get(\"uIPort\")) {\n\t\t\tthis.dataSource.args.set(\"uIPort\", \"9072\");\n\t\t}\n\n\t\tif (!this.dataSource.args.get(\"uIPortSecure\")) {\n\t\t\tthis.dataSource.args.set(\"uIPortSecure\", \"9073\");\n\t\t}\n\n\t\tif (!this.dataSource.args.get(\"ElkPortHttp\")) {\n\t\t\tthis.dataSource.args.set(\"ElkPortHttp\", \"2405\");\n\t\t}\n\n\t\tif (!this.dataSource.args.get(\"ElkPortTCP\")) {\n\t\t\tthis.dataSource.args.set(\"ElkPortTCP\", \"9340\");\n\t\t}\n\n\t\t// Hidden properties\n\n\t\tlet db: BuildCommand = this.dataSource.fileForType(\"isdb\");\n\n      \tif (!db) {\n        \tdb = new BuildCommand();\n\t        db.commandType = \"run\";\n\t        db.buildTarget = \"build\";\n\t        db.fileType = \"isdb\";\n\t        db.target = \"mkdir /opt/softwareag/IntegrationServer/instances/default/db\";\n\t        this.dataSource.buildCommands.push(db);\n\t    }\n\n\t    let cache: BuildCommand = this.dataSource.fileForType(\"cache\");\n\n\t    if (!cache) {\n\t        cache = new BuildCommand();\n\t        cache.commandType = \"run\";\n\t        cache.buildTarget = \"build\";\n\t        cache.fileType = \"cache\";\n\t        cache.target = \"mkdir /opt/softwareag/IntegrationServer/instances/default/cache\";\n\t        this.dataSource.buildCommands.push(cache);\n\t    }\n\n\t   let eventstore: BuildCommand = this.dataSource.fileForType(\"eventstore\");\n\n\t    if (!eventstore) {\n\t        eventstore = new BuildCommand();\n\t        eventstore.commandType = \"run\";\n\t        eventstore.buildTarget = \"build\";\n\t        eventstore.fileType = \"eventstore\";\n\t        eventstore.target = \"mkdir -p /opt/softwareag/EventDataStore/data\";\n\t        this.dataSource.buildCommands.push(eventstore);\n\t    }\n\n\t    let internal: BuildCommand = this.dataSource.fileForType(\"internal\");\n\n\t    if (!internal) {\n\t        internal = new BuildCommand();\n\t        internal.commandType = \"run\";\n\t        internal.buildTarget = \"build\";\n\t        internal.fileType = \"internal\";\n\t        internal.target = \"mkdir -p /opt/softwareag/InternalDataStore/data\";\n\t        this.dataSource.buildCommands.push(internal);\n\t    }\n\t}\n\n\tprivate flagChanges(port: string, securePort: string) {\n\n\t\tlet props: Map = new Map();\n\n    \tif (port)\n\t\t  props.set(\"UI Ports\", [new BuilderProperties(\"HTTP\", [port]), new BuilderProperties(\"HTTPs\", [securePort])]);\n\n\t\tthis.owner.propertiesChangedInBuilder(\"api-gateway\", props, this.dataSource);\n\t}\n}\n\n    \n\n    \n        \n\n  API Gateway Details\n  \n    \n      \n    \n    \n      \n    \n     \n      \n    \n    \n      \n    \n     \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  API Gateway Details                                                                            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about-app'},{'name': 'ActionComponent', 'selector': 'action'},{'name': 'ApiGatewayInstallerComponent', 'selector': 'jc-apigw-install'},{'name': 'ApiMicroGatewayInstallerComponent', 'selector': 'jc-apimg-install'},{'name': 'ApiPortalInstallerComponent', 'selector': 'jc-apipr-installer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildCommandsComponent', 'selector': 'build-commands'},{'name': 'BuildComponent', 'selector': 'build'},{'name': 'BuildExeComponent', 'selector': 'build-exe'},{'name': 'BuildImageComponent', 'selector': 'build-solution'},{'name': 'BuildInstallComponent', 'selector': 'build-install'},{'name': 'BuildPackagesComponent', 'selector': 'build-package'},{'name': 'ContainerComponent', 'selector': 'container'},{'name': 'ContainersComponent', 'selector': 'app-containers'},{'name': 'DeploymentDetailsComponent', 'selector': 'jc-deployment-details'},{'name': 'DeploymentListComponent', 'selector': 'jc-k8s-deployments'},{'name': 'DockerImageChooserComponent', 'selector': 'docker-image-chooser'},{'name': 'DockerImageListComponent', 'selector': 'jc-docker-images'},{'name': 'DockerImageVersionsComponent', 'selector': 'jc-docker-image-versions'},{'name': 'EditContainerComponent', 'selector': 'edit-container'},{'name': 'GitSourcesComponent', 'selector': 'git-source'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'InstallerComponent', 'selector': 'jc-install'},{'name': 'MicroServiceBuilderComponent', 'selector': 'jc-msc-configure'},{'name': 'MicroServiceInstallerComponent', 'selector': 'jc-msc-install'},{'name': 'PodsListComponent', 'selector': 'jc-pods'},{'name': 'RuntimeContainersComponent', 'selector': 'runtime-containers'},{'name': 'RuntimeDeployComponent', 'selector': 'runtime-deploy'},{'name': 'RuntimeDetailsComponent', 'selector': ''},{'name': 'RuntimeK8sComponent', 'selector': 'runtime'},{'name': 'RuntimeScaleComponent', 'selector': 'jc-runtime-scale'},{'name': 'RuntimeStageComponent', 'selector': 'runtime-stage'},{'name': 'RuntimeUpdateComponent', 'selector': ''},{'name': 'SagImageAlerterComponent', 'selector': 'sag-image-alerter'},{'name': 'ServicePropertiesComponent', 'selector': 'k8s-props'},{'name': 'SettingsComponent', 'selector': 'home'},{'name': 'SimpleNameComponent', 'selector': 'name-dialog'},{'name': 'StagingComponent', 'selector': 'staging'},{'name': 'TestCaseComponent', 'selector': 'test-case'},{'name': 'TestDefinitionComponent', 'selector': 'test-definitions'},{'name': 'TestHistoryComponent', 'selector': 'test-history'},{'name': 'TestRunComponent', 'selector': 'test-reun'},{'name': 'UMInstallerComponent', 'selector': 'jc-um-install'},{'name': 'UploadButtonComponent', 'selector': 'file-uploader-button'}];\n    var DIRECTIVES = [{'name': 'BuildImageChooseDirective', 'selector': '[builder]'},{'name': 'CancelCdkDrag', 'selector': '[appCancelCdkDrag]'},{'name': 'NgFileDrop', 'selector': '[ng-file-drop]'},{'name': 'NgFileSelect', 'selector': '[ng-file-select]'},{'name': 'RuntimeActionsDirective', 'selector': '[runtime-actions]'}];\n    var ACTUAL_COMPONENT = {'name': 'ApiGatewayInstallerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ApiMicroGatewayInstallerComponent.html":{"url":"components/ApiMicroGatewayInstallerComponent.html","title":"component - ApiMicroGatewayInstallerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ApiMicroGatewayInstallerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/plugins/apimg-installer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    BuilderComponent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                jc-apimg-install\n            \n\n\n\n\n            \n                templateUrl\n                ../../templates/plugins/apimg-install.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiGatewayPasswordCtrl\n                            \n                            \n                                    Public\n                                apiGatewayUrlCtrl\n                            \n                            \n                                    Public\n                                apiGatewayUserCtrl\n                            \n                            \n                                    Public\n                                dataSource\n                            \n                            \n                                    Public\n                                defaultApis\n                            \n                            \n                                    Public\n                                formGroup\n                            \n                            \n                                    Public\n                                httpsPortCtrl\n                            \n                            \n                                    Public\n                                isInstall\n                            \n                            \n                                    Public\n                                licCtrl\n                            \n                            \n                                    Public\n                                licenceFiles\n                            \n                            \n                                    Public\n                                owner\n                            \n                            \n                                    Public\n                                primaryPortCtrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentAPIGatewayLicense\n                            \n                            \n                                    Private\n                                flagChanges\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                refreshBuildCommands\n                            \n                            \n                                    Private\n                                setAPIGatewayLicense\n                            \n                            \n                                    Private\n                                setDefaultsForBuilding\n                            \n                            \n                                    Private\n                                setDefaultsForInstallation\n                            \n                            \n                                    Public\n                                setLicenseFile\n                            \n                            \n                                    Private\n                                setupValuesForBuilding\n                            \n                            \n                                    Private\n                                setupValuesForInstallation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_resources: ResourceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/plugins/apimg-installer.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _resources\n                                                  \n                                                        \n                                                                        ResourceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            currentAPIGatewayLicense\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    currentAPIGatewayLicense()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/plugins/apimg-installer.component.ts:247\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            flagChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    flagChanges(port: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/plugins/apimg-installer.component.ts:300\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    port\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/plugins/apimg-installer.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            refreshBuildCommands\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshBuildCommands(show: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/plugins/apimg-installer.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    show\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setAPIGatewayLicense\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setAPIGatewayLicense(license: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/plugins/apimg-installer.component.ts:258\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    license\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setDefaultsForBuilding\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDefaultsForBuilding()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/plugins/apimg-installer.component.ts:196\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setDefaultsForInstallation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDefaultsForInstallation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/plugins/apimg-installer.component.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setLicenseFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setLicenseFile(license: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/plugins/apimg-installer.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    license\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setupValuesForBuilding\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setupValuesForBuilding()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/plugins/apimg-installer.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setupValuesForInstallation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setupValuesForInstallation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/plugins/apimg-installer.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiGatewayPasswordCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/plugins/apimg-installer.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiGatewayUrlCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/plugins/apimg-installer.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiGatewayUserCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/plugins/apimg-installer.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BuildParams\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/plugins/apimg-installer.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            defaultApis\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/plugins/apimg-installer.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/plugins/apimg-installer.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            httpsPortCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/plugins/apimg-installer.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isInstall\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/plugins/apimg-installer.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            licCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/plugins/apimg-installer.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            licenceFiles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/plugins/apimg-installer.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            owner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PropertiesChangedOwner\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/plugins/apimg-installer.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            primaryPortCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/plugins/apimg-installer.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ChangeDetectorRef, Input,\n\t\t\tOnInit, OnDestroy, ViewChild }   \tfrom '@angular/core';\nimport { FormBuilder, FormGroup, FormControl }  from '@angular/forms';\n\nimport { BuilderComponent, BuilderProperties,\n\t\t\t\tPropertiesChangedOwner }\t\tfrom '../elements/build-image-choose.directive';\n\nimport { ResourceService }                      from '../../services/resources.service';\nimport { BuildParams, BuildCommand }     \t\tfrom '../../models/project';\n\n@Component({\n  selector: 'jc-apimg-install',\n  templateUrl: '../../templates/plugins/apimg-install.html'\n})\nexport class ApiMicroGatewayInstallerComponent implements BuilderComponent {\n\n\tpublic formGroup: FormGroup;\n\tpublic owner: PropertiesChangedOwner;\n\tpublic dataSource: BuildParams;\n\n\tpublic primaryPortCtrl: FormControl;\n\tpublic httpsPortCtrl: FormControl;\n\tpublic apiGatewayUrlCtrl: FormControl;\n\tpublic apiGatewayUserCtrl: FormControl;\n\tpublic apiGatewayPasswordCtrl: FormControl;\n\tpublic defaultApis: FormControl;\n\tpublic licCtrl: FormControl;\n\n\tpublic isInstall: boolean = false;\n\n  \tpublic licenceFiles: string[] = [];\n\n\tpublic constructor(private _resources: ResourceService) {\n\t\tthis._resources.resourcesForType(\"licenses\").subscribe((p) => {\n        this.licenceFiles = [];\n         p.forEach((f) => {\n          this.licenceFiles.push(f.name);\n        })\n      });\n\t}\n\n\tpublic ngOnInit() {\n\n\t\tthis.dataSource = this.owner.initialProperties();\n\n\t\tif (( this.dataSource).productType) {\n\t\t\tthis.isInstall = true;\n\t\t\tthis.setDefaultsForInstallation();\n\t\t\tthis.setupValuesForInstallation();\n\t\t}\n\t\telse {\n\t\t\tthis.setDefaultsForBuilding();\n\t\t\tthis.setupValuesForBuilding();\n\t\t}\n\t}\n\n\t\tpublic refreshBuildCommands(show: boolean) {\n\n  }\n\n\tpublic setLicenseFile(license: string) {\n\n\t\tlet file: BuildCommand = this.dataSource.fileForType(\"licenses\");\n\n\t    if (!file) {\n\t        file = new BuildCommand();\n\t        file.commandType = \"file\"\n\t        file.fileType = \"licenses\";\n\t        file.description = \"License file\"\n\t        file.target = \"/opt/softwareag/Microgateway/config/license.xml\";\n\n\t        //ensures that the build-components view gets updated\n\t        this.dataSource.buildCommands = Object.assign([], this.dataSource.buildCommands);\n\n\t        this.dataSource.buildCommands.push(file);\n\t    }\n\n      \tfile.source = license.replace(/\\s/g, \"-\");\n\t}\n\n\tprivate setupValuesForInstallation() {\n\n\t\tthis.setupValuesForBuilding();\n\n\t\tif (this.dataSource.publicPort())\n\t\t\tthis.primaryPortCtrl.disable();\n\n\t\tthis.licCtrl = new FormControl(this.currentAPIGatewayLicense());\n\t\tthis.formGroup.addControl(\"licCtrl\", this.licCtrl);\n\t}\n\n\tprivate setupValuesForBuilding() {\n\n\t\tthis.primaryPortCtrl = new FormControl(this.dataSource.publicPort());\n\t\tthis.httpsPortCtrl = new FormControl(this.dataSource.args.get('mcgw_ports_https'));\n\t\tthis.apiGatewayUrlCtrl = new FormControl(this.dataSource.args.get(\"mcgw_api_gateway_url\"));\n\t\tthis.apiGatewayUserCtrl = new FormControl(this.dataSource.args.get(\"mcgw_api_gateway_user\"));\n\t\tthis.apiGatewayPasswordCtrl = new FormControl(this.dataSource.args.get(\"mcgw_api_gateway_password\"));\n\n\t\tthis.formGroup.addControl(\"primaryPortCtrl\", this.primaryPortCtrl);\n\t\tthis.formGroup.addControl(\"httpsPortCtrl\", this.httpsPortCtrl);\n\t\tthis.formGroup.addControl(\"apiGatewayUrlCtrl\", this.apiGatewayUrlCtrl);\n\t\tthis.formGroup.addControl(\"apiGatewayUserCtrl\", this.apiGatewayUserCtrl);\n\t\tthis.formGroup.addControl(\"apiGatewayPasswordCtrl\", this.apiGatewayPasswordCtrl);\n\n\t\tthis.flagChanges(this.primaryPortCtrl.value);\n\n\t\tthis.formGroup.valueChanges.subscribe((v) => {\n\n\t\t\tif (this.primaryPortCtrl && this.primaryPortCtrl.dirty) {\n\t\t\t\tthis.dataSource.setPublicPort(this.primaryPortCtrl.value);\n\t\t\t\tthis.dataSource.args.set('mcgw_ports_http', this.primaryPortCtrl.value);\n\t\t\t\tthis.primaryPortCtrl.markAsPristine();\n\t\t\t}\n\n\t\t\tif (this.httpsPortCtrl && this.httpsPortCtrl.dirty) {\n\t\t\tthis.dataSource.args.set('mcgw_ports_https', this.httpsPortCtrl.value);\n\t\t\t\tthis.httpsPortCtrl.markAsPristine();\n\t\t\t}\n\n\t\t\tif (this.licCtrl && this.licCtrl.dirty) {\n\t\t\t\tthis.setAPIGatewayLicense(this.licCtrl.value);\n\t\t\t\tthis.licCtrl.markAsPristine();\n\t\t\t}\n\n\t\t\tif (this.apiGatewayUrlCtrl.dirty) {\n\n\t\t\t\tthis.dataSource.args.set(\"mcgw_api_gateway_url\", this.apiGatewayUrlCtrl.value);\n\t\t\t\tthis.apiGatewayUrlCtrl.markAsPristine();\n\t\t\t}\n\n\t\t\tif (this.apiGatewayUserCtrl.dirty) {\n\n\t\t\t\tthis.dataSource.args.set(\"mcgw_api_gateway_user\", this.apiGatewayUserCtrl.value);\n\t\t\t\tthis.apiGatewayUserCtrl.markAsPristine();\n\t\t\t}\n\n\t\t\tif (this.apiGatewayPasswordCtrl.dirty) {\n\n\t\t\t\tthis.dataSource.args.set(\"mcgw_api_gateway_password\", this.apiGatewayPasswordCtrl.value);\n\t\t\t\tthis.apiGatewayPasswordCtrl.markAsPristine();\n\t\t\t}\n\n\t\t\tthis.flagChanges(this.primaryPortCtrl.value)\n\t\t});\n\t}\n\n\tprivate setDefaultsForInstallation() {\n\n      \tlet yum: BuildCommand = this.dataSource.fileForType(\"yum\");\n\n\t\tif (!yum) {\n\n\t\t    // add if not already in list\n\n\t\t    yum = new BuildCommand();\n\t\t    yum.commandType = \"run\";\n\t\t    yum.buildTarget = \"pre-install\";\n\t\t    yum.fileType = \"yum\";\n\t\t    yum.description = \"Install unzip so that we can extract microgateway build below\";\n\t\t    yum.target = \"yum install -y unzip\";\n\t\t    this.dataSource.buildCommands.push(yum);\n\n\t\t    let create: BuildCommand = new BuildCommand();\n\t\t    create.commandType = \"run\";\n\t\t    create.buildTarget = \"post-install\";\n\t\t    create.fileType = \"microgateway.sh\";\n\t\t    create.description = \"Script to generate micro gateway zip file\";\n\t\t    create.target = \"cd /opt/softwareag/Microgateway; ./microgateway.sh createInstance -os linux -instance /opt/softwareag/microgateway.zip; cd ..;unzip microgateway.zip -d microgateway-linux\";\n\t\t    this.dataSource.buildCommands.push(create);\n\n\t\t\tlet extract: BuildCommand = new BuildCommand();\n\t\t    extract.commandType = \"copy\";\n\t\t    extract.buildTarget = \"build\";\n\t\t    extract.fileType = \"copy\";\n\t\t    extract.description = \"copy from install build to build target\";\n\t\t    extract.source = \"/opt/softwareag/microgateway-linux\";\n\t\t    extract.target = \"/opt/softwareag/Microgateway\";\n\t\t    this.dataSource.buildCommands.push(extract);\n\n\t\t\tlet configure: BuildCommand = new BuildCommand();\n\t\t    configure.commandType = \"run\";\n\t\t    configure.buildTarget = \"build\";\n\t\t    configure.fileType = \"configure\";\n\t\t    configure.description = \"set permissions\";\n\t\t    configure.target = \"cd /opt/softwareag/Microgateway; chmod u+x ./setpermissions.sh; /opt/softwareag/Microgateway/setpermissions.sh\";\n\t\t    this.dataSource.buildCommands.push(configure);\n\n\t\t    this.setDefaultsForBuilding();\n\n\t\t    //ensures that the build-components view gets updated\n\t\t    this.dataSource.buildCommands = Object.assign([], this.dataSource.buildCommands);\n\t\t}\n  \t}\n\n  \tprivate setDefaultsForBuilding() {\n\n  \t\tlet settings: BuildCommand = this.dataSource.fileForType(\"resource\");\n\n  \t\tif (!settings) {\n\n  \t\t\tsettings = new BuildCommand();\n\t\t    settings.commandType = \"file\";\n\t\t    settings.buildTarget = \"build\";\n\t\t    settings.fileType = \"resource\";\n\t\t    settings.description = \"system settings for micro gateway\";\n\t\t    settings.source = \"mcgw-system-settings.yml\";\n\t\t    settings.target = \"/opt/softwareag/Microgateway/config/system-settings.yml\";\n\t\t    this.dataSource.buildCommands.push(settings);\n\n\t\t    settings = new BuildCommand();\n\t\t    settings.commandType = \"file\";\n\t\t    settings.buildTarget = \"build\";\n\t\t    settings.fileType = \"resource\";\n\t\t    settings.description = \"custom settings for micro gateway\";\n\t\t    settings.source = \"mcgw-custom-settings.yml\";\n\t\t    settings.target = \"/opt/softwareag/Microgateway/config/custom-settings.yml\";\n\t\t    this.dataSource.buildCommands.push(settings);\n\n\t\t    this.dataSource.args.set(\"env_mcgw-custom-settings\", \"custom-settings.yml\");\n\n\t\t    this.dataSource.buildCommands = Object.assign([], this.dataSource.buildCommands);\n\n\t\t    if (!this.isInstall) {\n\n\t\t    \tif (!this.dataSource.isCustomImage()) {\n\n\t\t    \t\tlet init: BuildCommand = new BuildCommand();\n\t\t\t\t    init.commandType = \"file\";\n\t\t\t\t    init.buildTarget = \"build\";\n\t\t\t\t    init.fileType = \"support\";\n\t\t\t\t    init.description = \"wrapper for docker init\";\n\t\t\t\t    init.source = \"apimg-docker-init.sh\";\n\t\t\t\t    init.target = \"/docker-init.sh\";\n\t\t\t\t    this.dataSource.buildCommands.push(init);\n\t\t\t\t    this.dataSource.entryPoint = \"/docker-init.sh\";\n\t\t    \t}\n\n\t\t\t    this.dataSource.args.set(\"env_mcgw-custom-settings\", \"custom-settings.yml\");\n\n\t\t\t    this.dataSource.buildCommands = Object.assign([], this.dataSource.buildCommands);\n\n\t\t    }\n\t\t}\n  \t}\n\n  \tprivate currentAPIGatewayLicense(): string {\n\n  \t\tlet lic: BuildCommand = this.dataSource.fileForType(\"licenses\");\n\n  \t\tif (lic) {\n  \t\t\treturn lic.source;\n  \t\t} else {\n  \t\t\treturn null;\n  \t\t}\n  \t}\n\n  \tprivate setAPIGatewayLicense(license: string) {\n\n  \t\tlet lic: BuildCommand = this.dataSource.fileForType(\"licenses\");\n\n\t\tif (!lic) {\n\n\t\t    // add if not already in list\n\n\t\t    lic = new BuildCommand();\n\t\t    lic.commandType = \"file\";\n\t\t    lic.buildTarget = \"install\";\n\t\t    lic.fileType = \"licenses\";\n\t\t    lic.description = \"License file for AP Gateway\";\n\t\t    lic.target = \"/software\";\n\n\t\t    this.dataSource.buildCommands.push(lic);\n\t\t    this.dataSource.buildCommands = Object.assign([], this.dataSource.buildCommands);\n\t\t}\n\n\t\tlic.source = license.replace(/\\s/g, \"-\")\n\t\tthis.dataSource.args.set(\"apiGatewayLicenseFile\", lic.source);\n\n\t\t //ensures that the build-components view gets updated\n\n\t\tlet altLic: BuildCommand = this.dataSource.fileForType(\"lic\");\n\n\t\tif (!altLic) {\n\n\t\t\taltLic = new BuildCommand();\n\t\t    altLic.commandType = \"file\";\n\t\t    altLic.buildTarget = \"build\";\n\t\t    altLic.fileType = \"lic\";\n\t\t    altLic.description = \"copy micro gateway license to runtime\";\n\t\t    altLic.target = \"/opt/softwareag/Microgateway/config/license.xml\";\n\n\t\t    this.dataSource.buildCommands.push(altLic);\n\t\t    this.dataSource.buildCommands = Object.assign([], this.dataSource.buildCommands);\n\t\t}\n\n\t\taltLic.source = \"/resources/\" + this.dataSource.assignedLicense() + \".xml\";\n  \t}\n\n\tprivate flagChanges(port: string) {\n\n\t\tlet props: Map = new Map();\n\n    \tif (port)\n\t\t  props.set(\"API Entry Port\", [new BuilderProperties(\"HTTP\", [port])]);\n\n\t\tthis.owner.propertiesChangedInBuilder(\"micro-gateway\", props, this.dataSource);\n\t}\n}\n\n    \n\n    \n        \n\n  Micro Gateway Gateway Details\n  \n    \n      \n    \n  \n    Associated API Gateway Details\n    \n      \n          \n            \n              {{lic}}\n            \n          \n      \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Micro Gateway Gateway Details                      Associated API Gateway Details                                              {{lic}}                                                                                    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about-app'},{'name': 'ActionComponent', 'selector': 'action'},{'name': 'ApiGatewayInstallerComponent', 'selector': 'jc-apigw-install'},{'name': 'ApiMicroGatewayInstallerComponent', 'selector': 'jc-apimg-install'},{'name': 'ApiPortalInstallerComponent', 'selector': 'jc-apipr-installer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildCommandsComponent', 'selector': 'build-commands'},{'name': 'BuildComponent', 'selector': 'build'},{'name': 'BuildExeComponent', 'selector': 'build-exe'},{'name': 'BuildImageComponent', 'selector': 'build-solution'},{'name': 'BuildInstallComponent', 'selector': 'build-install'},{'name': 'BuildPackagesComponent', 'selector': 'build-package'},{'name': 'ContainerComponent', 'selector': 'container'},{'name': 'ContainersComponent', 'selector': 'app-containers'},{'name': 'DeploymentDetailsComponent', 'selector': 'jc-deployment-details'},{'name': 'DeploymentListComponent', 'selector': 'jc-k8s-deployments'},{'name': 'DockerImageChooserComponent', 'selector': 'docker-image-chooser'},{'name': 'DockerImageListComponent', 'selector': 'jc-docker-images'},{'name': 'DockerImageVersionsComponent', 'selector': 'jc-docker-image-versions'},{'name': 'EditContainerComponent', 'selector': 'edit-container'},{'name': 'GitSourcesComponent', 'selector': 'git-source'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'InstallerComponent', 'selector': 'jc-install'},{'name': 'MicroServiceBuilderComponent', 'selector': 'jc-msc-configure'},{'name': 'MicroServiceInstallerComponent', 'selector': 'jc-msc-install'},{'name': 'PodsListComponent', 'selector': 'jc-pods'},{'name': 'RuntimeContainersComponent', 'selector': 'runtime-containers'},{'name': 'RuntimeDeployComponent', 'selector': 'runtime-deploy'},{'name': 'RuntimeDetailsComponent', 'selector': ''},{'name': 'RuntimeK8sComponent', 'selector': 'runtime'},{'name': 'RuntimeScaleComponent', 'selector': 'jc-runtime-scale'},{'name': 'RuntimeStageComponent', 'selector': 'runtime-stage'},{'name': 'RuntimeUpdateComponent', 'selector': ''},{'name': 'SagImageAlerterComponent', 'selector': 'sag-image-alerter'},{'name': 'ServicePropertiesComponent', 'selector': 'k8s-props'},{'name': 'SettingsComponent', 'selector': 'home'},{'name': 'SimpleNameComponent', 'selector': 'name-dialog'},{'name': 'StagingComponent', 'selector': 'staging'},{'name': 'TestCaseComponent', 'selector': 'test-case'},{'name': 'TestDefinitionComponent', 'selector': 'test-definitions'},{'name': 'TestHistoryComponent', 'selector': 'test-history'},{'name': 'TestRunComponent', 'selector': 'test-reun'},{'name': 'UMInstallerComponent', 'selector': 'jc-um-install'},{'name': 'UploadButtonComponent', 'selector': 'file-uploader-button'}];\n    var DIRECTIVES = [{'name': 'BuildImageChooseDirective', 'selector': '[builder]'},{'name': 'CancelCdkDrag', 'selector': '[appCancelCdkDrag]'},{'name': 'NgFileDrop', 'selector': '[ng-file-drop]'},{'name': 'NgFileSelect', 'selector': '[ng-file-select]'},{'name': 'RuntimeActionsDirective', 'selector': '[runtime-actions]'}];\n    var ACTUAL_COMPONENT = {'name': 'ApiMicroGatewayInstallerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ApiPortalInstallerComponent.html":{"url":"components/ApiPortalInstallerComponent.html","title":"component - ApiPortalInstallerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ApiPortalInstallerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/plugins/apipr-installer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    BuilderComponent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                jc-apipr-installer\n            \n\n\n\n\n            \n                templateUrl\n                ../../templates/plugins/apipr-install.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dataSource\n                            \n                            \n                                    Public\n                                formGroup\n                            \n                            \n                                    Public\n                                owner\n                            \n                            \n                                    Public\n                                primaryPortCtrl\n                            \n                            \n                                    Public\n                                securePortCtrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                flagChanges\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                refreshBuildCommands\n                            \n                            \n                                    Private\n                                setDefaults\n                            \n                            \n                                    Public\n                                setLicenseFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            flagChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    flagChanges(port: string, securePort: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/plugins/apipr-installer.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    port\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    securePort\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/plugins/apipr-installer.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            refreshBuildCommands\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshBuildCommands(show: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/plugins/apipr-installer.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    show\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setDefaults\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDefaults()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/plugins/apipr-installer.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setLicenseFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setLicenseFile(license: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/plugins/apipr-installer.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    license\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BuildParams\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/plugins/apipr-installer.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/plugins/apipr-installer.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            owner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PropertiesChangedOwner\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/plugins/apipr-installer.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            primaryPortCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/plugins/apipr-installer.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            securePortCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/plugins/apipr-installer.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ChangeDetectorRef, Input,\n\t\t\tOnInit, OnDestroy, ViewChild }   \tfrom '@angular/core';\nimport { FormBuilder, FormGroup, FormControl }  from '@angular/forms';\n\nimport { BuilderComponent, BuilderProperties,\n\t\t\t\tPropertiesChangedOwner }\t\tfrom '../elements/build-image-choose.directive';\n\nimport { BuildParams, BuildCommand }       \t\tfrom '../../models/project';\n\n@Component({\n  selector: 'jc-apipr-installer',\n  templateUrl: '../../templates/plugins/apipr-install.html'\n})\n\nexport class ApiPortalInstallerComponent implements BuilderComponent {\n\n\tpublic formGroup: FormGroup;\n\tpublic owner: PropertiesChangedOwner;\n\tpublic dataSource: BuildParams;\n\n\tpublic primaryPortCtrl: FormControl;\n\tpublic securePortCtrl: FormControl;\n\n\tpublic ngOnInit() {\n\n\t\tthis.dataSource = this.owner.initialProperties();\n\n\t\tthis.setDefaults();\n\n\t\tthis.primaryPortCtrl = new FormControl(this.dataSource.publicPort());\n\t\tthis.securePortCtrl = new FormControl(this.dataSource.args.get(\"securePort\"));\n\n\t\tthis.primaryPortCtrl.disable();\n\n\t\tthis.formGroup.addControl(\"primaryPortCtrl\", this.primaryPortCtrl);\n\t\tthis.formGroup.addControl(\"securePortCtrl\", this.securePortCtrl);\n\n\t\tthis.flagChanges(this.primaryPortCtrl.value, this.securePortCtrl.value);\n\n\t\tthis.formGroup.valueChanges.subscribe((v) => {\n\t\t\tthis.dataSource.args.set('securePort', this.securePortCtrl.value);\n\t\t\tthis.flagChanges(this.primaryPortCtrl.value, this.securePortCtrl.value)\n\t\t});\n\t}\n\n\t\tpublic refreshBuildCommands(show: boolean) {\n\n  }\n\n\tpublic setLicenseFile(license: string) {\n\n\t\tlet file: BuildCommand = this.dataSource.fileForType(\"licenses\");\n\n\t    if (!file) {\n\t        file = new BuildCommand();\n\t        file.commandType = \"file\"\n\t        file.fileType = \"licenses\";\n\t        file.description = \"License file\"\n\t        file.target = \"/opt/softwareag/API_Portal/license.xml\";\n\n\t        //ensures that the build-components view gets updated\n\t        this.dataSource.buildCommands = Object.assign([], this.dataSource.buildCommands);\n\n\t        this.dataSource.buildCommands.push(file);\n\t    }\n\n      \tfile.source = license.replace(/\\s/g, \"-\");\n\t}\n\n\tprivate setDefaults() {\n\n\t\tif (!this.dataSource.args.get(\"securePort\")) {\n\t\t\tthis.dataSource.args.set(\"securePort\", \"18102\");\n\t\t}\n\n\t\tthis.dataSource.hostName = \"api-portal\";\n\n\t\tlet yum: BuildCommand = this.dataSource.fileForType(\"yum\");\n\n\t\tif (!yum) {\n\n\t\t \tyum = new BuildCommand();\n\t\t    yum.commandType = \"run\";\n\t\t    yum.buildTarget = \"pre-build\";\n\t\t    yum.fileType = \"yum\";\n\t\t    yum.description = \"Required in order for Portal to start\";\n\t\t    yum.target = \"yum install -y fontconfig\";\n\t\t    this.dataSource.buildCommands.push(yum);\n\n\t\t    let config = new BuildCommand();\n\t\t    config.commandType = \"file\";\n\t\t    config.buildTarget = \"build\";\n\t\t    config.fileType = \"install\";\n\t\t    config.description = \"Ensures that all services are started automatically when starting up\";\n\t\t    config.source = \"agent.user.cfg\";\n\t\t    config.target = \"/opt/softwareag/API_Portal/server/bin/agent.user.cfg\";\n\t\t    this.dataSource.buildCommands.push(config);\n\t\t}\n\t}\n\n\tprivate flagChanges(port: string, securePort: string) {\n\n\t\tlet props: Map = new Map();\n\n    \tif (port)\n\t\t  props.set(\"UI Ports\", [new BuilderProperties(\"HTTP\", [port]), new BuilderProperties(\"HTTPs\", [securePort])]);\n\n\t\tthis.owner.propertiesChangedInBuilder(\"api-portal\", props, this.dataSource);\n\t}\n}\n\n    \n\n    \n        \n\n  API Portal Details\n  \n    \n      \n    \n     \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  API Portal Details                                 '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about-app'},{'name': 'ActionComponent', 'selector': 'action'},{'name': 'ApiGatewayInstallerComponent', 'selector': 'jc-apigw-install'},{'name': 'ApiMicroGatewayInstallerComponent', 'selector': 'jc-apimg-install'},{'name': 'ApiPortalInstallerComponent', 'selector': 'jc-apipr-installer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildCommandsComponent', 'selector': 'build-commands'},{'name': 'BuildComponent', 'selector': 'build'},{'name': 'BuildExeComponent', 'selector': 'build-exe'},{'name': 'BuildImageComponent', 'selector': 'build-solution'},{'name': 'BuildInstallComponent', 'selector': 'build-install'},{'name': 'BuildPackagesComponent', 'selector': 'build-package'},{'name': 'ContainerComponent', 'selector': 'container'},{'name': 'ContainersComponent', 'selector': 'app-containers'},{'name': 'DeploymentDetailsComponent', 'selector': 'jc-deployment-details'},{'name': 'DeploymentListComponent', 'selector': 'jc-k8s-deployments'},{'name': 'DockerImageChooserComponent', 'selector': 'docker-image-chooser'},{'name': 'DockerImageListComponent', 'selector': 'jc-docker-images'},{'name': 'DockerImageVersionsComponent', 'selector': 'jc-docker-image-versions'},{'name': 'EditContainerComponent', 'selector': 'edit-container'},{'name': 'GitSourcesComponent', 'selector': 'git-source'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'InstallerComponent', 'selector': 'jc-install'},{'name': 'MicroServiceBuilderComponent', 'selector': 'jc-msc-configure'},{'name': 'MicroServiceInstallerComponent', 'selector': 'jc-msc-install'},{'name': 'PodsListComponent', 'selector': 'jc-pods'},{'name': 'RuntimeContainersComponent', 'selector': 'runtime-containers'},{'name': 'RuntimeDeployComponent', 'selector': 'runtime-deploy'},{'name': 'RuntimeDetailsComponent', 'selector': ''},{'name': 'RuntimeK8sComponent', 'selector': 'runtime'},{'name': 'RuntimeScaleComponent', 'selector': 'jc-runtime-scale'},{'name': 'RuntimeStageComponent', 'selector': 'runtime-stage'},{'name': 'RuntimeUpdateComponent', 'selector': ''},{'name': 'SagImageAlerterComponent', 'selector': 'sag-image-alerter'},{'name': 'ServicePropertiesComponent', 'selector': 'k8s-props'},{'name': 'SettingsComponent', 'selector': 'home'},{'name': 'SimpleNameComponent', 'selector': 'name-dialog'},{'name': 'StagingComponent', 'selector': 'staging'},{'name': 'TestCaseComponent', 'selector': 'test-case'},{'name': 'TestDefinitionComponent', 'selector': 'test-definitions'},{'name': 'TestHistoryComponent', 'selector': 'test-history'},{'name': 'TestRunComponent', 'selector': 'test-reun'},{'name': 'UMInstallerComponent', 'selector': 'jc-um-install'},{'name': 'UploadButtonComponent', 'selector': 'file-uploader-button'}];\n    var DIRECTIVES = [{'name': 'BuildImageChooseDirective', 'selector': '[builder]'},{'name': 'CancelCdkDrag', 'selector': '[appCancelCdkDrag]'},{'name': 'NgFileDrop', 'selector': '[ng-file-drop]'},{'name': 'NgFileSelect', 'selector': '[ng-file-select]'},{'name': 'RuntimeActionsDirective', 'selector': '[runtime-actions]'}];\n    var ACTUAL_COMPONENT = {'name': 'ApiPortalInstallerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nActionComponent\n\nActionComponent\n\nAppModule -->\n\nActionComponent->AppModule\n\n\n\n\n\nApiGatewayInstallerComponent\n\nApiGatewayInstallerComponent\n\nAppModule -->\n\nApiGatewayInstallerComponent->AppModule\n\n\n\n\n\nApiMicroGatewayInstallerComponent\n\nApiMicroGatewayInstallerComponent\n\nAppModule -->\n\nApiMicroGatewayInstallerComponent->AppModule\n\n\n\n\n\nApiPortalInstallerComponent\n\nApiPortalInstallerComponent\n\nAppModule -->\n\nApiPortalInstallerComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBuildCommandsComponent\n\nBuildCommandsComponent\n\nAppModule -->\n\nBuildCommandsComponent->AppModule\n\n\n\n\n\nBuildComponent\n\nBuildComponent\n\nAppModule -->\n\nBuildComponent->AppModule\n\n\n\n\n\nBuildExeComponent\n\nBuildExeComponent\n\nAppModule -->\n\nBuildExeComponent->AppModule\n\n\n\n\n\nBuildImageChooseDirective\n\nBuildImageChooseDirective\n\nAppModule -->\n\nBuildImageChooseDirective->AppModule\n\n\n\n\n\nBuildImageComponent\n\nBuildImageComponent\n\nAppModule -->\n\nBuildImageComponent->AppModule\n\n\n\n\n\nBuildInstallComponent\n\nBuildInstallComponent\n\nAppModule -->\n\nBuildInstallComponent->AppModule\n\n\n\n\n\nBuildPackagesComponent\n\nBuildPackagesComponent\n\nAppModule -->\n\nBuildPackagesComponent->AppModule\n\n\n\n\n\nCancelCdkDrag\n\nCancelCdkDrag\n\nAppModule -->\n\nCancelCdkDrag->AppModule\n\n\n\n\n\nContainerComponent\n\nContainerComponent\n\nAppModule -->\n\nContainerComponent->AppModule\n\n\n\n\n\nContainersComponent\n\nContainersComponent\n\nAppModule -->\n\nContainersComponent->AppModule\n\n\n\n\n\nDeploymentDetailsComponent\n\nDeploymentDetailsComponent\n\nAppModule -->\n\nDeploymentDetailsComponent->AppModule\n\n\n\n\n\nDeploymentListComponent\n\nDeploymentListComponent\n\nAppModule -->\n\nDeploymentListComponent->AppModule\n\n\n\n\n\nDockerImageChooserComponent\n\nDockerImageChooserComponent\n\nAppModule -->\n\nDockerImageChooserComponent->AppModule\n\n\n\n\n\nDockerImageListComponent\n\nDockerImageListComponent\n\nAppModule -->\n\nDockerImageListComponent->AppModule\n\n\n\n\n\nDockerImageVersionsComponent\n\nDockerImageVersionsComponent\n\nAppModule -->\n\nDockerImageVersionsComponent->AppModule\n\n\n\n\n\nEditContainerComponent\n\nEditContainerComponent\n\nAppModule -->\n\nEditContainerComponent->AppModule\n\n\n\n\n\nGitSourcesComponent\n\nGitSourcesComponent\n\nAppModule -->\n\nGitSourcesComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nInstallerComponent\n\nInstallerComponent\n\nAppModule -->\n\nInstallerComponent->AppModule\n\n\n\n\n\nMicroServiceBuilderComponent\n\nMicroServiceBuilderComponent\n\nAppModule -->\n\nMicroServiceBuilderComponent->AppModule\n\n\n\n\n\nMicroServiceInstallerComponent\n\nMicroServiceInstallerComponent\n\nAppModule -->\n\nMicroServiceInstallerComponent->AppModule\n\n\n\n\n\nNgFileDrop\n\nNgFileDrop\n\nAppModule -->\n\nNgFileDrop->AppModule\n\n\n\n\n\nNgFileSelect\n\nNgFileSelect\n\nAppModule -->\n\nNgFileSelect->AppModule\n\n\n\n\n\nPodsListComponent\n\nPodsListComponent\n\nAppModule -->\n\nPodsListComponent->AppModule\n\n\n\n\n\nRuntimeActionsDirective\n\nRuntimeActionsDirective\n\nAppModule -->\n\nRuntimeActionsDirective->AppModule\n\n\n\n\n\nRuntimeContainersComponent\n\nRuntimeContainersComponent\n\nAppModule -->\n\nRuntimeContainersComponent->AppModule\n\n\n\n\n\nRuntimeDeployComponent\n\nRuntimeDeployComponent\n\nAppModule -->\n\nRuntimeDeployComponent->AppModule\n\n\n\n\n\nRuntimeDetailsComponent\n\nRuntimeDetailsComponent\n\nAppModule -->\n\nRuntimeDetailsComponent->AppModule\n\n\n\n\n\nRuntimeK8sComponent\n\nRuntimeK8sComponent\n\nAppModule -->\n\nRuntimeK8sComponent->AppModule\n\n\n\n\n\nRuntimeScaleComponent\n\nRuntimeScaleComponent\n\nAppModule -->\n\nRuntimeScaleComponent->AppModule\n\n\n\n\n\nRuntimeStageComponent\n\nRuntimeStageComponent\n\nAppModule -->\n\nRuntimeStageComponent->AppModule\n\n\n\n\n\nRuntimeUpdateComponent\n\nRuntimeUpdateComponent\n\nAppModule -->\n\nRuntimeUpdateComponent->AppModule\n\n\n\nAppModule -->\n\nRuntimeUpdateComponent->AppModule\n\n\n\n\n\nSagImageAlerterComponent\n\nSagImageAlerterComponent\n\nAppModule -->\n\nSagImageAlerterComponent->AppModule\n\n\n\n\n\nServicePropertiesComponent\n\nServicePropertiesComponent\n\nAppModule -->\n\nServicePropertiesComponent->AppModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nAppModule -->\n\nSettingsComponent->AppModule\n\n\n\n\n\nSimpleNameComponent\n\nSimpleNameComponent\n\nAppModule -->\n\nSimpleNameComponent->AppModule\n\n\n\n\n\nStagingComponent\n\nStagingComponent\n\nAppModule -->\n\nStagingComponent->AppModule\n\n\n\n\n\nTestCaseComponent\n\nTestCaseComponent\n\nAppModule -->\n\nTestCaseComponent->AppModule\n\n\n\n\n\nTestDefinitionComponent\n\nTestDefinitionComponent\n\nAppModule -->\n\nTestDefinitionComponent->AppModule\n\n\n\n\n\nTestHistoryComponent\n\nTestHistoryComponent\n\nAppModule -->\n\nTestHistoryComponent->AppModule\n\n\n\n\n\nTestRunComponent\n\nTestRunComponent\n\nAppModule -->\n\nTestRunComponent->AppModule\n\n\n\n\n\nUMInstallerComponent\n\nUMInstallerComponent\n\nAppModule -->\n\nUMInstallerComponent->AppModule\n\n\n\n\n\nUploadButtonComponent\n\nUploadButtonComponent\n\nAppModule -->\n\nUploadButtonComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nConfigurationService\n\nConfigurationService\n\nAppModule -->\n\nConfigurationService->AppModule\n\n\n\n\n\nContainerTemplates\n\nContainerTemplates\n\nAppModule -->\n\nContainerTemplates->AppModule\n\n\n\n\n\nDockerService\n\nDockerService\n\nAppModule -->\n\nDockerService->AppModule\n\n\n\n\n\nGitSourceService\n\nGitSourceService\n\nAppModule -->\n\nGitSourceService->AppModule\n\n\n\n\n\nK8sService\n\nK8sService\n\nAppModule -->\n\nK8sService->AppModule\n\n\n\n\n\nPackagesService\n\nPackagesService\n\nAppModule -->\n\nPackagesService->AppModule\n\n\n\n\n\nResourceService\n\nResourceService\n\nAppModule -->\n\nResourceService->AppModule\n\n\n\n\n\nSettings\n\nSettings\n\nAppModule -->\n\nSettings->AppModule\n\n\n\n\n\nTestConfigService\n\nTestConfigService\n\nAppModule -->\n\nTestConfigService->AppModule\n\n\n\n\n\nTestTraceService\n\nTestTraceService\n\nAppModule -->\n\nTestTraceService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutComponent\n                        \n                        \n                            ActionComponent\n                        \n                        \n                            ApiGatewayInstallerComponent\n                        \n                        \n                            ApiMicroGatewayInstallerComponent\n                        \n                        \n                            ApiPortalInstallerComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            BuildCommandsComponent\n                        \n                        \n                            BuildComponent\n                        \n                        \n                            BuildExeComponent\n                        \n                        \n                            BuildImageChooseDirective\n                        \n                        \n                            BuildImageComponent\n                        \n                        \n                            BuildInstallComponent\n                        \n                        \n                            BuildPackagesComponent\n                        \n                        \n                            CancelCdkDrag\n                        \n                        \n                            ContainerComponent\n                        \n                        \n                            ContainersComponent\n                        \n                        \n                            DeploymentDetailsComponent\n                        \n                        \n                            DeploymentListComponent\n                        \n                        \n                            DockerImageChooserComponent\n                        \n                        \n                            DockerImageListComponent\n                        \n                        \n                            DockerImageVersionsComponent\n                        \n                        \n                            EditContainerComponent\n                        \n                        \n                            GitSourcesComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            InstallerComponent\n                        \n                        \n                            MicroServiceBuilderComponent\n                        \n                        \n                            MicroServiceInstallerComponent\n                        \n                        \n                            NgFileDrop\n                        \n                        \n                            NgFileSelect\n                        \n                        \n                            PodsListComponent\n                        \n                        \n                            RuntimeActionsDirective\n                        \n                        \n                            RuntimeContainersComponent\n                        \n                        \n                            RuntimeDeployComponent\n                        \n                        \n                            RuntimeDetailsComponent\n                        \n                        \n                            RuntimeK8sComponent\n                        \n                        \n                            RuntimeScaleComponent\n                        \n                        \n                            RuntimeStageComponent\n                        \n                        \n                            RuntimeUpdateComponent\n                        \n                        \n                            RuntimeUpdateComponent\n                        \n                        \n                            SagImageAlerterComponent\n                        \n                        \n                            ServicePropertiesComponent\n                        \n                        \n                            SettingsComponent\n                        \n                        \n                            SimpleNameComponent\n                        \n                        \n                            StagingComponent\n                        \n                        \n                            TestCaseComponent\n                        \n                        \n                            TestDefinitionComponent\n                        \n                        \n                            TestHistoryComponent\n                        \n                        \n                            TestRunComponent\n                        \n                        \n                            UMInstallerComponent\n                        \n                        \n                            UploadButtonComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            AboutComponent\n                        \n                        \n                            ApiGatewayInstallerComponent\n                        \n                        \n                            ApiMicroGatewayInstallerComponent\n                        \n                        \n                            ApiPortalInstallerComponent\n                        \n                        \n                            BuildExeComponent\n                        \n                        \n                            DockerImageVersionsComponent\n                        \n                        \n                            EditContainerComponent\n                        \n                        \n                            GitSourcesComponent\n                        \n                        \n                            InstallerComponent\n                        \n                        \n                            MicroServiceBuilderComponent\n                        \n                        \n                            MicroServiceInstallerComponent\n                        \n                        \n                            RuntimeScaleComponent\n                        \n                        \n                            RuntimeUpdateComponent\n                        \n                        \n                            SagImageAlerterComponent\n                        \n                        \n                            SimpleNameComponent\n                        \n                        \n                            UMInstallerComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ConfigurationService\n                        \n                        \n                            ContainerTemplates\n                        \n                        \n                            DockerService\n                        \n                        \n                            GitSourceService\n                        \n                        \n                            K8sService\n                        \n                        \n                            PackagesService\n                        \n                        \n                            ResourceService\n                        \n                        \n                            Settings\n                        \n                        \n                            TestConfigService\n                        \n                        \n                            TestTraceService\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule }                                from '@angular/platform-browser';\nimport { BrowserAnimationsModule }                      from '@angular/platform-browser/animations';\nimport { NgModule }                                     from '@angular/core';\nimport { RouterModule, Routes, Route }                  from '@angular/router';\n\nimport { DragDropModule }                               from '@angular/cdk/drag-drop';\nimport { ScrollingModule }                              from '@angular/cdk/scrolling';\nimport { CdkTableModule }                               from '@angular/cdk/table';\nimport { CdkTreeModule }                                from '@angular/cdk/tree';\n\nimport { FormsModule,\n          ReactiveFormsModule }                         from '@angular/forms';\n\nimport { HttpClientModule }                             from '@angular/common/http'; // v5 onwards\nimport { AppComponent }                                 from './app.component';\nimport { AboutComponent }                               from './components/about.component';\n\nimport 'hammerjs';\n\nimport { FontAwesomeModule }                            from '@fortawesome/angular-fontawesome';\nimport { library, dom }                                 from '@fortawesome/fontawesome-svg-core';\n\nimport { CancelCdkDrag }                                from './extras/directives/CancelCdkDrag.directive';\n\nimport { FileUploadModule }                             from \"ng2-file-upload\";\nimport { UPLOAD_DIRECTIVES }                            from './extras/ng2-uploader';\n\nimport { RuntimeK8sComponent }                          from './components/k8s/runtime-k8s.component';\nimport { RuntimeContainersComponent }                   from './components/runtime-containers.component';\n\nimport { HomeComponent }                                from './components/home.component';\nimport { RuntimeDetailsComponent }                      from './components/k8s/runtime-details.component';\nimport { RuntimeActionsDirective }                      from './components/k8s/runtime-actions.directive';\nimport { RuntimeScaleComponent }                        from './components/k8s/runtime-scale.component';\nimport { RuntimeUpdateComponent }                       from './components/k8s/runtime-update.component';\nimport { BuildComponent }                               from './components/build.component';\nimport { BuildPackagesComponent }                       from './components/build-packages.component';\nimport { BuildImageComponent, SagImageAlerterComponent } from './components/build-image.component';\nimport { RuntimeDeployComponent }                       from './components/runtime-deploy.component';\nimport { RuntimeStageComponent }                        from './components/runtime-stage.component';\nimport { BuildInstallComponent }                        from './components/build-install.component';\n\nimport { BuildImageChooseDirective }                    from './components/elements/build-image-choose.directive';\n\nimport { GitSourcesComponent }                          from './components/elements/git-sources.component';\n\nimport { MicroServiceBuilderComponent }                 from './components/plugins/micro-service-builder.component';\nimport { MicroServiceInstallerComponent }               from './components/plugins/micro-service-installer.component';\nimport { ApiGatewayInstallerComponent }                 from './components/plugins/apigw-installer.component';\nimport { ApiMicroGatewayInstallerComponent }            from './components/plugins/apimg-installer.component';\nimport { ApiPortalInstallerComponent }                  from './components/plugins/apipr-installer.component';\n\nimport { UMInstallerComponent }                         from './components/plugins/um-installer.component';\n\nimport { SettingsComponent }                            from './components/settings.component';\nimport { DockerImageChooserComponent }                  from './components/elements/docker-image-chooser.component';\nimport { UploadButtonComponent }                        from './components/elements/upload-button.component';\n\nimport { SimpleNameComponent }                          from './components/elements/simple-name.component';\nimport { EditContainerComponent }                       from './components/staging.component';\n\nimport { Settings }                                     from './settings';\n\nimport { DockerImageListComponent }                     from './components/elements/docker-images-list.component';\nimport { DockerImageVersionsComponent }                 from './components/elements/docker-image-versions.component';\nimport { ContainersComponent }                          from './components/containers.component';\nimport { ContainerComponent }                           from './components/container.component';\nimport { StagingComponent }                             from './components/staging.component';\nimport { ActionComponent }                              from './components/action.component';\nimport { BuildCommandsComponent }                       from './components/build-commands.component';\nimport { PodsListComponent }                            from './components/k8s/pods-list.component';\nimport { DeploymentDetailsComponent }                   from './components/k8s/deployment-details.component';\nimport { DeploymentListComponent }                      from './components/k8s/deployment-list.component';\nimport { ServicePropertiesComponent }                   from './components/k8s/service-properties.component';\n\nimport { TestHistoryComponent }                         from './components/test-history.component';\nimport { TestDefinitionComponent }                      from './components/test-definition.component';\nimport { TestRunComponent }                             from \"./components/test-run.component\";\nimport { TestCaseComponent }                            from './components/test-case.component';\nimport { BuildExeComponent }                            from './components/build-exe.component';\n\nimport { K8sService }                                   from './services/k8s.service';\nimport { GitSourceService }                             from './services/git-source-control.service';\nimport { DockerService }                                from './services/docker.service';\nimport { PackagesService }                              from './services/packages.service';\nimport { ResourceService }                              from './services/resources.service';\nimport { ConfigurationService }                         from './services/configuration.service';\nimport { TestConfigService }                            from \"./services/test-config.service\";\nimport { TestTraceService }                             from \"./services/test-trace.service\";\nimport { InstallerComponent }                           from \"./components/plugins/installer.component\";\n\nimport { faDocker, faCloudscale } from '@fortawesome/free-brands-svg-icons';\nimport { faCircle } from '@fortawesome/free-regular-svg-icons';\n\nimport { faEllipsisV, faBars, faTerminal, faTimesCircle, faBox, faVial, faRocket, faSpinner, faCheck, faBug, faHome, faExclamationCircle, faRunning, faCog, faEject, faPlay, faSquare, faExclamationTriangle, faLightbulb, faEnvelope, faStop, faStopCircle, faClock, faPlus, faTimes, faCloudSunRain,\n    faMinus, faPlusCircle, faMinusCircle, faTrashAlt, faComment, faStar, faFlag, faPen, faPenSquare, faHourglassEnd, faArrowLeft, faArrowRight, faChevronCircleDown, faThumbsUp, faThumbsDown, faQuestion,\n    faComments, faSync, faLevelUpAlt, faChevronDown, faCheckSquare, faCaretSquareDown, faCaretSquareUp, faArrowsAltV, faVials, faCodeBranch, faLock, faFileDownload, faTools, faFileUpload, faLockOpen, faUser, faSyncAlt,faUserCircle, faShare, faInfo, faCertificate, faClone, faPlusSquare, faMinusSquare, faCloudDownloadAlt, faCloudUploadAlt }  from '@fortawesome/free-solid-svg-icons';\n\n library.add(faEllipsisV, faBars, faTerminal, faBox, faTimesCircle, faHome, faVial, faCheck, faPlay, faSpinner, faExclamationCircle, faBug, faLightbulb, faTrashAlt, faCloudscale, faCaretSquareDown, faCaretSquareUp, faPen, faLevelUpAlt, faVials, faCodeBranch, faArrowsAltV, faStopCircle, faSyncAlt, faCloudUploadAlt, faClock, faThumbsUp, faThumbsDown, faQuestion,\n   faRocket, faCog, faCloudSunRain, faDocker, faCircle, faSquare, faCheckSquare, faRunning, faArrowLeft, faArrowRight, faPlusCircle, faFileDownload, faFileUpload, faPlusSquare, faTools, faSync);\n\nconst sideNavRoutes: Routes = [\n  {\n      path: 'home',\n      component: HomeComponent,\n      data: {\n        animation: 'home'\n      }\n    },\n    {\n      path: 'build',\n      component: BuildComponent,\n      data: {\n        animation: 'build'\n      }\n    },\n    {\n      path: 'install',\n      component: BuildInstallComponent,\n      data: {\n        animation: 'install'\n      }\n    },\n    {\n      path: 'install/:id',\n      component: BuildInstallComponent,\n      data: {\n        animation: 'install'\n      }\n    },\n    {\n      path: 'package',\n      component: BuildPackagesComponent,\n      data: {\n        animation: 'package'\n      }\n    },\n    {\n      path: 'image',\n      component: BuildImageComponent,\n      data: {\n        animation: 'image'\n      }\n    },\n    {\n      path: 'image/:id',\n      component: BuildImageComponent,\n      data: {\n        animation: 'build'\n      }\n    },\n    {\n      path: 'deploy',\n      component: RuntimeContainersComponent,\n      data: {\n        animation: 'container'\n      }\n    },\n    {\n      path: 'run',\n      component: RuntimeDeployComponent,\n      data: {\n        animation: 'run'\n      }\n    },\n    {\n      path: 'run/:id',\n      component: RuntimeDeployComponent,\n      data: {\n        animation: 'run'\n      }\n    },\n    {\n      path: 'test',\n      component: TestHistoryComponent,\n      data: {\n        animation: 'run'\n      }\n    },\n    {\n      path: 'k8s',\n      component: RuntimeK8sComponent,\n      data: {\n        animation: 'k8s'\n      }\n    },\n    {\n      path: 'scale',\n      component: RuntimeDetailsComponent,\n      data: {\n        animation: 'scale'\n      }\n    },\n    {\n      path: 'update',\n      component: RuntimeDetailsComponent,\n      data: {\n        animation: 'update'\n      }\n    },\n    {\n      path: 'testRun',\n      component: TestRunComponent,\n      data: {\n        animation: 'run'\n      }\n    },\n    {\n      path: 'testDefinition',\n      component: TestDefinitionComponent,\n      data: {\n        animation: 'run'\n      }\n    },\n    {\n      path: 'stage',\n      component: RuntimeStageComponent,\n      data: {\n        animation: 'stage'\n      }\n    },\n    {\n      path: 'settings',\n      component: SettingsComponent,\n       data: {\n        animation: 'settings'\n      }\n    },\n    {\n      path: '',\n      component: HomeComponent\n    }\n  ];\n\nconst _sideNavMenuSetup:Map = new Map([\n\n     [\"home\", {\n       \"label\": \"Home\",\n       \"icon\": \"home\",\n       \"iconClass\": \"fas\",\n       \"isTop\": true\n     }\n     ],\n     [\"build\", {\n       \"label\": \"Build\",\n       \"icon\": \"box\",\n       \"iconClass\": \"fas\",\n       \"isTop\": true,\n       \"children\": [\n         \"install\",\n         \"package\",\n         \"image\"\n       ]\n     }\n     ],\n     [\"deploy\", {\n       \"label\": \"Deploy\",\n       \"icon\": \"rocket\",\n       \"iconClass\": \"fas\",\n       \"isTop\": true,\n       \"children\": [\n         \"run\",\n         \"stage\"\n       ]\n     }\n     ],\n     [\"test\", {\n       \"label\": \"Test\",\n       \"icon\": \"vial\",\n       \"isTop\": true,\n       \"children\": [\n         \"testDefinition\",\n         \"testRun\"\n       ]\n     }\n     ],\n     [\"k8s\", {\n       \"label\": \"Kubernetes\",\n       \"iconClass\": \"img\",\n       \"icon\": \"assets/_images/k8s-logo.png\",\n       \"isTop\": true,\n       \"children\": [\n         \"scale\",\n         \"update\"\n       ]\n     },\n     ],\n     [\"settings\", {\n       \"label\": \"Preferences\",\n       \"icon\": \"cog\",\n       \"isTop\": true\n     }],\n     [\"scale\", {\n       \"label\": \"Scale\"\n     }],\n     [\"update\", {\n       \"label\": \"Update Version\"\n     }],\n     [\"install\", {\n       \"label\": \"Install\"\n     }],\n     [\"package\", {\n       \"label\": \"Source\"\n     }],\n     [\"image\", {\n       \"label\": \"Make\"\n     }],\n     [\"run\", {\n       \"label\": \"Run\"\n     }],\n     [\"stage\", {\n       \"label\": \"Staging\"\n     }],\n     [\"deployment\", {\n       \"label\": \"Define Deployment\"\n     }],\n     [\"deployRun\", {\n       \"label\": \"Deploy\"\n     }],\n      [\"testDefinition\", {\n       \"label\": \"Test Setup\"\n     }],\n      [\"testRun\", {\n       \"label\": \"Run Test suite\"\n     }]\n ]);\n\nimport {\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatBottomSheetModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatTreeModule\n} from '@angular/material';\nimport {ContainerTemplates} from './support/container.templates';\n\n@NgModule({\n  entryComponents: [\n      AboutComponent,\n      RuntimeScaleComponent,\n      RuntimeUpdateComponent,\n      MicroServiceBuilderComponent,\n      MicroServiceInstallerComponent,\n      GitSourcesComponent,\n      ApiGatewayInstallerComponent,\n      ApiMicroGatewayInstallerComponent,\n      ApiPortalInstallerComponent,\n      UMInstallerComponent,\n      InstallerComponent,\n      DockerImageVersionsComponent,\n      SimpleNameComponent,\n      EditContainerComponent,\n      BuildExeComponent,\n      SagImageAlerterComponent\n  ],\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    AboutComponent,\n    ContainersComponent,\n    ContainerComponent,\n    ActionComponent,\n    BuildCommandsComponent,\n    StagingComponent,\n    RuntimeContainersComponent,\n    RuntimeK8sComponent,\n    SettingsComponent,\n    RuntimeDetailsComponent,\n    RuntimeUpdateComponent,\n    BuildComponent,\n    BuildInstallComponent,\n    BuildPackagesComponent,\n    BuildImageComponent,\n    RuntimeDeployComponent,\n    RuntimeStageComponent,\n    BuildImageChooseDirective,\n    RuntimeActionsDirective,\n    RuntimeScaleComponent,\n    RuntimeUpdateComponent,\n    DockerImageListComponent,\n    DockerImageVersionsComponent,\n    DeploymentListComponent,\n    ServicePropertiesComponent,\n    DeploymentDetailsComponent,\n    PodsListComponent,\n    MicroServiceBuilderComponent,\n    MicroServiceInstallerComponent,\n    GitSourcesComponent,\n    ApiGatewayInstallerComponent,\n    ApiMicroGatewayInstallerComponent,\n    ApiPortalInstallerComponent,\n    UMInstallerComponent,\n    SimpleNameComponent,\n    DockerImageChooserComponent,\n    UploadButtonComponent,\n    EditContainerComponent,\n    TestHistoryComponent,\n    TestDefinitionComponent,\n    TestRunComponent,\n    TestCaseComponent,\n    BuildExeComponent,\n    SagImageAlerterComponent,\n    InstallerComponent,\n    CancelCdkDrag,\n    UPLOAD_DIRECTIVES\n  ],\n  imports: [\n    RouterModule.forRoot(sideNavRoutes),\n    DragDropModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    FileUploadModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    FontAwesomeModule\n  ],\n  providers: [\n    Settings,\n    DockerService,\n    K8sService,\n    GitSourceService,\n    PackagesService,\n    ResourceService,\n    ConfigurationService,\n    TestConfigService,\n    TestTraceService,\n    ContainerTemplates\n  ],\n  bootstrap: [AppComponent],\n  exports: [\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    ScrollingModule,\n    RouterModule\n  ]\n})\nexport class AppModule {\n\n  private _top: string[] = [];\n\n  constructor() {\n\n    sideNavRoutes.forEach((r) => {\n\n        if (_sideNavMenuSetup.get(r.path) && _sideNavMenuSetup.get(r.path).isTop)\n          this._top.push(r.path);\n    });\n\n    let self:AppModule = this;\n    AppComponent.linksFunc = function(path: string): string[] {\n\n      if (path)\n        return _sideNavMenuSetup.get(path).children;\n      else\n        return self._top;\n    };\n\n    AppComponent.labelForPathFunc = function(path: string): string {\n\n      return _sideNavMenuSetup.get(path).label;\n    }\n\n    AppComponent.iconForPathFunc = function(path: string): string {\n\n      if (_sideNavMenuSetup.get(path).icon)\n          return _sideNavMenuSetup.get(path).icon;\n        else\n          return \"arrow-right\";\n    }\n\n    AppComponent.iconClassForPathFunc = function(path: string): string {\n\n      if (_sideNavMenuSetup.get(path).iconClass)\n          return _sideNavMenuSetup.get(path).iconClass;\n        else\n          return \"fas\";\n    }\n\n    AppComponent.childrenForPathFunc = function(path: string): string[] {\n\n      if (_sideNavMenuSetup.get(path) && _sideNavMenuSetup.get(path).children)\n          return _sideNavMenuSetup.get(path).children;\n        else\n          return [];\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get('/');\n  }\n\n  getTitleText() {\n    return element(by.css('app-root h1')).getText();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Arg.html":{"url":"classes/Arg.html","title":"class - Arg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Arg\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/project.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                choices\n                            \n                            \n                                    Public\n                                conditions\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                display\n                            \n                            \n                                    Public\n                                source\n                            \n                            \n                                    Public\n                                target\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                makeArray\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(source: string, target: string, description: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/project.ts:222\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        source\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        target\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            choices\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:222\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            conditions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:221\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:224\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            display\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DisplayType\n\n                        \n                    \n                    \n                        \n                            Default value : DisplayType.hidden\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:220\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:224\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:224\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            makeArray\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    makeArray(array: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/project.ts:228\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    array\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Arg[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { APIDefinition }                        from '../models/wm-package-info'\nimport { Source }                               from '../models/git-source';\nimport { DockerImage, TestStatus }              from '../models/docker-image';\n\nexport class DeploymentSet {\n\n  public id: string;\n  public name: string;\n  public source: Source;\n  public active: string;\n  public apis: APIDefinition[];\n\n  public constructor() {\n      this.apis = [];\n      this.source = new Source();\n  }\n\n  public static make(data: any): DeploymentSet {\n\n      let p: DeploymentSet = new DeploymentSet();\n      p.id = data.name;\n      p.name = data.name;\n\n      if (data.source)\n       p.source = Source.make(data.source);\n\n      p.apis = [];\n\n      if (data.apis) {\n\n        data.apis.forEach((a) => {\n          p.apis.push(APIDefinition.make(a));\n        });\n      }\n\n      return p;\n  }\n}\n\nexport enum DisplayType {\n  hidden = \"hidden\",\n  readonly = \"readonly\",\n  editable = \"editable\",\n  password = \"password\",\n  file = \"file\",\n  dropdown = \"dropdown\",\n  yesno = \"yesno\"\n}\n\nexport class BuildCommand {\n\n  public commandType: string;\n  public buildTarget: string;\n  public fileType: string;\n  public source: string;\n  public target: string;\n  public description: string = \"\";\n  public display: DisplayType = DisplayType.hidden;\n  public required: boolean = true;\n  public conditions: string[];\n\n  public static make(d: any): BuildCommand {\n\n    let f: BuildCommand = new BuildCommand();\n    f.commandType = d.commandType;\n    f.buildTarget = d.buildTarget;\n    f.fileType = d.fileType;\n    f.source = d.source;\n    f.target = d.target;\n    f.description = d.description;\n    f.conditions = d.conditions;\n\n    if (d.display == \"editable\")\n      f.display = DisplayType.editable;\n    else if (d.display == \"readonly\")\n      f.display = DisplayType.readonly;\n    else if (d.display == \"file\")\n      f.display = DisplayType.file;\n    else\n      f.display = DisplayType.hidden;\n\n    f.required = false;\n    return f;\n  }\n\n  copy() {\n    return BuildCommand.make(this);\n  }\n\n  public equals(b: BuildCommand): boolean {\n\n    return (b.source && b.source == this.source) || (!b.source && b.target == this.target);\n  }\n\n  public matchConditions(args: Map): boolean {\n\n    return ArgDisplayType._matchConditions(this.conditions, args);\n  }\n}\n\nexport interface BuildParams {\n\n  name: string;\n  publicPort(): string;\n  setPublicPort(port: string);\n  assignedLicense(): string;\n  hostName: string;\n  entryPoint: string;\n  exitPoint: string;\n  healthCheck: string;\n  args: Map\n  buildCommands: BuildCommand[];\n\n  fileForType(type: string): BuildCommand;\n  isCustomImage(): boolean;\n}\n\nexport class ArgDisplayType {\n\n  public name: string;\n  public description: string;\n  public display: DisplayType = DisplayType.hidden;\n  public conditions: string[];\n  public choices: string[];\n  public required: boolean = true;\n\n  public constructor(name: string) {\n    this.name = name;\n    this.description = this.name;\n    this.conditions = [];\n    this.choices = [];\n  }\n\n  public copy(): ArgDisplayType {\n\n      let copy: ArgDisplayType = new ArgDisplayType(this.name);\n      copy.description = this.description;\n      copy.display = this.display;\n      copy.conditions = this.conditions;\n      copy.choices = this.choices;\n      copy.required = this.required;\n\n      return copy;\n  }\n\n  public static make(d: any): ArgDisplayType {\n\n    let a: ArgDisplayType = new ArgDisplayType(d.name);\n\n    if (d.display == \"editable\")\n      a.display = DisplayType.editable;\n    else if (d.display == \"readonly\")\n      a.display = DisplayType.readonly;\n    else if (d.display == \"file\")\n      a.display = DisplayType.file;\n    else if (d.display == \"password\")\n      a.display = DisplayType.password;\n    else if (d.display == \"yesno\")\n      a.display = DisplayType.yesno;\n    else if (d.display == \"dropdown\")\n      a.display = DisplayType.dropdown;\n    else\n      a.display = DisplayType.hidden;\n\n    if (d.required != null)\n      a.required = d.required;\n\n    a.description = d.description || d.name;\n\n    if (d.conditions)\n      a.conditions = d.conditions;\n\n    if (a.choices)\n      a.choices = d.choices;\n\n    return a;\n  }\n\n  public matchConditions(args: Map): boolean {\n\n      return ArgDisplayType._matchConditions(this.conditions, args);\n  }\n\n  public static _matchConditions(conditions: string[], args: Map): boolean {\n\n      if (conditions && conditions.length > 0) {\n\n        let matched: boolean = false;\n\n        for (let i = 0; i  {\n      args.push(new Arg(a.source, a.target, a.description));\n    });\n\n    return args;\n  }\n\n}\n\nexport class Installer implements BuildParams {\n\n    public name: string;\n    public sourceImageTag: string;\n    public isNew: string = \"true\";\n    public targetImage: DockerImage;\n    public productType: string;\n    public licenseFile: string;\n    public primaryPort: string;\n    public hostName: string;\n    public wmInstallerImage: string;\n    public includeUpdate: string = \"false\";\n    public buildCommands: BuildCommand[];\n    public args: Map;\n    public isSAGProduct: string = \"true\";\n\n    public entryPoint: string;\n    public exitPoint: string;\n    public healthCheck: string;\n\n    public constructor() {\n\n    this.sourceImageTag = \"centos:latest\";\n    this.targetImage = new DockerImage();\n    this.buildCommands = [];\n    this.args = new Map();\n  }\n\n  public copy(): Installer {\n\n    return Installer.make(this);\n  }\n\n  public static parse(data: string): Installer {\n\n    return this.make(JSON.parse(data, parserReviver).install);\n  }\n\n  public isCustomImage(): boolean {\n    return true;\n  }\n\n  public static make(data: any): Installer {\n\n    let i: Installer = new Installer();\n    i.name = data.name;\n    i.isSAGProduct = data.isSAGProduct;\n    i.args = data.args;\n    i.productType = data.productType;\n    i.wmInstallerImage = data.wmInstallerImage;\n    i.sourceImageTag = data.sourceImageTag;\n\n    if (data.targetImage)\n      i.targetImage = DockerImage.make(data.targetImage);\n\n    i.licenseFile = data.licenseFile;\n    i.primaryPort = data.primaryPort;\n    i.isNew = data.isNew;\n    i.includeUpdate = data.includeUpdate;\n    i.hostName = data.hostName;\n    i.entryPoint = data.entryPoint;\n    i.exitPoint = data.exitPoint;\n    i.healthCheck = data.healthCheck;\n    i.healthCheck = data.healthCheck;\n\n    if (!i.args)\n       i.args = new Map();\n\n    if (data.buildCommands) {\n      data.buildCommands.forEach((f) => {\n        i.buildCommands.push(BuildCommand.make(f));\n      });\n    }\n\n    return i;\n  }\n\n  public publicPort(): string {\n    return this.primaryPort;\n  }\n\n  public setPublicPort(port: string) {\n    this.primaryPort = port;\n  }\n\n  public assignedLicense(): string {\n\n    return this.licenseFile;\n  }\n\n  public fileForType(type: string, name?: string): BuildCommand {\n\n      return Builder._fileForSource(this.buildCommands, type, name, null);\n  }\n\n  public fileWithDescription(type: string, description: string): BuildCommand {\n      return Builder._fileForSource(this.buildCommands, type, null, description);\n  }\n\n  public removeFileForType(type: string, name?: string) {\n\n      return Builder._removeFileForType(this.buildCommands, type, name);\n  }\n\n  public toString(): string {\n    return JSON.stringify(this, stringifyReplacer);\n  }\n}\n\nexport class Builder implements BuildParams {\n\n  public name: string;\n  public deploymentType: string;\n  public deployments: DeploymentSet[];\n\n  public sourceImage: DockerImage;\n  public targetImage: DockerImage;\n  public version: string;\n  public testStatus: string;\n  public buildCommands: BuildCommand[];\n  public hasTests: string;\n  public buildUser: string;\n  public entryUser: string;\n  public entryPoint: string;\n  public exitPoint: string;\n  public healthCheck: string;\n  public args: Map;\n\n  public hostName: string; // not used!!\n\n  public constructor() {\n\n    this.sourceImage = new DockerImage();\n    this.targetImage = new DockerImage();\n    this.buildCommands = [];\n\n    this.args = new Map();\n  }\n\n  public hyphenatedName(): string {\n\n    return this.name.toLowerCase().replace(/\\s/g, \"-\");\n  }\n\n  public static make(data: any): Builder {\n\n    let b: Builder = new Builder();\n    b.name = data.name;\n    b.deploymentType = data.type;\n\n    b.deployments = [];\n\n    if (data.deployments) {\n      data.deployments.forEach((d) => {\n            b.deployments.push(DeploymentSet.make(d));\n      });\n    }\n\n    if (data.buildCommands) {\n      data.buildCommands.forEach((f) => {\n            b.buildCommands.push(BuildCommand.make(f));\n      });\n    }\n\n    b.sourceImage = DockerImage.make(data.sourceImage);\n    b.targetImage = DockerImage.make(data.targetImage);\n    b.version = data.version;\n    b.testStatus = data.testStatus;\n    b.buildUser = data.buildUser;\n    b.entryUser = data.entryUser;\n    b.entryPoint = data.entryPoint;\n    b.exitPoint = data.exitPoint;\n    b.healthCheck = data.healthCheck;\n\n    if (data.hasTests && data.hasTests == 'true')\n      b.hasTests = \"true\";\n\n    return b;\n  }\n\n  public publicPort(): string {\n    return this.sourceImage.primaryPort;\n  }\n\n  public setPublicPort(port: string) {\n    this.sourceImage.primaryPort = port;\n  }\n\n  public assignedLicense(): string {\n\n    let lic: BuildCommand = this.fileWithDescription(\"licenses\",'Product License');\n\n    if (lic) {\n      return lic.target.replace(/\\-/g, \" \");\n    } else {\n      return null;\n    }\n  }\n\n  public isCustomImage(): boolean {\n    return this.sourceImage.isCustom;\n  }\n\n  public fileForType(type: string, name?: string): BuildCommand {\n      return Builder._fileForSource(this.buildCommands, type, name, null);\n  }\n\n  public fileWithDescription(type: string, description: string): BuildCommand {\n      return Builder._fileForSource(this.buildCommands, type, null, description);\n  }\n\n  public removeFileForType(type: string, name?: string) {\n\n      return Builder._removeFileForType(this.buildCommands, type, name);\n  }\n\n  public static _fileForSource(buildCommands: BuildCommand[], type: string, name: string, description: string): BuildCommand {\n\n      let file: BuildCommand = null;\n\n      for (var i = 0; i  {\n         d.buildCommands.push(BuildCommand.make(b));\n       });\n     }\n\n     return d;\n  }\n}\n\nexport class Port {\n\n  public publicPort: string;\n  public serviceType: string;\n\n  constructor(public internal: string, public external: string, public description: string, public type?: string) {\n\n  }\n\n  public static makeArray(array: any[]): Port[] {\n\n    let ports: Port[] = [];\n\n    array.forEach((p) => {\n      let port: Port = new Port(p.internal, p.external, p.description, p.type);\n      port.publicPort = p.publicPort;\n      port.serviceType = p.serviceType;\n\n      ports.push(port);\n    });\n\n    return ports;\n  }\n}\n\nexport class Probe {\n\n  public path: string;\n  public port: string;\n  public initialDelaySeconds: number;\n  public periodSeconds: number;\n  public timeoutSeconds: number;\n\n  public static make(data: any): Probe {\n\n    let p = new Probe();\n    p.path = data.path;\n    p.port = data.port;\n    p.initialDelaySeconds = Number(data.initialDelaySeconds);\n    p.periodSeconds = Number(data.periodSeconds);\n    p.timeoutSeconds = Number(data.timeoutSeconds);\n\n    return p;\n  }\n}\n\nexport class Container {\n\n  public name: string;\n  public names: string[];\n  public active: string;\n  public type: string;\n  public description: string;\n  public hostname: string;\n  public secure: string;\n  public image: string;\n  public build: DockerBuild;\n  public ports: Port[];\n  public env: Arg[];\n  public volumes: Arg[];\n  public readinessProbe;\n  public livenessProbe;\n  public testStatus : TestStatus;\n  public adminUser: string;\n  public adminPassword: string;\n\n  // runtime only\n\n  public id: string;\n  public state: string;\n  public status: string;\n  public created: Date;\n\n  constructor() {\n\n    this.active = \"true\";\n    this.ports = [];\n    this.env = [];\n    this.volumes = [];\n  }\n\n  public copy() {\n    return Container.make(this);\n  }\n\n  public uniqueName(usesDedicatedRepo: boolean): string {\n\n    let repo: string = this.repository();\n\n    if (repo)\n      return repo + (usesDedicatedRepo ? \"/\" : \":\") + this.imageName();\n    else\n      return this.imageName();\n  }\n\n  public repository(): string {\n\n    if (this.image.indexOf(\":\") != -1) {\n\n      return this.image.substring(0, this.image.indexOf(\":\"));\n    } else {\n      return null;\n    }\n  }\n\n  public imageName(): string {\n\n    let name: string = this.image;\n\n    let idx: number = name.indexOf(\":\");\n\n    if (idx != -1) {\n\n      let lside = name.substring(0, idx);\n      let rside = name.substring(idx+1);\n\n      if (DockerImage.isVersionNumber(rside)) {\n\n        // name is on left side\n\n         if (this.image.lastIndexOf(\"/\") != -1) {\n          let idx: number = this.image.lastIndexOf(\"/\");\n          let rdx: number = this.image.indexOf(\":\");\n\n          name = this.image.substring(idx+1, rdx);\n        }\n      } else {\n\n        // name and perhaps version is in right side\n\n        name = rside;\n\n        if (name.indexOf(\"-\") != -1) {\n\n          let idx: number = name.lastIndexOf(\"-\");\n          let b4: string = name.substring(0, idx);\n          let af: string = name.substring(idx+1, name.length);\n\n          if (DockerImage.isVersionNumber(af)) {\n            name = b4;\n          }\n        }\n      }\n    }\n\n    return name;\n  }\n\n  public preferredImageVersion(): string {\n\n    if (this.image && this.image.indexOf(\":\")) {\n\n      let version: string = this.image.substring(this.image.indexOf(\":\")+1, this.image.length);\n\n      if (version.indexOf(\"-\") != -1) {\n        let idx: number = version.lastIndexOf(\"-\");\n        version = version.substring(idx+1, version.length);\n      }\n\n      // no versioning, only a name\n\n      if (!DockerImage.isVersionNumber(version))\n          version = \"latest\";\n\n      return version;\n    } else {\n\n      return \"latest\";\n    }\n  }\n\n  public static make(data: any): Container {\n\n    let c: Container = new Container();\n    c.names = data.names;\n    if (data.names)\n      c.name = data.names[0];\n    else\n      c.name = data.name;\n\n    c.active = data.active;\n    c.description = data.description;\n    c.hostname = data.hostname;\n    c.secure  = data.secure;\n    c.image = data.image;\n    c.type = data.type;\n    c.adminUser = data.adminUser;\n    c.adminPassword = data.adminPassword;\n\n    if (data.build)\n      c.build = DockerBuild.make(data.build);\n\n    if (data.ports)\n      c.ports = Port.makeArray(data.ports);\n\n    if (data.env)\n      c.env = Arg.makeArray(data.env);\n\n    if (data.volumes)\n      c.volumes = Arg.makeArray(data.volumes);\n\n    if (data.readinessProbe)\n      c.readinessProbe = Probe.make(data.readinessProbe);\n\n    if (data.livenessProbe)\n      c.livenessProbe = Probe.make(data.livenessProbe);\n\n    return c;\n  }\n\n  public environmentVariable(id: string): Arg {\n\n    var arg: Arg = null;\n\n    for (var i = 0; i  {\n          s.tests.push(Test.make(t));\n        });\n    }\n\n    return s;\n  }\n\n  public isActive(): boolean {\n\n    return (this.apiDeployType != \"none\" && this.apiDeployType != null) || this.stop == \"true\" || (this.apiMaturity != \"none\" &&  this.apiMaturity != null) ||\n                  (this.dockerAction != \"none\"  && this.dockerAction != null) || this.dockerTag != null || this.stop != null;\n  }\n\n  public summary(): string {\n\n      var status: string = null;\n\n      if (this.apiDeployType == \"deploy\")\n          status = \"Deploy API's \";\n      else if (this.apiDeployType == \"promote\")\n        status = \"Promote API's to \" + this.apiStage;\n\n      if (this.runTests == \"true\") {\n\n        if (status != null)\n          status = status + \", run tests\";\n        else\n          status = \"Run tests\";\n      }\n\n      if (this.apiMaturity) {\n\n        if (status != null)\n            status = status + \", and set maturity to \" + this.apiMaturity;\n        else\n          status = \"Set maturity to \" + this.apiMaturity;\n      }\n\n      if (this.dockerTag) {\n\n        if (status != null)\n          status = status + \", then tag image\";\n        else\n          status = \"Tag image \";\n      }\n\n      if (this.dockerAction) {\n        if (status != null)\n          status = status + \", \" + this.dockerAction;\n        else\n          status = this.dockerAction;\n\n        status = status + \" image\";\n      }\n\n      if (this.stop == \"true\") {\n        if (status != null)\n            status = status + \" before stopping\";\n        else\n            status = \"stop containers\";\n      }\n\n      if (this.pipelineAction) {\n\n        if (status != null)\n            status = status + \", then \" + this.pipelineAction + \" pipeline\";\n        else\n            status = \"and \" + this.pipelineAction + \" pipeline execution\";\n      }\n\n      return status;\n    }\n}\n\nexport class Stage {\n\n    public id: string;\n    public name: string;\n    public containerHost: string;\n    public useKubernetes: string;\n    public buildOnStart: string;\n    public deployments: Deployment[];\n    public onStart: Action;\n    public onFail: Action;\n    public onSuccess: Action;\n\n    constructor() {\n      this.deployments = [];\n      this.useKubernetes = \"false\";\n      this.buildOnStart = \"false\";\n      this.onStart = new Action();\n      this.onSuccess = new Action();\n      this.onFail = new Action();\n    }\n\n    public copy(): Stage {\n\n      let c = Stage.make(this);\n\n      c.id = this.id + \" copy\";\n      c.name = this.name + \" copy\";\n\n      return c;\n    }\n\n    public static make(data: any): Stage {\n\n      let s: Stage = new Stage();\n\n      s.name = data.name;\n      s.id = s.name;\n      s.containerHost = data.containerHost;\n      s.useKubernetes = data.useKubernetes;\n      s.buildOnStart = data.buildOnStart;\n\n      if (data.deployments) {\n        data.deployments.forEach((c) => {\n          s.deployments.push(Deployment.make(c));\n        });\n      }\n\n      if (data.onStart) {\n        s.onStart = Action.make(data.onStart);\n      }\n\n      if (data.onSuccess) {\n        s.onSuccess = Action.make(data.onSuccess);\n      }\n\n      if (data.onFail) {\n        s.onFail = Action.make(data.onFail);\n      }\n\n      return s;\n    }\n}\n\nexport class Deployment {\n\n  public name: string;\n  public hostname: string;\n  public appName: string;\n  public apis: APIDefinition[];\n  public containers: Container[];\n  public replicas: string;\n  public serviceType: string;\n  public restartPolicy: string;\n  public requiresMonitoring: string;\n  public dependsOn: string;\n\n  constructor() {\n\n    this.containers = [];\n    this.apis = [];\n  }\n\n  public copy() {\n    return Deployment.make(this);\n  }\n\n  public static make(data: any): Deployment {\n\n    let s: Deployment = new Deployment();\n    s.name = data.name;\n    s.hostname = data.hostname;\n    s.replicas = data.replicas;\n    s.appName = data.appName;\n    s.serviceType = data.serviceType;\n    s.restartPolicy = data.restartPolicy;\n    s.requiresMonitoring = data.requiresMonitoring;\n    s.dependsOn = data.dependsOn;\n\n    if (data.apis) {\n       data.apis.forEach((a) => {\n         s.apis.push(APIDefinition.make(a));\n       });\n    }\n\n    if (data.containers) {\n       data.containers.forEach((c) => {\n         s.containers.push(Container.make(c));\n       });\n    }\n\n    return s;\n  }\n\n  public containerForType(type: string): Container {\n\n    let found: Container = null;\n\n    this.containers.forEach((c) => {\n\n      if (c.type == type) {\n        found = c;\n      }\n    });\n\n    return found;\n  }\n\n  public removeContainer(c: Container) {\n\n    var found : number = -1;\n\n    for (var i = 0; i  {\n         p.builds.push(Builder.make(i));\n       });\n    }\n\n    if (data.deployments) {\n      p.deployments = [];\n       data.deployments.forEach((i) => {\n         p.deployments.push(Deployment.make(i));\n       });\n    }\n\n    return p;\n  }\n\n  public serviceFor(id: string): Deployment {\n\n      let found: Deployment = null;\n\n      for (var z = 0; z  {\n         p.stages.push(Stage.make(s));\n       });\n    }\n\n    return p;\n  }\n}\n\nfunction stringifyReplacer(key, value) {\n  const originalObject = this[key];\n  if(originalObject instanceof Map) {\n    return {\n      dataType: 'Map',\n      value: Array.from(originalObject.entries()), // or with spread: value: [...originalObject]\n    };\n  } else {\n    return value;\n  }\n}\n\nfunction parserReviver(key, value) {\n  if(typeof value === 'object' && value !== null) {\n    if (value.dataType === 'Map') {\n      return new Map(value.value);\n    }\n  }\n  return value;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ArgDisplayType.html":{"url":"classes/ArgDisplayType.html","title":"class - ArgDisplayType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ArgDisplayType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/project.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                choices\n                            \n                            \n                                    Public\n                                conditions\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                display\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                required\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                _matchConditions\n                            \n                            \n                                    Public\n                                copy\n                            \n                            \n                                    Static\n                                make\n                            \n                            \n                                    Public\n                                matchConditions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(name: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/project.ts:125\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            choices\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:124\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            conditions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:123\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:121\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            display\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DisplayType\n\n                        \n                    \n                    \n                        \n                            Default value : DisplayType.hidden\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:122\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:120\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            required\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:125\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            _matchConditions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _matchConditions(conditions: string[], args: Map)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/project.ts:184\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    conditions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            copy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    copy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/project.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ArgDisplayType\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            make\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    make(d: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/project.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    d\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ArgDisplayType\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            matchConditions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    matchConditions(args: Map)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/project.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { APIDefinition }                        from '../models/wm-package-info'\nimport { Source }                               from '../models/git-source';\nimport { DockerImage, TestStatus }              from '../models/docker-image';\n\nexport class DeploymentSet {\n\n  public id: string;\n  public name: string;\n  public source: Source;\n  public active: string;\n  public apis: APIDefinition[];\n\n  public constructor() {\n      this.apis = [];\n      this.source = new Source();\n  }\n\n  public static make(data: any): DeploymentSet {\n\n      let p: DeploymentSet = new DeploymentSet();\n      p.id = data.name;\n      p.name = data.name;\n\n      if (data.source)\n       p.source = Source.make(data.source);\n\n      p.apis = [];\n\n      if (data.apis) {\n\n        data.apis.forEach((a) => {\n          p.apis.push(APIDefinition.make(a));\n        });\n      }\n\n      return p;\n  }\n}\n\nexport enum DisplayType {\n  hidden = \"hidden\",\n  readonly = \"readonly\",\n  editable = \"editable\",\n  password = \"password\",\n  file = \"file\",\n  dropdown = \"dropdown\",\n  yesno = \"yesno\"\n}\n\nexport class BuildCommand {\n\n  public commandType: string;\n  public buildTarget: string;\n  public fileType: string;\n  public source: string;\n  public target: string;\n  public description: string = \"\";\n  public display: DisplayType = DisplayType.hidden;\n  public required: boolean = true;\n  public conditions: string[];\n\n  public static make(d: any): BuildCommand {\n\n    let f: BuildCommand = new BuildCommand();\n    f.commandType = d.commandType;\n    f.buildTarget = d.buildTarget;\n    f.fileType = d.fileType;\n    f.source = d.source;\n    f.target = d.target;\n    f.description = d.description;\n    f.conditions = d.conditions;\n\n    if (d.display == \"editable\")\n      f.display = DisplayType.editable;\n    else if (d.display == \"readonly\")\n      f.display = DisplayType.readonly;\n    else if (d.display == \"file\")\n      f.display = DisplayType.file;\n    else\n      f.display = DisplayType.hidden;\n\n    f.required = false;\n    return f;\n  }\n\n  copy() {\n    return BuildCommand.make(this);\n  }\n\n  public equals(b: BuildCommand): boolean {\n\n    return (b.source && b.source == this.source) || (!b.source && b.target == this.target);\n  }\n\n  public matchConditions(args: Map): boolean {\n\n    return ArgDisplayType._matchConditions(this.conditions, args);\n  }\n}\n\nexport interface BuildParams {\n\n  name: string;\n  publicPort(): string;\n  setPublicPort(port: string);\n  assignedLicense(): string;\n  hostName: string;\n  entryPoint: string;\n  exitPoint: string;\n  healthCheck: string;\n  args: Map\n  buildCommands: BuildCommand[];\n\n  fileForType(type: string): BuildCommand;\n  isCustomImage(): boolean;\n}\n\nexport class ArgDisplayType {\n\n  public name: string;\n  public description: string;\n  public display: DisplayType = DisplayType.hidden;\n  public conditions: string[];\n  public choices: string[];\n  public required: boolean = true;\n\n  public constructor(name: string) {\n    this.name = name;\n    this.description = this.name;\n    this.conditions = [];\n    this.choices = [];\n  }\n\n  public copy(): ArgDisplayType {\n\n      let copy: ArgDisplayType = new ArgDisplayType(this.name);\n      copy.description = this.description;\n      copy.display = this.display;\n      copy.conditions = this.conditions;\n      copy.choices = this.choices;\n      copy.required = this.required;\n\n      return copy;\n  }\n\n  public static make(d: any): ArgDisplayType {\n\n    let a: ArgDisplayType = new ArgDisplayType(d.name);\n\n    if (d.display == \"editable\")\n      a.display = DisplayType.editable;\n    else if (d.display == \"readonly\")\n      a.display = DisplayType.readonly;\n    else if (d.display == \"file\")\n      a.display = DisplayType.file;\n    else if (d.display == \"password\")\n      a.display = DisplayType.password;\n    else if (d.display == \"yesno\")\n      a.display = DisplayType.yesno;\n    else if (d.display == \"dropdown\")\n      a.display = DisplayType.dropdown;\n    else\n      a.display = DisplayType.hidden;\n\n    if (d.required != null)\n      a.required = d.required;\n\n    a.description = d.description || d.name;\n\n    if (d.conditions)\n      a.conditions = d.conditions;\n\n    if (a.choices)\n      a.choices = d.choices;\n\n    return a;\n  }\n\n  public matchConditions(args: Map): boolean {\n\n      return ArgDisplayType._matchConditions(this.conditions, args);\n  }\n\n  public static _matchConditions(conditions: string[], args: Map): boolean {\n\n      if (conditions && conditions.length > 0) {\n\n        let matched: boolean = false;\n\n        for (let i = 0; i  {\n      args.push(new Arg(a.source, a.target, a.description));\n    });\n\n    return args;\n  }\n\n}\n\nexport class Installer implements BuildParams {\n\n    public name: string;\n    public sourceImageTag: string;\n    public isNew: string = \"true\";\n    public targetImage: DockerImage;\n    public productType: string;\n    public licenseFile: string;\n    public primaryPort: string;\n    public hostName: string;\n    public wmInstallerImage: string;\n    public includeUpdate: string = \"false\";\n    public buildCommands: BuildCommand[];\n    public args: Map;\n    public isSAGProduct: string = \"true\";\n\n    public entryPoint: string;\n    public exitPoint: string;\n    public healthCheck: string;\n\n    public constructor() {\n\n    this.sourceImageTag = \"centos:latest\";\n    this.targetImage = new DockerImage();\n    this.buildCommands = [];\n    this.args = new Map();\n  }\n\n  public copy(): Installer {\n\n    return Installer.make(this);\n  }\n\n  public static parse(data: string): Installer {\n\n    return this.make(JSON.parse(data, parserReviver).install);\n  }\n\n  public isCustomImage(): boolean {\n    return true;\n  }\n\n  public static make(data: any): Installer {\n\n    let i: Installer = new Installer();\n    i.name = data.name;\n    i.isSAGProduct = data.isSAGProduct;\n    i.args = data.args;\n    i.productType = data.productType;\n    i.wmInstallerImage = data.wmInstallerImage;\n    i.sourceImageTag = data.sourceImageTag;\n\n    if (data.targetImage)\n      i.targetImage = DockerImage.make(data.targetImage);\n\n    i.licenseFile = data.licenseFile;\n    i.primaryPort = data.primaryPort;\n    i.isNew = data.isNew;\n    i.includeUpdate = data.includeUpdate;\n    i.hostName = data.hostName;\n    i.entryPoint = data.entryPoint;\n    i.exitPoint = data.exitPoint;\n    i.healthCheck = data.healthCheck;\n    i.healthCheck = data.healthCheck;\n\n    if (!i.args)\n       i.args = new Map();\n\n    if (data.buildCommands) {\n      data.buildCommands.forEach((f) => {\n        i.buildCommands.push(BuildCommand.make(f));\n      });\n    }\n\n    return i;\n  }\n\n  public publicPort(): string {\n    return this.primaryPort;\n  }\n\n  public setPublicPort(port: string) {\n    this.primaryPort = port;\n  }\n\n  public assignedLicense(): string {\n\n    return this.licenseFile;\n  }\n\n  public fileForType(type: string, name?: string): BuildCommand {\n\n      return Builder._fileForSource(this.buildCommands, type, name, null);\n  }\n\n  public fileWithDescription(type: string, description: string): BuildCommand {\n      return Builder._fileForSource(this.buildCommands, type, null, description);\n  }\n\n  public removeFileForType(type: string, name?: string) {\n\n      return Builder._removeFileForType(this.buildCommands, type, name);\n  }\n\n  public toString(): string {\n    return JSON.stringify(this, stringifyReplacer);\n  }\n}\n\nexport class Builder implements BuildParams {\n\n  public name: string;\n  public deploymentType: string;\n  public deployments: DeploymentSet[];\n\n  public sourceImage: DockerImage;\n  public targetImage: DockerImage;\n  public version: string;\n  public testStatus: string;\n  public buildCommands: BuildCommand[];\n  public hasTests: string;\n  public buildUser: string;\n  public entryUser: string;\n  public entryPoint: string;\n  public exitPoint: string;\n  public healthCheck: string;\n  public args: Map;\n\n  public hostName: string; // not used!!\n\n  public constructor() {\n\n    this.sourceImage = new DockerImage();\n    this.targetImage = new DockerImage();\n    this.buildCommands = [];\n\n    this.args = new Map();\n  }\n\n  public hyphenatedName(): string {\n\n    return this.name.toLowerCase().replace(/\\s/g, \"-\");\n  }\n\n  public static make(data: any): Builder {\n\n    let b: Builder = new Builder();\n    b.name = data.name;\n    b.deploymentType = data.type;\n\n    b.deployments = [];\n\n    if (data.deployments) {\n      data.deployments.forEach((d) => {\n            b.deployments.push(DeploymentSet.make(d));\n      });\n    }\n\n    if (data.buildCommands) {\n      data.buildCommands.forEach((f) => {\n            b.buildCommands.push(BuildCommand.make(f));\n      });\n    }\n\n    b.sourceImage = DockerImage.make(data.sourceImage);\n    b.targetImage = DockerImage.make(data.targetImage);\n    b.version = data.version;\n    b.testStatus = data.testStatus;\n    b.buildUser = data.buildUser;\n    b.entryUser = data.entryUser;\n    b.entryPoint = data.entryPoint;\n    b.exitPoint = data.exitPoint;\n    b.healthCheck = data.healthCheck;\n\n    if (data.hasTests && data.hasTests == 'true')\n      b.hasTests = \"true\";\n\n    return b;\n  }\n\n  public publicPort(): string {\n    return this.sourceImage.primaryPort;\n  }\n\n  public setPublicPort(port: string) {\n    this.sourceImage.primaryPort = port;\n  }\n\n  public assignedLicense(): string {\n\n    let lic: BuildCommand = this.fileWithDescription(\"licenses\",'Product License');\n\n    if (lic) {\n      return lic.target.replace(/\\-/g, \" \");\n    } else {\n      return null;\n    }\n  }\n\n  public isCustomImage(): boolean {\n    return this.sourceImage.isCustom;\n  }\n\n  public fileForType(type: string, name?: string): BuildCommand {\n      return Builder._fileForSource(this.buildCommands, type, name, null);\n  }\n\n  public fileWithDescription(type: string, description: string): BuildCommand {\n      return Builder._fileForSource(this.buildCommands, type, null, description);\n  }\n\n  public removeFileForType(type: string, name?: string) {\n\n      return Builder._removeFileForType(this.buildCommands, type, name);\n  }\n\n  public static _fileForSource(buildCommands: BuildCommand[], type: string, name: string, description: string): BuildCommand {\n\n      let file: BuildCommand = null;\n\n      for (var i = 0; i  {\n         d.buildCommands.push(BuildCommand.make(b));\n       });\n     }\n\n     return d;\n  }\n}\n\nexport class Port {\n\n  public publicPort: string;\n  public serviceType: string;\n\n  constructor(public internal: string, public external: string, public description: string, public type?: string) {\n\n  }\n\n  public static makeArray(array: any[]): Port[] {\n\n    let ports: Port[] = [];\n\n    array.forEach((p) => {\n      let port: Port = new Port(p.internal, p.external, p.description, p.type);\n      port.publicPort = p.publicPort;\n      port.serviceType = p.serviceType;\n\n      ports.push(port);\n    });\n\n    return ports;\n  }\n}\n\nexport class Probe {\n\n  public path: string;\n  public port: string;\n  public initialDelaySeconds: number;\n  public periodSeconds: number;\n  public timeoutSeconds: number;\n\n  public static make(data: any): Probe {\n\n    let p = new Probe();\n    p.path = data.path;\n    p.port = data.port;\n    p.initialDelaySeconds = Number(data.initialDelaySeconds);\n    p.periodSeconds = Number(data.periodSeconds);\n    p.timeoutSeconds = Number(data.timeoutSeconds);\n\n    return p;\n  }\n}\n\nexport class Container {\n\n  public name: string;\n  public names: string[];\n  public active: string;\n  public type: string;\n  public description: string;\n  public hostname: string;\n  public secure: string;\n  public image: string;\n  public build: DockerBuild;\n  public ports: Port[];\n  public env: Arg[];\n  public volumes: Arg[];\n  public readinessProbe;\n  public livenessProbe;\n  public testStatus : TestStatus;\n  public adminUser: string;\n  public adminPassword: string;\n\n  // runtime only\n\n  public id: string;\n  public state: string;\n  public status: string;\n  public created: Date;\n\n  constructor() {\n\n    this.active = \"true\";\n    this.ports = [];\n    this.env = [];\n    this.volumes = [];\n  }\n\n  public copy() {\n    return Container.make(this);\n  }\n\n  public uniqueName(usesDedicatedRepo: boolean): string {\n\n    let repo: string = this.repository();\n\n    if (repo)\n      return repo + (usesDedicatedRepo ? \"/\" : \":\") + this.imageName();\n    else\n      return this.imageName();\n  }\n\n  public repository(): string {\n\n    if (this.image.indexOf(\":\") != -1) {\n\n      return this.image.substring(0, this.image.indexOf(\":\"));\n    } else {\n      return null;\n    }\n  }\n\n  public imageName(): string {\n\n    let name: string = this.image;\n\n    let idx: number = name.indexOf(\":\");\n\n    if (idx != -1) {\n\n      let lside = name.substring(0, idx);\n      let rside = name.substring(idx+1);\n\n      if (DockerImage.isVersionNumber(rside)) {\n\n        // name is on left side\n\n         if (this.image.lastIndexOf(\"/\") != -1) {\n          let idx: number = this.image.lastIndexOf(\"/\");\n          let rdx: number = this.image.indexOf(\":\");\n\n          name = this.image.substring(idx+1, rdx);\n        }\n      } else {\n\n        // name and perhaps version is in right side\n\n        name = rside;\n\n        if (name.indexOf(\"-\") != -1) {\n\n          let idx: number = name.lastIndexOf(\"-\");\n          let b4: string = name.substring(0, idx);\n          let af: string = name.substring(idx+1, name.length);\n\n          if (DockerImage.isVersionNumber(af)) {\n            name = b4;\n          }\n        }\n      }\n    }\n\n    return name;\n  }\n\n  public preferredImageVersion(): string {\n\n    if (this.image && this.image.indexOf(\":\")) {\n\n      let version: string = this.image.substring(this.image.indexOf(\":\")+1, this.image.length);\n\n      if (version.indexOf(\"-\") != -1) {\n        let idx: number = version.lastIndexOf(\"-\");\n        version = version.substring(idx+1, version.length);\n      }\n\n      // no versioning, only a name\n\n      if (!DockerImage.isVersionNumber(version))\n          version = \"latest\";\n\n      return version;\n    } else {\n\n      return \"latest\";\n    }\n  }\n\n  public static make(data: any): Container {\n\n    let c: Container = new Container();\n    c.names = data.names;\n    if (data.names)\n      c.name = data.names[0];\n    else\n      c.name = data.name;\n\n    c.active = data.active;\n    c.description = data.description;\n    c.hostname = data.hostname;\n    c.secure  = data.secure;\n    c.image = data.image;\n    c.type = data.type;\n    c.adminUser = data.adminUser;\n    c.adminPassword = data.adminPassword;\n\n    if (data.build)\n      c.build = DockerBuild.make(data.build);\n\n    if (data.ports)\n      c.ports = Port.makeArray(data.ports);\n\n    if (data.env)\n      c.env = Arg.makeArray(data.env);\n\n    if (data.volumes)\n      c.volumes = Arg.makeArray(data.volumes);\n\n    if (data.readinessProbe)\n      c.readinessProbe = Probe.make(data.readinessProbe);\n\n    if (data.livenessProbe)\n      c.livenessProbe = Probe.make(data.livenessProbe);\n\n    return c;\n  }\n\n  public environmentVariable(id: string): Arg {\n\n    var arg: Arg = null;\n\n    for (var i = 0; i  {\n          s.tests.push(Test.make(t));\n        });\n    }\n\n    return s;\n  }\n\n  public isActive(): boolean {\n\n    return (this.apiDeployType != \"none\" && this.apiDeployType != null) || this.stop == \"true\" || (this.apiMaturity != \"none\" &&  this.apiMaturity != null) ||\n                  (this.dockerAction != \"none\"  && this.dockerAction != null) || this.dockerTag != null || this.stop != null;\n  }\n\n  public summary(): string {\n\n      var status: string = null;\n\n      if (this.apiDeployType == \"deploy\")\n          status = \"Deploy API's \";\n      else if (this.apiDeployType == \"promote\")\n        status = \"Promote API's to \" + this.apiStage;\n\n      if (this.runTests == \"true\") {\n\n        if (status != null)\n          status = status + \", run tests\";\n        else\n          status = \"Run tests\";\n      }\n\n      if (this.apiMaturity) {\n\n        if (status != null)\n            status = status + \", and set maturity to \" + this.apiMaturity;\n        else\n          status = \"Set maturity to \" + this.apiMaturity;\n      }\n\n      if (this.dockerTag) {\n\n        if (status != null)\n          status = status + \", then tag image\";\n        else\n          status = \"Tag image \";\n      }\n\n      if (this.dockerAction) {\n        if (status != null)\n          status = status + \", \" + this.dockerAction;\n        else\n          status = this.dockerAction;\n\n        status = status + \" image\";\n      }\n\n      if (this.stop == \"true\") {\n        if (status != null)\n            status = status + \" before stopping\";\n        else\n            status = \"stop containers\";\n      }\n\n      if (this.pipelineAction) {\n\n        if (status != null)\n            status = status + \", then \" + this.pipelineAction + \" pipeline\";\n        else\n            status = \"and \" + this.pipelineAction + \" pipeline execution\";\n      }\n\n      return status;\n    }\n}\n\nexport class Stage {\n\n    public id: string;\n    public name: string;\n    public containerHost: string;\n    public useKubernetes: string;\n    public buildOnStart: string;\n    public deployments: Deployment[];\n    public onStart: Action;\n    public onFail: Action;\n    public onSuccess: Action;\n\n    constructor() {\n      this.deployments = [];\n      this.useKubernetes = \"false\";\n      this.buildOnStart = \"false\";\n      this.onStart = new Action();\n      this.onSuccess = new Action();\n      this.onFail = new Action();\n    }\n\n    public copy(): Stage {\n\n      let c = Stage.make(this);\n\n      c.id = this.id + \" copy\";\n      c.name = this.name + \" copy\";\n\n      return c;\n    }\n\n    public static make(data: any): Stage {\n\n      let s: Stage = new Stage();\n\n      s.name = data.name;\n      s.id = s.name;\n      s.containerHost = data.containerHost;\n      s.useKubernetes = data.useKubernetes;\n      s.buildOnStart = data.buildOnStart;\n\n      if (data.deployments) {\n        data.deployments.forEach((c) => {\n          s.deployments.push(Deployment.make(c));\n        });\n      }\n\n      if (data.onStart) {\n        s.onStart = Action.make(data.onStart);\n      }\n\n      if (data.onSuccess) {\n        s.onSuccess = Action.make(data.onSuccess);\n      }\n\n      if (data.onFail) {\n        s.onFail = Action.make(data.onFail);\n      }\n\n      return s;\n    }\n}\n\nexport class Deployment {\n\n  public name: string;\n  public hostname: string;\n  public appName: string;\n  public apis: APIDefinition[];\n  public containers: Container[];\n  public replicas: string;\n  public serviceType: string;\n  public restartPolicy: string;\n  public requiresMonitoring: string;\n  public dependsOn: string;\n\n  constructor() {\n\n    this.containers = [];\n    this.apis = [];\n  }\n\n  public copy() {\n    return Deployment.make(this);\n  }\n\n  public static make(data: any): Deployment {\n\n    let s: Deployment = new Deployment();\n    s.name = data.name;\n    s.hostname = data.hostname;\n    s.replicas = data.replicas;\n    s.appName = data.appName;\n    s.serviceType = data.serviceType;\n    s.restartPolicy = data.restartPolicy;\n    s.requiresMonitoring = data.requiresMonitoring;\n    s.dependsOn = data.dependsOn;\n\n    if (data.apis) {\n       data.apis.forEach((a) => {\n         s.apis.push(APIDefinition.make(a));\n       });\n    }\n\n    if (data.containers) {\n       data.containers.forEach((c) => {\n         s.containers.push(Container.make(c));\n       });\n    }\n\n    return s;\n  }\n\n  public containerForType(type: string): Container {\n\n    let found: Container = null;\n\n    this.containers.forEach((c) => {\n\n      if (c.type == type) {\n        found = c;\n      }\n    });\n\n    return found;\n  }\n\n  public removeContainer(c: Container) {\n\n    var found : number = -1;\n\n    for (var i = 0; i  {\n         p.builds.push(Builder.make(i));\n       });\n    }\n\n    if (data.deployments) {\n      p.deployments = [];\n       data.deployments.forEach((i) => {\n         p.deployments.push(Deployment.make(i));\n       });\n    }\n\n    return p;\n  }\n\n  public serviceFor(id: string): Deployment {\n\n      let found: Deployment = null;\n\n      for (var z = 0; z  {\n         p.stages.push(Stage.make(s));\n       });\n    }\n\n    return p;\n  }\n}\n\nfunction stringifyReplacer(key, value) {\n  const originalObject = this[key];\n  if(originalObject instanceof Map) {\n    return {\n      dataType: 'Map',\n      value: Array.from(originalObject.entries()), // or with spread: value: [...originalObject]\n    };\n  } else {\n    return value;\n  }\n}\n\nfunction parserReviver(key, value) {\n  if(typeof value === 'object' && value !== null) {\n    if (value.dataType === 'Map') {\n      return new Map(value.value);\n    }\n  }\n  return value;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Authentication.html":{"url":"classes/Authentication.html","title":"class - Authentication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Authentication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/project.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                make\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/models/project.ts:804\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:804\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:802\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:803\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            make\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    make(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/project.ts:810\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Authentication\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { APIDefinition }                        from '../models/wm-package-info'\nimport { Source }                               from '../models/git-source';\nimport { DockerImage, TestStatus }              from '../models/docker-image';\n\nexport class DeploymentSet {\n\n  public id: string;\n  public name: string;\n  public source: Source;\n  public active: string;\n  public apis: APIDefinition[];\n\n  public constructor() {\n      this.apis = [];\n      this.source = new Source();\n  }\n\n  public static make(data: any): DeploymentSet {\n\n      let p: DeploymentSet = new DeploymentSet();\n      p.id = data.name;\n      p.name = data.name;\n\n      if (data.source)\n       p.source = Source.make(data.source);\n\n      p.apis = [];\n\n      if (data.apis) {\n\n        data.apis.forEach((a) => {\n          p.apis.push(APIDefinition.make(a));\n        });\n      }\n\n      return p;\n  }\n}\n\nexport enum DisplayType {\n  hidden = \"hidden\",\n  readonly = \"readonly\",\n  editable = \"editable\",\n  password = \"password\",\n  file = \"file\",\n  dropdown = \"dropdown\",\n  yesno = \"yesno\"\n}\n\nexport class BuildCommand {\n\n  public commandType: string;\n  public buildTarget: string;\n  public fileType: string;\n  public source: string;\n  public target: string;\n  public description: string = \"\";\n  public display: DisplayType = DisplayType.hidden;\n  public required: boolean = true;\n  public conditions: string[];\n\n  public static make(d: any): BuildCommand {\n\n    let f: BuildCommand = new BuildCommand();\n    f.commandType = d.commandType;\n    f.buildTarget = d.buildTarget;\n    f.fileType = d.fileType;\n    f.source = d.source;\n    f.target = d.target;\n    f.description = d.description;\n    f.conditions = d.conditions;\n\n    if (d.display == \"editable\")\n      f.display = DisplayType.editable;\n    else if (d.display == \"readonly\")\n      f.display = DisplayType.readonly;\n    else if (d.display == \"file\")\n      f.display = DisplayType.file;\n    else\n      f.display = DisplayType.hidden;\n\n    f.required = false;\n    return f;\n  }\n\n  copy() {\n    return BuildCommand.make(this);\n  }\n\n  public equals(b: BuildCommand): boolean {\n\n    return (b.source && b.source == this.source) || (!b.source && b.target == this.target);\n  }\n\n  public matchConditions(args: Map): boolean {\n\n    return ArgDisplayType._matchConditions(this.conditions, args);\n  }\n}\n\nexport interface BuildParams {\n\n  name: string;\n  publicPort(): string;\n  setPublicPort(port: string);\n  assignedLicense(): string;\n  hostName: string;\n  entryPoint: string;\n  exitPoint: string;\n  healthCheck: string;\n  args: Map\n  buildCommands: BuildCommand[];\n\n  fileForType(type: string): BuildCommand;\n  isCustomImage(): boolean;\n}\n\nexport class ArgDisplayType {\n\n  public name: string;\n  public description: string;\n  public display: DisplayType = DisplayType.hidden;\n  public conditions: string[];\n  public choices: string[];\n  public required: boolean = true;\n\n  public constructor(name: string) {\n    this.name = name;\n    this.description = this.name;\n    this.conditions = [];\n    this.choices = [];\n  }\n\n  public copy(): ArgDisplayType {\n\n      let copy: ArgDisplayType = new ArgDisplayType(this.name);\n      copy.description = this.description;\n      copy.display = this.display;\n      copy.conditions = this.conditions;\n      copy.choices = this.choices;\n      copy.required = this.required;\n\n      return copy;\n  }\n\n  public static make(d: any): ArgDisplayType {\n\n    let a: ArgDisplayType = new ArgDisplayType(d.name);\n\n    if (d.display == \"editable\")\n      a.display = DisplayType.editable;\n    else if (d.display == \"readonly\")\n      a.display = DisplayType.readonly;\n    else if (d.display == \"file\")\n      a.display = DisplayType.file;\n    else if (d.display == \"password\")\n      a.display = DisplayType.password;\n    else if (d.display == \"yesno\")\n      a.display = DisplayType.yesno;\n    else if (d.display == \"dropdown\")\n      a.display = DisplayType.dropdown;\n    else\n      a.display = DisplayType.hidden;\n\n    if (d.required != null)\n      a.required = d.required;\n\n    a.description = d.description || d.name;\n\n    if (d.conditions)\n      a.conditions = d.conditions;\n\n    if (a.choices)\n      a.choices = d.choices;\n\n    return a;\n  }\n\n  public matchConditions(args: Map): boolean {\n\n      return ArgDisplayType._matchConditions(this.conditions, args);\n  }\n\n  public static _matchConditions(conditions: string[], args: Map): boolean {\n\n      if (conditions && conditions.length > 0) {\n\n        let matched: boolean = false;\n\n        for (let i = 0; i  {\n      args.push(new Arg(a.source, a.target, a.description));\n    });\n\n    return args;\n  }\n\n}\n\nexport class Installer implements BuildParams {\n\n    public name: string;\n    public sourceImageTag: string;\n    public isNew: string = \"true\";\n    public targetImage: DockerImage;\n    public productType: string;\n    public licenseFile: string;\n    public primaryPort: string;\n    public hostName: string;\n    public wmInstallerImage: string;\n    public includeUpdate: string = \"false\";\n    public buildCommands: BuildCommand[];\n    public args: Map;\n    public isSAGProduct: string = \"true\";\n\n    public entryPoint: string;\n    public exitPoint: string;\n    public healthCheck: string;\n\n    public constructor() {\n\n    this.sourceImageTag = \"centos:latest\";\n    this.targetImage = new DockerImage();\n    this.buildCommands = [];\n    this.args = new Map();\n  }\n\n  public copy(): Installer {\n\n    return Installer.make(this);\n  }\n\n  public static parse(data: string): Installer {\n\n    return this.make(JSON.parse(data, parserReviver).install);\n  }\n\n  public isCustomImage(): boolean {\n    return true;\n  }\n\n  public static make(data: any): Installer {\n\n    let i: Installer = new Installer();\n    i.name = data.name;\n    i.isSAGProduct = data.isSAGProduct;\n    i.args = data.args;\n    i.productType = data.productType;\n    i.wmInstallerImage = data.wmInstallerImage;\n    i.sourceImageTag = data.sourceImageTag;\n\n    if (data.targetImage)\n      i.targetImage = DockerImage.make(data.targetImage);\n\n    i.licenseFile = data.licenseFile;\n    i.primaryPort = data.primaryPort;\n    i.isNew = data.isNew;\n    i.includeUpdate = data.includeUpdate;\n    i.hostName = data.hostName;\n    i.entryPoint = data.entryPoint;\n    i.exitPoint = data.exitPoint;\n    i.healthCheck = data.healthCheck;\n    i.healthCheck = data.healthCheck;\n\n    if (!i.args)\n       i.args = new Map();\n\n    if (data.buildCommands) {\n      data.buildCommands.forEach((f) => {\n        i.buildCommands.push(BuildCommand.make(f));\n      });\n    }\n\n    return i;\n  }\n\n  public publicPort(): string {\n    return this.primaryPort;\n  }\n\n  public setPublicPort(port: string) {\n    this.primaryPort = port;\n  }\n\n  public assignedLicense(): string {\n\n    return this.licenseFile;\n  }\n\n  public fileForType(type: string, name?: string): BuildCommand {\n\n      return Builder._fileForSource(this.buildCommands, type, name, null);\n  }\n\n  public fileWithDescription(type: string, description: string): BuildCommand {\n      return Builder._fileForSource(this.buildCommands, type, null, description);\n  }\n\n  public removeFileForType(type: string, name?: string) {\n\n      return Builder._removeFileForType(this.buildCommands, type, name);\n  }\n\n  public toString(): string {\n    return JSON.stringify(this, stringifyReplacer);\n  }\n}\n\nexport class Builder implements BuildParams {\n\n  public name: string;\n  public deploymentType: string;\n  public deployments: DeploymentSet[];\n\n  public sourceImage: DockerImage;\n  public targetImage: DockerImage;\n  public version: string;\n  public testStatus: string;\n  public buildCommands: BuildCommand[];\n  public hasTests: string;\n  public buildUser: string;\n  public entryUser: string;\n  public entryPoint: string;\n  public exitPoint: string;\n  public healthCheck: string;\n  public args: Map;\n\n  public hostName: string; // not used!!\n\n  public constructor() {\n\n    this.sourceImage = new DockerImage();\n    this.targetImage = new DockerImage();\n    this.buildCommands = [];\n\n    this.args = new Map();\n  }\n\n  public hyphenatedName(): string {\n\n    return this.name.toLowerCase().replace(/\\s/g, \"-\");\n  }\n\n  public static make(data: any): Builder {\n\n    let b: Builder = new Builder();\n    b.name = data.name;\n    b.deploymentType = data.type;\n\n    b.deployments = [];\n\n    if (data.deployments) {\n      data.deployments.forEach((d) => {\n            b.deployments.push(DeploymentSet.make(d));\n      });\n    }\n\n    if (data.buildCommands) {\n      data.buildCommands.forEach((f) => {\n            b.buildCommands.push(BuildCommand.make(f));\n      });\n    }\n\n    b.sourceImage = DockerImage.make(data.sourceImage);\n    b.targetImage = DockerImage.make(data.targetImage);\n    b.version = data.version;\n    b.testStatus = data.testStatus;\n    b.buildUser = data.buildUser;\n    b.entryUser = data.entryUser;\n    b.entryPoint = data.entryPoint;\n    b.exitPoint = data.exitPoint;\n    b.healthCheck = data.healthCheck;\n\n    if (data.hasTests && data.hasTests == 'true')\n      b.hasTests = \"true\";\n\n    return b;\n  }\n\n  public publicPort(): string {\n    return this.sourceImage.primaryPort;\n  }\n\n  public setPublicPort(port: string) {\n    this.sourceImage.primaryPort = port;\n  }\n\n  public assignedLicense(): string {\n\n    let lic: BuildCommand = this.fileWithDescription(\"licenses\",'Product License');\n\n    if (lic) {\n      return lic.target.replace(/\\-/g, \" \");\n    } else {\n      return null;\n    }\n  }\n\n  public isCustomImage(): boolean {\n    return this.sourceImage.isCustom;\n  }\n\n  public fileForType(type: string, name?: string): BuildCommand {\n      return Builder._fileForSource(this.buildCommands, type, name, null);\n  }\n\n  public fileWithDescription(type: string, description: string): BuildCommand {\n      return Builder._fileForSource(this.buildCommands, type, null, description);\n  }\n\n  public removeFileForType(type: string, name?: string) {\n\n      return Builder._removeFileForType(this.buildCommands, type, name);\n  }\n\n  public static _fileForSource(buildCommands: BuildCommand[], type: string, name: string, description: string): BuildCommand {\n\n      let file: BuildCommand = null;\n\n      for (var i = 0; i  {\n         d.buildCommands.push(BuildCommand.make(b));\n       });\n     }\n\n     return d;\n  }\n}\n\nexport class Port {\n\n  public publicPort: string;\n  public serviceType: string;\n\n  constructor(public internal: string, public external: string, public description: string, public type?: string) {\n\n  }\n\n  public static makeArray(array: any[]): Port[] {\n\n    let ports: Port[] = [];\n\n    array.forEach((p) => {\n      let port: Port = new Port(p.internal, p.external, p.description, p.type);\n      port.publicPort = p.publicPort;\n      port.serviceType = p.serviceType;\n\n      ports.push(port);\n    });\n\n    return ports;\n  }\n}\n\nexport class Probe {\n\n  public path: string;\n  public port: string;\n  public initialDelaySeconds: number;\n  public periodSeconds: number;\n  public timeoutSeconds: number;\n\n  public static make(data: any): Probe {\n\n    let p = new Probe();\n    p.path = data.path;\n    p.port = data.port;\n    p.initialDelaySeconds = Number(data.initialDelaySeconds);\n    p.periodSeconds = Number(data.periodSeconds);\n    p.timeoutSeconds = Number(data.timeoutSeconds);\n\n    return p;\n  }\n}\n\nexport class Container {\n\n  public name: string;\n  public names: string[];\n  public active: string;\n  public type: string;\n  public description: string;\n  public hostname: string;\n  public secure: string;\n  public image: string;\n  public build: DockerBuild;\n  public ports: Port[];\n  public env: Arg[];\n  public volumes: Arg[];\n  public readinessProbe;\n  public livenessProbe;\n  public testStatus : TestStatus;\n  public adminUser: string;\n  public adminPassword: string;\n\n  // runtime only\n\n  public id: string;\n  public state: string;\n  public status: string;\n  public created: Date;\n\n  constructor() {\n\n    this.active = \"true\";\n    this.ports = [];\n    this.env = [];\n    this.volumes = [];\n  }\n\n  public copy() {\n    return Container.make(this);\n  }\n\n  public uniqueName(usesDedicatedRepo: boolean): string {\n\n    let repo: string = this.repository();\n\n    if (repo)\n      return repo + (usesDedicatedRepo ? \"/\" : \":\") + this.imageName();\n    else\n      return this.imageName();\n  }\n\n  public repository(): string {\n\n    if (this.image.indexOf(\":\") != -1) {\n\n      return this.image.substring(0, this.image.indexOf(\":\"));\n    } else {\n      return null;\n    }\n  }\n\n  public imageName(): string {\n\n    let name: string = this.image;\n\n    let idx: number = name.indexOf(\":\");\n\n    if (idx != -1) {\n\n      let lside = name.substring(0, idx);\n      let rside = name.substring(idx+1);\n\n      if (DockerImage.isVersionNumber(rside)) {\n\n        // name is on left side\n\n         if (this.image.lastIndexOf(\"/\") != -1) {\n          let idx: number = this.image.lastIndexOf(\"/\");\n          let rdx: number = this.image.indexOf(\":\");\n\n          name = this.image.substring(idx+1, rdx);\n        }\n      } else {\n\n        // name and perhaps version is in right side\n\n        name = rside;\n\n        if (name.indexOf(\"-\") != -1) {\n\n          let idx: number = name.lastIndexOf(\"-\");\n          let b4: string = name.substring(0, idx);\n          let af: string = name.substring(idx+1, name.length);\n\n          if (DockerImage.isVersionNumber(af)) {\n            name = b4;\n          }\n        }\n      }\n    }\n\n    return name;\n  }\n\n  public preferredImageVersion(): string {\n\n    if (this.image && this.image.indexOf(\":\")) {\n\n      let version: string = this.image.substring(this.image.indexOf(\":\")+1, this.image.length);\n\n      if (version.indexOf(\"-\") != -1) {\n        let idx: number = version.lastIndexOf(\"-\");\n        version = version.substring(idx+1, version.length);\n      }\n\n      // no versioning, only a name\n\n      if (!DockerImage.isVersionNumber(version))\n          version = \"latest\";\n\n      return version;\n    } else {\n\n      return \"latest\";\n    }\n  }\n\n  public static make(data: any): Container {\n\n    let c: Container = new Container();\n    c.names = data.names;\n    if (data.names)\n      c.name = data.names[0];\n    else\n      c.name = data.name;\n\n    c.active = data.active;\n    c.description = data.description;\n    c.hostname = data.hostname;\n    c.secure  = data.secure;\n    c.image = data.image;\n    c.type = data.type;\n    c.adminUser = data.adminUser;\n    c.adminPassword = data.adminPassword;\n\n    if (data.build)\n      c.build = DockerBuild.make(data.build);\n\n    if (data.ports)\n      c.ports = Port.makeArray(data.ports);\n\n    if (data.env)\n      c.env = Arg.makeArray(data.env);\n\n    if (data.volumes)\n      c.volumes = Arg.makeArray(data.volumes);\n\n    if (data.readinessProbe)\n      c.readinessProbe = Probe.make(data.readinessProbe);\n\n    if (data.livenessProbe)\n      c.livenessProbe = Probe.make(data.livenessProbe);\n\n    return c;\n  }\n\n  public environmentVariable(id: string): Arg {\n\n    var arg: Arg = null;\n\n    for (var i = 0; i  {\n          s.tests.push(Test.make(t));\n        });\n    }\n\n    return s;\n  }\n\n  public isActive(): boolean {\n\n    return (this.apiDeployType != \"none\" && this.apiDeployType != null) || this.stop == \"true\" || (this.apiMaturity != \"none\" &&  this.apiMaturity != null) ||\n                  (this.dockerAction != \"none\"  && this.dockerAction != null) || this.dockerTag != null || this.stop != null;\n  }\n\n  public summary(): string {\n\n      var status: string = null;\n\n      if (this.apiDeployType == \"deploy\")\n          status = \"Deploy API's \";\n      else if (this.apiDeployType == \"promote\")\n        status = \"Promote API's to \" + this.apiStage;\n\n      if (this.runTests == \"true\") {\n\n        if (status != null)\n          status = status + \", run tests\";\n        else\n          status = \"Run tests\";\n      }\n\n      if (this.apiMaturity) {\n\n        if (status != null)\n            status = status + \", and set maturity to \" + this.apiMaturity;\n        else\n          status = \"Set maturity to \" + this.apiMaturity;\n      }\n\n      if (this.dockerTag) {\n\n        if (status != null)\n          status = status + \", then tag image\";\n        else\n          status = \"Tag image \";\n      }\n\n      if (this.dockerAction) {\n        if (status != null)\n          status = status + \", \" + this.dockerAction;\n        else\n          status = this.dockerAction;\n\n        status = status + \" image\";\n      }\n\n      if (this.stop == \"true\") {\n        if (status != null)\n            status = status + \" before stopping\";\n        else\n            status = \"stop containers\";\n      }\n\n      if (this.pipelineAction) {\n\n        if (status != null)\n            status = status + \", then \" + this.pipelineAction + \" pipeline\";\n        else\n            status = \"and \" + this.pipelineAction + \" pipeline execution\";\n      }\n\n      return status;\n    }\n}\n\nexport class Stage {\n\n    public id: string;\n    public name: string;\n    public containerHost: string;\n    public useKubernetes: string;\n    public buildOnStart: string;\n    public deployments: Deployment[];\n    public onStart: Action;\n    public onFail: Action;\n    public onSuccess: Action;\n\n    constructor() {\n      this.deployments = [];\n      this.useKubernetes = \"false\";\n      this.buildOnStart = \"false\";\n      this.onStart = new Action();\n      this.onSuccess = new Action();\n      this.onFail = new Action();\n    }\n\n    public copy(): Stage {\n\n      let c = Stage.make(this);\n\n      c.id = this.id + \" copy\";\n      c.name = this.name + \" copy\";\n\n      return c;\n    }\n\n    public static make(data: any): Stage {\n\n      let s: Stage = new Stage();\n\n      s.name = data.name;\n      s.id = s.name;\n      s.containerHost = data.containerHost;\n      s.useKubernetes = data.useKubernetes;\n      s.buildOnStart = data.buildOnStart;\n\n      if (data.deployments) {\n        data.deployments.forEach((c) => {\n          s.deployments.push(Deployment.make(c));\n        });\n      }\n\n      if (data.onStart) {\n        s.onStart = Action.make(data.onStart);\n      }\n\n      if (data.onSuccess) {\n        s.onSuccess = Action.make(data.onSuccess);\n      }\n\n      if (data.onFail) {\n        s.onFail = Action.make(data.onFail);\n      }\n\n      return s;\n    }\n}\n\nexport class Deployment {\n\n  public name: string;\n  public hostname: string;\n  public appName: string;\n  public apis: APIDefinition[];\n  public containers: Container[];\n  public replicas: string;\n  public serviceType: string;\n  public restartPolicy: string;\n  public requiresMonitoring: string;\n  public dependsOn: string;\n\n  constructor() {\n\n    this.containers = [];\n    this.apis = [];\n  }\n\n  public copy() {\n    return Deployment.make(this);\n  }\n\n  public static make(data: any): Deployment {\n\n    let s: Deployment = new Deployment();\n    s.name = data.name;\n    s.hostname = data.hostname;\n    s.replicas = data.replicas;\n    s.appName = data.appName;\n    s.serviceType = data.serviceType;\n    s.restartPolicy = data.restartPolicy;\n    s.requiresMonitoring = data.requiresMonitoring;\n    s.dependsOn = data.dependsOn;\n\n    if (data.apis) {\n       data.apis.forEach((a) => {\n         s.apis.push(APIDefinition.make(a));\n       });\n    }\n\n    if (data.containers) {\n       data.containers.forEach((c) => {\n         s.containers.push(Container.make(c));\n       });\n    }\n\n    return s;\n  }\n\n  public containerForType(type: string): Container {\n\n    let found: Container = null;\n\n    this.containers.forEach((c) => {\n\n      if (c.type == type) {\n        found = c;\n      }\n    });\n\n    return found;\n  }\n\n  public removeContainer(c: Container) {\n\n    var found : number = -1;\n\n    for (var i = 0; i  {\n         p.builds.push(Builder.make(i));\n       });\n    }\n\n    if (data.deployments) {\n      p.deployments = [];\n       data.deployments.forEach((i) => {\n         p.deployments.push(Deployment.make(i));\n       });\n    }\n\n    return p;\n  }\n\n  public serviceFor(id: string): Deployment {\n\n      let found: Deployment = null;\n\n      for (var z = 0; z  {\n         p.stages.push(Stage.make(s));\n       });\n    }\n\n    return p;\n  }\n}\n\nfunction stringifyReplacer(key, value) {\n  const originalObject = this[key];\n  if(originalObject instanceof Map) {\n    return {\n      dataType: 'Map',\n      value: Array.from(originalObject.entries()), // or with spread: value: [...originalObject]\n    };\n  } else {\n    return value;\n  }\n}\n\nfunction parserReviver(key, value) {\n  if(typeof value === 'object' && value !== null) {\n    if (value.dataType === 'Map') {\n      return new Map(value.value);\n    }\n  }\n  return value;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BuildCommand.html":{"url":"classes/BuildCommand.html","title":"class - BuildCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BuildCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/project.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                buildTarget\n                            \n                            \n                                    Public\n                                commandType\n                            \n                            \n                                    Public\n                                conditions\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                display\n                            \n                            \n                                    Public\n                                fileType\n                            \n                            \n                                    Public\n                                required\n                            \n                            \n                                    Public\n                                source\n                            \n                            \n                                    Public\n                                target\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                copy\n                            \n                            \n                                    Public\n                                equals\n                            \n                            \n                                    Static\n                                make\n                            \n                            \n                                    Public\n                                matchConditions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            buildTarget\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            commandType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            conditions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            display\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DisplayType\n\n                        \n                    \n                    \n                        \n                            Default value : DisplayType.hidden\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fileType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            required\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:56\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            copy\n                        \n                        \n                    \n                \n            \n            \n                \ncopy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/project.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BuildCommand\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            equals\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    equals(b: BuildCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/project.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    b\n                                    \n                                                BuildCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            make\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    make(d: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/project.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    d\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         BuildCommand\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            matchConditions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    matchConditions(args: Map)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/project.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { APIDefinition }                        from '../models/wm-package-info'\nimport { Source }                               from '../models/git-source';\nimport { DockerImage, TestStatus }              from '../models/docker-image';\n\nexport class DeploymentSet {\n\n  public id: string;\n  public name: string;\n  public source: Source;\n  public active: string;\n  public apis: APIDefinition[];\n\n  public constructor() {\n      this.apis = [];\n      this.source = new Source();\n  }\n\n  public static make(data: any): DeploymentSet {\n\n      let p: DeploymentSet = new DeploymentSet();\n      p.id = data.name;\n      p.name = data.name;\n\n      if (data.source)\n       p.source = Source.make(data.source);\n\n      p.apis = [];\n\n      if (data.apis) {\n\n        data.apis.forEach((a) => {\n          p.apis.push(APIDefinition.make(a));\n        });\n      }\n\n      return p;\n  }\n}\n\nexport enum DisplayType {\n  hidden = \"hidden\",\n  readonly = \"readonly\",\n  editable = \"editable\",\n  password = \"password\",\n  file = \"file\",\n  dropdown = \"dropdown\",\n  yesno = \"yesno\"\n}\n\nexport class BuildCommand {\n\n  public commandType: string;\n  public buildTarget: string;\n  public fileType: string;\n  public source: string;\n  public target: string;\n  public description: string = \"\";\n  public display: DisplayType = DisplayType.hidden;\n  public required: boolean = true;\n  public conditions: string[];\n\n  public static make(d: any): BuildCommand {\n\n    let f: BuildCommand = new BuildCommand();\n    f.commandType = d.commandType;\n    f.buildTarget = d.buildTarget;\n    f.fileType = d.fileType;\n    f.source = d.source;\n    f.target = d.target;\n    f.description = d.description;\n    f.conditions = d.conditions;\n\n    if (d.display == \"editable\")\n      f.display = DisplayType.editable;\n    else if (d.display == \"readonly\")\n      f.display = DisplayType.readonly;\n    else if (d.display == \"file\")\n      f.display = DisplayType.file;\n    else\n      f.display = DisplayType.hidden;\n\n    f.required = false;\n    return f;\n  }\n\n  copy() {\n    return BuildCommand.make(this);\n  }\n\n  public equals(b: BuildCommand): boolean {\n\n    return (b.source && b.source == this.source) || (!b.source && b.target == this.target);\n  }\n\n  public matchConditions(args: Map): boolean {\n\n    return ArgDisplayType._matchConditions(this.conditions, args);\n  }\n}\n\nexport interface BuildParams {\n\n  name: string;\n  publicPort(): string;\n  setPublicPort(port: string);\n  assignedLicense(): string;\n  hostName: string;\n  entryPoint: string;\n  exitPoint: string;\n  healthCheck: string;\n  args: Map\n  buildCommands: BuildCommand[];\n\n  fileForType(type: string): BuildCommand;\n  isCustomImage(): boolean;\n}\n\nexport class ArgDisplayType {\n\n  public name: string;\n  public description: string;\n  public display: DisplayType = DisplayType.hidden;\n  public conditions: string[];\n  public choices: string[];\n  public required: boolean = true;\n\n  public constructor(name: string) {\n    this.name = name;\n    this.description = this.name;\n    this.conditions = [];\n    this.choices = [];\n  }\n\n  public copy(): ArgDisplayType {\n\n      let copy: ArgDisplayType = new ArgDisplayType(this.name);\n      copy.description = this.description;\n      copy.display = this.display;\n      copy.conditions = this.conditions;\n      copy.choices = this.choices;\n      copy.required = this.required;\n\n      return copy;\n  }\n\n  public static make(d: any): ArgDisplayType {\n\n    let a: ArgDisplayType = new ArgDisplayType(d.name);\n\n    if (d.display == \"editable\")\n      a.display = DisplayType.editable;\n    else if (d.display == \"readonly\")\n      a.display = DisplayType.readonly;\n    else if (d.display == \"file\")\n      a.display = DisplayType.file;\n    else if (d.display == \"password\")\n      a.display = DisplayType.password;\n    else if (d.display == \"yesno\")\n      a.display = DisplayType.yesno;\n    else if (d.display == \"dropdown\")\n      a.display = DisplayType.dropdown;\n    else\n      a.display = DisplayType.hidden;\n\n    if (d.required != null)\n      a.required = d.required;\n\n    a.description = d.description || d.name;\n\n    if (d.conditions)\n      a.conditions = d.conditions;\n\n    if (a.choices)\n      a.choices = d.choices;\n\n    return a;\n  }\n\n  public matchConditions(args: Map): boolean {\n\n      return ArgDisplayType._matchConditions(this.conditions, args);\n  }\n\n  public static _matchConditions(conditions: string[], args: Map): boolean {\n\n      if (conditions && conditions.length > 0) {\n\n        let matched: boolean = false;\n\n        for (let i = 0; i  {\n      args.push(new Arg(a.source, a.target, a.description));\n    });\n\n    return args;\n  }\n\n}\n\nexport class Installer implements BuildParams {\n\n    public name: string;\n    public sourceImageTag: string;\n    public isNew: string = \"true\";\n    public targetImage: DockerImage;\n    public productType: string;\n    public licenseFile: string;\n    public primaryPort: string;\n    public hostName: string;\n    public wmInstallerImage: string;\n    public includeUpdate: string = \"false\";\n    public buildCommands: BuildCommand[];\n    public args: Map;\n    public isSAGProduct: string = \"true\";\n\n    public entryPoint: string;\n    public exitPoint: string;\n    public healthCheck: string;\n\n    public constructor() {\n\n    this.sourceImageTag = \"centos:latest\";\n    this.targetImage = new DockerImage();\n    this.buildCommands = [];\n    this.args = new Map();\n  }\n\n  public copy(): Installer {\n\n    return Installer.make(this);\n  }\n\n  public static parse(data: string): Installer {\n\n    return this.make(JSON.parse(data, parserReviver).install);\n  }\n\n  public isCustomImage(): boolean {\n    return true;\n  }\n\n  public static make(data: any): Installer {\n\n    let i: Installer = new Installer();\n    i.name = data.name;\n    i.isSAGProduct = data.isSAGProduct;\n    i.args = data.args;\n    i.productType = data.productType;\n    i.wmInstallerImage = data.wmInstallerImage;\n    i.sourceImageTag = data.sourceImageTag;\n\n    if (data.targetImage)\n      i.targetImage = DockerImage.make(data.targetImage);\n\n    i.licenseFile = data.licenseFile;\n    i.primaryPort = data.primaryPort;\n    i.isNew = data.isNew;\n    i.includeUpdate = data.includeUpdate;\n    i.hostName = data.hostName;\n    i.entryPoint = data.entryPoint;\n    i.exitPoint = data.exitPoint;\n    i.healthCheck = data.healthCheck;\n    i.healthCheck = data.healthCheck;\n\n    if (!i.args)\n       i.args = new Map();\n\n    if (data.buildCommands) {\n      data.buildCommands.forEach((f) => {\n        i.buildCommands.push(BuildCommand.make(f));\n      });\n    }\n\n    return i;\n  }\n\n  public publicPort(): string {\n    return this.primaryPort;\n  }\n\n  public setPublicPort(port: string) {\n    this.primaryPort = port;\n  }\n\n  public assignedLicense(): string {\n\n    return this.licenseFile;\n  }\n\n  public fileForType(type: string, name?: string): BuildCommand {\n\n      return Builder._fileForSource(this.buildCommands, type, name, null);\n  }\n\n  public fileWithDescription(type: string, description: string): BuildCommand {\n      return Builder._fileForSource(this.buildCommands, type, null, description);\n  }\n\n  public removeFileForType(type: string, name?: string) {\n\n      return Builder._removeFileForType(this.buildCommands, type, name);\n  }\n\n  public toString(): string {\n    return JSON.stringify(this, stringifyReplacer);\n  }\n}\n\nexport class Builder implements BuildParams {\n\n  public name: string;\n  public deploymentType: string;\n  public deployments: DeploymentSet[];\n\n  public sourceImage: DockerImage;\n  public targetImage: DockerImage;\n  public version: string;\n  public testStatus: string;\n  public buildCommands: BuildCommand[];\n  public hasTests: string;\n  public buildUser: string;\n  public entryUser: string;\n  public entryPoint: string;\n  public exitPoint: string;\n  public healthCheck: string;\n  public args: Map;\n\n  public hostName: string; // not used!!\n\n  public constructor() {\n\n    this.sourceImage = new DockerImage();\n    this.targetImage = new DockerImage();\n    this.buildCommands = [];\n\n    this.args = new Map();\n  }\n\n  public hyphenatedName(): string {\n\n    return this.name.toLowerCase().replace(/\\s/g, \"-\");\n  }\n\n  public static make(data: any): Builder {\n\n    let b: Builder = new Builder();\n    b.name = data.name;\n    b.deploymentType = data.type;\n\n    b.deployments = [];\n\n    if (data.deployments) {\n      data.deployments.forEach((d) => {\n            b.deployments.push(DeploymentSet.make(d));\n      });\n    }\n\n    if (data.buildCommands) {\n      data.buildCommands.forEach((f) => {\n            b.buildCommands.push(BuildCommand.make(f));\n      });\n    }\n\n    b.sourceImage = DockerImage.make(data.sourceImage);\n    b.targetImage = DockerImage.make(data.targetImage);\n    b.version = data.version;\n    b.testStatus = data.testStatus;\n    b.buildUser = data.buildUser;\n    b.entryUser = data.entryUser;\n    b.entryPoint = data.entryPoint;\n    b.exitPoint = data.exitPoint;\n    b.healthCheck = data.healthCheck;\n\n    if (data.hasTests && data.hasTests == 'true')\n      b.hasTests = \"true\";\n\n    return b;\n  }\n\n  public publicPort(): string {\n    return this.sourceImage.primaryPort;\n  }\n\n  public setPublicPort(port: string) {\n    this.sourceImage.primaryPort = port;\n  }\n\n  public assignedLicense(): string {\n\n    let lic: BuildCommand = this.fileWithDescription(\"licenses\",'Product License');\n\n    if (lic) {\n      return lic.target.replace(/\\-/g, \" \");\n    } else {\n      return null;\n    }\n  }\n\n  public isCustomImage(): boolean {\n    return this.sourceImage.isCustom;\n  }\n\n  public fileForType(type: string, name?: string): BuildCommand {\n      return Builder._fileForSource(this.buildCommands, type, name, null);\n  }\n\n  public fileWithDescription(type: string, description: string): BuildCommand {\n      return Builder._fileForSource(this.buildCommands, type, null, description);\n  }\n\n  public removeFileForType(type: string, name?: string) {\n\n      return Builder._removeFileForType(this.buildCommands, type, name);\n  }\n\n  public static _fileForSource(buildCommands: BuildCommand[], type: string, name: string, description: string): BuildCommand {\n\n      let file: BuildCommand = null;\n\n      for (var i = 0; i  {\n         d.buildCommands.push(BuildCommand.make(b));\n       });\n     }\n\n     return d;\n  }\n}\n\nexport class Port {\n\n  public publicPort: string;\n  public serviceType: string;\n\n  constructor(public internal: string, public external: string, public description: string, public type?: string) {\n\n  }\n\n  public static makeArray(array: any[]): Port[] {\n\n    let ports: Port[] = [];\n\n    array.forEach((p) => {\n      let port: Port = new Port(p.internal, p.external, p.description, p.type);\n      port.publicPort = p.publicPort;\n      port.serviceType = p.serviceType;\n\n      ports.push(port);\n    });\n\n    return ports;\n  }\n}\n\nexport class Probe {\n\n  public path: string;\n  public port: string;\n  public initialDelaySeconds: number;\n  public periodSeconds: number;\n  public timeoutSeconds: number;\n\n  public static make(data: any): Probe {\n\n    let p = new Probe();\n    p.path = data.path;\n    p.port = data.port;\n    p.initialDelaySeconds = Number(data.initialDelaySeconds);\n    p.periodSeconds = Number(data.periodSeconds);\n    p.timeoutSeconds = Number(data.timeoutSeconds);\n\n    return p;\n  }\n}\n\nexport class Container {\n\n  public name: string;\n  public names: string[];\n  public active: string;\n  public type: string;\n  public description: string;\n  public hostname: string;\n  public secure: string;\n  public image: string;\n  public build: DockerBuild;\n  public ports: Port[];\n  public env: Arg[];\n  public volumes: Arg[];\n  public readinessProbe;\n  public livenessProbe;\n  public testStatus : TestStatus;\n  public adminUser: string;\n  public adminPassword: string;\n\n  // runtime only\n\n  public id: string;\n  public state: string;\n  public status: string;\n  public created: Date;\n\n  constructor() {\n\n    this.active = \"true\";\n    this.ports = [];\n    this.env = [];\n    this.volumes = [];\n  }\n\n  public copy() {\n    return Container.make(this);\n  }\n\n  public uniqueName(usesDedicatedRepo: boolean): string {\n\n    let repo: string = this.repository();\n\n    if (repo)\n      return repo + (usesDedicatedRepo ? \"/\" : \":\") + this.imageName();\n    else\n      return this.imageName();\n  }\n\n  public repository(): string {\n\n    if (this.image.indexOf(\":\") != -1) {\n\n      return this.image.substring(0, this.image.indexOf(\":\"));\n    } else {\n      return null;\n    }\n  }\n\n  public imageName(): string {\n\n    let name: string = this.image;\n\n    let idx: number = name.indexOf(\":\");\n\n    if (idx != -1) {\n\n      let lside = name.substring(0, idx);\n      let rside = name.substring(idx+1);\n\n      if (DockerImage.isVersionNumber(rside)) {\n\n        // name is on left side\n\n         if (this.image.lastIndexOf(\"/\") != -1) {\n          let idx: number = this.image.lastIndexOf(\"/\");\n          let rdx: number = this.image.indexOf(\":\");\n\n          name = this.image.substring(idx+1, rdx);\n        }\n      } else {\n\n        // name and perhaps version is in right side\n\n        name = rside;\n\n        if (name.indexOf(\"-\") != -1) {\n\n          let idx: number = name.lastIndexOf(\"-\");\n          let b4: string = name.substring(0, idx);\n          let af: string = name.substring(idx+1, name.length);\n\n          if (DockerImage.isVersionNumber(af)) {\n            name = b4;\n          }\n        }\n      }\n    }\n\n    return name;\n  }\n\n  public preferredImageVersion(): string {\n\n    if (this.image && this.image.indexOf(\":\")) {\n\n      let version: string = this.image.substring(this.image.indexOf(\":\")+1, this.image.length);\n\n      if (version.indexOf(\"-\") != -1) {\n        let idx: number = version.lastIndexOf(\"-\");\n        version = version.substring(idx+1, version.length);\n      }\n\n      // no versioning, only a name\n\n      if (!DockerImage.isVersionNumber(version))\n          version = \"latest\";\n\n      return version;\n    } else {\n\n      return \"latest\";\n    }\n  }\n\n  public static make(data: any): Container {\n\n    let c: Container = new Container();\n    c.names = data.names;\n    if (data.names)\n      c.name = data.names[0];\n    else\n      c.name = data.name;\n\n    c.active = data.active;\n    c.description = data.description;\n    c.hostname = data.hostname;\n    c.secure  = data.secure;\n    c.image = data.image;\n    c.type = data.type;\n    c.adminUser = data.adminUser;\n    c.adminPassword = data.adminPassword;\n\n    if (data.build)\n      c.build = DockerBuild.make(data.build);\n\n    if (data.ports)\n      c.ports = Port.makeArray(data.ports);\n\n    if (data.env)\n      c.env = Arg.makeArray(data.env);\n\n    if (data.volumes)\n      c.volumes = Arg.makeArray(data.volumes);\n\n    if (data.readinessProbe)\n      c.readinessProbe = Probe.make(data.readinessProbe);\n\n    if (data.livenessProbe)\n      c.livenessProbe = Probe.make(data.livenessProbe);\n\n    return c;\n  }\n\n  public environmentVariable(id: string): Arg {\n\n    var arg: Arg = null;\n\n    for (var i = 0; i  {\n          s.tests.push(Test.make(t));\n        });\n    }\n\n    return s;\n  }\n\n  public isActive(): boolean {\n\n    return (this.apiDeployType != \"none\" && this.apiDeployType != null) || this.stop == \"true\" || (this.apiMaturity != \"none\" &&  this.apiMaturity != null) ||\n                  (this.dockerAction != \"none\"  && this.dockerAction != null) || this.dockerTag != null || this.stop != null;\n  }\n\n  public summary(): string {\n\n      var status: string = null;\n\n      if (this.apiDeployType == \"deploy\")\n          status = \"Deploy API's \";\n      else if (this.apiDeployType == \"promote\")\n        status = \"Promote API's to \" + this.apiStage;\n\n      if (this.runTests == \"true\") {\n\n        if (status != null)\n          status = status + \", run tests\";\n        else\n          status = \"Run tests\";\n      }\n\n      if (this.apiMaturity) {\n\n        if (status != null)\n            status = status + \", and set maturity to \" + this.apiMaturity;\n        else\n          status = \"Set maturity to \" + this.apiMaturity;\n      }\n\n      if (this.dockerTag) {\n\n        if (status != null)\n          status = status + \", then tag image\";\n        else\n          status = \"Tag image \";\n      }\n\n      if (this.dockerAction) {\n        if (status != null)\n          status = status + \", \" + this.dockerAction;\n        else\n          status = this.dockerAction;\n\n        status = status + \" image\";\n      }\n\n      if (this.stop == \"true\") {\n        if (status != null)\n            status = status + \" before stopping\";\n        else\n            status = \"stop containers\";\n      }\n\n      if (this.pipelineAction) {\n\n        if (status != null)\n            status = status + \", then \" + this.pipelineAction + \" pipeline\";\n        else\n            status = \"and \" + this.pipelineAction + \" pipeline execution\";\n      }\n\n      return status;\n    }\n}\n\nexport class Stage {\n\n    public id: string;\n    public name: string;\n    public containerHost: string;\n    public useKubernetes: string;\n    public buildOnStart: string;\n    public deployments: Deployment[];\n    public onStart: Action;\n    public onFail: Action;\n    public onSuccess: Action;\n\n    constructor() {\n      this.deployments = [];\n      this.useKubernetes = \"false\";\n      this.buildOnStart = \"false\";\n      this.onStart = new Action();\n      this.onSuccess = new Action();\n      this.onFail = new Action();\n    }\n\n    public copy(): Stage {\n\n      let c = Stage.make(this);\n\n      c.id = this.id + \" copy\";\n      c.name = this.name + \" copy\";\n\n      return c;\n    }\n\n    public static make(data: any): Stage {\n\n      let s: Stage = new Stage();\n\n      s.name = data.name;\n      s.id = s.name;\n      s.containerHost = data.containerHost;\n      s.useKubernetes = data.useKubernetes;\n      s.buildOnStart = data.buildOnStart;\n\n      if (data.deployments) {\n        data.deployments.forEach((c) => {\n          s.deployments.push(Deployment.make(c));\n        });\n      }\n\n      if (data.onStart) {\n        s.onStart = Action.make(data.onStart);\n      }\n\n      if (data.onSuccess) {\n        s.onSuccess = Action.make(data.onSuccess);\n      }\n\n      if (data.onFail) {\n        s.onFail = Action.make(data.onFail);\n      }\n\n      return s;\n    }\n}\n\nexport class Deployment {\n\n  public name: string;\n  public hostname: string;\n  public appName: string;\n  public apis: APIDefinition[];\n  public containers: Container[];\n  public replicas: string;\n  public serviceType: string;\n  public restartPolicy: string;\n  public requiresMonitoring: string;\n  public dependsOn: string;\n\n  constructor() {\n\n    this.containers = [];\n    this.apis = [];\n  }\n\n  public copy() {\n    return Deployment.make(this);\n  }\n\n  public static make(data: any): Deployment {\n\n    let s: Deployment = new Deployment();\n    s.name = data.name;\n    s.hostname = data.hostname;\n    s.replicas = data.replicas;\n    s.appName = data.appName;\n    s.serviceType = data.serviceType;\n    s.restartPolicy = data.restartPolicy;\n    s.requiresMonitoring = data.requiresMonitoring;\n    s.dependsOn = data.dependsOn;\n\n    if (data.apis) {\n       data.apis.forEach((a) => {\n         s.apis.push(APIDefinition.make(a));\n       });\n    }\n\n    if (data.containers) {\n       data.containers.forEach((c) => {\n         s.containers.push(Container.make(c));\n       });\n    }\n\n    return s;\n  }\n\n  public containerForType(type: string): Container {\n\n    let found: Container = null;\n\n    this.containers.forEach((c) => {\n\n      if (c.type == type) {\n        found = c;\n      }\n    });\n\n    return found;\n  }\n\n  public removeContainer(c: Container) {\n\n    var found : number = -1;\n\n    for (var i = 0; i  {\n         p.builds.push(Builder.make(i));\n       });\n    }\n\n    if (data.deployments) {\n      p.deployments = [];\n       data.deployments.forEach((i) => {\n         p.deployments.push(Deployment.make(i));\n       });\n    }\n\n    return p;\n  }\n\n  public serviceFor(id: string): Deployment {\n\n      let found: Deployment = null;\n\n      for (var z = 0; z  {\n         p.stages.push(Stage.make(s));\n       });\n    }\n\n    return p;\n  }\n}\n\nfunction stringifyReplacer(key, value) {\n  const originalObject = this[key];\n  if(originalObject instanceof Map) {\n    return {\n      dataType: 'Map',\n      value: Array.from(originalObject.entries()), // or with spread: value: [...originalObject]\n    };\n  } else {\n    return value;\n  }\n}\n\nfunction parserReviver(key, value) {\n  if(typeof value === 'object' && value !== null) {\n    if (value.dataType === 'Map') {\n      return new Map(value.value);\n    }\n  }\n  return value;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BuildComponent.html":{"url":"components/BuildComponent.html","title":"component - BuildComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BuildComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/build.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                build\n            \n\n            \n                styleUrls\n                ../templates/build.css\n            \n\n\n\n            \n                templateUrl\n                ../templates/build.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                baseSource\n                            \n                            \n                                    Public\n                                customImageCounter\n                            \n                            \n                                    Public\n                                customSource\n                            \n                            \n                                    Public\n                                panelOpenState\n                            \n                            \n                                    Public\n                                sagImageCounter\n                            \n                            \n                                    Public\n                                settingsLoaded\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                customImageCount\n                            \n                            \n                                    Public\n                                goBuild\n                            \n                            \n                                    Public\n                                goInstall\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                sagImageCount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_router: Router, _settings: Settings, _dockerService: DockerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/build.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _settings\n                                                  \n                                                        \n                                                                        Settings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _dockerService\n                                                  \n                                                        \n                                                                        DockerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            customImageCount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    customImageCount(count)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/build.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    count\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            goBuild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    goBuild()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/build.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            goInstall\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    goInstall()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/build.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/build.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            sagImageCount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sagImageCount(count)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/build.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    count\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            baseSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DockerImage[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/build.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            customImageCounter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : -1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/build.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            customSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DockerImage[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/build.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            panelOpenState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/build.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sagImageCounter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : -1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/build.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            settingsLoaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/build.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ChangeDetectorRef, OnInit, \n\t\t\t\t\t\t\t\tInput, OnDestroy }                    from '@angular/core';\nimport { Router }                                     from '@angular/router';\n\nimport { MediaMatcher }                               from '@angular/cdk/layout';\n\nimport { MatAccordion }                               from '@angular/material';\nimport { Settings }                                   from '../settings';\n\nimport { DockerImage }                   \t\t\t        from '../models/docker-image';\n\nimport { DockerService }                              from '../services/docker.service';\n\n@Component({\n  selector: 'build',\n  templateUrl: '../templates/build.html',\n  styleUrls: ['../templates/build.css']\n})\n\nexport class BuildComponent {\n\n    public baseSource: DockerImage[];\n    public customSource: DockerImage[];\n\n    public panelOpenState: boolean;\n    public settingsLoaded: boolean;\n\n    public sagImageCounter: number = -1;\n    public customImageCounter: number = -1;\n\n\t  public constructor(private _router: Router, private _settings: Settings, private _dockerService: DockerService) {\n\n      this._settings.values().subscribe((v) => { \n\n        this.settingsLoaded = true;\n        this._settings.setCurrentPage(\"build\");\n      });\n    }\n\n    public ngOnInit() {\n    }\n\n    public sagImageCount(count) {\n\n        this.sagImageCounter = count;\n    }\n\n    public customImageCount(count) {\n\n        this.customImageCounter = count;\n    }\n\n    public goInstall() {\n\n        this._router.navigate(['install']);\n    }\n\n    public goBuild() {\n\n        this._router.navigate(['image']);\n    }\n  }\n    \n\n    \n        \n  Build\n  \n  \n    \n      \n        \n          \n            \n              Base Images\n            \n            \n              webMethods Docker Product Images\n            \n          \n\n          \n          \n            Create Base Image\n          \n        \n        \n          \n            \n              Micro Service Images\n            \n            \n              Your Docker images\n            \n          \n          \n            \n            \n            Make Service Image\n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ../templates/build.css\n                \n                a {\n\ttext-decoration: none !important;\n\tcolor: white !important;\n\tbackground-color: rgba(255,255,255,0.1);\n\tborder-radius: 10px;\n\tpadding-left: 5px;\n\tpadding-right: 5px;\n\tpadding-top: 2px;\n\tpadding-bottom: 2px;\n\tmargin-left: 10px;\n}\na:visited {\n\tcolor: white;\n}\na:hover {\n\tbackground-color: gray;\n}\n,mat-tab {\n\toverflow: hidden;\n}\n.toolbar {\n\theight: 50px;\n\tbackground-color: rgb(23, 115, 187);\n}\n.toolbar-content {\n\tdisplay: flex;\n\talign-items: stretch;\n\twidth: 100%;\n\theight: 30px;\n\tpadding: 5px;\n}\n.toolbar-title-column {\n\tdisplay: flex;\n\tflex-direction: column;\n\tflex-grow: 0;\n\twidth: 250px;\n\tcolor: white;\n\tfont-size: 10px;\n}\n.toolbar-right-column {\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: flex-end;\n\tflex-grow: 2;\n\tcolor: white;\n}\n.toolbar-links {\n\tfont-size: 11px;\n\tline-height: 21px;\n}\n\n.pulseButton:before {\n  content:\"\";\n  width: 75px;\n  height: 45px;\n  position: absolute;\n  border-radius:5px;\n  z-index:-1;\n  top:50%;\n  left:50%;\n  -webkit-transform:translate(-50%,-50%);\n  transform:translate(-50%,-50%);\n  -webkit-animation-name: fadecolor;\n  -webkit-animation-duration: 2.5s;\n  -webkit-animation-iteration-count: infinite;\n}\n\n@-webkit-keyframes fadecolor {\n  from {\n    background: -webkit-gradient(linear, 0% 0%, 0% 100%, from(#EB009F), to(#DA005B))\n  }\n  40% {\n    background: -webkit-gradient(linear, 0% 0%, 0% 100%, from(#EB009F), to(#DA005B));\n    opacity: 0.25\n  }\n  50% {\n    background: -webkit-gradient(linear, 0% 0%, 0% 100%, from(#EB009F), to(#DA005B));\n    opacity: 0\n  }\n  60% {\n    background: -webkit-gradient(linear, 0% 0%, 0% 100%, from(#EB009F), to(#DA005B));\n    opacity: 0.25\n  }\n  to {\n    background: -webkit-gradient(linear, 0% 0%, 0% 100%, from(#EB009F), to(#DA005B))\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Build                                                          Base Images                                      webMethods Docker Product Images                                                      Create Base Image                                                              Micro Service Images                                      Your Docker images                                                                    Make Service Image                              '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about-app'},{'name': 'ActionComponent', 'selector': 'action'},{'name': 'ApiGatewayInstallerComponent', 'selector': 'jc-apigw-install'},{'name': 'ApiMicroGatewayInstallerComponent', 'selector': 'jc-apimg-install'},{'name': 'ApiPortalInstallerComponent', 'selector': 'jc-apipr-installer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildCommandsComponent', 'selector': 'build-commands'},{'name': 'BuildComponent', 'selector': 'build'},{'name': 'BuildExeComponent', 'selector': 'build-exe'},{'name': 'BuildImageComponent', 'selector': 'build-solution'},{'name': 'BuildInstallComponent', 'selector': 'build-install'},{'name': 'BuildPackagesComponent', 'selector': 'build-package'},{'name': 'ContainerComponent', 'selector': 'container'},{'name': 'ContainersComponent', 'selector': 'app-containers'},{'name': 'DeploymentDetailsComponent', 'selector': 'jc-deployment-details'},{'name': 'DeploymentListComponent', 'selector': 'jc-k8s-deployments'},{'name': 'DockerImageChooserComponent', 'selector': 'docker-image-chooser'},{'name': 'DockerImageListComponent', 'selector': 'jc-docker-images'},{'name': 'DockerImageVersionsComponent', 'selector': 'jc-docker-image-versions'},{'name': 'EditContainerComponent', 'selector': 'edit-container'},{'name': 'GitSourcesComponent', 'selector': 'git-source'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'InstallerComponent', 'selector': 'jc-install'},{'name': 'MicroServiceBuilderComponent', 'selector': 'jc-msc-configure'},{'name': 'MicroServiceInstallerComponent', 'selector': 'jc-msc-install'},{'name': 'PodsListComponent', 'selector': 'jc-pods'},{'name': 'RuntimeContainersComponent', 'selector': 'runtime-containers'},{'name': 'RuntimeDeployComponent', 'selector': 'runtime-deploy'},{'name': 'RuntimeDetailsComponent', 'selector': ''},{'name': 'RuntimeK8sComponent', 'selector': 'runtime'},{'name': 'RuntimeScaleComponent', 'selector': 'jc-runtime-scale'},{'name': 'RuntimeStageComponent', 'selector': 'runtime-stage'},{'name': 'RuntimeUpdateComponent', 'selector': ''},{'name': 'SagImageAlerterComponent', 'selector': 'sag-image-alerter'},{'name': 'ServicePropertiesComponent', 'selector': 'k8s-props'},{'name': 'SettingsComponent', 'selector': 'home'},{'name': 'SimpleNameComponent', 'selector': 'name-dialog'},{'name': 'StagingComponent', 'selector': 'staging'},{'name': 'TestCaseComponent', 'selector': 'test-case'},{'name': 'TestDefinitionComponent', 'selector': 'test-definitions'},{'name': 'TestHistoryComponent', 'selector': 'test-history'},{'name': 'TestRunComponent', 'selector': 'test-reun'},{'name': 'UMInstallerComponent', 'selector': 'jc-um-install'},{'name': 'UploadButtonComponent', 'selector': 'file-uploader-button'}];\n    var DIRECTIVES = [{'name': 'BuildImageChooseDirective', 'selector': '[builder]'},{'name': 'CancelCdkDrag', 'selector': '[appCancelCdkDrag]'},{'name': 'NgFileDrop', 'selector': '[ng-file-drop]'},{'name': 'NgFileSelect', 'selector': '[ng-file-select]'},{'name': 'RuntimeActionsDirective', 'selector': '[runtime-actions]'}];\n    var ACTUAL_COMPONENT = {'name': 'BuildComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BuildExeComponent.html":{"url":"components/BuildExeComponent.html","title":"component - BuildExeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BuildExeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/build-exe.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                build-exe\n            \n\n\n\n            \n                template\n                 \t\n  \t{{title()}}\n\t\n\t\t{{str}}\n\t\t\n\t\n\t\n  \t\tDone\n\t\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                archiveWmImage\n                            \n                            \n                                    Public\n                                build\n                            \n                            \n                                    Public\n                                buttonClass\n                            \n                            \n                                    Public\n                                comments\n                            \n                            \n                                    Public\n                                completionCode\n                            \n                            \n                                    Public\n                                containerId\n                            \n                            \n                                    Public\n                                containerName\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                includeTests\n                            \n                            \n                                    Public\n                                installer\n                            \n                            \n                                    Public\n                                isBusy\n                            \n                            \n                                    Public\n                                log\n                            \n                            \n                                    Public\n                                logDiv\n                            \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Public\n                                passwordEncrypted\n                            \n                            \n                                    Public\n                                run\n                            \n                            \n                                    Public\n                                runK8s\n                            \n                            \n                                    Public\n                                style\n                            \n                            \n                                    Public\n                                uploadAPIs\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Public\n                                version\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Private\n                                processMessage\n                            \n                            \n                                    Private\n                                timeNow\n                            \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(data: any, _dockerService: DockerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/build-exe.component.ts:56\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _dockerService\n                                                  \n                                                        \n                                                                        DockerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            close\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    close(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/build-exe.component.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/build-exe.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            processMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    processMessage(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/build-exe.component.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            timeNow\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    timeNow()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/build-exe.component.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            title\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    title()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/build-exe.component.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            archiveWmImage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/build-exe.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            build\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Builder\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/build-exe.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            buttonClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"mat-raised-button mat-accent\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/build-exe.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            comments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/build-exe.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            completionCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/build-exe.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            containerId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/build-exe.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            containerName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/build-exe.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/build-exe.component.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            includeTests\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/build-exe.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            installer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Installer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/build-exe.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isBusy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/build-exe.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            log\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/build-exe.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logDiv\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('logDiv')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/build-exe.component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/build-exe.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            passwordEncrypted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/build-exe.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            run\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RunSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/build-exe.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            runK8s\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/build-exe.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            style\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {\"color\": \"white\"}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/build-exe.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uploadAPIs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/build-exe.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/build-exe.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/build-exe.component.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ChangeDetectorRef, ViewChild,\n\t\tEventEmitter, Inject, OnInit, OnChanges,\n\t\tOnDestroy, Input, Output, ElementRef }   \t\tfrom '@angular/core';\n\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} \t\tfrom '@angular/material/dialog';\n\nimport { DockerImage } \t\t\t\t\t\t\t\t   \tfrom '../models/docker-image';\nimport { Builder, Installer, RunSet }       \t\t\tfrom '../models/project';\n\nimport { DockerService }\t\t\t\t\t\t\t\tfrom '../services/docker.service';\n\n@Component({\n  selector: 'build-exe',\n  template: `\n  \t\n\t  \t{{title()}}\n\t\t\n\t\t\t{{str}}\n\t\t\t\n\t\t\n\t\t\n\t  \t\tDone\n\t\t\n\t\n`\n})\n\nexport class BuildExeComponent implements OnInit {\n\n  \tpublic buttonClass: string = \"mat-raised-button mat-accent\";\n  \tpublic style: any = {\"color\": \"white\"};\n\n  \tpublic containerId: string;\n  \tpublic containerName: string;\n  \tpublic installer: Installer;\n  \tpublic build: Builder;\n  \tpublic run: RunSet;\n\n  \tpublic includeTests: boolean;\n  \tpublic uploadAPIs: boolean;\n  \tpublic runK8s: boolean;\n\n  \tpublic version: string;\n  \tpublic comments: string;\n  \tpublic log: string[] = [];\n\n  \tpublic user: string;\n  \tpublic password: string;\n  \tpublic passwordEncrypted: string;\n  \tpublic archiveWmImage: boolean;\n\n  \tpublic isBusy: boolean = true;\n  \tpublic completionCode: string;\n\n  \t@ViewChild('logDiv')\n  \tpublic logDiv: ElementRef;\n\n\tpublic constructor(@Inject(MAT_DIALOG_DATA) public data: any, private _dockerService: DockerService) {\n\n\t\tif (data.containerId) {\n\t\t\tthis.containerId = data.containerId;\n\t\t\tthis.containerName = data.containerName;\n\t\t\tthis.isBusy = false;\n\t\t}\n\t\telse if (data.installer) {\n\t\t\tthis.installer = data.installer;\n\t\t\tthis.user = data.user;\n\t\t\tthis.password = data.password;\n\t\t\tthis.passwordEncrypted = data.encryptedPassword;\n\t\t\tthis.archiveWmImage = data.archiveWmImage;\n\t\t} else if (data.build) {\n\t\t\tthis.build = data.build;\n\t\t} else {\n\t\t\tthis.run = data.run;\n\t\t\tthis.includeTests = data.includeTests;\n\t\t\tthis.uploadAPIs = data.uploadAPIs;\n\t\t\tthis.runK8s = data.runK8s;\n\t\t}\n\n\t\tthis.version = data.version;\n\t\tthis.comments = data.comments;\n\t}\n\n\tpublic ngOnInit() {\n\n\t\tif (this.containerId) {\n\n\t\t\tthis._dockerService.containerLog(this.containerId).subscribe((result=> {\n\t\t\t\tthis.processMessage(result);\n\t\t\t}));\n\t\t} else if (this.installer) {\n\n\t\t\tthis._dockerService.install(this.installer, this.comments, this.user, this.password, this.passwordEncrypted, this.archiveWmImage).subscribe(result => {\n\n\t\t\t\tif (result && result.success) {\n\t\t\t\t\tthis.isBusy = false;\n\t\t\t\t\tthis.completionCode = result.otherId;\n\t\t\t\t\tthis.processMessage(\"Installation completed successfully with image: \" + result.imageId);\n\t\t\t\t} else if (!result || result.success == null) {\n\t\t\t\t\tthis.processMessage(result);\n\t\t\t\t} else {\n\t\t\t\t\tthis.isBusy = false;\n\t\t\t\t\tthis.processMessage(\"Installation failed\");\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (this.build) {\n\n\t\t\tthis._dockerService.build(this.build, this.version, this.comments).subscribe(result => {\n\n\t\t\t\tif (result && result.success) {\n\t\t\t\t\tthis.isBusy = false;\n\t\t\t\t\tthis.completionCode = result.imageId;\n\t\t\t\t\tthis.processMessage(\"Build completed successfully with image: \" + result.imageId);\n\t\t\t\t} else if (!result || result.success == null) {\n\t\t\t\t\tthis.processMessage(result);\n\t\t\t\t} else {\n\t\t\t\t\tthis.isBusy = false;\n\t\t\t\t\tthis.processMessage(\"Build failed\");\n\t\t\t\t}\n        \t});\n\t\t} else {\n\n\t\t\tthis._dockerService.run(this.run, this.runK8s, this.includeTests, false, this.uploadAPIs).subscribe((result) => {\n\n      \t\t\tthis.isBusy = false;\n\n      \t\t\tthis.processMessage(result);\n\t\t    });\n\t\t}\n\t}\n\n\tpublic close(event: any) {\n\n\t\tthis._dockerService.closeLog();\n\t}\n\n\tpublic title(): string {\n\n\t\tif (this.containerId)\n\t\t\treturn \"Log for \" + this.containerName + \" (\" + this.containerId + \")\";\n\t\tif (this.installer)\n\t\t\treturn \"Installing product into image \" + this.installer.targetImage.tag();\n\t\telse if (this.build)\n\t\t\treturn \"Building image \" + this.build.targetImage.tag();\n\t\telse\n\t\t\treturn \"Running Deployment Set \" + this.run.name;\n\t}\n\n\tprivate processMessage(message: string) {\n\n\t\tif (message && message.length > 0 && message != \".\") {\n\t\t\tthis.log.push(this.timeNow() + \" > \" + message);\n\t\t}\n\n\t\tif (this.log.length > 600) {\n\n\t\t\tthis.log.splice(0,100);\n\t\t}\n\t}\n\n\tprivate timeNow(): string {\n\n\t\treturn new Date().toLocaleTimeString();\n\t}\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' \t  \t{{title()}}\t\t\t{{str}}\t\t\t\t  \t\tDone\t'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about-app'},{'name': 'ActionComponent', 'selector': 'action'},{'name': 'ApiGatewayInstallerComponent', 'selector': 'jc-apigw-install'},{'name': 'ApiMicroGatewayInstallerComponent', 'selector': 'jc-apimg-install'},{'name': 'ApiPortalInstallerComponent', 'selector': 'jc-apipr-installer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildCommandsComponent', 'selector': 'build-commands'},{'name': 'BuildComponent', 'selector': 'build'},{'name': 'BuildExeComponent', 'selector': 'build-exe'},{'name': 'BuildImageComponent', 'selector': 'build-solution'},{'name': 'BuildInstallComponent', 'selector': 'build-install'},{'name': 'BuildPackagesComponent', 'selector': 'build-package'},{'name': 'ContainerComponent', 'selector': 'container'},{'name': 'ContainersComponent', 'selector': 'app-containers'},{'name': 'DeploymentDetailsComponent', 'selector': 'jc-deployment-details'},{'name': 'DeploymentListComponent', 'selector': 'jc-k8s-deployments'},{'name': 'DockerImageChooserComponent', 'selector': 'docker-image-chooser'},{'name': 'DockerImageListComponent', 'selector': 'jc-docker-images'},{'name': 'DockerImageVersionsComponent', 'selector': 'jc-docker-image-versions'},{'name': 'EditContainerComponent', 'selector': 'edit-container'},{'name': 'GitSourcesComponent', 'selector': 'git-source'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'InstallerComponent', 'selector': 'jc-install'},{'name': 'MicroServiceBuilderComponent', 'selector': 'jc-msc-configure'},{'name': 'MicroServiceInstallerComponent', 'selector': 'jc-msc-install'},{'name': 'PodsListComponent', 'selector': 'jc-pods'},{'name': 'RuntimeContainersComponent', 'selector': 'runtime-containers'},{'name': 'RuntimeDeployComponent', 'selector': 'runtime-deploy'},{'name': 'RuntimeDetailsComponent', 'selector': ''},{'name': 'RuntimeK8sComponent', 'selector': 'runtime'},{'name': 'RuntimeScaleComponent', 'selector': 'jc-runtime-scale'},{'name': 'RuntimeStageComponent', 'selector': 'runtime-stage'},{'name': 'RuntimeUpdateComponent', 'selector': ''},{'name': 'SagImageAlerterComponent', 'selector': 'sag-image-alerter'},{'name': 'ServicePropertiesComponent', 'selector': 'k8s-props'},{'name': 'SettingsComponent', 'selector': 'home'},{'name': 'SimpleNameComponent', 'selector': 'name-dialog'},{'name': 'StagingComponent', 'selector': 'staging'},{'name': 'TestCaseComponent', 'selector': 'test-case'},{'name': 'TestDefinitionComponent', 'selector': 'test-definitions'},{'name': 'TestHistoryComponent', 'selector': 'test-history'},{'name': 'TestRunComponent', 'selector': 'test-reun'},{'name': 'UMInstallerComponent', 'selector': 'jc-um-install'},{'name': 'UploadButtonComponent', 'selector': 'file-uploader-button'}];\n    var DIRECTIVES = [{'name': 'BuildImageChooseDirective', 'selector': '[builder]'},{'name': 'CancelCdkDrag', 'selector': '[appCancelCdkDrag]'},{'name': 'NgFileDrop', 'selector': '[ng-file-drop]'},{'name': 'NgFileSelect', 'selector': '[ng-file-select]'},{'name': 'RuntimeActionsDirective', 'selector': '[runtime-actions]'}];\n    var ACTUAL_COMPONENT = {'name': 'BuildExeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BuildImage.html":{"url":"classes/BuildImage.html","title":"class - BuildImage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BuildImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/build-image.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sourceImage\n                            \n                            \n                                    Public\n                                sourceVersion\n                            \n                            \n                                    Public\n                                targetImage\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sourceImage\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/models/build-image.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sourceVersion\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/models/build-image.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            targetImage\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/models/build-image.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class BuildImage {\n  public sourceImage;\n  public sourceVersion;\n  public targetImage;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/BuildImageChooseDirective.html":{"url":"directives/BuildImageChooseDirective.html","title":"directive - BuildImageChooseDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  BuildImageChooseDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/elements/build-image-choose.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [builder]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                viewContainerRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainerRef: ViewContainerRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/elements/build-image-choose.directive.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            viewContainerRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ViewContainerRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/elements/build-image-choose.directive.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ViewContainerRef } \t\t\t\t\tfrom '@angular/core';\nimport { FormBuilder, FormGroup } \t\t  \t\t\t\tfrom '@angular/forms';\nimport {DockerImage} from '../../models/docker-image';\nimport {Installer} from '../../models/project';\n\n@Directive({\n  selector: '[builder]',\n})\n\nexport class BuildImageChooseDirective {\n  constructor(public viewContainerRef: ViewContainerRef) { }\n}\n\nexport class BuilderProperties {\n\n\tpublic constructor(public key: string, public values: string[]) {\n\n\t}\n}\n\nexport interface PropertiesChangedOwner {\n\n\tinitialProperties(): any;\n\tinstallerTemplateLoaded(template: Installer);\n\n\tpropertiesChangedInBuilder(type: string, displayableProperties: Map, properties: any);\n}\n\nexport interface BuilderComponent {\n\n  formGroup: FormGroup;\n  owner: PropertiesChangedOwner;\n\n  setLicenseFile(license: string);\n  refreshBuildCommands(show: boolean);\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BuildParams.html":{"url":"interfaces/BuildParams.html","title":"interface - BuildParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BuildParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/project.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        args\n                                \n                                \n                                        buildCommands\n                                \n                                \n                                        entryPoint\n                                \n                                \n                                        exitPoint\n                                \n                                \n                                        healthCheck\n                                \n                                \n                                        hostName\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    assignedLicense\n                                \n                                \n                                    fileForType\n                                \n                                \n                                    isCustomImage\n                                \n                                \n                                    publicPort\n                                \n                                \n                                    setPublicPort\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            assignedLicense\n                        \n                        \n                    \n                \n            \n            \n                \nassignedLicense()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/project.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fileForType\n                        \n                        \n                    \n                \n            \n            \n                \nfileForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/project.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         BuildCommand\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isCustomImage\n                        \n                        \n                    \n                \n            \n            \n                \nisCustomImage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/project.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            publicPort\n                        \n                        \n                    \n                \n            \n            \n                \npublicPort()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/project.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPublicPort\n                        \n                        \n                    \n                \n            \n            \n                \nsetPublicPort(port: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/project.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    port\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        args\n                                    \n                                \n                                \n                                    \n                                        args:     Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        buildCommands\n                                    \n                                \n                                \n                                    \n                                        buildCommands:         BuildCommand[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BuildCommand[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entryPoint\n                                    \n                                \n                                \n                                    \n                                        entryPoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exitPoint\n                                    \n                                \n                                \n                                    \n                                        exitPoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        healthCheck\n                                    \n                                \n                                \n                                    \n                                        healthCheck:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hostName\n                                    \n                                \n                                \n                                    \n                                        hostName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { APIDefinition }                        from '../models/wm-package-info'\nimport { Source }                               from '../models/git-source';\nimport { DockerImage, TestStatus }              from '../models/docker-image';\n\nexport class DeploymentSet {\n\n  public id: string;\n  public name: string;\n  public source: Source;\n  public active: string;\n  public apis: APIDefinition[];\n\n  public constructor() {\n      this.apis = [];\n      this.source = new Source();\n  }\n\n  public static make(data: any): DeploymentSet {\n\n      let p: DeploymentSet = new DeploymentSet();\n      p.id = data.name;\n      p.name = data.name;\n\n      if (data.source)\n       p.source = Source.make(data.source);\n\n      p.apis = [];\n\n      if (data.apis) {\n\n        data.apis.forEach((a) => {\n          p.apis.push(APIDefinition.make(a));\n        });\n      }\n\n      return p;\n  }\n}\n\nexport enum DisplayType {\n  hidden = \"hidden\",\n  readonly = \"readonly\",\n  editable = \"editable\",\n  password = \"password\",\n  file = \"file\",\n  dropdown = \"dropdown\",\n  yesno = \"yesno\"\n}\n\nexport class BuildCommand {\n\n  public commandType: string;\n  public buildTarget: string;\n  public fileType: string;\n  public source: string;\n  public target: string;\n  public description: string = \"\";\n  public display: DisplayType = DisplayType.hidden;\n  public required: boolean = true;\n  public conditions: string[];\n\n  public static make(d: any): BuildCommand {\n\n    let f: BuildCommand = new BuildCommand();\n    f.commandType = d.commandType;\n    f.buildTarget = d.buildTarget;\n    f.fileType = d.fileType;\n    f.source = d.source;\n    f.target = d.target;\n    f.description = d.description;\n    f.conditions = d.conditions;\n\n    if (d.display == \"editable\")\n      f.display = DisplayType.editable;\n    else if (d.display == \"readonly\")\n      f.display = DisplayType.readonly;\n    else if (d.display == \"file\")\n      f.display = DisplayType.file;\n    else\n      f.display = DisplayType.hidden;\n\n    f.required = false;\n    return f;\n  }\n\n  copy() {\n    return BuildCommand.make(this);\n  }\n\n  public equals(b: BuildCommand): boolean {\n\n    return (b.source && b.source == this.source) || (!b.source && b.target == this.target);\n  }\n\n  public matchConditions(args: Map): boolean {\n\n    return ArgDisplayType._matchConditions(this.conditions, args);\n  }\n}\n\nexport interface BuildParams {\n\n  name: string;\n  publicPort(): string;\n  setPublicPort(port: string);\n  assignedLicense(): string;\n  hostName: string;\n  entryPoint: string;\n  exitPoint: string;\n  healthCheck: string;\n  args: Map\n  buildCommands: BuildCommand[];\n\n  fileForType(type: string): BuildCommand;\n  isCustomImage(): boolean;\n}\n\nexport class ArgDisplayType {\n\n  public name: string;\n  public description: string;\n  public display: DisplayType = DisplayType.hidden;\n  public conditions: string[];\n  public choices: string[];\n  public required: boolean = true;\n\n  public constructor(name: string) {\n    this.name = name;\n    this.description = this.name;\n    this.conditions = [];\n    this.choices = [];\n  }\n\n  public copy(): ArgDisplayType {\n\n      let copy: ArgDisplayType = new ArgDisplayType(this.name);\n      copy.description = this.description;\n      copy.display = this.display;\n      copy.conditions = this.conditions;\n      copy.choices = this.choices;\n      copy.required = this.required;\n\n      return copy;\n  }\n\n  public static make(d: any): ArgDisplayType {\n\n    let a: ArgDisplayType = new ArgDisplayType(d.name);\n\n    if (d.display == \"editable\")\n      a.display = DisplayType.editable;\n    else if (d.display == \"readonly\")\n      a.display = DisplayType.readonly;\n    else if (d.display == \"file\")\n      a.display = DisplayType.file;\n    else if (d.display == \"password\")\n      a.display = DisplayType.password;\n    else if (d.display == \"yesno\")\n      a.display = DisplayType.yesno;\n    else if (d.display == \"dropdown\")\n      a.display = DisplayType.dropdown;\n    else\n      a.display = DisplayType.hidden;\n\n    if (d.required != null)\n      a.required = d.required;\n\n    a.description = d.description || d.name;\n\n    if (d.conditions)\n      a.conditions = d.conditions;\n\n    if (a.choices)\n      a.choices = d.choices;\n\n    return a;\n  }\n\n  public matchConditions(args: Map): boolean {\n\n      return ArgDisplayType._matchConditions(this.conditions, args);\n  }\n\n  public static _matchConditions(conditions: string[], args: Map): boolean {\n\n      if (conditions && conditions.length > 0) {\n\n        let matched: boolean = false;\n\n        for (let i = 0; i  {\n      args.push(new Arg(a.source, a.target, a.description));\n    });\n\n    return args;\n  }\n\n}\n\nexport class Installer implements BuildParams {\n\n    public name: string;\n    public sourceImageTag: string;\n    public isNew: string = \"true\";\n    public targetImage: DockerImage;\n    public productType: string;\n    public licenseFile: string;\n    public primaryPort: string;\n    public hostName: string;\n    public wmInstallerImage: string;\n    public includeUpdate: string = \"false\";\n    public buildCommands: BuildCommand[];\n    public args: Map;\n    public isSAGProduct: string = \"true\";\n\n    public entryPoint: string;\n    public exitPoint: string;\n    public healthCheck: string;\n\n    public constructor() {\n\n    this.sourceImageTag = \"centos:latest\";\n    this.targetImage = new DockerImage();\n    this.buildCommands = [];\n    this.args = new Map();\n  }\n\n  public copy(): Installer {\n\n    return Installer.make(this);\n  }\n\n  public static parse(data: string): Installer {\n\n    return this.make(JSON.parse(data, parserReviver).install);\n  }\n\n  public isCustomImage(): boolean {\n    return true;\n  }\n\n  public static make(data: any): Installer {\n\n    let i: Installer = new Installer();\n    i.name = data.name;\n    i.isSAGProduct = data.isSAGProduct;\n    i.args = data.args;\n    i.productType = data.productType;\n    i.wmInstallerImage = data.wmInstallerImage;\n    i.sourceImageTag = data.sourceImageTag;\n\n    if (data.targetImage)\n      i.targetImage = DockerImage.make(data.targetImage);\n\n    i.licenseFile = data.licenseFile;\n    i.primaryPort = data.primaryPort;\n    i.isNew = data.isNew;\n    i.includeUpdate = data.includeUpdate;\n    i.hostName = data.hostName;\n    i.entryPoint = data.entryPoint;\n    i.exitPoint = data.exitPoint;\n    i.healthCheck = data.healthCheck;\n    i.healthCheck = data.healthCheck;\n\n    if (!i.args)\n       i.args = new Map();\n\n    if (data.buildCommands) {\n      data.buildCommands.forEach((f) => {\n        i.buildCommands.push(BuildCommand.make(f));\n      });\n    }\n\n    return i;\n  }\n\n  public publicPort(): string {\n    return this.primaryPort;\n  }\n\n  public setPublicPort(port: string) {\n    this.primaryPort = port;\n  }\n\n  public assignedLicense(): string {\n\n    return this.licenseFile;\n  }\n\n  public fileForType(type: string, name?: string): BuildCommand {\n\n      return Builder._fileForSource(this.buildCommands, type, name, null);\n  }\n\n  public fileWithDescription(type: string, description: string): BuildCommand {\n      return Builder._fileForSource(this.buildCommands, type, null, description);\n  }\n\n  public removeFileForType(type: string, name?: string) {\n\n      return Builder._removeFileForType(this.buildCommands, type, name);\n  }\n\n  public toString(): string {\n    return JSON.stringify(this, stringifyReplacer);\n  }\n}\n\nexport class Builder implements BuildParams {\n\n  public name: string;\n  public deploymentType: string;\n  public deployments: DeploymentSet[];\n\n  public sourceImage: DockerImage;\n  public targetImage: DockerImage;\n  public version: string;\n  public testStatus: string;\n  public buildCommands: BuildCommand[];\n  public hasTests: string;\n  public buildUser: string;\n  public entryUser: string;\n  public entryPoint: string;\n  public exitPoint: string;\n  public healthCheck: string;\n  public args: Map;\n\n  public hostName: string; // not used!!\n\n  public constructor() {\n\n    this.sourceImage = new DockerImage();\n    this.targetImage = new DockerImage();\n    this.buildCommands = [];\n\n    this.args = new Map();\n  }\n\n  public hyphenatedName(): string {\n\n    return this.name.toLowerCase().replace(/\\s/g, \"-\");\n  }\n\n  public static make(data: any): Builder {\n\n    let b: Builder = new Builder();\n    b.name = data.name;\n    b.deploymentType = data.type;\n\n    b.deployments = [];\n\n    if (data.deployments) {\n      data.deployments.forEach((d) => {\n            b.deployments.push(DeploymentSet.make(d));\n      });\n    }\n\n    if (data.buildCommands) {\n      data.buildCommands.forEach((f) => {\n            b.buildCommands.push(BuildCommand.make(f));\n      });\n    }\n\n    b.sourceImage = DockerImage.make(data.sourceImage);\n    b.targetImage = DockerImage.make(data.targetImage);\n    b.version = data.version;\n    b.testStatus = data.testStatus;\n    b.buildUser = data.buildUser;\n    b.entryUser = data.entryUser;\n    b.entryPoint = data.entryPoint;\n    b.exitPoint = data.exitPoint;\n    b.healthCheck = data.healthCheck;\n\n    if (data.hasTests && data.hasTests == 'true')\n      b.hasTests = \"true\";\n\n    return b;\n  }\n\n  public publicPort(): string {\n    return this.sourceImage.primaryPort;\n  }\n\n  public setPublicPort(port: string) {\n    this.sourceImage.primaryPort = port;\n  }\n\n  public assignedLicense(): string {\n\n    let lic: BuildCommand = this.fileWithDescription(\"licenses\",'Product License');\n\n    if (lic) {\n      return lic.target.replace(/\\-/g, \" \");\n    } else {\n      return null;\n    }\n  }\n\n  public isCustomImage(): boolean {\n    return this.sourceImage.isCustom;\n  }\n\n  public fileForType(type: string, name?: string): BuildCommand {\n      return Builder._fileForSource(this.buildCommands, type, name, null);\n  }\n\n  public fileWithDescription(type: string, description: string): BuildCommand {\n      return Builder._fileForSource(this.buildCommands, type, null, description);\n  }\n\n  public removeFileForType(type: string, name?: string) {\n\n      return Builder._removeFileForType(this.buildCommands, type, name);\n  }\n\n  public static _fileForSource(buildCommands: BuildCommand[], type: string, name: string, description: string): BuildCommand {\n\n      let file: BuildCommand = null;\n\n      for (var i = 0; i  {\n         d.buildCommands.push(BuildCommand.make(b));\n       });\n     }\n\n     return d;\n  }\n}\n\nexport class Port {\n\n  public publicPort: string;\n  public serviceType: string;\n\n  constructor(public internal: string, public external: string, public description: string, public type?: string) {\n\n  }\n\n  public static makeArray(array: any[]): Port[] {\n\n    let ports: Port[] = [];\n\n    array.forEach((p) => {\n      let port: Port = new Port(p.internal, p.external, p.description, p.type);\n      port.publicPort = p.publicPort;\n      port.serviceType = p.serviceType;\n\n      ports.push(port);\n    });\n\n    return ports;\n  }\n}\n\nexport class Probe {\n\n  public path: string;\n  public port: string;\n  public initialDelaySeconds: number;\n  public periodSeconds: number;\n  public timeoutSeconds: number;\n\n  public static make(data: any): Probe {\n\n    let p = new Probe();\n    p.path = data.path;\n    p.port = data.port;\n    p.initialDelaySeconds = Number(data.initialDelaySeconds);\n    p.periodSeconds = Number(data.periodSeconds);\n    p.timeoutSeconds = Number(data.timeoutSeconds);\n\n    return p;\n  }\n}\n\nexport class Container {\n\n  public name: string;\n  public names: string[];\n  public active: string;\n  public type: string;\n  public description: string;\n  public hostname: string;\n  public secure: string;\n  public image: string;\n  public build: DockerBuild;\n  public ports: Port[];\n  public env: Arg[];\n  public volumes: Arg[];\n  public readinessProbe;\n  public livenessProbe;\n  public testStatus : TestStatus;\n  public adminUser: string;\n  public adminPassword: string;\n\n  // runtime only\n\n  public id: string;\n  public state: string;\n  public status: string;\n  public created: Date;\n\n  constructor() {\n\n    this.active = \"true\";\n    this.ports = [];\n    this.env = [];\n    this.volumes = [];\n  }\n\n  public copy() {\n    return Container.make(this);\n  }\n\n  public uniqueName(usesDedicatedRepo: boolean): string {\n\n    let repo: string = this.repository();\n\n    if (repo)\n      return repo + (usesDedicatedRepo ? \"/\" : \":\") + this.imageName();\n    else\n      return this.imageName();\n  }\n\n  public repository(): string {\n\n    if (this.image.indexOf(\":\") != -1) {\n\n      return this.image.substring(0, this.image.indexOf(\":\"));\n    } else {\n      return null;\n    }\n  }\n\n  public imageName(): string {\n\n    let name: string = this.image;\n\n    let idx: number = name.indexOf(\":\");\n\n    if (idx != -1) {\n\n      let lside = name.substring(0, idx);\n      let rside = name.substring(idx+1);\n\n      if (DockerImage.isVersionNumber(rside)) {\n\n        // name is on left side\n\n         if (this.image.lastIndexOf(\"/\") != -1) {\n          let idx: number = this.image.lastIndexOf(\"/\");\n          let rdx: number = this.image.indexOf(\":\");\n\n          name = this.image.substring(idx+1, rdx);\n        }\n      } else {\n\n        // name and perhaps version is in right side\n\n        name = rside;\n\n        if (name.indexOf(\"-\") != -1) {\n\n          let idx: number = name.lastIndexOf(\"-\");\n          let b4: string = name.substring(0, idx);\n          let af: string = name.substring(idx+1, name.length);\n\n          if (DockerImage.isVersionNumber(af)) {\n            name = b4;\n          }\n        }\n      }\n    }\n\n    return name;\n  }\n\n  public preferredImageVersion(): string {\n\n    if (this.image && this.image.indexOf(\":\")) {\n\n      let version: string = this.image.substring(this.image.indexOf(\":\")+1, this.image.length);\n\n      if (version.indexOf(\"-\") != -1) {\n        let idx: number = version.lastIndexOf(\"-\");\n        version = version.substring(idx+1, version.length);\n      }\n\n      // no versioning, only a name\n\n      if (!DockerImage.isVersionNumber(version))\n          version = \"latest\";\n\n      return version;\n    } else {\n\n      return \"latest\";\n    }\n  }\n\n  public static make(data: any): Container {\n\n    let c: Container = new Container();\n    c.names = data.names;\n    if (data.names)\n      c.name = data.names[0];\n    else\n      c.name = data.name;\n\n    c.active = data.active;\n    c.description = data.description;\n    c.hostname = data.hostname;\n    c.secure  = data.secure;\n    c.image = data.image;\n    c.type = data.type;\n    c.adminUser = data.adminUser;\n    c.adminPassword = data.adminPassword;\n\n    if (data.build)\n      c.build = DockerBuild.make(data.build);\n\n    if (data.ports)\n      c.ports = Port.makeArray(data.ports);\n\n    if (data.env)\n      c.env = Arg.makeArray(data.env);\n\n    if (data.volumes)\n      c.volumes = Arg.makeArray(data.volumes);\n\n    if (data.readinessProbe)\n      c.readinessProbe = Probe.make(data.readinessProbe);\n\n    if (data.livenessProbe)\n      c.livenessProbe = Probe.make(data.livenessProbe);\n\n    return c;\n  }\n\n  public environmentVariable(id: string): Arg {\n\n    var arg: Arg = null;\n\n    for (var i = 0; i  {\n          s.tests.push(Test.make(t));\n        });\n    }\n\n    return s;\n  }\n\n  public isActive(): boolean {\n\n    return (this.apiDeployType != \"none\" && this.apiDeployType != null) || this.stop == \"true\" || (this.apiMaturity != \"none\" &&  this.apiMaturity != null) ||\n                  (this.dockerAction != \"none\"  && this.dockerAction != null) || this.dockerTag != null || this.stop != null;\n  }\n\n  public summary(): string {\n\n      var status: string = null;\n\n      if (this.apiDeployType == \"deploy\")\n          status = \"Deploy API's \";\n      else if (this.apiDeployType == \"promote\")\n        status = \"Promote API's to \" + this.apiStage;\n\n      if (this.runTests == \"true\") {\n\n        if (status != null)\n          status = status + \", run tests\";\n        else\n          status = \"Run tests\";\n      }\n\n      if (this.apiMaturity) {\n\n        if (status != null)\n            status = status + \", and set maturity to \" + this.apiMaturity;\n        else\n          status = \"Set maturity to \" + this.apiMaturity;\n      }\n\n      if (this.dockerTag) {\n\n        if (status != null)\n          status = status + \", then tag image\";\n        else\n          status = \"Tag image \";\n      }\n\n      if (this.dockerAction) {\n        if (status != null)\n          status = status + \", \" + this.dockerAction;\n        else\n          status = this.dockerAction;\n\n        status = status + \" image\";\n      }\n\n      if (this.stop == \"true\") {\n        if (status != null)\n            status = status + \" before stopping\";\n        else\n            status = \"stop containers\";\n      }\n\n      if (this.pipelineAction) {\n\n        if (status != null)\n            status = status + \", then \" + this.pipelineAction + \" pipeline\";\n        else\n            status = \"and \" + this.pipelineAction + \" pipeline execution\";\n      }\n\n      return status;\n    }\n}\n\nexport class Stage {\n\n    public id: string;\n    public name: string;\n    public containerHost: string;\n    public useKubernetes: string;\n    public buildOnStart: string;\n    public deployments: Deployment[];\n    public onStart: Action;\n    public onFail: Action;\n    public onSuccess: Action;\n\n    constructor() {\n      this.deployments = [];\n      this.useKubernetes = \"false\";\n      this.buildOnStart = \"false\";\n      this.onStart = new Action();\n      this.onSuccess = new Action();\n      this.onFail = new Action();\n    }\n\n    public copy(): Stage {\n\n      let c = Stage.make(this);\n\n      c.id = this.id + \" copy\";\n      c.name = this.name + \" copy\";\n\n      return c;\n    }\n\n    public static make(data: any): Stage {\n\n      let s: Stage = new Stage();\n\n      s.name = data.name;\n      s.id = s.name;\n      s.containerHost = data.containerHost;\n      s.useKubernetes = data.useKubernetes;\n      s.buildOnStart = data.buildOnStart;\n\n      if (data.deployments) {\n        data.deployments.forEach((c) => {\n          s.deployments.push(Deployment.make(c));\n        });\n      }\n\n      if (data.onStart) {\n        s.onStart = Action.make(data.onStart);\n      }\n\n      if (data.onSuccess) {\n        s.onSuccess = Action.make(data.onSuccess);\n      }\n\n      if (data.onFail) {\n        s.onFail = Action.make(data.onFail);\n      }\n\n      return s;\n    }\n}\n\nexport class Deployment {\n\n  public name: string;\n  public hostname: string;\n  public appName: string;\n  public apis: APIDefinition[];\n  public containers: Container[];\n  public replicas: string;\n  public serviceType: string;\n  public restartPolicy: string;\n  public requiresMonitoring: string;\n  public dependsOn: string;\n\n  constructor() {\n\n    this.containers = [];\n    this.apis = [];\n  }\n\n  public copy() {\n    return Deployment.make(this);\n  }\n\n  public static make(data: any): Deployment {\n\n    let s: Deployment = new Deployment();\n    s.name = data.name;\n    s.hostname = data.hostname;\n    s.replicas = data.replicas;\n    s.appName = data.appName;\n    s.serviceType = data.serviceType;\n    s.restartPolicy = data.restartPolicy;\n    s.requiresMonitoring = data.requiresMonitoring;\n    s.dependsOn = data.dependsOn;\n\n    if (data.apis) {\n       data.apis.forEach((a) => {\n         s.apis.push(APIDefinition.make(a));\n       });\n    }\n\n    if (data.containers) {\n       data.containers.forEach((c) => {\n         s.containers.push(Container.make(c));\n       });\n    }\n\n    return s;\n  }\n\n  public containerForType(type: string): Container {\n\n    let found: Container = null;\n\n    this.containers.forEach((c) => {\n\n      if (c.type == type) {\n        found = c;\n      }\n    });\n\n    return found;\n  }\n\n  public removeContainer(c: Container) {\n\n    var found : number = -1;\n\n    for (var i = 0; i  {\n         p.builds.push(Builder.make(i));\n       });\n    }\n\n    if (data.deployments) {\n      p.deployments = [];\n       data.deployments.forEach((i) => {\n         p.deployments.push(Deployment.make(i));\n       });\n    }\n\n    return p;\n  }\n\n  public serviceFor(id: string): Deployment {\n\n      let found: Deployment = null;\n\n      for (var z = 0; z  {\n         p.stages.push(Stage.make(s));\n       });\n    }\n\n    return p;\n  }\n}\n\nfunction stringifyReplacer(key, value) {\n  const originalObject = this[key];\n  if(originalObject instanceof Map) {\n    return {\n      dataType: 'Map',\n      value: Array.from(originalObject.entries()), // or with spread: value: [...originalObject]\n    };\n  } else {\n    return value;\n  }\n}\n\nfunction parserReviver(key, value) {\n  if(typeof value === 'object' && value !== null) {\n    if (value.dataType === 'Map') {\n      return new Map(value.value);\n    }\n  }\n  return value;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BuilderComponent.html":{"url":"interfaces/BuilderComponent.html","title":"interface - BuilderComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BuilderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/elements/build-image-choose.directive.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        formGroup\n                                \n                                \n                                        owner\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    refreshBuildCommands\n                                \n                                \n                                    setLicenseFile\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refreshBuildCommands\n                        \n                        \n                    \n                \n            \n            \n                \nrefreshBuildCommands(show: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/elements/build-image-choose.directive.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    show\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setLicenseFile\n                        \n                        \n                    \n                \n            \n            \n                \nsetLicenseFile(license: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/elements/build-image-choose.directive.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    license\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        formGroup\n                                    \n                                \n                                \n                                    \n                                        formGroup:         FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormGroup\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                    \n                                \n                                \n                                    \n                                        owner:         PropertiesChangedOwner\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PropertiesChangedOwner\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Directive, ViewContainerRef } \t\t\t\t\tfrom '@angular/core';\nimport { FormBuilder, FormGroup } \t\t  \t\t\t\tfrom '@angular/forms';\nimport {DockerImage} from '../../models/docker-image';\nimport {Installer} from '../../models/project';\n\n@Directive({\n  selector: '[builder]',\n})\n\nexport class BuildImageChooseDirective {\n  constructor(public viewContainerRef: ViewContainerRef) { }\n}\n\nexport class BuilderProperties {\n\n\tpublic constructor(public key: string, public values: string[]) {\n\n\t}\n}\n\nexport interface PropertiesChangedOwner {\n\n\tinitialProperties(): any;\n\tinstallerTemplateLoaded(template: Installer);\n\n\tpropertiesChangedInBuilder(type: string, displayableProperties: Map, properties: any);\n}\n\nexport interface BuilderComponent {\n\n  formGroup: FormGroup;\n  owner: PropertiesChangedOwner;\n\n  setLicenseFile(license: string);\n  refreshBuildCommands(show: boolean);\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BuilderProperties.html":{"url":"classes/BuilderProperties.html","title":"class - BuilderProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BuilderProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/elements/build-image-choose.directive.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                key\n                            \n                            \n                                    Public\n                                values\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(key: string, values: string[])\n                    \n                \n                        \n                            \n                                Defined in src/app/components/elements/build-image-choose.directive.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        values\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/elements/build-image-choose.directive.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            values\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/elements/build-image-choose.directive.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive, ViewContainerRef } \t\t\t\t\tfrom '@angular/core';\nimport { FormBuilder, FormGroup } \t\t  \t\t\t\tfrom '@angular/forms';\nimport {DockerImage} from '../../models/docker-image';\nimport {Installer} from '../../models/project';\n\n@Directive({\n  selector: '[builder]',\n})\n\nexport class BuildImageChooseDirective {\n  constructor(public viewContainerRef: ViewContainerRef) { }\n}\n\nexport class BuilderProperties {\n\n\tpublic constructor(public key: string, public values: string[]) {\n\n\t}\n}\n\nexport interface PropertiesChangedOwner {\n\n\tinitialProperties(): any;\n\tinstallerTemplateLoaded(template: Installer);\n\n\tpropertiesChangedInBuilder(type: string, displayableProperties: Map, properties: any);\n}\n\nexport interface BuilderComponent {\n\n  formGroup: FormGroup;\n  owner: PropertiesChangedOwner;\n\n  setLicenseFile(license: string);\n  refreshBuildCommands(show: boolean);\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/CancelCdkDrag.html":{"url":"directives/CancelCdkDrag.html","title":"directive - CancelCdkDrag","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  CancelCdkDrag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/extras/directives/CancelCdkDrag.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            OnInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appCancelCdkDrag]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $element\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fireMouseUp\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/extras/directives/CancelCdkDrag.directive.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fireMouseUp\n                        \n                        \n                    \n                \n            \n            \n                \nfireMouseUp($event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/extras/directives/CancelCdkDrag.directive.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/extras/directives/CancelCdkDrag.directive.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/extras/directives/CancelCdkDrag.directive.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            $element\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/extras/directives/CancelCdkDrag.directive.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {Directive, ElementRef, OnDestroy, OnInit} from '@angular/core';\n\n@Directive({\n  selector: '[appCancelCdkDrag]'\n})\nexport class CancelCdkDrag implements OnInit, OnDestroy {\n  $element: HTMLElement;\n\n  constructor(el: ElementRef) {\n    this.$element = el.nativeElement;\n  }\n\n  fireMouseUp($event: MouseEvent) {\n    $event.cancelBubble = true;\n  }\n\n  ngOnDestroy(): void {\n    this.$element.removeEventListener('mousedown', this.fireMouseUp);\n    this.$element.removeEventListener('keydown', this.fireMouseUp);\n  }\n\n  ngOnInit(): void {\n    this.$element.addEventListener('mousedown', this.fireMouseUp);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommitInfo.html":{"url":"classes/CommitInfo.html","title":"class - CommitInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommitInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/git-source-control.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                committer\n                            \n                            \n                                    Public\n                                count\n                            \n                            \n                                    Public\n                                date\n                            \n                            \n                                    Public\n                                files\n                            \n                            \n                                    Public\n                                message\n                            \n                            \n                                    Public\n                                sha\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                make\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/git-source-control.service.ts:52\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            committer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/git-source-control.service.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            count\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/git-source-control.service.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/git-source-control.service.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            files\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FileInfo[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/git-source-control.service.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/git-source-control.service.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sha\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/git-source-control.service.ts:46\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            make\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    make(data: any, count: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/git-source-control.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    count\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CommitInfo\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } \t           \t \t  from '@angular/core';\nimport { HttpClient, HttpHeaders }      from '@angular/common/http';\nimport { Observable, of }               from 'rxjs';\nimport { switchMap, map, catchError } \tfrom 'rxjs/operators';\n\nimport { NgxXml2jsonService } \t\t\t    from 'ngx-xml2json';\n\nimport {GitType, Settings, Values,\n                    RepoSettings }      from '../settings';\nimport { WmPackageInfo }\t\t\t\t        from '../models/wm-package-info';\n\nimport * as moment from 'moment';\n\nexport class GitRepo {\n\n  public config: RepoSettings;\n\n\tconstructor(public id: string, public name: string) {\n\n\t}\n}\nexport enum FileStatus {\n\n\tadded,\n\tremoved,\n\tchanged\n}\n\nexport class FileInfo {\n\n\tpublic status: FileStatus;\n\n\tpublic constructor(public fileName: string, status: string) {\n\n\t\tif (status == 'removed')\n\t\t\tthis.status = FileStatus.removed;\n\t\telse if (status == 'added')\n\t\t\tthis.status = FileStatus.added;\n\t\telse\n\t\t\tthis.status = FileStatus.changed;\n\t}\n}\n\nexport class CommitInfo {\n\n\tpublic sha: string;\n\tpublic committer: string;\n\tpublic message: string;\n\tpublic count: number;\n\tpublic date: Date;\n\n\tpublic files: FileInfo[] = [];\n\n\tconstructor() {\n\n\t}\n\n\tpublic static make(data: any, count: number): CommitInfo {\n\n\t\tlet c: CommitInfo = new CommitInfo();\n\t\tc.sha = data.sha;\n\t\tc.count = count;\n\t\tc.committer = data.commit.committer.name;\n\t\tc.date = moment(data.commit.committer.date).toDate();\n\t\tc.message = data.commit.message;\n\n\t\tif (data.files) {\n\n\t\t\tdata.files.forEach((f) => {\n\t\t\t\tc.files.push(new FileInfo(f.filename, f.status));\n\t\t\t});\n\t\t}\n\n\t\treturn c;\n\t}\n}\n\n@Injectable()\nexport class GitSourceService {\n\n  public static GITHUB_REPOS: string = \"/user/repos\";\n\tpublic static GITHUB_CONTENTS: string = \"/repos/OWNER/REPO/contents/PATH\";\n\n\tpublic static GITLAB_REPOS: string = \"/api/v4/projects?owned=true&private_token=TOKEN\";\n\tpublic static GITLAB_CONTENTS: string = \"/api/v4/projects/REPO/repository/tree?path=PATH&private_token=TOKEN\";\n\tpublic static GITLAB_FILE: string = \"/api/v4/projects/REPO/repository/files/PATH?ref=master&private_token=TOKEN\";\n\n\tpublic _packages: WmPackageInfo[] = [];\n\tpublic _commitInfo: CommitInfo[];\n\n\tprivate _values: Values;\n\tprivate _gitType: GitType;\n\tprivate _gitAPIUrl: string;\n\tprivate _gitName: string;\n\tprivate _gitUser: string;\n\tprivate _gitPassword: string;\n\tprivate _gitIsPACPassword: string;\n\n\n    constructor(private _settings: Settings, private _http: HttpClient, private _ngxXml2jsonService: NgxXml2jsonService) {\n\n    \tthis._settings.values().subscribe((v) => {\n\n    \t  this._values = v;\n    \t  this._gitType = v.gitType;\n    \t\tthis._gitAPIUrl  = v.gitAPIUrl;\n    \t\tthis._gitName = v.gitName;\n    \t\tthis._gitUser = v.gitUser;\n    \t\tthis._gitPassword = v.gitPassword;\n    \t\tthis._gitIsPACPassword = v.gitIsPACPassword;\n\n    \t\tif (this._gitAPIUrl.endsWith(\"/\"))\n    \t\t\tthis._gitAPIUrl = this._gitAPIUrl.substring(0, this._gitAPIUrl.length-1);\n    \t});\n    }\n\n    public values(): Observable {\n\n      if (this._values) {\n        return of(this._values);\n      } else {\n        return this._settings.values();\n      }\n    }\n\n    public repositories(git: string) {\n\n    \tlet all: string;\n    \tlet template: string;\n\n    \tlet headers = new HttpHeaders()\n\t\t\t\t.append('Content-Type', 'application/json')\n\t\t\t\t.append('Accept', 'application/json');\n\n    \tif (this._gitType == GitType.github) {\n\n    \t\tall = this._gitAPIUrl + GitSourceService.GITHUB_REPOS.replace(/OWNER/, this._gitUser);\n\n    \t\theaders = headers.append('Authorization', `Basic ${btoa(this.authString())}`);\n    \t}\n    \telse {\n    \t\tall = this._gitAPIUrl + GitSourceService.GITLAB_REPOS.replace(/TOKEN/, this._gitPassword);\n    \t}\n\n\t\t  console.log(\"Querying git for repos with url \" + all);\n\n\t\t  return this._http.get(all, { headers }).pipe(map( (responseData) => {\n            return this._mapRepoResponse(this._gitAPIUrl, responseData);\n        }));\n    }\n\n    public wmPackages(git: string, repo: string, dir: string, useCache?: boolean): Observable {\n\n\t\tlet template: string;\n\n\t\tlet headers = new HttpHeaders()\n\t\t\t\t\t.append('Content-Type', 'application/json')\n\t\t\t\t\t.append('Accept', 'application/json');\n\n\t\tif (this._gitType == GitType.github) {\n        template = GitSourceService.GITHUB_CONTENTS;\n        headers = headers.append('Authorization', `Basic ${btoa(this.authString())}`);\n\n\t\t} else {\n    \t  template = GitSourceService.GITLAB_CONTENTS;\n\t\t}\n\n\t\tif (useCache && this._packages.length > 0) {\n\n\t\t\treturn of(this._packages);\n\n\t\t} else {\n\n\t\t\tif (dir.startsWith(\"/\"))\n\t\t\t\tdir = dir.substring(1);\n\n\t\t\tlet url: string = this._gitAPIUrl + template\n\t\t\t\t\t\t\t.replace(/OWNER/, git || this._gitUser)\n\t\t\t\t\t\t\t.replace(/REPO/, repo)\n\t\t\t\t\t\t\t.replace(/PATH/, dir)\n\t\t\t\t\t\t\t.replace(/TOKEN/, this._gitPassword);\n\n\t\t\tconsole.log(\"Querying git for packages with url \" + url);\n\n\t\t\treturn this._http.get(url, { headers }).pipe(map( (responseData) => {\n\n\t            return this._mapPackagesResponse(dir, responseData, repo);\n\t        }));\n\t\t  }\n    }\n\n    public fileContents(path: string, repo: string): Observable {\n\n\t\tlet template: string;\n\n\t\tlet headers = new HttpHeaders()\n\t\t\t\t.append('Content-Type', 'application/json')\n\t\t\t\t.append('Accept', 'application/json');\n\n\t\tif (this._gitType == GitType.github) {\n\n\t\t\ttemplate = GitSourceService.GITHUB_CONTENTS\n\t\t\t\t\t\t\t.replace(/OWNER/, this._gitName || this._gitUser)\n\t\t\t\t\t\t\t.replace(/REPO/, repo)\n\t\t\t\t\t\t\t.replace(/PATH/, encodeURIComponent(path));\n\n\t\t\theaders = headers.append('Authorization', `Basic ${btoa(this.authString())}`);\n\n\t\t} else {\n\t\t\ttemplate = GitSourceService.GITLAB_FILE\n\t\t\t\t\t\t\t  .replace(/REPO/, repo)\n\t\t\t\t\t\t\t  .replace(/PATH/, encodeURIComponent(path))\n                .replace(/TOKEN/, this._gitPassword);\n\t\t}\n\n\t\tlet url: string = this._gitAPIUrl + template;\n\n\t\treturn this._http.get(url, { headers }).pipe(map( (responseData) => {\n\n            return ( responseData).content;\n\n          },\n          error => {\n            return null;\n\t\t}));\n    }\n\n    private _mapPackagesResponse(dir: string, responseData: any, repo: string): WmPackageInfo[] {\n // data is returned as list called references or as a single entity\n\n \t\tlet images: WmPackageInfo[] = [];\n\n \t\tfor (let i=0; i  {\n\n\t\t\t\t  if (!success)\n\t\t\t\t\t  images.splice(i, 1);\n\t\t\t  });\n\n\t\t\t  images.push(p);\n      }\n\t\t}\n\n \t\treturn images;\n    }\n\n    private _packageDetails(pckg: WmPackageInfo, dir: string, repo: string): Observable {\n\n    \tlet path: string;\n\n    \tif (dir && dir != \".\")\n    \t\tpath = dir + (dir.endsWith(\"/\") ? \"\" : \"/\") + pckg.name + \"/manifest.v3\";\n    \telse\n    \t\tpath = pckg.name + \"/manifest.v3\";\n\n    \treturn this.fileContents(path, repo).pipe(map((c) => {\n\n    \t\tlet xmlString: string = atob(c);\n    \t\tlet xml = new DOMParser().parseFromString(xmlString, 'text/xml');\n\n    \t\tvar top = xml.getElementsByTagName('Values');\n\n\t\t\t  for(var i=0;i {\n    \t\treturn of(false);\n    \t}));\n    }\n\n    private _mapRepoResponse(url: string, responseData: any): GitRepo[] {\n\n    \tlet names: GitRepo[] = [];\n\n    \tresponseData.forEach((r) => {\n    \t\tnames.push(new GitRepo(this._gitType == GitType.github ? r.name : r.id, r.name));\n    \t});\n\n    \treturn names.sort((a,b)=> {\n\n    \t  let a1 = a.name.toLowerCase();\n    \t  let b1 = b.name.toLowerCase();\n\n    \t  if (a1 == b1)\n    \t    return 0;\n    \t  else if (a1>b1)\n    \t    return 1;\n    \t  else\n    \t    return -1;\n      });\n    }\n\n    private authString(): string {\n\n    \tif (this._gitIsPACPassword)\n    \t\treturn this._gitPassword;\n    \telse\n    \t\treturn this._gitUser + \":\" + this._gitPassword;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContainerTemplates.html":{"url":"injectables/ContainerTemplates.html","title":"injectable - ContainerTemplates","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ContainerTemplates\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/support/container.templates.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                productCodes\n                            \n                            \n                                    Static\n                                products\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                applyTemplate\n                            \n                            \n                                    Public\n                                configureContainerFor\n                            \n                            \n                                    Private\n                                    Static\n                                imageRef\n                            \n                            \n                                    Static\n                                indexOfAttribute\n                            \n                            \n                                    Static\n                                productCodeLabel\n                            \n                            \n                                    Static\n                                setDefaultsForK8s\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_configService: ConfigurationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/support/container.templates.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                        ConfigurationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            applyTemplate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyTemplate(container: Container, primaryPort: string, template: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/support/container.templates.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                                Container\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    primaryPort\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    template\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            configureContainerFor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    configureContainerFor(container: Container, image: DockerImage, template: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/support/container.templates.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                                Container\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    image\n                                    \n                                                DockerImage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    template\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            imageRef\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    imageRef(image: DockerImage)\n                \n            \n\n\n            \n                \n                    Defined in src/app/support/container.templates.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    image\n                                    \n                                                DockerImage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            indexOfAttribute\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    indexOfAttribute(container: Container, att: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/support/container.templates.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                                Container\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    att\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            productCodeLabel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    productCodeLabel(code: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/support/container.templates.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            setDefaultsForK8s\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDefaultsForK8s(run: RunSet)\n                \n            \n\n\n            \n                \n                    Defined in src/app/support/container.templates.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    run\n                                    \n                                                RunSet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            productCodes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\"msr\", \"um\", \"apigw\", \"apimg\", \"apipr\", \"mws\", \"centrasite\", \"tc\", \"msr-jdbc\", \"msr-monitor\", \"mysqldb\", \"elk\"]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/support/container.templates.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            products\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\"Micro Service Runtime\", \"Universal Messaging\", \"API Gateway\", \"API Micro Gateway\", \"API Portal\", \"MyWebMethods\", \"CentraSite Active SOA\", \"Terracotta DB\", \"Micro Service Runtime with JDBC Adapter\", \"Micro Service Runtime for Monitoring\", \"MySQL 5.7 Enterprise Edition with webMethods 10.5 schema\", \"Elastic Search\"]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/support/container.templates.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { DockerImage }                                      from '../models/docker-image';\nimport { Container, RunSet, Deployment, Port, Arg, Probe }\t    from '../models/project';\nimport {ConfigurationService} from '../services/configuration.service';\nimport {Injectable} from '@angular/core';\nimport {Observable, Observer} from 'rxjs';\n\n@Injectable()\nexport class ContainerTemplates {\n\n    public static products: string[] = [\"Micro Service Runtime\", \"Universal Messaging\", \"API Gateway\", \"API Micro Gateway\", \"API Portal\", \"MyWebMethods\", \"CentraSite Active SOA\", \"Terracotta DB\", \"Micro Service Runtime with JDBC Adapter\", \"Micro Service Runtime for Monitoring\", \"MySQL 5.7 Enterprise Edition with webMethods 10.5 schema\", \"Elastic Search\"];\n    public static productCodes: string[] = [\"msr\", \"um\", \"apigw\", \"apimg\", \"apipr\", \"mws\", \"centrasite\", \"tc\", \"msr-jdbc\", \"msr-monitor\", \"mysqldb\", \"elk\"];\n\n    public constructor(private _configService: ConfigurationService) {\n\n    }\n\n    public static productCodeLabel(code: string): string {\n\n        if (code)\n          return this.products[this.productCodes.indexOf(code)];\n        else\n          return null;\n    }\n\n    public static setDefaultsForK8s(run: RunSet) {\n\n        if (!run.namespace && run.name)\n            run.namespace = run.name.toLocaleLowerCase().replace(/\\s/g,'-').replace('_','-');\n\n        run.deployments.forEach((s) => {\n\n            if (!s.appName)\n                s.appName = s.name.toLowerCase().replace(/\\s/g,'-').replace('_','-');\n\n            if (!s.serviceType)\n               s.serviceType = \"Stateless\";\n\n            if (!s.replicas)\n               s.replicas = \"1\";\n\n            if (!s.restartPolicy)\n               s.restartPolicy = \"Always\";\n        });\n    }\n\n    public configureContainerFor(container: Container, image: DockerImage, template: string): Observable {\n\n        if (image.name() != \"EXTERNAL\") {\n            container.image = ContainerTemplates.imageRef(image);\n        } else {\n            container.active = \"false\";\n        }\n\n        return this.applyTemplate(container, image.primaryPort, template);\n    }\n\n    public applyTemplate(container: Container, primaryPort: string, template: string): Observable {\n\n        container.ports.splice(0, container.ports.length);\n        container.volumes.splice(0, container.volumes.length);\n        container.env.splice(0, container.env.length);\n\n        return Observable.create((observer: Observer) => {\n\n            this._configService.runtimeTemplate(template).subscribe((t) => {\n\n              if (!container.name && t.description)\n                container.name = t.description.toLowerCase().replace(/\\s/g, \"-\");\n\n              if (t.description)\n                container.description = t.description;\n\n              if (template.indexOf(\"-\") != -1)\n                container.type = template.substring(0, template.indexOf(\"-\"));\n              else\n                container.type = template;\n\n              container.description = t.description;\n\n              if (!container.image)\n                container.image = t.image;\n\n              if (!container.livenessProbe)\n                container.livenessProbe = t.livenessProbe;\n\n              if (!container.readinessProbe)\n                container.livenessProbe = t.readinessProbe;\n\n              if (container.ports.length == 0)\n                container.ports = t.ports;\n\n              if (container.env.length == 0)\n                container.env = t.env;\n\n              if (container.volumes.length == 0)\n                container.volumes = t.volumes;\n\n              observer.next(true);\n            });\n        })\n    }\n\n    public static indexOfAttribute(container: Container, att: string): number {\n\n    \tvar found: number = -1;\n\n    \tfor (var i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DependencyWrapper.html":{"url":"classes/DependencyWrapper.html","title":"class - DependencyWrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DependencyWrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/packages.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dependencies\n                            \n                            \n                                    Public\n                                packages\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dependencies\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WmPackageInfo[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/packages.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            packages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WmPackageInfo[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/packages.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } \t           \t \t\t\t      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams }  from '@angular/common/http';\nimport { Observable, of }               \t\t    from 'rxjs';\nimport { switchMap, map } \t\t\t\t\t\t          from 'rxjs/operators';\n\nimport { NgxXml2jsonService } \t\t\t\t\t        from 'ngx-xml2json';\n\nimport { Settings }                     \t\t    from '../settings';\nimport { WmPackageInfo }                        from '../models/wm-package-info';\nimport { DeploymentSet }                        from '../models/project';\nimport {Source} from '../models/git-source';\n\nexport class DependencyWrapper {\n  public packages: WmPackageInfo[];\n  public dependencies: WmPackageInfo[];\n}\n\nexport class Sources {\n\n  public gitURI: string;\n  public gitRepository: string;\n  public gitUser: string;\n  public gitPassword: string;\n  public type: string;\n  public include: string[];\n  public targetDir: string;\n}\n\n@Injectable()\nexport class PackagesService {\n\n    public static URI: string = Settings.SERVER_API + \"/rad/jc.devops:api/package\";\n\n    constructor(private _settings: Settings, private _http: HttpClient, private _ngxXml2jsonService: NgxXml2jsonService) {\n\n    }\n\n    public packages(packagesDir?: string): Observable {\n\n      let url: string = PackagesService.URI\n\n      let headers = new HttpHeaders()\n        .set('Content-Type', 'application/json')\n        .set('Accept', 'application/json');\n\n       if (packagesDir)\n         headers = headers.set('packagesDir', packagesDir);\n\n      return this._http.get(url, { headers }).pipe(map( (responseData) => {\n\n          let packages: WmPackageInfo[] = [];\n\n          ( responseData).packages.forEach((p) => {\n            packages.push(WmPackageInfo.make(p));\n          });\n\n           return packages;\n        },\n        error => {\n            return [];\n        }));\n    }\n\n    public servicesForPackage(name: string, packagesDir?: string): Observable {\n\n      let url: string = PackagesService.URI + \"/\" + name + \"/services\";\n\n      let headers = new HttpHeaders()\n        .set('Content-Type', 'application/json')\n        .set('Accept', 'application/json');\n\n        if (name)\n          headers = headers.set('packagesDir', packagesDir);\n\n      return this._http.get(url, { headers }).pipe(map( (responseData) => {\n\n          return ( responseData).services;\n        },\n        error => {\n            return [];\n        }));\n    }\n\n    public packageDetails(name: string, packagesDir?: string): Observable {\n\n      let url: string = PackagesService.URI + \"/\" + name\n\n      let headers = new HttpHeaders()\n        .set('Content-Type', 'application/json')\n        .set('Accept', 'application/json');\n\n      if (packagesDir)\n         headers = headers.set('packagesDir', packagesDir);\n\n      return this._http.get(url, { headers }).pipe(map( (responseData) => {\n\n           return WmPackageInfo.make(( responseData).packages[0]);\n        },\n        error => {\n            return null;\n        }));\n    }\n\n    public index(deploymentSetName: string, packagesDir: string, sources: Source, forceReindex: boolean): Observable {\n\n      if (packagesDir.startsWith(\"/\"))\n        packagesDir = packagesDir.substring(packagesDir.indexOf(\"/\")+1);\n\n\t\t  let url: string = PackagesService.URI + \"/\" + deploymentSetName + \"/index?repository=\" + encodeURI(sources.gitRepository) + \"&packagesDir=\" + encodeURI(packagesDir);\n\n\t\t  let headers = new HttpHeaders()\n\t\t\t\t.set('Content-Type', 'application/json')\n\t\t\t\t.set('Accept', 'application/json');\n\n      if (forceReindex)\n        ( sources).forceReindex = forceReindex;\n\n\t\t  let body: string = JSON.stringify(sources);\n\n      return this._http.post(url, body, { headers }).pipe(map( (responseData) => {\n\n            return this._makePackage(responseData);\n          },\n          error => {\n            return [];\n       \t}));\n    }\n\n    public checkDependenciesForPackages(packages: string[], packagesDir?: string): Observable {\n\n      var packs: string = \"\";\n      packages.forEach((p) => {\n\n        if (packs != \"\")\n          packs = packs + \",\" + p;\n        else\n          packs = p;\n      });\n\n      let url: string = PackagesService.URI + \"/dependencies/\" + encodeURIComponent(packs);\n\n      let headers = new HttpHeaders()\n        .set('Content-Type', 'application/json')\n        .set('Accept', 'application/json');\n\n        if (packagesDir)\n          headers = headers.set('packagesDir', packagesDir);\n\n      return this._http.get(url, { headers }).pipe(map( (responseData) => {\n\n          let packages: WmPackageInfo[] = [];\n          (responseData).packages.forEach((p) => {\n            if (p != null)\n              packages.push(WmPackageInfo.make(p));\n            else\n              console.log(\"** WARNING ** - invalid null dependencies found for '\" + packs + \"' in \" + packagesDir);\n           });\n\n          let dependencies: WmPackageInfo[] = [];\n          (responseData).dependencies.forEach((p) => {\n            dependencies.push(WmPackageInfo.make(p))\n           });\n\n           return {packages: packages, dependencies: dependencies};\n        },\n        error => {\n            return null;\n        }));\n    }\n\n    private _makePackage(responseData: any): WmPackageInfo[] {\n\n      let packages: WmPackageInfo[] = [];\n\n      responseData.packages.forEach((p) => {\n        packages.push(WmPackageInfo.make(p));\n      });\n\n      return packages;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Deployment.html":{"url":"classes/Deployment.html","title":"class - Deployment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Deployment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/project.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apis\n                            \n                            \n                                    Public\n                                appName\n                            \n                            \n                                    Public\n                                containers\n                            \n                            \n                                    Public\n                                dependsOn\n                            \n                            \n                                    Public\n                                hostname\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                replicas\n                            \n                            \n                                    Public\n                                requiresMonitoring\n                            \n                            \n                                    Public\n                                restartPolicy\n                            \n                            \n                                    Public\n                                serviceType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                containerForType\n                            \n                            \n                                    Public\n                                copy\n                            \n                            \n                                    Static\n                                make\n                            \n                            \n                                    Public\n                                removeAPI\n                            \n                            \n                                    Public\n                                removeContainer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/models/project.ts:1033\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apis\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     APIDefinition[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:1027\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            appName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:1026\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            containers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Container[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:1028\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dependsOn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:1033\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hostname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:1025\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:1024\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            replicas\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:1029\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            requiresMonitoring\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:1032\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            restartPolicy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:1031\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            serviceType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:1030\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            containerForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    containerForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/project.ts:1072\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Container\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            copy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    copy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/project.ts:1041\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Deployment\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            make\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    make(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/project.ts:1045\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Deployment\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            removeAPI\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAPI(a: APIDefinition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/project.ts:1101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    a\n                                    \n                                                APIDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            removeContainer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeContainer(c: Container)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/project.ts:1086\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    c\n                                    \n                                                Container\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { APIDefinition }                        from '../models/wm-package-info'\nimport { Source }                               from '../models/git-source';\nimport { DockerImage, TestStatus }              from '../models/docker-image';\n\nexport class DeploymentSet {\n\n  public id: string;\n  public name: string;\n  public source: Source;\n  public active: string;\n  public apis: APIDefinition[];\n\n  public constructor() {\n      this.apis = [];\n      this.source = new Source();\n  }\n\n  public static make(data: any): DeploymentSet {\n\n      let p: DeploymentSet = new DeploymentSet();\n      p.id = data.name;\n      p.name = data.name;\n\n      if (data.source)\n       p.source = Source.make(data.source);\n\n      p.apis = [];\n\n      if (data.apis) {\n\n        data.apis.forEach((a) => {\n          p.apis.push(APIDefinition.make(a));\n        });\n      }\n\n      return p;\n  }\n}\n\nexport enum DisplayType {\n  hidden = \"hidden\",\n  readonly = \"readonly\",\n  editable = \"editable\",\n  password = \"password\",\n  file = \"file\",\n  dropdown = \"dropdown\",\n  yesno = \"yesno\"\n}\n\nexport class BuildCommand {\n\n  public commandType: string;\n  public buildTarget: string;\n  public fileType: string;\n  public source: string;\n  public target: string;\n  public description: string = \"\";\n  public display: DisplayType = DisplayType.hidden;\n  public required: boolean = true;\n  public conditions: string[];\n\n  public static make(d: any): BuildCommand {\n\n    let f: BuildCommand = new BuildCommand();\n    f.commandType = d.commandType;\n    f.buildTarget = d.buildTarget;\n    f.fileType = d.fileType;\n    f.source = d.source;\n    f.target = d.target;\n    f.description = d.description;\n    f.conditions = d.conditions;\n\n    if (d.display == \"editable\")\n      f.display = DisplayType.editable;\n    else if (d.display == \"readonly\")\n      f.display = DisplayType.readonly;\n    else if (d.display == \"file\")\n      f.display = DisplayType.file;\n    else\n      f.display = DisplayType.hidden;\n\n    f.required = false;\n    return f;\n  }\n\n  copy() {\n    return BuildCommand.make(this);\n  }\n\n  public equals(b: BuildCommand): boolean {\n\n    return (b.source && b.source == this.source) || (!b.source && b.target == this.target);\n  }\n\n  public matchConditions(args: Map): boolean {\n\n    return ArgDisplayType._matchConditions(this.conditions, args);\n  }\n}\n\nexport interface BuildParams {\n\n  name: string;\n  publicPort(): string;\n  setPublicPort(port: string);\n  assignedLicense(): string;\n  hostName: string;\n  entryPoint: string;\n  exitPoint: string;\n  healthCheck: string;\n  args: Map\n  buildCommands: BuildCommand[];\n\n  fileForType(type: string): BuildCommand;\n  isCustomImage(): boolean;\n}\n\nexport class ArgDisplayType {\n\n  public name: string;\n  public description: string;\n  public display: DisplayType = DisplayType.hidden;\n  public conditions: string[];\n  public choices: string[];\n  public required: boolean = true;\n\n  public constructor(name: string) {\n    this.name = name;\n    this.description = this.name;\n    this.conditions = [];\n    this.choices = [];\n  }\n\n  public copy(): ArgDisplayType {\n\n      let copy: ArgDisplayType = new ArgDisplayType(this.name);\n      copy.description = this.description;\n      copy.display = this.display;\n      copy.conditions = this.conditions;\n      copy.choices = this.choices;\n      copy.required = this.required;\n\n      return copy;\n  }\n\n  public static make(d: any): ArgDisplayType {\n\n    let a: ArgDisplayType = new ArgDisplayType(d.name);\n\n    if (d.display == \"editable\")\n      a.display = DisplayType.editable;\n    else if (d.display == \"readonly\")\n      a.display = DisplayType.readonly;\n    else if (d.display == \"file\")\n      a.display = DisplayType.file;\n    else if (d.display == \"password\")\n      a.display = DisplayType.password;\n    else if (d.display == \"yesno\")\n      a.display = DisplayType.yesno;\n    else if (d.display == \"dropdown\")\n      a.display = DisplayType.dropdown;\n    else\n      a.display = DisplayType.hidden;\n\n    if (d.required != null)\n      a.required = d.required;\n\n    a.description = d.description || d.name;\n\n    if (d.conditions)\n      a.conditions = d.conditions;\n\n    if (a.choices)\n      a.choices = d.choices;\n\n    return a;\n  }\n\n  public matchConditions(args: Map): boolean {\n\n      return ArgDisplayType._matchConditions(this.conditions, args);\n  }\n\n  public static _matchConditions(conditions: string[], args: Map): boolean {\n\n      if (conditions && conditions.length > 0) {\n\n        let matched: boolean = false;\n\n        for (let i = 0; i  {\n      args.push(new Arg(a.source, a.target, a.description));\n    });\n\n    return args;\n  }\n\n}\n\nexport class Installer implements BuildParams {\n\n    public name: string;\n    public sourceImageTag: string;\n    public isNew: string = \"true\";\n    public targetImage: DockerImage;\n    public productType: string;\n    public licenseFile: string;\n    public primaryPort: string;\n    public hostName: string;\n    public wmInstallerImage: string;\n    public includeUpdate: string = \"false\";\n    public buildCommands: BuildCommand[];\n    public args: Map;\n    public isSAGProduct: string = \"true\";\n\n    public entryPoint: string;\n    public exitPoint: string;\n    public healthCheck: string;\n\n    public constructor() {\n\n    this.sourceImageTag = \"centos:latest\";\n    this.targetImage = new DockerImage();\n    this.buildCommands = [];\n    this.args = new Map();\n  }\n\n  public copy(): Installer {\n\n    return Installer.make(this);\n  }\n\n  public static parse(data: string): Installer {\n\n    return this.make(JSON.parse(data, parserReviver).install);\n  }\n\n  public isCustomImage(): boolean {\n    return true;\n  }\n\n  public static make(data: any): Installer {\n\n    let i: Installer = new Installer();\n    i.name = data.name;\n    i.isSAGProduct = data.isSAGProduct;\n    i.args = data.args;\n    i.productType = data.productType;\n    i.wmInstallerImage = data.wmInstallerImage;\n    i.sourceImageTag = data.sourceImageTag;\n\n    if (data.targetImage)\n      i.targetImage = DockerImage.make(data.targetImage);\n\n    i.licenseFile = data.licenseFile;\n    i.primaryPort = data.primaryPort;\n    i.isNew = data.isNew;\n    i.includeUpdate = data.includeUpdate;\n    i.hostName = data.hostName;\n    i.entryPoint = data.entryPoint;\n    i.exitPoint = data.exitPoint;\n    i.healthCheck = data.healthCheck;\n    i.healthCheck = data.healthCheck;\n\n    if (!i.args)\n       i.args = new Map();\n\n    if (data.buildCommands) {\n      data.buildCommands.forEach((f) => {\n        i.buildCommands.push(BuildCommand.make(f));\n      });\n    }\n\n    return i;\n  }\n\n  public publicPort(): string {\n    return this.primaryPort;\n  }\n\n  public setPublicPort(port: string) {\n    this.primaryPort = port;\n  }\n\n  public assignedLicense(): string {\n\n    return this.licenseFile;\n  }\n\n  public fileForType(type: string, name?: string): BuildCommand {\n\n      return Builder._fileForSource(this.buildCommands, type, name, null);\n  }\n\n  public fileWithDescription(type: string, description: string): BuildCommand {\n      return Builder._fileForSource(this.buildCommands, type, null, description);\n  }\n\n  public removeFileForType(type: string, name?: string) {\n\n      return Builder._removeFileForType(this.buildCommands, type, name);\n  }\n\n  public toString(): string {\n    return JSON.stringify(this, stringifyReplacer);\n  }\n}\n\nexport class Builder implements BuildParams {\n\n  public name: string;\n  public deploymentType: string;\n  public deployments: DeploymentSet[];\n\n  public sourceImage: DockerImage;\n  public targetImage: DockerImage;\n  public version: string;\n  public testStatus: string;\n  public buildCommands: BuildCommand[];\n  public hasTests: string;\n  public buildUser: string;\n  public entryUser: string;\n  public entryPoint: string;\n  public exitPoint: string;\n  public healthCheck: string;\n  public args: Map;\n\n  public hostName: string; // not used!!\n\n  public constructor() {\n\n    this.sourceImage = new DockerImage();\n    this.targetImage = new DockerImage();\n    this.buildCommands = [];\n\n    this.args = new Map();\n  }\n\n  public hyphenatedName(): string {\n\n    return this.name.toLowerCase().replace(/\\s/g, \"-\");\n  }\n\n  public static make(data: any): Builder {\n\n    let b: Builder = new Builder();\n    b.name = data.name;\n    b.deploymentType = data.type;\n\n    b.deployments = [];\n\n    if (data.deployments) {\n      data.deployments.forEach((d) => {\n            b.deployments.push(DeploymentSet.make(d));\n      });\n    }\n\n    if (data.buildCommands) {\n      data.buildCommands.forEach((f) => {\n            b.buildCommands.push(BuildCommand.make(f));\n      });\n    }\n\n    b.sourceImage = DockerImage.make(data.sourceImage);\n    b.targetImage = DockerImage.make(data.targetImage);\n    b.version = data.version;\n    b.testStatus = data.testStatus;\n    b.buildUser = data.buildUser;\n    b.entryUser = data.entryUser;\n    b.entryPoint = data.entryPoint;\n    b.exitPoint = data.exitPoint;\n    b.healthCheck = data.healthCheck;\n\n    if (data.hasTests && data.hasTests == 'true')\n      b.hasTests = \"true\";\n\n    return b;\n  }\n\n  public publicPort(): string {\n    return this.sourceImage.primaryPort;\n  }\n\n  public setPublicPort(port: string) {\n    this.sourceImage.primaryPort = port;\n  }\n\n  public assignedLicense(): string {\n\n    let lic: BuildCommand = this.fileWithDescription(\"licenses\",'Product License');\n\n    if (lic) {\n      return lic.target.replace(/\\-/g, \" \");\n    } else {\n      return null;\n    }\n  }\n\n  public isCustomImage(): boolean {\n    return this.sourceImage.isCustom;\n  }\n\n  public fileForType(type: string, name?: string): BuildCommand {\n      return Builder._fileForSource(this.buildCommands, type, name, null);\n  }\n\n  public fileWithDescription(type: string, description: string): BuildCommand {\n      return Builder._fileForSource(this.buildCommands, type, null, description);\n  }\n\n  public removeFileForType(type: string, name?: string) {\n\n      return Builder._removeFileForType(this.buildCommands, type, name);\n  }\n\n  public static _fileForSource(buildCommands: BuildCommand[], type: string, name: string, description: string): BuildCommand {\n\n      let file: BuildCommand = null;\n\n      for (var i = 0; i  {\n         d.buildCommands.push(BuildCommand.make(b));\n       });\n     }\n\n     return d;\n  }\n}\n\nexport class Port {\n\n  public publicPort: string;\n  public serviceType: string;\n\n  constructor(public internal: string, public external: string, public description: string, public type?: string) {\n\n  }\n\n  public static makeArray(array: any[]): Port[] {\n\n    let ports: Port[] = [];\n\n    array.forEach((p) => {\n      let port: Port = new Port(p.internal, p.external, p.description, p.type);\n      port.publicPort = p.publicPort;\n      port.serviceType = p.serviceType;\n\n      ports.push(port);\n    });\n\n    return ports;\n  }\n}\n\nexport class Probe {\n\n  public path: string;\n  public port: string;\n  public initialDelaySeconds: number;\n  public periodSeconds: number;\n  public timeoutSeconds: number;\n\n  public static make(data: any): Probe {\n\n    let p = new Probe();\n    p.path = data.path;\n    p.port = data.port;\n    p.initialDelaySeconds = Number(data.initialDelaySeconds);\n    p.periodSeconds = Number(data.periodSeconds);\n    p.timeoutSeconds = Number(data.timeoutSeconds);\n\n    return p;\n  }\n}\n\nexport class Container {\n\n  public name: string;\n  public names: string[];\n  public active: string;\n  public type: string;\n  public description: string;\n  public hostname: string;\n  public secure: string;\n  public image: string;\n  public build: DockerBuild;\n  public ports: Port[];\n  public env: Arg[];\n  public volumes: Arg[];\n  public readinessProbe;\n  public livenessProbe;\n  public testStatus : TestStatus;\n  public adminUser: string;\n  public adminPassword: string;\n\n  // runtime only\n\n  public id: string;\n  public state: string;\n  public status: string;\n  public created: Date;\n\n  constructor() {\n\n    this.active = \"true\";\n    this.ports = [];\n    this.env = [];\n    this.volumes = [];\n  }\n\n  public copy() {\n    return Container.make(this);\n  }\n\n  public uniqueName(usesDedicatedRepo: boolean): string {\n\n    let repo: string = this.repository();\n\n    if (repo)\n      return repo + (usesDedicatedRepo ? \"/\" : \":\") + this.imageName();\n    else\n      return this.imageName();\n  }\n\n  public repository(): string {\n\n    if (this.image.indexOf(\":\") != -1) {\n\n      return this.image.substring(0, this.image.indexOf(\":\"));\n    } else {\n      return null;\n    }\n  }\n\n  public imageName(): string {\n\n    let name: string = this.image;\n\n    let idx: number = name.indexOf(\":\");\n\n    if (idx != -1) {\n\n      let lside = name.substring(0, idx);\n      let rside = name.substring(idx+1);\n\n      if (DockerImage.isVersionNumber(rside)) {\n\n        // name is on left side\n\n         if (this.image.lastIndexOf(\"/\") != -1) {\n          let idx: number = this.image.lastIndexOf(\"/\");\n          let rdx: number = this.image.indexOf(\":\");\n\n          name = this.image.substring(idx+1, rdx);\n        }\n      } else {\n\n        // name and perhaps version is in right side\n\n        name = rside;\n\n        if (name.indexOf(\"-\") != -1) {\n\n          let idx: number = name.lastIndexOf(\"-\");\n          let b4: string = name.substring(0, idx);\n          let af: string = name.substring(idx+1, name.length);\n\n          if (DockerImage.isVersionNumber(af)) {\n            name = b4;\n          }\n        }\n      }\n    }\n\n    return name;\n  }\n\n  public preferredImageVersion(): string {\n\n    if (this.image && this.image.indexOf(\":\")) {\n\n      let version: string = this.image.substring(this.image.indexOf(\":\")+1, this.image.length);\n\n      if (version.indexOf(\"-\") != -1) {\n        let idx: number = version.lastIndexOf(\"-\");\n        version = version.substring(idx+1, version.length);\n      }\n\n      // no versioning, only a name\n\n      if (!DockerImage.isVersionNumber(version))\n          version = \"latest\";\n\n      return version;\n    } else {\n\n      return \"latest\";\n    }\n  }\n\n  public static make(data: any): Container {\n\n    let c: Container = new Container();\n    c.names = data.names;\n    if (data.names)\n      c.name = data.names[0];\n    else\n      c.name = data.name;\n\n    c.active = data.active;\n    c.description = data.description;\n    c.hostname = data.hostname;\n    c.secure  = data.secure;\n    c.image = data.image;\n    c.type = data.type;\n    c.adminUser = data.adminUser;\n    c.adminPassword = data.adminPassword;\n\n    if (data.build)\n      c.build = DockerBuild.make(data.build);\n\n    if (data.ports)\n      c.ports = Port.makeArray(data.ports);\n\n    if (data.env)\n      c.env = Arg.makeArray(data.env);\n\n    if (data.volumes)\n      c.volumes = Arg.makeArray(data.volumes);\n\n    if (data.readinessProbe)\n      c.readinessProbe = Probe.make(data.readinessProbe);\n\n    if (data.livenessProbe)\n      c.livenessProbe = Probe.make(data.livenessProbe);\n\n    return c;\n  }\n\n  public environmentVariable(id: string): Arg {\n\n    var arg: Arg = null;\n\n    for (var i = 0; i  {\n          s.tests.push(Test.make(t));\n        });\n    }\n\n    return s;\n  }\n\n  public isActive(): boolean {\n\n    return (this.apiDeployType != \"none\" && this.apiDeployType != null) || this.stop == \"true\" || (this.apiMaturity != \"none\" &&  this.apiMaturity != null) ||\n                  (this.dockerAction != \"none\"  && this.dockerAction != null) || this.dockerTag != null || this.stop != null;\n  }\n\n  public summary(): string {\n\n      var status: string = null;\n\n      if (this.apiDeployType == \"deploy\")\n          status = \"Deploy API's \";\n      else if (this.apiDeployType == \"promote\")\n        status = \"Promote API's to \" + this.apiStage;\n\n      if (this.runTests == \"true\") {\n\n        if (status != null)\n          status = status + \", run tests\";\n        else\n          status = \"Run tests\";\n      }\n\n      if (this.apiMaturity) {\n\n        if (status != null)\n            status = status + \", and set maturity to \" + this.apiMaturity;\n        else\n          status = \"Set maturity to \" + this.apiMaturity;\n      }\n\n      if (this.dockerTag) {\n\n        if (status != null)\n          status = status + \", then tag image\";\n        else\n          status = \"Tag image \";\n      }\n\n      if (this.dockerAction) {\n        if (status != null)\n          status = status + \", \" + this.dockerAction;\n        else\n          status = this.dockerAction;\n\n        status = status + \" image\";\n      }\n\n      if (this.stop == \"true\") {\n        if (status != null)\n            status = status + \" before stopping\";\n        else\n            status = \"stop containers\";\n      }\n\n      if (this.pipelineAction) {\n\n        if (status != null)\n            status = status + \", then \" + this.pipelineAction + \" pipeline\";\n        else\n            status = \"and \" + this.pipelineAction + \" pipeline execution\";\n      }\n\n      return status;\n    }\n}\n\nexport class Stage {\n\n    public id: string;\n    public name: string;\n    public containerHost: string;\n    public useKubernetes: string;\n    public buildOnStart: string;\n    public deployments: Deployment[];\n    public onStart: Action;\n    public onFail: Action;\n    public onSuccess: Action;\n\n    constructor() {\n      this.deployments = [];\n      this.useKubernetes = \"false\";\n      this.buildOnStart = \"false\";\n      this.onStart = new Action();\n      this.onSuccess = new Action();\n      this.onFail = new Action();\n    }\n\n    public copy(): Stage {\n\n      let c = Stage.make(this);\n\n      c.id = this.id + \" copy\";\n      c.name = this.name + \" copy\";\n\n      return c;\n    }\n\n    public static make(data: any): Stage {\n\n      let s: Stage = new Stage();\n\n      s.name = data.name;\n      s.id = s.name;\n      s.containerHost = data.containerHost;\n      s.useKubernetes = data.useKubernetes;\n      s.buildOnStart = data.buildOnStart;\n\n      if (data.deployments) {\n        data.deployments.forEach((c) => {\n          s.deployments.push(Deployment.make(c));\n        });\n      }\n\n      if (data.onStart) {\n        s.onStart = Action.make(data.onStart);\n      }\n\n      if (data.onSuccess) {\n        s.onSuccess = Action.make(data.onSuccess);\n      }\n\n      if (data.onFail) {\n        s.onFail = Action.make(data.onFail);\n      }\n\n      return s;\n    }\n}\n\nexport class Deployment {\n\n  public name: string;\n  public hostname: string;\n  public appName: string;\n  public apis: APIDefinition[];\n  public containers: Container[];\n  public replicas: string;\n  public serviceType: string;\n  public restartPolicy: string;\n  public requiresMonitoring: string;\n  public dependsOn: string;\n\n  constructor() {\n\n    this.containers = [];\n    this.apis = [];\n  }\n\n  public copy() {\n    return Deployment.make(this);\n  }\n\n  public static make(data: any): Deployment {\n\n    let s: Deployment = new Deployment();\n    s.name = data.name;\n    s.hostname = data.hostname;\n    s.replicas = data.replicas;\n    s.appName = data.appName;\n    s.serviceType = data.serviceType;\n    s.restartPolicy = data.restartPolicy;\n    s.requiresMonitoring = data.requiresMonitoring;\n    s.dependsOn = data.dependsOn;\n\n    if (data.apis) {\n       data.apis.forEach((a) => {\n         s.apis.push(APIDefinition.make(a));\n       });\n    }\n\n    if (data.containers) {\n       data.containers.forEach((c) => {\n         s.containers.push(Container.make(c));\n       });\n    }\n\n    return s;\n  }\n\n  public containerForType(type: string): Container {\n\n    let found: Container = null;\n\n    this.containers.forEach((c) => {\n\n      if (c.type == type) {\n        found = c;\n      }\n    });\n\n    return found;\n  }\n\n  public removeContainer(c: Container) {\n\n    var found : number = -1;\n\n    for (var i = 0; i  {\n         p.builds.push(Builder.make(i));\n       });\n    }\n\n    if (data.deployments) {\n      p.deployments = [];\n       data.deployments.forEach((i) => {\n         p.deployments.push(Deployment.make(i));\n       });\n    }\n\n    return p;\n  }\n\n  public serviceFor(id: string): Deployment {\n\n      let found: Deployment = null;\n\n      for (var z = 0; z  {\n         p.stages.push(Stage.make(s));\n       });\n    }\n\n    return p;\n  }\n}\n\nfunction stringifyReplacer(key, value) {\n  const originalObject = this[key];\n  if(originalObject instanceof Map) {\n    return {\n      dataType: 'Map',\n      value: Array.from(originalObject.entries()), // or with spread: value: [...originalObject]\n    };\n  } else {\n    return value;\n  }\n}\n\nfunction parserReviver(key, value) {\n  if(typeof value === 'object' && value !== null) {\n    if (value.dataType === 'Map') {\n      return new Map(value.value);\n    }\n  }\n  return value;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DeploymentDetailsComponent.html":{"url":"components/DeploymentDetailsComponent.html","title":"component - DeploymentDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DeploymentDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/k8s/deployment-details.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                jc-deployment-details\n            \n\n\n\n\n            \n                templateUrl\n                ../../templates/k8s/deployment-details.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                deployment\n                            \n                            \n                                isRuntime\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        deployment\n                    \n                \n                \n                    \n                        Type :         K8sDeploymentDefinition\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/k8s/deployment-details.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isRuntime\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/k8s/deployment-details.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            status\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    status()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/k8s/deployment-details.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, ChangeDetectorRef, Input }          from '@angular/core';\nimport { Router }                                       from '@angular/router';\n\nimport { Settings }                                     from '../../settings';\n\nimport { K8sDeploymentDefinition }                      from '../../models/k8s-deployment-definition';\nimport { K8sDeployment }                                from '../../models/k8s-deployment';\n\n@Component({\n  selector: 'jc-deployment-details',\n  templateUrl: '../../templates/k8s/deployment-details.html'\n})\n\nexport class DeploymentDetailsComponent {\n\n  @Input()\n  public isRuntime: boolean;\n\n  @Input()\n  public deployment: K8sDeploymentDefinition;\n\n  public status(): string {\n  \treturn \"ok\";\n  }\n}\n    \n\n    \n        \n\tName: {{deployment.name}}\n\tDescription: {{deployment.description}}\n\tStatus: {{status()}}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\tName: {{deployment.name}}\tDescription: {{deployment.description}}\tStatus: {{status()}}'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about-app'},{'name': 'ActionComponent', 'selector': 'action'},{'name': 'ApiGatewayInstallerComponent', 'selector': 'jc-apigw-install'},{'name': 'ApiMicroGatewayInstallerComponent', 'selector': 'jc-apimg-install'},{'name': 'ApiPortalInstallerComponent', 'selector': 'jc-apipr-installer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildCommandsComponent', 'selector': 'build-commands'},{'name': 'BuildComponent', 'selector': 'build'},{'name': 'BuildExeComponent', 'selector': 'build-exe'},{'name': 'BuildImageComponent', 'selector': 'build-solution'},{'name': 'BuildInstallComponent', 'selector': 'build-install'},{'name': 'BuildPackagesComponent', 'selector': 'build-package'},{'name': 'ContainerComponent', 'selector': 'container'},{'name': 'ContainersComponent', 'selector': 'app-containers'},{'name': 'DeploymentDetailsComponent', 'selector': 'jc-deployment-details'},{'name': 'DeploymentListComponent', 'selector': 'jc-k8s-deployments'},{'name': 'DockerImageChooserComponent', 'selector': 'docker-image-chooser'},{'name': 'DockerImageListComponent', 'selector': 'jc-docker-images'},{'name': 'DockerImageVersionsComponent', 'selector': 'jc-docker-image-versions'},{'name': 'EditContainerComponent', 'selector': 'edit-container'},{'name': 'GitSourcesComponent', 'selector': 'git-source'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'InstallerComponent', 'selector': 'jc-install'},{'name': 'MicroServiceBuilderComponent', 'selector': 'jc-msc-configure'},{'name': 'MicroServiceInstallerComponent', 'selector': 'jc-msc-install'},{'name': 'PodsListComponent', 'selector': 'jc-pods'},{'name': 'RuntimeContainersComponent', 'selector': 'runtime-containers'},{'name': 'RuntimeDeployComponent', 'selector': 'runtime-deploy'},{'name': 'RuntimeDetailsComponent', 'selector': ''},{'name': 'RuntimeK8sComponent', 'selector': 'runtime'},{'name': 'RuntimeScaleComponent', 'selector': 'jc-runtime-scale'},{'name': 'RuntimeStageComponent', 'selector': 'runtime-stage'},{'name': 'RuntimeUpdateComponent', 'selector': ''},{'name': 'SagImageAlerterComponent', 'selector': 'sag-image-alerter'},{'name': 'ServicePropertiesComponent', 'selector': 'k8s-props'},{'name': 'SettingsComponent', 'selector': 'home'},{'name': 'SimpleNameComponent', 'selector': 'name-dialog'},{'name': 'StagingComponent', 'selector': 'staging'},{'name': 'TestCaseComponent', 'selector': 'test-case'},{'name': 'TestDefinitionComponent', 'selector': 'test-definitions'},{'name': 'TestHistoryComponent', 'selector': 'test-history'},{'name': 'TestRunComponent', 'selector': 'test-reun'},{'name': 'UMInstallerComponent', 'selector': 'jc-um-install'},{'name': 'UploadButtonComponent', 'selector': 'file-uploader-button'}];\n    var DIRECTIVES = [{'name': 'BuildImageChooseDirective', 'selector': '[builder]'},{'name': 'CancelCdkDrag', 'selector': '[appCancelCdkDrag]'},{'name': 'NgFileDrop', 'selector': '[ng-file-drop]'},{'name': 'NgFileSelect', 'selector': '[ng-file-select]'},{'name': 'RuntimeActionsDirective', 'selector': '[runtime-actions]'}];\n    var ACTUAL_COMPONENT = {'name': 'DeploymentDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeploymentSet.html":{"url":"classes/DeploymentSet.html","title":"class - DeploymentSet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeploymentSet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/project.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                active\n                            \n                            \n                                    Public\n                                apis\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                source\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                make\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/models/project.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apis\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     APIDefinition[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Source\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:9\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            make\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    make(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/project.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DeploymentSet\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { APIDefinition }                        from '../models/wm-package-info'\nimport { Source }                               from '../models/git-source';\nimport { DockerImage, TestStatus }              from '../models/docker-image';\n\nexport class DeploymentSet {\n\n  public id: string;\n  public name: string;\n  public source: Source;\n  public active: string;\n  public apis: APIDefinition[];\n\n  public constructor() {\n      this.apis = [];\n      this.source = new Source();\n  }\n\n  public static make(data: any): DeploymentSet {\n\n      let p: DeploymentSet = new DeploymentSet();\n      p.id = data.name;\n      p.name = data.name;\n\n      if (data.source)\n       p.source = Source.make(data.source);\n\n      p.apis = [];\n\n      if (data.apis) {\n\n        data.apis.forEach((a) => {\n          p.apis.push(APIDefinition.make(a));\n        });\n      }\n\n      return p;\n  }\n}\n\nexport enum DisplayType {\n  hidden = \"hidden\",\n  readonly = \"readonly\",\n  editable = \"editable\",\n  password = \"password\",\n  file = \"file\",\n  dropdown = \"dropdown\",\n  yesno = \"yesno\"\n}\n\nexport class BuildCommand {\n\n  public commandType: string;\n  public buildTarget: string;\n  public fileType: string;\n  public source: string;\n  public target: string;\n  public description: string = \"\";\n  public display: DisplayType = DisplayType.hidden;\n  public required: boolean = true;\n  public conditions: string[];\n\n  public static make(d: any): BuildCommand {\n\n    let f: BuildCommand = new BuildCommand();\n    f.commandType = d.commandType;\n    f.buildTarget = d.buildTarget;\n    f.fileType = d.fileType;\n    f.source = d.source;\n    f.target = d.target;\n    f.description = d.description;\n    f.conditions = d.conditions;\n\n    if (d.display == \"editable\")\n      f.display = DisplayType.editable;\n    else if (d.display == \"readonly\")\n      f.display = DisplayType.readonly;\n    else if (d.display == \"file\")\n      f.display = DisplayType.file;\n    else\n      f.display = DisplayType.hidden;\n\n    f.required = false;\n    return f;\n  }\n\n  copy() {\n    return BuildCommand.make(this);\n  }\n\n  public equals(b: BuildCommand): boolean {\n\n    return (b.source && b.source == this.source) || (!b.source && b.target == this.target);\n  }\n\n  public matchConditions(args: Map): boolean {\n\n    return ArgDisplayType._matchConditions(this.conditions, args);\n  }\n}\n\nexport interface BuildParams {\n\n  name: string;\n  publicPort(): string;\n  setPublicPort(port: string);\n  assignedLicense(): string;\n  hostName: string;\n  entryPoint: string;\n  exitPoint: string;\n  healthCheck: string;\n  args: Map\n  buildCommands: BuildCommand[];\n\n  fileForType(type: string): BuildCommand;\n  isCustomImage(): boolean;\n}\n\nexport class ArgDisplayType {\n\n  public name: string;\n  public description: string;\n  public display: DisplayType = DisplayType.hidden;\n  public conditions: string[];\n  public choices: string[];\n  public required: boolean = true;\n\n  public constructor(name: string) {\n    this.name = name;\n    this.description = this.name;\n    this.conditions = [];\n    this.choices = [];\n  }\n\n  public copy(): ArgDisplayType {\n\n      let copy: ArgDisplayType = new ArgDisplayType(this.name);\n      copy.description = this.description;\n      copy.display = this.display;\n      copy.conditions = this.conditions;\n      copy.choices = this.choices;\n      copy.required = this.required;\n\n      return copy;\n  }\n\n  public static make(d: any): ArgDisplayType {\n\n    let a: ArgDisplayType = new ArgDisplayType(d.name);\n\n    if (d.display == \"editable\")\n      a.display = DisplayType.editable;\n    else if (d.display == \"readonly\")\n      a.display = DisplayType.readonly;\n    else if (d.display == \"file\")\n      a.display = DisplayType.file;\n    else if (d.display == \"password\")\n      a.display = DisplayType.password;\n    else if (d.display == \"yesno\")\n      a.display = DisplayType.yesno;\n    else if (d.display == \"dropdown\")\n      a.display = DisplayType.dropdown;\n    else\n      a.display = DisplayType.hidden;\n\n    if (d.required != null)\n      a.required = d.required;\n\n    a.description = d.description || d.name;\n\n    if (d.conditions)\n      a.conditions = d.conditions;\n\n    if (a.choices)\n      a.choices = d.choices;\n\n    return a;\n  }\n\n  public matchConditions(args: Map): boolean {\n\n      return ArgDisplayType._matchConditions(this.conditions, args);\n  }\n\n  public static _matchConditions(conditions: string[], args: Map): boolean {\n\n      if (conditions && conditions.length > 0) {\n\n        let matched: boolean = false;\n\n        for (let i = 0; i  {\n      args.push(new Arg(a.source, a.target, a.description));\n    });\n\n    return args;\n  }\n\n}\n\nexport class Installer implements BuildParams {\n\n    public name: string;\n    public sourceImageTag: string;\n    public isNew: string = \"true\";\n    public targetImage: DockerImage;\n    public productType: string;\n    public licenseFile: string;\n    public primaryPort: string;\n    public hostName: string;\n    public wmInstallerImage: string;\n    public includeUpdate: string = \"false\";\n    public buildCommands: BuildCommand[];\n    public args: Map;\n    public isSAGProduct: string = \"true\";\n\n    public entryPoint: string;\n    public exitPoint: string;\n    public healthCheck: string;\n\n    public constructor() {\n\n    this.sourceImageTag = \"centos:latest\";\n    this.targetImage = new DockerImage();\n    this.buildCommands = [];\n    this.args = new Map();\n  }\n\n  public copy(): Installer {\n\n    return Installer.make(this);\n  }\n\n  public static parse(data: string): Installer {\n\n    return this.make(JSON.parse(data, parserReviver).install);\n  }\n\n  public isCustomImage(): boolean {\n    return true;\n  }\n\n  public static make(data: any): Installer {\n\n    let i: Installer = new Installer();\n    i.name = data.name;\n    i.isSAGProduct = data.isSAGProduct;\n    i.args = data.args;\n    i.productType = data.productType;\n    i.wmInstallerImage = data.wmInstallerImage;\n    i.sourceImageTag = data.sourceImageTag;\n\n    if (data.targetImage)\n      i.targetImage = DockerImage.make(data.targetImage);\n\n    i.licenseFile = data.licenseFile;\n    i.primaryPort = data.primaryPort;\n    i.isNew = data.isNew;\n    i.includeUpdate = data.includeUpdate;\n    i.hostName = data.hostName;\n    i.entryPoint = data.entryPoint;\n    i.exitPoint = data.exitPoint;\n    i.healthCheck = data.healthCheck;\n    i.healthCheck = data.healthCheck;\n\n    if (!i.args)\n       i.args = new Map();\n\n    if (data.buildCommands) {\n      data.buildCommands.forEach((f) => {\n        i.buildCommands.push(BuildCommand.make(f));\n      });\n    }\n\n    return i;\n  }\n\n  public publicPort(): string {\n    return this.primaryPort;\n  }\n\n  public setPublicPort(port: string) {\n    this.primaryPort = port;\n  }\n\n  public assignedLicense(): string {\n\n    return this.licenseFile;\n  }\n\n  public fileForType(type: string, name?: string): BuildCommand {\n\n      return Builder._fileForSource(this.buildCommands, type, name, null);\n  }\n\n  public fileWithDescription(type: string, description: string): BuildCommand {\n      return Builder._fileForSource(this.buildCommands, type, null, description);\n  }\n\n  public removeFileForType(type: string, name?: string) {\n\n      return Builder._removeFileForType(this.buildCommands, type, name);\n  }\n\n  public toString(): string {\n    return JSON.stringify(this, stringifyReplacer);\n  }\n}\n\nexport class Builder implements BuildParams {\n\n  public name: string;\n  public deploymentType: string;\n  public deployments: DeploymentSet[];\n\n  public sourceImage: DockerImage;\n  public targetImage: DockerImage;\n  public version: string;\n  public testStatus: string;\n  public buildCommands: BuildCommand[];\n  public hasTests: string;\n  public buildUser: string;\n  public entryUser: string;\n  public entryPoint: string;\n  public exitPoint: string;\n  public healthCheck: string;\n  public args: Map;\n\n  public hostName: string; // not used!!\n\n  public constructor() {\n\n    this.sourceImage = new DockerImage();\n    this.targetImage = new DockerImage();\n    this.buildCommands = [];\n\n    this.args = new Map();\n  }\n\n  public hyphenatedName(): string {\n\n    return this.name.toLowerCase().replace(/\\s/g, \"-\");\n  }\n\n  public static make(data: any): Builder {\n\n    let b: Builder = new Builder();\n    b.name = data.name;\n    b.deploymentType = data.type;\n\n    b.deployments = [];\n\n    if (data.deployments) {\n      data.deployments.forEach((d) => {\n            b.deployments.push(DeploymentSet.make(d));\n      });\n    }\n\n    if (data.buildCommands) {\n      data.buildCommands.forEach((f) => {\n            b.buildCommands.push(BuildCommand.make(f));\n      });\n    }\n\n    b.sourceImage = DockerImage.make(data.sourceImage);\n    b.targetImage = DockerImage.make(data.targetImage);\n    b.version = data.version;\n    b.testStatus = data.testStatus;\n    b.buildUser = data.buildUser;\n    b.entryUser = data.entryUser;\n    b.entryPoint = data.entryPoint;\n    b.exitPoint = data.exitPoint;\n    b.healthCheck = data.healthCheck;\n\n    if (data.hasTests && data.hasTests == 'true')\n      b.hasTests = \"true\";\n\n    return b;\n  }\n\n  public publicPort(): string {\n    return this.sourceImage.primaryPort;\n  }\n\n  public setPublicPort(port: string) {\n    this.sourceImage.primaryPort = port;\n  }\n\n  public assignedLicense(): string {\n\n    let lic: BuildCommand = this.fileWithDescription(\"licenses\",'Product License');\n\n    if (lic) {\n      return lic.target.replace(/\\-/g, \" \");\n    } else {\n      return null;\n    }\n  }\n\n  public isCustomImage(): boolean {\n    return this.sourceImage.isCustom;\n  }\n\n  public fileForType(type: string, name?: string): BuildCommand {\n      return Builder._fileForSource(this.buildCommands, type, name, null);\n  }\n\n  public fileWithDescription(type: string, description: string): BuildCommand {\n      return Builder._fileForSource(this.buildCommands, type, null, description);\n  }\n\n  public removeFileForType(type: string, name?: string) {\n\n      return Builder._removeFileForType(this.buildCommands, type, name);\n  }\n\n  public static _fileForSource(buildCommands: BuildCommand[], type: string, name: string, description: string): BuildCommand {\n\n      let file: BuildCommand = null;\n\n      for (var i = 0; i  {\n         d.buildCommands.push(BuildCommand.make(b));\n       });\n     }\n\n     return d;\n  }\n}\n\nexport class Port {\n\n  public publicPort: string;\n  public serviceType: string;\n\n  constructor(public internal: string, public external: string, public description: string, public type?: string) {\n\n  }\n\n  public static makeArray(array: any[]): Port[] {\n\n    let ports: Port[] = [];\n\n    array.forEach((p) => {\n      let port: Port = new Port(p.internal, p.external, p.description, p.type);\n      port.publicPort = p.publicPort;\n      port.serviceType = p.serviceType;\n\n      ports.push(port);\n    });\n\n    return ports;\n  }\n}\n\nexport class Probe {\n\n  public path: string;\n  public port: string;\n  public initialDelaySeconds: number;\n  public periodSeconds: number;\n  public timeoutSeconds: number;\n\n  public static make(data: any): Probe {\n\n    let p = new Probe();\n    p.path = data.path;\n    p.port = data.port;\n    p.initialDelaySeconds = Number(data.initialDelaySeconds);\n    p.periodSeconds = Number(data.periodSeconds);\n    p.timeoutSeconds = Number(data.timeoutSeconds);\n\n    return p;\n  }\n}\n\nexport class Container {\n\n  public name: string;\n  public names: string[];\n  public active: string;\n  public type: string;\n  public description: string;\n  public hostname: string;\n  public secure: string;\n  public image: string;\n  public build: DockerBuild;\n  public ports: Port[];\n  public env: Arg[];\n  public volumes: Arg[];\n  public readinessProbe;\n  public livenessProbe;\n  public testStatus : TestStatus;\n  public adminUser: string;\n  public adminPassword: string;\n\n  // runtime only\n\n  public id: string;\n  public state: string;\n  public status: string;\n  public created: Date;\n\n  constructor() {\n\n    this.active = \"true\";\n    this.ports = [];\n    this.env = [];\n    this.volumes = [];\n  }\n\n  public copy() {\n    return Container.make(this);\n  }\n\n  public uniqueName(usesDedicatedRepo: boolean): string {\n\n    let repo: string = this.repository();\n\n    if (repo)\n      return repo + (usesDedicatedRepo ? \"/\" : \":\") + this.imageName();\n    else\n      return this.imageName();\n  }\n\n  public repository(): string {\n\n    if (this.image.indexOf(\":\") != -1) {\n\n      return this.image.substring(0, this.image.indexOf(\":\"));\n    } else {\n      return null;\n    }\n  }\n\n  public imageName(): string {\n\n    let name: string = this.image;\n\n    let idx: number = name.indexOf(\":\");\n\n    if (idx != -1) {\n\n      let lside = name.substring(0, idx);\n      let rside = name.substring(idx+1);\n\n      if (DockerImage.isVersionNumber(rside)) {\n\n        // name is on left side\n\n         if (this.image.lastIndexOf(\"/\") != -1) {\n          let idx: number = this.image.lastIndexOf(\"/\");\n          let rdx: number = this.image.indexOf(\":\");\n\n          name = this.image.substring(idx+1, rdx);\n        }\n      } else {\n\n        // name and perhaps version is in right side\n\n        name = rside;\n\n        if (name.indexOf(\"-\") != -1) {\n\n          let idx: number = name.lastIndexOf(\"-\");\n          let b4: string = name.substring(0, idx);\n          let af: string = name.substring(idx+1, name.length);\n\n          if (DockerImage.isVersionNumber(af)) {\n            name = b4;\n          }\n        }\n      }\n    }\n\n    return name;\n  }\n\n  public preferredImageVersion(): string {\n\n    if (this.image && this.image.indexOf(\":\")) {\n\n      let version: string = this.image.substring(this.image.indexOf(\":\")+1, this.image.length);\n\n      if (version.indexOf(\"-\") != -1) {\n        let idx: number = version.lastIndexOf(\"-\");\n        version = version.substring(idx+1, version.length);\n      }\n\n      // no versioning, only a name\n\n      if (!DockerImage.isVersionNumber(version))\n          version = \"latest\";\n\n      return version;\n    } else {\n\n      return \"latest\";\n    }\n  }\n\n  public static make(data: any): Container {\n\n    let c: Container = new Container();\n    c.names = data.names;\n    if (data.names)\n      c.name = data.names[0];\n    else\n      c.name = data.name;\n\n    c.active = data.active;\n    c.description = data.description;\n    c.hostname = data.hostname;\n    c.secure  = data.secure;\n    c.image = data.image;\n    c.type = data.type;\n    c.adminUser = data.adminUser;\n    c.adminPassword = data.adminPassword;\n\n    if (data.build)\n      c.build = DockerBuild.make(data.build);\n\n    if (data.ports)\n      c.ports = Port.makeArray(data.ports);\n\n    if (data.env)\n      c.env = Arg.makeArray(data.env);\n\n    if (data.volumes)\n      c.volumes = Arg.makeArray(data.volumes);\n\n    if (data.readinessProbe)\n      c.readinessProbe = Probe.make(data.readinessProbe);\n\n    if (data.livenessProbe)\n      c.livenessProbe = Probe.make(data.livenessProbe);\n\n    return c;\n  }\n\n  public environmentVariable(id: string): Arg {\n\n    var arg: Arg = null;\n\n    for (var i = 0; i  {\n          s.tests.push(Test.make(t));\n        });\n    }\n\n    return s;\n  }\n\n  public isActive(): boolean {\n\n    return (this.apiDeployType != \"none\" && this.apiDeployType != null) || this.stop == \"true\" || (this.apiMaturity != \"none\" &&  this.apiMaturity != null) ||\n                  (this.dockerAction != \"none\"  && this.dockerAction != null) || this.dockerTag != null || this.stop != null;\n  }\n\n  public summary(): string {\n\n      var status: string = null;\n\n      if (this.apiDeployType == \"deploy\")\n          status = \"Deploy API's \";\n      else if (this.apiDeployType == \"promote\")\n        status = \"Promote API's to \" + this.apiStage;\n\n      if (this.runTests == \"true\") {\n\n        if (status != null)\n          status = status + \", run tests\";\n        else\n          status = \"Run tests\";\n      }\n\n      if (this.apiMaturity) {\n\n        if (status != null)\n            status = status + \", and set maturity to \" + this.apiMaturity;\n        else\n          status = \"Set maturity to \" + this.apiMaturity;\n      }\n\n      if (this.dockerTag) {\n\n        if (status != null)\n          status = status + \", then tag image\";\n        else\n          status = \"Tag image \";\n      }\n\n      if (this.dockerAction) {\n        if (status != null)\n          status = status + \", \" + this.dockerAction;\n        else\n          status = this.dockerAction;\n\n        status = status + \" image\";\n      }\n\n      if (this.stop == \"true\") {\n        if (status != null)\n            status = status + \" before stopping\";\n        else\n            status = \"stop containers\";\n      }\n\n      if (this.pipelineAction) {\n\n        if (status != null)\n            status = status + \", then \" + this.pipelineAction + \" pipeline\";\n        else\n            status = \"and \" + this.pipelineAction + \" pipeline execution\";\n      }\n\n      return status;\n    }\n}\n\nexport class Stage {\n\n    public id: string;\n    public name: string;\n    public containerHost: string;\n    public useKubernetes: string;\n    public buildOnStart: string;\n    public deployments: Deployment[];\n    public onStart: Action;\n    public onFail: Action;\n    public onSuccess: Action;\n\n    constructor() {\n      this.deployments = [];\n      this.useKubernetes = \"false\";\n      this.buildOnStart = \"false\";\n      this.onStart = new Action();\n      this.onSuccess = new Action();\n      this.onFail = new Action();\n    }\n\n    public copy(): Stage {\n\n      let c = Stage.make(this);\n\n      c.id = this.id + \" copy\";\n      c.name = this.name + \" copy\";\n\n      return c;\n    }\n\n    public static make(data: any): Stage {\n\n      let s: Stage = new Stage();\n\n      s.name = data.name;\n      s.id = s.name;\n      s.containerHost = data.containerHost;\n      s.useKubernetes = data.useKubernetes;\n      s.buildOnStart = data.buildOnStart;\n\n      if (data.deployments) {\n        data.deployments.forEach((c) => {\n          s.deployments.push(Deployment.make(c));\n        });\n      }\n\n      if (data.onStart) {\n        s.onStart = Action.make(data.onStart);\n      }\n\n      if (data.onSuccess) {\n        s.onSuccess = Action.make(data.onSuccess);\n      }\n\n      if (data.onFail) {\n        s.onFail = Action.make(data.onFail);\n      }\n\n      return s;\n    }\n}\n\nexport class Deployment {\n\n  public name: string;\n  public hostname: string;\n  public appName: string;\n  public apis: APIDefinition[];\n  public containers: Container[];\n  public replicas: string;\n  public serviceType: string;\n  public restartPolicy: string;\n  public requiresMonitoring: string;\n  public dependsOn: string;\n\n  constructor() {\n\n    this.containers = [];\n    this.apis = [];\n  }\n\n  public copy() {\n    return Deployment.make(this);\n  }\n\n  public static make(data: any): Deployment {\n\n    let s: Deployment = new Deployment();\n    s.name = data.name;\n    s.hostname = data.hostname;\n    s.replicas = data.replicas;\n    s.appName = data.appName;\n    s.serviceType = data.serviceType;\n    s.restartPolicy = data.restartPolicy;\n    s.requiresMonitoring = data.requiresMonitoring;\n    s.dependsOn = data.dependsOn;\n\n    if (data.apis) {\n       data.apis.forEach((a) => {\n         s.apis.push(APIDefinition.make(a));\n       });\n    }\n\n    if (data.containers) {\n       data.containers.forEach((c) => {\n         s.containers.push(Container.make(c));\n       });\n    }\n\n    return s;\n  }\n\n  public containerForType(type: string): Container {\n\n    let found: Container = null;\n\n    this.containers.forEach((c) => {\n\n      if (c.type == type) {\n        found = c;\n      }\n    });\n\n    return found;\n  }\n\n  public removeContainer(c: Container) {\n\n    var found : number = -1;\n\n    for (var i = 0; i  {\n         p.builds.push(Builder.make(i));\n       });\n    }\n\n    if (data.deployments) {\n      p.deployments = [];\n       data.deployments.forEach((i) => {\n         p.deployments.push(Deployment.make(i));\n       });\n    }\n\n    return p;\n  }\n\n  public serviceFor(id: string): Deployment {\n\n      let found: Deployment = null;\n\n      for (var z = 0; z  {\n         p.stages.push(Stage.make(s));\n       });\n    }\n\n    return p;\n  }\n}\n\nfunction stringifyReplacer(key, value) {\n  const originalObject = this[key];\n  if(originalObject instanceof Map) {\n    return {\n      dataType: 'Map',\n      value: Array.from(originalObject.entries()), // or with spread: value: [...originalObject]\n    };\n  } else {\n    return value;\n  }\n}\n\nfunction parserReviver(key, value) {\n  if(typeof value === 'object' && value !== null) {\n    if (value.dataType === 'Map') {\n      return new Map(value.value);\n    }\n  }\n  return value;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DockerBuild.html":{"url":"classes/DockerBuild.html","title":"class - DockerBuild","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DockerBuild\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/project.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                buildCommands\n                            \n                            \n                                    Public\n                                context\n                            \n                            \n                                    Public\n                                dockerfile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                make\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cmd?: BuildCommand)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/project.ts:497\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cmd\n                                                  \n                                                        \n                                                                        BuildCommand\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            buildCommands\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BuildCommand[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:497\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:495\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dockerfile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:496\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            make\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    make(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/project.ts:506\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DockerBuild\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { APIDefinition }                        from '../models/wm-package-info'\nimport { Source }                               from '../models/git-source';\nimport { DockerImage, TestStatus }              from '../models/docker-image';\n\nexport class DeploymentSet {\n\n  public id: string;\n  public name: string;\n  public source: Source;\n  public active: string;\n  public apis: APIDefinition[];\n\n  public constructor() {\n      this.apis = [];\n      this.source = new Source();\n  }\n\n  public static make(data: any): DeploymentSet {\n\n      let p: DeploymentSet = new DeploymentSet();\n      p.id = data.name;\n      p.name = data.name;\n\n      if (data.source)\n       p.source = Source.make(data.source);\n\n      p.apis = [];\n\n      if (data.apis) {\n\n        data.apis.forEach((a) => {\n          p.apis.push(APIDefinition.make(a));\n        });\n      }\n\n      return p;\n  }\n}\n\nexport enum DisplayType {\n  hidden = \"hidden\",\n  readonly = \"readonly\",\n  editable = \"editable\",\n  password = \"password\",\n  file = \"file\",\n  dropdown = \"dropdown\",\n  yesno = \"yesno\"\n}\n\nexport class BuildCommand {\n\n  public commandType: string;\n  public buildTarget: string;\n  public fileType: string;\n  public source: string;\n  public target: string;\n  public description: string = \"\";\n  public display: DisplayType = DisplayType.hidden;\n  public required: boolean = true;\n  public conditions: string[];\n\n  public static make(d: any): BuildCommand {\n\n    let f: BuildCommand = new BuildCommand();\n    f.commandType = d.commandType;\n    f.buildTarget = d.buildTarget;\n    f.fileType = d.fileType;\n    f.source = d.source;\n    f.target = d.target;\n    f.description = d.description;\n    f.conditions = d.conditions;\n\n    if (d.display == \"editable\")\n      f.display = DisplayType.editable;\n    else if (d.display == \"readonly\")\n      f.display = DisplayType.readonly;\n    else if (d.display == \"file\")\n      f.display = DisplayType.file;\n    else\n      f.display = DisplayType.hidden;\n\n    f.required = false;\n    return f;\n  }\n\n  copy() {\n    return BuildCommand.make(this);\n  }\n\n  public equals(b: BuildCommand): boolean {\n\n    return (b.source && b.source == this.source) || (!b.source && b.target == this.target);\n  }\n\n  public matchConditions(args: Map): boolean {\n\n    return ArgDisplayType._matchConditions(this.conditions, args);\n  }\n}\n\nexport interface BuildParams {\n\n  name: string;\n  publicPort(): string;\n  setPublicPort(port: string);\n  assignedLicense(): string;\n  hostName: string;\n  entryPoint: string;\n  exitPoint: string;\n  healthCheck: string;\n  args: Map\n  buildCommands: BuildCommand[];\n\n  fileForType(type: string): BuildCommand;\n  isCustomImage(): boolean;\n}\n\nexport class ArgDisplayType {\n\n  public name: string;\n  public description: string;\n  public display: DisplayType = DisplayType.hidden;\n  public conditions: string[];\n  public choices: string[];\n  public required: boolean = true;\n\n  public constructor(name: string) {\n    this.name = name;\n    this.description = this.name;\n    this.conditions = [];\n    this.choices = [];\n  }\n\n  public copy(): ArgDisplayType {\n\n      let copy: ArgDisplayType = new ArgDisplayType(this.name);\n      copy.description = this.description;\n      copy.display = this.display;\n      copy.conditions = this.conditions;\n      copy.choices = this.choices;\n      copy.required = this.required;\n\n      return copy;\n  }\n\n  public static make(d: any): ArgDisplayType {\n\n    let a: ArgDisplayType = new ArgDisplayType(d.name);\n\n    if (d.display == \"editable\")\n      a.display = DisplayType.editable;\n    else if (d.display == \"readonly\")\n      a.display = DisplayType.readonly;\n    else if (d.display == \"file\")\n      a.display = DisplayType.file;\n    else if (d.display == \"password\")\n      a.display = DisplayType.password;\n    else if (d.display == \"yesno\")\n      a.display = DisplayType.yesno;\n    else if (d.display == \"dropdown\")\n      a.display = DisplayType.dropdown;\n    else\n      a.display = DisplayType.hidden;\n\n    if (d.required != null)\n      a.required = d.required;\n\n    a.description = d.description || d.name;\n\n    if (d.conditions)\n      a.conditions = d.conditions;\n\n    if (a.choices)\n      a.choices = d.choices;\n\n    return a;\n  }\n\n  public matchConditions(args: Map): boolean {\n\n      return ArgDisplayType._matchConditions(this.conditions, args);\n  }\n\n  public static _matchConditions(conditions: string[], args: Map): boolean {\n\n      if (conditions && conditions.length > 0) {\n\n        let matched: boolean = false;\n\n        for (let i = 0; i  {\n      args.push(new Arg(a.source, a.target, a.description));\n    });\n\n    return args;\n  }\n\n}\n\nexport class Installer implements BuildParams {\n\n    public name: string;\n    public sourceImageTag: string;\n    public isNew: string = \"true\";\n    public targetImage: DockerImage;\n    public productType: string;\n    public licenseFile: string;\n    public primaryPort: string;\n    public hostName: string;\n    public wmInstallerImage: string;\n    public includeUpdate: string = \"false\";\n    public buildCommands: BuildCommand[];\n    public args: Map;\n    public isSAGProduct: string = \"true\";\n\n    public entryPoint: string;\n    public exitPoint: string;\n    public healthCheck: string;\n\n    public constructor() {\n\n    this.sourceImageTag = \"centos:latest\";\n    this.targetImage = new DockerImage();\n    this.buildCommands = [];\n    this.args = new Map();\n  }\n\n  public copy(): Installer {\n\n    return Installer.make(this);\n  }\n\n  public static parse(data: string): Installer {\n\n    return this.make(JSON.parse(data, parserReviver).install);\n  }\n\n  public isCustomImage(): boolean {\n    return true;\n  }\n\n  public static make(data: any): Installer {\n\n    let i: Installer = new Installer();\n    i.name = data.name;\n    i.isSAGProduct = data.isSAGProduct;\n    i.args = data.args;\n    i.productType = data.productType;\n    i.wmInstallerImage = data.wmInstallerImage;\n    i.sourceImageTag = data.sourceImageTag;\n\n    if (data.targetImage)\n      i.targetImage = DockerImage.make(data.targetImage);\n\n    i.licenseFile = data.licenseFile;\n    i.primaryPort = data.primaryPort;\n    i.isNew = data.isNew;\n    i.includeUpdate = data.includeUpdate;\n    i.hostName = data.hostName;\n    i.entryPoint = data.entryPoint;\n    i.exitPoint = data.exitPoint;\n    i.healthCheck = data.healthCheck;\n    i.healthCheck = data.healthCheck;\n\n    if (!i.args)\n       i.args = new Map();\n\n    if (data.buildCommands) {\n      data.buildCommands.forEach((f) => {\n        i.buildCommands.push(BuildCommand.make(f));\n      });\n    }\n\n    return i;\n  }\n\n  public publicPort(): string {\n    return this.primaryPort;\n  }\n\n  public setPublicPort(port: string) {\n    this.primaryPort = port;\n  }\n\n  public assignedLicense(): string {\n\n    return this.licenseFile;\n  }\n\n  public fileForType(type: string, name?: string): BuildCommand {\n\n      return Builder._fileForSource(this.buildCommands, type, name, null);\n  }\n\n  public fileWithDescription(type: string, description: string): BuildCommand {\n      return Builder._fileForSource(this.buildCommands, type, null, description);\n  }\n\n  public removeFileForType(type: string, name?: string) {\n\n      return Builder._removeFileForType(this.buildCommands, type, name);\n  }\n\n  public toString(): string {\n    return JSON.stringify(this, stringifyReplacer);\n  }\n}\n\nexport class Builder implements BuildParams {\n\n  public name: string;\n  public deploymentType: string;\n  public deployments: DeploymentSet[];\n\n  public sourceImage: DockerImage;\n  public targetImage: DockerImage;\n  public version: string;\n  public testStatus: string;\n  public buildCommands: BuildCommand[];\n  public hasTests: string;\n  public buildUser: string;\n  public entryUser: string;\n  public entryPoint: string;\n  public exitPoint: string;\n  public healthCheck: string;\n  public args: Map;\n\n  public hostName: string; // not used!!\n\n  public constructor() {\n\n    this.sourceImage = new DockerImage();\n    this.targetImage = new DockerImage();\n    this.buildCommands = [];\n\n    this.args = new Map();\n  }\n\n  public hyphenatedName(): string {\n\n    return this.name.toLowerCase().replace(/\\s/g, \"-\");\n  }\n\n  public static make(data: any): Builder {\n\n    let b: Builder = new Builder();\n    b.name = data.name;\n    b.deploymentType = data.type;\n\n    b.deployments = [];\n\n    if (data.deployments) {\n      data.deployments.forEach((d) => {\n            b.deployments.push(DeploymentSet.make(d));\n      });\n    }\n\n    if (data.buildCommands) {\n      data.buildCommands.forEach((f) => {\n            b.buildCommands.push(BuildCommand.make(f));\n      });\n    }\n\n    b.sourceImage = DockerImage.make(data.sourceImage);\n    b.targetImage = DockerImage.make(data.targetImage);\n    b.version = data.version;\n    b.testStatus = data.testStatus;\n    b.buildUser = data.buildUser;\n    b.entryUser = data.entryUser;\n    b.entryPoint = data.entryPoint;\n    b.exitPoint = data.exitPoint;\n    b.healthCheck = data.healthCheck;\n\n    if (data.hasTests && data.hasTests == 'true')\n      b.hasTests = \"true\";\n\n    return b;\n  }\n\n  public publicPort(): string {\n    return this.sourceImage.primaryPort;\n  }\n\n  public setPublicPort(port: string) {\n    this.sourceImage.primaryPort = port;\n  }\n\n  public assignedLicense(): string {\n\n    let lic: BuildCommand = this.fileWithDescription(\"licenses\",'Product License');\n\n    if (lic) {\n      return lic.target.replace(/\\-/g, \" \");\n    } else {\n      return null;\n    }\n  }\n\n  public isCustomImage(): boolean {\n    return this.sourceImage.isCustom;\n  }\n\n  public fileForType(type: string, name?: string): BuildCommand {\n      return Builder._fileForSource(this.buildCommands, type, name, null);\n  }\n\n  public fileWithDescription(type: string, description: string): BuildCommand {\n      return Builder._fileForSource(this.buildCommands, type, null, description);\n  }\n\n  public removeFileForType(type: string, name?: string) {\n\n      return Builder._removeFileForType(this.buildCommands, type, name);\n  }\n\n  public static _fileForSource(buildCommands: BuildCommand[], type: string, name: string, description: string): BuildCommand {\n\n      let file: BuildCommand = null;\n\n      for (var i = 0; i  {\n         d.buildCommands.push(BuildCommand.make(b));\n       });\n     }\n\n     return d;\n  }\n}\n\nexport class Port {\n\n  public publicPort: string;\n  public serviceType: string;\n\n  constructor(public internal: string, public external: string, public description: string, public type?: string) {\n\n  }\n\n  public static makeArray(array: any[]): Port[] {\n\n    let ports: Port[] = [];\n\n    array.forEach((p) => {\n      let port: Port = new Port(p.internal, p.external, p.description, p.type);\n      port.publicPort = p.publicPort;\n      port.serviceType = p.serviceType;\n\n      ports.push(port);\n    });\n\n    return ports;\n  }\n}\n\nexport class Probe {\n\n  public path: string;\n  public port: string;\n  public initialDelaySeconds: number;\n  public periodSeconds: number;\n  public timeoutSeconds: number;\n\n  public static make(data: any): Probe {\n\n    let p = new Probe();\n    p.path = data.path;\n    p.port = data.port;\n    p.initialDelaySeconds = Number(data.initialDelaySeconds);\n    p.periodSeconds = Number(data.periodSeconds);\n    p.timeoutSeconds = Number(data.timeoutSeconds);\n\n    return p;\n  }\n}\n\nexport class Container {\n\n  public name: string;\n  public names: string[];\n  public active: string;\n  public type: string;\n  public description: string;\n  public hostname: string;\n  public secure: string;\n  public image: string;\n  public build: DockerBuild;\n  public ports: Port[];\n  public env: Arg[];\n  public volumes: Arg[];\n  public readinessProbe;\n  public livenessProbe;\n  public testStatus : TestStatus;\n  public adminUser: string;\n  public adminPassword: string;\n\n  // runtime only\n\n  public id: string;\n  public state: string;\n  public status: string;\n  public created: Date;\n\n  constructor() {\n\n    this.active = \"true\";\n    this.ports = [];\n    this.env = [];\n    this.volumes = [];\n  }\n\n  public copy() {\n    return Container.make(this);\n  }\n\n  public uniqueName(usesDedicatedRepo: boolean): string {\n\n    let repo: string = this.repository();\n\n    if (repo)\n      return repo + (usesDedicatedRepo ? \"/\" : \":\") + this.imageName();\n    else\n      return this.imageName();\n  }\n\n  public repository(): string {\n\n    if (this.image.indexOf(\":\") != -1) {\n\n      return this.image.substring(0, this.image.indexOf(\":\"));\n    } else {\n      return null;\n    }\n  }\n\n  public imageName(): string {\n\n    let name: string = this.image;\n\n    let idx: number = name.indexOf(\":\");\n\n    if (idx != -1) {\n\n      let lside = name.substring(0, idx);\n      let rside = name.substring(idx+1);\n\n      if (DockerImage.isVersionNumber(rside)) {\n\n        // name is on left side\n\n         if (this.image.lastIndexOf(\"/\") != -1) {\n          let idx: number = this.image.lastIndexOf(\"/\");\n          let rdx: number = this.image.indexOf(\":\");\n\n          name = this.image.substring(idx+1, rdx);\n        }\n      } else {\n\n        // name and perhaps version is in right side\n\n        name = rside;\n\n        if (name.indexOf(\"-\") != -1) {\n\n          let idx: number = name.lastIndexOf(\"-\");\n          let b4: string = name.substring(0, idx);\n          let af: string = name.substring(idx+1, name.length);\n\n          if (DockerImage.isVersionNumber(af)) {\n            name = b4;\n          }\n        }\n      }\n    }\n\n    return name;\n  }\n\n  public preferredImageVersion(): string {\n\n    if (this.image && this.image.indexOf(\":\")) {\n\n      let version: string = this.image.substring(this.image.indexOf(\":\")+1, this.image.length);\n\n      if (version.indexOf(\"-\") != -1) {\n        let idx: number = version.lastIndexOf(\"-\");\n        version = version.substring(idx+1, version.length);\n      }\n\n      // no versioning, only a name\n\n      if (!DockerImage.isVersionNumber(version))\n          version = \"latest\";\n\n      return version;\n    } else {\n\n      return \"latest\";\n    }\n  }\n\n  public static make(data: any): Container {\n\n    let c: Container = new Container();\n    c.names = data.names;\n    if (data.names)\n      c.name = data.names[0];\n    else\n      c.name = data.name;\n\n    c.active = data.active;\n    c.description = data.description;\n    c.hostname = data.hostname;\n    c.secure  = data.secure;\n    c.image = data.image;\n    c.type = data.type;\n    c.adminUser = data.adminUser;\n    c.adminPassword = data.adminPassword;\n\n    if (data.build)\n      c.build = DockerBuild.make(data.build);\n\n    if (data.ports)\n      c.ports = Port.makeArray(data.ports);\n\n    if (data.env)\n      c.env = Arg.makeArray(data.env);\n\n    if (data.volumes)\n      c.volumes = Arg.makeArray(data.volumes);\n\n    if (data.readinessProbe)\n      c.readinessProbe = Probe.make(data.readinessProbe);\n\n    if (data.livenessProbe)\n      c.livenessProbe = Probe.make(data.livenessProbe);\n\n    return c;\n  }\n\n  public environmentVariable(id: string): Arg {\n\n    var arg: Arg = null;\n\n    for (var i = 0; i  {\n          s.tests.push(Test.make(t));\n        });\n    }\n\n    return s;\n  }\n\n  public isActive(): boolean {\n\n    return (this.apiDeployType != \"none\" && this.apiDeployType != null) || this.stop == \"true\" || (this.apiMaturity != \"none\" &&  this.apiMaturity != null) ||\n                  (this.dockerAction != \"none\"  && this.dockerAction != null) || this.dockerTag != null || this.stop != null;\n  }\n\n  public summary(): string {\n\n      var status: string = null;\n\n      if (this.apiDeployType == \"deploy\")\n          status = \"Deploy API's \";\n      else if (this.apiDeployType == \"promote\")\n        status = \"Promote API's to \" + this.apiStage;\n\n      if (this.runTests == \"true\") {\n\n        if (status != null)\n          status = status + \", run tests\";\n        else\n          status = \"Run tests\";\n      }\n\n      if (this.apiMaturity) {\n\n        if (status != null)\n            status = status + \", and set maturity to \" + this.apiMaturity;\n        else\n          status = \"Set maturity to \" + this.apiMaturity;\n      }\n\n      if (this.dockerTag) {\n\n        if (status != null)\n          status = status + \", then tag image\";\n        else\n          status = \"Tag image \";\n      }\n\n      if (this.dockerAction) {\n        if (status != null)\n          status = status + \", \" + this.dockerAction;\n        else\n          status = this.dockerAction;\n\n        status = status + \" image\";\n      }\n\n      if (this.stop == \"true\") {\n        if (status != null)\n            status = status + \" before stopping\";\n        else\n            status = \"stop containers\";\n      }\n\n      if (this.pipelineAction) {\n\n        if (status != null)\n            status = status + \", then \" + this.pipelineAction + \" pipeline\";\n        else\n            status = \"and \" + this.pipelineAction + \" pipeline execution\";\n      }\n\n      return status;\n    }\n}\n\nexport class Stage {\n\n    public id: string;\n    public name: string;\n    public containerHost: string;\n    public useKubernetes: string;\n    public buildOnStart: string;\n    public deployments: Deployment[];\n    public onStart: Action;\n    public onFail: Action;\n    public onSuccess: Action;\n\n    constructor() {\n      this.deployments = [];\n      this.useKubernetes = \"false\";\n      this.buildOnStart = \"false\";\n      this.onStart = new Action();\n      this.onSuccess = new Action();\n      this.onFail = new Action();\n    }\n\n    public copy(): Stage {\n\n      let c = Stage.make(this);\n\n      c.id = this.id + \" copy\";\n      c.name = this.name + \" copy\";\n\n      return c;\n    }\n\n    public static make(data: any): Stage {\n\n      let s: Stage = new Stage();\n\n      s.name = data.name;\n      s.id = s.name;\n      s.containerHost = data.containerHost;\n      s.useKubernetes = data.useKubernetes;\n      s.buildOnStart = data.buildOnStart;\n\n      if (data.deployments) {\n        data.deployments.forEach((c) => {\n          s.deployments.push(Deployment.make(c));\n        });\n      }\n\n      if (data.onStart) {\n        s.onStart = Action.make(data.onStart);\n      }\n\n      if (data.onSuccess) {\n        s.onSuccess = Action.make(data.onSuccess);\n      }\n\n      if (data.onFail) {\n        s.onFail = Action.make(data.onFail);\n      }\n\n      return s;\n    }\n}\n\nexport class Deployment {\n\n  public name: string;\n  public hostname: string;\n  public appName: string;\n  public apis: APIDefinition[];\n  public containers: Container[];\n  public replicas: string;\n  public serviceType: string;\n  public restartPolicy: string;\n  public requiresMonitoring: string;\n  public dependsOn: string;\n\n  constructor() {\n\n    this.containers = [];\n    this.apis = [];\n  }\n\n  public copy() {\n    return Deployment.make(this);\n  }\n\n  public static make(data: any): Deployment {\n\n    let s: Deployment = new Deployment();\n    s.name = data.name;\n    s.hostname = data.hostname;\n    s.replicas = data.replicas;\n    s.appName = data.appName;\n    s.serviceType = data.serviceType;\n    s.restartPolicy = data.restartPolicy;\n    s.requiresMonitoring = data.requiresMonitoring;\n    s.dependsOn = data.dependsOn;\n\n    if (data.apis) {\n       data.apis.forEach((a) => {\n         s.apis.push(APIDefinition.make(a));\n       });\n    }\n\n    if (data.containers) {\n       data.containers.forEach((c) => {\n         s.containers.push(Container.make(c));\n       });\n    }\n\n    return s;\n  }\n\n  public containerForType(type: string): Container {\n\n    let found: Container = null;\n\n    this.containers.forEach((c) => {\n\n      if (c.type == type) {\n        found = c;\n      }\n    });\n\n    return found;\n  }\n\n  public removeContainer(c: Container) {\n\n    var found : number = -1;\n\n    for (var i = 0; i  {\n         p.builds.push(Builder.make(i));\n       });\n    }\n\n    if (data.deployments) {\n      p.deployments = [];\n       data.deployments.forEach((i) => {\n         p.deployments.push(Deployment.make(i));\n       });\n    }\n\n    return p;\n  }\n\n  public serviceFor(id: string): Deployment {\n\n      let found: Deployment = null;\n\n      for (var z = 0; z  {\n         p.stages.push(Stage.make(s));\n       });\n    }\n\n    return p;\n  }\n}\n\nfunction stringifyReplacer(key, value) {\n  const originalObject = this[key];\n  if(originalObject instanceof Map) {\n    return {\n      dataType: 'Map',\n      value: Array.from(originalObject.entries()), // or with spread: value: [...originalObject]\n    };\n  } else {\n    return value;\n  }\n}\n\nfunction parserReviver(key, value) {\n  if(typeof value === 'object' && value !== null) {\n    if (value.dataType === 'Map') {\n      return new Map(value.value);\n    }\n  }\n  return value;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DockerContainer.html":{"url":"classes/DockerContainer.html","title":"class - DockerContainer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DockerContainer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/docker-container.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                currentImage\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                imageRef\n                            \n                            \n                                    Public\n                                names\n                            \n                            \n                                    Public\n                                ready\n                            \n                            \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                make\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/models/docker-container.ts:21\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            currentImage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ContainerStatus\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/docker-container.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/docker-container.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            imageRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/docker-container.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            names\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/docker-container.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ready\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/docker-container.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ContainerStatus\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/docker-container.ts:18\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            make\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    make(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/docker-container.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DockerContainer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export enum ContainerStatus {\n\tNew = \"New\",\n\tStarting = \"Starting\",\n\tRunning = \"Running\",\n\tTerminating = \"Terminated\",\n\tTerminated = \"Terminated\",\n\tRemoved = \"Removed\"\n}\n\nexport class DockerContainer {\n\t\n\tpublic static currentImage: ContainerStatus;\n\t\n\tpublic id: string;\n\tpublic names: string[];\n\tpublic status: ContainerStatus;\n\tpublic ready: boolean;\n\n\tpublic imageRef: string;\n\n\tpublic constructor() {\n\n\t}\n\n\tpublic static make(data: any): DockerContainer {\n\n\t\tlet image: DockerContainer = new DockerContainer();\n\n\t\timage.id = data.id;\n\t\timage.names = data.names;\n\n\t\treturn image;\n\t}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DockerImageVersionsComponent.html":{"url":"components/DockerImageVersionsComponent.html","title":"component - DockerImageVersionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DockerImageVersionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/elements/docker-image-versions.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                jc-docker-image-versions\n            \n\n\n\n\n            \n                templateUrl\n                ../../templates/elements/docker-image-versions.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _selectedVersion\n                            \n                            \n                                    Public\n                                columns\n                            \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                haveActions\n                            \n                            \n                                    Public\n                                labelForAction\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                selectVersion\n                            \n                            \n                                    Public\n                                updateVersion\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentVersion\n                            \n                            \n                                dataSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onSelection\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(router: Router, data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/elements/docker-image-versions.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentVersion\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/elements/docker-image-versions.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dataSource\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/elements/docker-image-versions.component.ts:19\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onSelection\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/elements/docker-image-versions.component.ts:25\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            close\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    close()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/elements/docker-image-versions.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            haveActions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    haveActions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/elements/docker-image-versions.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            labelForAction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    labelForAction(image: DockerImage)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/elements/docker-image-versions.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    image\n                                    \n                                                DockerImage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/elements/docker-image-versions.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            selectVersion\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    selectVersion(image: DockerImage)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/elements/docker-image-versions.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    image\n                                    \n                                                DockerImage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateVersion\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateVersion()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/elements/docker-image-versions.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _selectedVersion\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DockerImage\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/elements/docker-image-versions.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            columns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['current', 'Version', 'Comments', 'Last Updated', 'Tested' ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/elements/docker-image-versions.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/elements/docker-image-versions.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ChangeDetectorRef, OnInit, OnDestroy, \n          EventEmitter, Input, Output, Inject }                   from '@angular/core';\nimport { Router }                                                 from '@angular/router';\n\nimport { MAT_DIALOG_DATA }                                        from '@angular/material';\n\nimport { DockerImage, ImageStatus, TestStatus }                   from '../../models/docker-image';\n\nimport { DockerImageListComponent }                               from './docker-images-list.component';\n\n@Component({\n  selector: 'jc-docker-image-versions',\n  templateUrl: '../../templates/elements/docker-image-versions.html'\n})\n\nexport class DockerImageVersionsComponent {\n\n  @Input()\n  public dataSource: any;\n\n  @Input()\n  public currentVersion: number;\n\n  @Output()\n  public onSelection: EventEmitter = new EventEmitter();\n\n  public columns: string[] = ['current', 'Version', 'Comments', 'Last Updated', 'Tested' ];\n  \n  private _selectedVersion: DockerImage;\n\n  public constructor(router: Router, @Inject(MAT_DIALOG_DATA) public data: any) {\n    \n    this.dataSource = data.dataSource;\n    this.currentVersion = data.currentVersion;\n    \n    this.onSelection.subscribe((obj: any) => {\n      data.selectHandler(obj);\n    });\n  }\n\n  public ngOnInit() {\n    // overide parent\n\n  }\n\n  public labelForAction(image: DockerImage): string {\n\n    if (this._selectedVersion)\n      return \"Update to \" + this._selectedVersion.version();\n    else\n      return \"Update\";\n  }\n\n  public haveActions(): boolean {\n\n    return this._selectedVersion && Number(this._selectedVersion.version()) != this.currentVersion;\n  }\n\n  public selectVersion(image: DockerImage) {\n\n    this._selectedVersion = image;\n  }\n\n  public close() {\n    this.onSelection.emit(null);\n  }\n  \n  public updateVersion() {\n\n    this.onSelection.emit(this._selectedVersion);\n  }\n}\n    \n\n    \n        \n  \tSelect new version\n  \n  \t  \n  \n  \n    Close\n    {{labelForAction()}}\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  \tSelect new version    \t          Close    {{labelForAction()}}  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about-app'},{'name': 'ActionComponent', 'selector': 'action'},{'name': 'ApiGatewayInstallerComponent', 'selector': 'jc-apigw-install'},{'name': 'ApiMicroGatewayInstallerComponent', 'selector': 'jc-apimg-install'},{'name': 'ApiPortalInstallerComponent', 'selector': 'jc-apipr-installer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildCommandsComponent', 'selector': 'build-commands'},{'name': 'BuildComponent', 'selector': 'build'},{'name': 'BuildExeComponent', 'selector': 'build-exe'},{'name': 'BuildImageComponent', 'selector': 'build-solution'},{'name': 'BuildInstallComponent', 'selector': 'build-install'},{'name': 'BuildPackagesComponent', 'selector': 'build-package'},{'name': 'ContainerComponent', 'selector': 'container'},{'name': 'ContainersComponent', 'selector': 'app-containers'},{'name': 'DeploymentDetailsComponent', 'selector': 'jc-deployment-details'},{'name': 'DeploymentListComponent', 'selector': 'jc-k8s-deployments'},{'name': 'DockerImageChooserComponent', 'selector': 'docker-image-chooser'},{'name': 'DockerImageListComponent', 'selector': 'jc-docker-images'},{'name': 'DockerImageVersionsComponent', 'selector': 'jc-docker-image-versions'},{'name': 'EditContainerComponent', 'selector': 'edit-container'},{'name': 'GitSourcesComponent', 'selector': 'git-source'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'InstallerComponent', 'selector': 'jc-install'},{'name': 'MicroServiceBuilderComponent', 'selector': 'jc-msc-configure'},{'name': 'MicroServiceInstallerComponent', 'selector': 'jc-msc-install'},{'name': 'PodsListComponent', 'selector': 'jc-pods'},{'name': 'RuntimeContainersComponent', 'selector': 'runtime-containers'},{'name': 'RuntimeDeployComponent', 'selector': 'runtime-deploy'},{'name': 'RuntimeDetailsComponent', 'selector': ''},{'name': 'RuntimeK8sComponent', 'selector': 'runtime'},{'name': 'RuntimeScaleComponent', 'selector': 'jc-runtime-scale'},{'name': 'RuntimeStageComponent', 'selector': 'runtime-stage'},{'name': 'RuntimeUpdateComponent', 'selector': ''},{'name': 'SagImageAlerterComponent', 'selector': 'sag-image-alerter'},{'name': 'ServicePropertiesComponent', 'selector': 'k8s-props'},{'name': 'SettingsComponent', 'selector': 'home'},{'name': 'SimpleNameComponent', 'selector': 'name-dialog'},{'name': 'StagingComponent', 'selector': 'staging'},{'name': 'TestCaseComponent', 'selector': 'test-case'},{'name': 'TestDefinitionComponent', 'selector': 'test-definitions'},{'name': 'TestHistoryComponent', 'selector': 'test-history'},{'name': 'TestRunComponent', 'selector': 'test-reun'},{'name': 'UMInstallerComponent', 'selector': 'jc-um-install'},{'name': 'UploadButtonComponent', 'selector': 'file-uploader-button'}];\n    var DIRECTIVES = [{'name': 'BuildImageChooseDirective', 'selector': '[builder]'},{'name': 'CancelCdkDrag', 'selector': '[appCancelCdkDrag]'},{'name': 'NgFileDrop', 'selector': '[ng-file-drop]'},{'name': 'NgFileSelect', 'selector': '[ng-file-select]'},{'name': 'RuntimeActionsDirective', 'selector': '[runtime-actions]'}];\n    var ACTUAL_COMPONENT = {'name': 'DockerImageVersionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditContainerComponent.html":{"url":"components/EditContainerComponent.html","title":"component - EditContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/staging.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                edit-container\n            \n\n\n\n\n            \n                templateUrl\n                ../templates/container-host.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _ignore\n                            \n                            \n                                    Public\n                                activeCtrl\n                            \n                            \n                                    Public\n                                container\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                formBuilder\n                            \n                            \n                                    Public\n                                formGroup\n                            \n                            \n                                    Public\n                                hint\n                            \n                            \n                                    Public\n                                hostCtrl\n                            \n                            \n                                    Public\n                                hostLabel\n                            \n                            \n                                    Public\n                                imageCtrl\n                            \n                            \n                                    Public\n                                portCtrl\n                            \n                            \n                                    Public\n                                portLabel\n                            \n                            \n                                    Public\n                                privateHost\n                            \n                            \n                                    Public\n                                privatePort\n                            \n                            \n                                    Public\n                                publicHost\n                            \n                            \n                                    Public\n                                publicPort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeDialog\n                            \n                            \n                                    Private\n                                enableControls\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/staging.component.ts:239\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            closeDialog\n                        \n                        \n                    \n                \n            \n            \n                \ncloseDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/staging.component.ts:319\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            enableControls\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enableControls()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/staging.component.ts:324\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _ignore\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/staging.component.ts:239\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            activeCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/staging.component.ts:225\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            container\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Container\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/staging.component.ts:221\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/staging.component.ts:241\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/staging.component.ts:241\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formBuilder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormBuilder\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/staging.component.ts:223\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/staging.component.ts:224\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hint\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/staging.component.ts:230\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hostCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/staging.component.ts:226\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hostLabel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/staging.component.ts:232\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            imageCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/staging.component.ts:228\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            portCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/staging.component.ts:227\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            portLabel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/staging.component.ts:233\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            privateHost\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/staging.component.ts:236\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            privatePort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/staging.component.ts:237\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            publicHost\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/staging.component.ts:234\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            publicPort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/staging.component.ts:235\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ChangeDetectorRef, EventEmitter,\n\t\t\tOnInit, OnChanges, OnDestroy, Input, Inject,\n\t\t\t\t\t\t\t\t\t\tOutput }   \t\tfrom '@angular/core';\n\nimport { Router }\t\t\t\t\t\t\t\t\t  \tfrom '@angular/router';\nimport {FormBuilder, FormGroup, FormControl, \n\t\t\t\t\t\t\t\tValidators} \t\t\tfrom '@angular/forms';\nimport { SelectionModel }                             \tfrom '@angular/cdk/collections';\n\nimport { MediaMatcher }                               \tfrom '@angular/cdk/layout';\nimport { MatAccordion }                               \tfrom '@angular/material';\nimport { MatInput, MatButton }\t\t\t\t\t\t\tfrom '@angular/material';\nimport { MatDialog, MatDialogRef, DialogPosition,\n\t\t\t\t\tMAT_DIALOG_DATA }\t  \t\t\t\tfrom '@angular/material';\n\nimport { Stage, Deployment, Container, Action }         from '../models/project';\nimport { APIDefinition }               \t\t\t\t\tfrom '../models/wm-package-info';\n\n@Component({\n  selector: 'staging',\n  templateUrl: '../templates/stage.html'\n})\n\nexport class StagingComponent implements OnInit, OnChanges {\n\n\t@Input()\n\tpublic stage: Stage;\n\n\t@Input()\n\tpublic form: FormGroup;\n\n\t@Output()\n\tpublic stageUpdated: EventEmitter = new EventEmitter();\n\n\tpublic apiMaturityList: string[] = [\"Beta\", \"Test\", \"Production\", \"Deprecated\"];\n\n\tpublic stageNameCtrl: FormControl;\n  \tpublic containerNameCtrl: FormControl;\n  \tpublic buildServiceCtrl: FormControl;\n  \tpublic runTypeCtrl: FormControl;\n\n  \tprivate _ignoreValueChanges: boolean;\n\n  \tpublic constructor(private _formBuilder: FormBuilder, private _dialog: MatDialog) {\n  \t}\n\n\tpublic ngOnInit() {\n\n\t\tconsole.log(\"stage is \" + this.stage.name);\n\n\t\tthis._setupForm();\n\t}\n\n\tpublic ngOnChanges() {\n\t\t\n\t\tthis.updateForm();\n\t}\n\n\tpublic haveAPIs(): boolean {\n\n\t\tvar found: boolean = false;\n\n\t\tfor (var i=0; i  0) {\n\t\t\t\tfound = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn found;\n\t}\n\n\tpublic actionChanged(action: Action) {\n\n\t\tif (this.stage.onStart.runTests) {\n\t\t\tif (!this.stage.onSuccess)\n\t\t\t\tthis.stage.onSuccess = new Action();\n\n\t\t\tif (!this.stage.onFail)\n\t\t\t\tthis.stage.onFail = new Action();\n\n\t\t\tthis.stage.onSuccess.active = \"true\";\n\t\t\tthis.stage.onFail.active = \"true\";\n\t\t} else {\n\t\t\tif (this.stage.onSuccess.isActive()) {\n\t\t\t\tthis.stage.onSuccess = new Action();\n\t\t\t\tthis.stage.onSuccess.active = \"false\";\n\t\t\t}\n\n\t\t\tif (this.stage.onFail.isActive()) {\n\t\t\t\tthis.stage.onFail = new Action();\n\t\t\t\tthis.stage.onFail.active = \"false\";\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn this._save();\n\t}\n\n\tpublic activationChanged(obj: any) {\n\n\t\tlet ref: StagingComponent = this;\n\t\tsetTimeout(() => {\n\t\t\tobj.active = !obj.active;\n\t\t\tref._save();\n\t\t});\n\t}\n\n\tpublic colorForContainer(container: Container) {\n\n\t\tif (container.active == \"true\")\n\t\t\treturn \"primary\";\n\t\telse if (container.hostname) \n\t\t\treturn \"accent\";\n\t\telse\n\t\t\treturn \"gray\";\n\t}\n\n\tpublic editContainer(container: Container, event: any) {\n\n\t\tlet x = event.pageX;\n\t\tlet y = event.pageY;\n\n\t\tlet dialogRef = this._dialog.open(EditContainerComponent, {\n\t\t\tdata: { container: container, formBuilder: this._formBuilder },\n\t\t\twidth: '360px',\n  \t\t\theight: '300px',\n\t\t});\n\n\t\tconsole.log(\"left: '${x}px', top: '${y}px'\");\n\n\t\tdialogRef.updatePosition({ left: x + \"px\", top: y + \"px\" });\n\n\t\tdialogRef.afterClosed().subscribe(container => {\n  \t\t\tconsole.log(`Dialog result: ${container}`);\n\n  \t\t\tthis._save();\n\t\t});\n\t}\n\n\tpublic removeAPI(service: Deployment, api: APIDefinition) {\n\n\t\tservice.removeAPI(api);\n\t\tthis._save();\n\t}\n\n\tpublic removeContainer(service: Deployment, container: Container) {\n\n\t\tservice.removeContainer(container);\n\t\tthis._save();\n\t}\n\n\tprivate updateForm() {\n\n\t\tif (this.stageNameCtrl) {\n\n\t\t\tthis._ignoreValueChanges = true;\n\n\t\t\tthis.stageNameCtrl.setValue(this.stage ? this.stage.name : \"\");\n\t  \t\tthis.containerNameCtrl.setValue(this.stage ? this.stage.containerHost: \"\");\n\t  \t\tthis.runTypeCtrl.setValue(this.stage ? (this.stage.useKubernetes == \"true\" ? \"k8s\" : \"docker\") : \"docker\");\n\t  \t\tthis.buildServiceCtrl.setValue(this.stage ? this.stage.buildOnStart == \"true\" ? true : false : false);\n\n\t  \t\tthis._ignoreValueChanges = false;\n  \t\t}\n\t}\n\n\tprivate _setupForm() {\n\n  \t\tthis.stageNameCtrl = new FormControl();\n  \t\tthis.containerNameCtrl = new FormControl();\n  \t\tthis.runTypeCtrl = new FormControl(\"docker\");\n  \t\tthis.buildServiceCtrl = new FormControl();\n\n  \t\tthis.form.addControl(\"stageNameCtrl\", this.stageNameCtrl);\n  \t\tthis.form.addControl(\"containerNameCtrl\", this.containerNameCtrl);\n  \t\tthis.form.addControl(\"runTypeCtrl\", this.runTypeCtrl);\n  \t\tthis.form.addControl(\"buildServiceCtrl\", this.buildServiceCtrl);\n\n  \t\tthis.updateForm();\n\n  \t\tthis.form.valueChanges.subscribe((d) => {\n\n  \t\t\tif (this._ignoreValueChanges)\n  \t\t\t\treturn;\n\n\t\t\tif (this.stageNameCtrl.dirty)\n\t\t\t\tthis.stage.name = this.stageNameCtrl.value;\n\n\t\t\tif (this.containerNameCtrl.dirty)\n\t\t\t\tthis.stage.containerHost = this.containerNameCtrl.value;\n\n\t\t\tif (this.runTypeCtrl.dirty)\n\t\t\t\tthis.stage.useKubernetes = \"\" + (this.runTypeCtrl.value == \"k8s\");\n\n\t\t\tif (this.buildServiceCtrl.dirty)\n\t\t\t\tthis.stage.buildOnStart = \"\" + this.buildServiceCtrl.value;\n\t\t\t\n\t\t\tthis._save();\n\t\t}); \n  \t}\n\n  \tprivate _save() {\n\n  \t\tif (this.stage.onStart.runTests == \"false\") {\n\n  \t\t\tthis.stage.onSuccess = new Action();\n  \t\t\tthis.stage.onFail = new Action();\n  \t\t}\n\n  \t\tthis.stageUpdated.emit(this.stage);\n  \t}\n}\n\n@Component({\n\tselector: 'edit-container',\n  \ttemplateUrl: '../templates/container-host.html'\n})\nexport class EditContainerComponent {\n\n\tpublic container: Container;\n\n\tpublic formBuilder: FormBuilder;\n\tpublic formGroup: FormGroup;\n\tpublic activeCtrl: FormControl;\n\tpublic hostCtrl: FormControl;\n\tpublic portCtrl: FormControl;\n\tpublic imageCtrl: FormControl;\n\n\tpublic hint: string;\n\n\tpublic hostLabel:  string;\n\tpublic portLabel: string;\n\tpublic publicHost: string;\n\tpublic publicPort:  string;\n\tpublic privateHost: string;\n\tpublic privatePort:  string;\n\n\tprivate _ignore: boolean = false;\n\n\tconstructor(public dialogRef: MatDialogRef, @Inject(MAT_DIALOG_DATA) public data: any) { \n\n\t\tthis.container = data.container;\n\t\tthis.formBuilder = data.formBuilder;\n\n\t\tthis.activeCtrl = new FormControl(this.container.active == \"true\" ? true : false);\n\n\t\tif (this.activeCtrl.value) {\n\n\t\t\tthis.hostCtrl = new FormControl(this.container.name);\n\t\t\tthis.portCtrl = new  FormControl(this.container.ports[0].internal);\n\t\t} else {\n\n\t\t\tthis.hostCtrl = new FormControl(this.container.hostname);\n\t\t\tthis.portCtrl = new  FormControl(this.container.ports[0].external);\n\t\t}\n\t\t\n\t\tthis.imageCtrl = new FormControl(this.container.image);\n\t\tthis.imageCtrl.disable();\n\t\t\n\t\tthis.formGroup = this.formBuilder.group({\n\t\t\tactiveCtrl: this.activeCtrl,\n\t\t\thostCtrl: this.hostCtrl,\n\t\t\tportCtrl: this.portCtrl,\n\t\t\timageCtrl: this.imageCtrl\n\t\t});\n\n\t\tthis.formGroup.valueChanges.subscribe((d) => {\n\n\t\t\tif (this._ignore)\n\t\t\t\treturn;\n\n\t\t\tif (((this.activeCtrl.value && this.container.active == \"false\") \n\t\t\t\t|| !this.activeCtrl.value && this.container.active == \"true\")) {\n\n\t\t\t\tif (this.activeCtrl.value) {\n\t\t\t\t\tthis.container.active = \"true\";\n\t\t\t\t\tthis.container.hostname = this.privateHost;\n\t\t\t\t} else {\n\t\t\t\t\tthis.container.active = \"false\";\n\t\t\t\t\tthis.container.hostname = this.publicHost;\n\t\t\t\t}\n\n\t\t\t\tthis._ignore = true;\n\t\t\t\tthis.enableControls();\n\t\t\t\tthis._ignore = false;\n\t\t\t} else {\n\n\t\t\t\tthis.container.active = this.activeCtrl.value ? \"true\" : \"false\";\n\n\t\t\t\tif (!this.activeCtrl.value) {\n\t\t\t\t\tif (this.hostCtrl.value && this.hostCtrl.value.length > 0)\n\t\t\t\t\t\tthis.container.hostname = this.hostCtrl.value;\n\t\t\t\t\telse\n\t\t\t\t\t\tthis.container.hostname = null;\n\n\t\t\t\t\tif (this.activeCtrl.value)\n\t\t\t\t\t\tthis.container.ports[0].internal = \"\" + this.portCtrl.value;\n\t\t\t\t\telse\n\t\t\t\t\t\tthis.container.ports[0].external = \"\" + this.portCtrl.value;\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.container.hostname = null;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (this.container.hostname && this.container.hostname.length > 0)\n\t\t\tthis.publicHost = this.container.hostname;\n\n\t\tthis.publicPort = this.container.ports[0].external;\n\n\t\tthis.privateHost = this.container.name;\n\t\tthis.privatePort = this.container.ports[0].internal;\n\n\t\tthis.enableControls();\n\t}\n\n\tcloseDialog() {\n\n    \tthis.dialogRef.close(this.container);\n  \t}\n\n  \tprivate enableControls() {\n  \t\t\n  \t\tif (this.activeCtrl.value) {\n\t\t\tthis.hostCtrl.disable();\n\t\t\tthis.portCtrl.disable();\n\n\t\t\tthis.hostLabel = \"Docker network Host\";\n\t\t\tthis.portLabel = \"Internal Port\";\n\n\t\t\tthis.hostCtrl.setValue(this.privateHost);\n\t\t\tthis.portCtrl.setValue(this.privatePort);\n\n\t\t\tthis.hint = \"Container will be included in stage, intra container communication will be via private network and use container names as hosts\"\n\n\t\t} else {\n\t\t\tthis.hostCtrl.enable();\n\t\t\tthis.portCtrl.enable();\n\n\t\t\tthis.hostLabel = \"External Host\";\n\t\t\tthis.portLabel = \"Public Port\";\n\n\t\t\tthis.hostCtrl.setValue(this.publicHost);\n\t\t\tthis.portCtrl.setValue(this.publicPort);\n\n\t\t\tif (this.hostCtrl.value)\n\t\t\t\tthis.hint = \"Not included in stage and if features are required will communicate with external application via host and port\";\n\t\t\telse\n\t\t\t\tthis.hint = \"Not included in stage and features will not be available for any actions\";\n\t\t}\n\n  \t}\n}\n\n    \n\n    \n        \n\t\n\t\n\t\tRun Container\n\t\t\n\t    \t\n\t  \t\n\t  \t\n\t    \t\n\t  \t\n\t  \t\n\t\t  \t\n\t\t    \t\n\t\t  \t\n\t  \t\t\n\t  \t{{hint}} \t\n\t\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\tRun Container\t\t\t    \t\t  \t\t  \t\t    \t\t  \t\t  \t\t\t  \t\t\t    \t\t\t  \t\t  \t\t\t  \t{{hint}} \t\t'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about-app'},{'name': 'ActionComponent', 'selector': 'action'},{'name': 'ApiGatewayInstallerComponent', 'selector': 'jc-apigw-install'},{'name': 'ApiMicroGatewayInstallerComponent', 'selector': 'jc-apimg-install'},{'name': 'ApiPortalInstallerComponent', 'selector': 'jc-apipr-installer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildCommandsComponent', 'selector': 'build-commands'},{'name': 'BuildComponent', 'selector': 'build'},{'name': 'BuildExeComponent', 'selector': 'build-exe'},{'name': 'BuildImageComponent', 'selector': 'build-solution'},{'name': 'BuildInstallComponent', 'selector': 'build-install'},{'name': 'BuildPackagesComponent', 'selector': 'build-package'},{'name': 'ContainerComponent', 'selector': 'container'},{'name': 'ContainersComponent', 'selector': 'app-containers'},{'name': 'DeploymentDetailsComponent', 'selector': 'jc-deployment-details'},{'name': 'DeploymentListComponent', 'selector': 'jc-k8s-deployments'},{'name': 'DockerImageChooserComponent', 'selector': 'docker-image-chooser'},{'name': 'DockerImageListComponent', 'selector': 'jc-docker-images'},{'name': 'DockerImageVersionsComponent', 'selector': 'jc-docker-image-versions'},{'name': 'EditContainerComponent', 'selector': 'edit-container'},{'name': 'GitSourcesComponent', 'selector': 'git-source'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'InstallerComponent', 'selector': 'jc-install'},{'name': 'MicroServiceBuilderComponent', 'selector': 'jc-msc-configure'},{'name': 'MicroServiceInstallerComponent', 'selector': 'jc-msc-install'},{'name': 'PodsListComponent', 'selector': 'jc-pods'},{'name': 'RuntimeContainersComponent', 'selector': 'runtime-containers'},{'name': 'RuntimeDeployComponent', 'selector': 'runtime-deploy'},{'name': 'RuntimeDetailsComponent', 'selector': ''},{'name': 'RuntimeK8sComponent', 'selector': 'runtime'},{'name': 'RuntimeScaleComponent', 'selector': 'jc-runtime-scale'},{'name': 'RuntimeStageComponent', 'selector': 'runtime-stage'},{'name': 'RuntimeUpdateComponent', 'selector': ''},{'name': 'SagImageAlerterComponent', 'selector': 'sag-image-alerter'},{'name': 'ServicePropertiesComponent', 'selector': 'k8s-props'},{'name': 'SettingsComponent', 'selector': 'home'},{'name': 'SimpleNameComponent', 'selector': 'name-dialog'},{'name': 'StagingComponent', 'selector': 'staging'},{'name': 'TestCaseComponent', 'selector': 'test-case'},{'name': 'TestDefinitionComponent', 'selector': 'test-definitions'},{'name': 'TestHistoryComponent', 'selector': 'test-history'},{'name': 'TestRunComponent', 'selector': 'test-reun'},{'name': 'UMInstallerComponent', 'selector': 'jc-um-install'},{'name': 'UploadButtonComponent', 'selector': 'file-uploader-button'}];\n    var DIRECTIVES = [{'name': 'BuildImageChooseDirective', 'selector': '[builder]'},{'name': 'CancelCdkDrag', 'selector': '[appCancelCdkDrag]'},{'name': 'NgFileDrop', 'selector': '[ng-file-drop]'},{'name': 'NgFileSelect', 'selector': '[ng-file-select]'},{'name': 'RuntimeActionsDirective', 'selector': '[runtime-actions]'}];\n    var ACTUAL_COMPONENT = {'name': 'EditContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileInfo.html":{"url":"classes/FileInfo.html","title":"class - FileInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/git-source-control.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fileName\n                            \n                            \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(fileName: string, status: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/git-source-control.service.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fileName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/git-source-control.service.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FileStatus\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/git-source-control.service.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } \t           \t \t  from '@angular/core';\nimport { HttpClient, HttpHeaders }      from '@angular/common/http';\nimport { Observable, of }               from 'rxjs';\nimport { switchMap, map, catchError } \tfrom 'rxjs/operators';\n\nimport { NgxXml2jsonService } \t\t\t    from 'ngx-xml2json';\n\nimport {GitType, Settings, Values,\n                    RepoSettings }      from '../settings';\nimport { WmPackageInfo }\t\t\t\t        from '../models/wm-package-info';\n\nimport * as moment from 'moment';\n\nexport class GitRepo {\n\n  public config: RepoSettings;\n\n\tconstructor(public id: string, public name: string) {\n\n\t}\n}\nexport enum FileStatus {\n\n\tadded,\n\tremoved,\n\tchanged\n}\n\nexport class FileInfo {\n\n\tpublic status: FileStatus;\n\n\tpublic constructor(public fileName: string, status: string) {\n\n\t\tif (status == 'removed')\n\t\t\tthis.status = FileStatus.removed;\n\t\telse if (status == 'added')\n\t\t\tthis.status = FileStatus.added;\n\t\telse\n\t\t\tthis.status = FileStatus.changed;\n\t}\n}\n\nexport class CommitInfo {\n\n\tpublic sha: string;\n\tpublic committer: string;\n\tpublic message: string;\n\tpublic count: number;\n\tpublic date: Date;\n\n\tpublic files: FileInfo[] = [];\n\n\tconstructor() {\n\n\t}\n\n\tpublic static make(data: any, count: number): CommitInfo {\n\n\t\tlet c: CommitInfo = new CommitInfo();\n\t\tc.sha = data.sha;\n\t\tc.count = count;\n\t\tc.committer = data.commit.committer.name;\n\t\tc.date = moment(data.commit.committer.date).toDate();\n\t\tc.message = data.commit.message;\n\n\t\tif (data.files) {\n\n\t\t\tdata.files.forEach((f) => {\n\t\t\t\tc.files.push(new FileInfo(f.filename, f.status));\n\t\t\t});\n\t\t}\n\n\t\treturn c;\n\t}\n}\n\n@Injectable()\nexport class GitSourceService {\n\n  public static GITHUB_REPOS: string = \"/user/repos\";\n\tpublic static GITHUB_CONTENTS: string = \"/repos/OWNER/REPO/contents/PATH\";\n\n\tpublic static GITLAB_REPOS: string = \"/api/v4/projects?owned=true&private_token=TOKEN\";\n\tpublic static GITLAB_CONTENTS: string = \"/api/v4/projects/REPO/repository/tree?path=PATH&private_token=TOKEN\";\n\tpublic static GITLAB_FILE: string = \"/api/v4/projects/REPO/repository/files/PATH?ref=master&private_token=TOKEN\";\n\n\tpublic _packages: WmPackageInfo[] = [];\n\tpublic _commitInfo: CommitInfo[];\n\n\tprivate _values: Values;\n\tprivate _gitType: GitType;\n\tprivate _gitAPIUrl: string;\n\tprivate _gitName: string;\n\tprivate _gitUser: string;\n\tprivate _gitPassword: string;\n\tprivate _gitIsPACPassword: string;\n\n\n    constructor(private _settings: Settings, private _http: HttpClient, private _ngxXml2jsonService: NgxXml2jsonService) {\n\n    \tthis._settings.values().subscribe((v) => {\n\n    \t  this._values = v;\n    \t  this._gitType = v.gitType;\n    \t\tthis._gitAPIUrl  = v.gitAPIUrl;\n    \t\tthis._gitName = v.gitName;\n    \t\tthis._gitUser = v.gitUser;\n    \t\tthis._gitPassword = v.gitPassword;\n    \t\tthis._gitIsPACPassword = v.gitIsPACPassword;\n\n    \t\tif (this._gitAPIUrl.endsWith(\"/\"))\n    \t\t\tthis._gitAPIUrl = this._gitAPIUrl.substring(0, this._gitAPIUrl.length-1);\n    \t});\n    }\n\n    public values(): Observable {\n\n      if (this._values) {\n        return of(this._values);\n      } else {\n        return this._settings.values();\n      }\n    }\n\n    public repositories(git: string) {\n\n    \tlet all: string;\n    \tlet template: string;\n\n    \tlet headers = new HttpHeaders()\n\t\t\t\t.append('Content-Type', 'application/json')\n\t\t\t\t.append('Accept', 'application/json');\n\n    \tif (this._gitType == GitType.github) {\n\n    \t\tall = this._gitAPIUrl + GitSourceService.GITHUB_REPOS.replace(/OWNER/, this._gitUser);\n\n    \t\theaders = headers.append('Authorization', `Basic ${btoa(this.authString())}`);\n    \t}\n    \telse {\n    \t\tall = this._gitAPIUrl + GitSourceService.GITLAB_REPOS.replace(/TOKEN/, this._gitPassword);\n    \t}\n\n\t\t  console.log(\"Querying git for repos with url \" + all);\n\n\t\t  return this._http.get(all, { headers }).pipe(map( (responseData) => {\n            return this._mapRepoResponse(this._gitAPIUrl, responseData);\n        }));\n    }\n\n    public wmPackages(git: string, repo: string, dir: string, useCache?: boolean): Observable {\n\n\t\tlet template: string;\n\n\t\tlet headers = new HttpHeaders()\n\t\t\t\t\t.append('Content-Type', 'application/json')\n\t\t\t\t\t.append('Accept', 'application/json');\n\n\t\tif (this._gitType == GitType.github) {\n        template = GitSourceService.GITHUB_CONTENTS;\n        headers = headers.append('Authorization', `Basic ${btoa(this.authString())}`);\n\n\t\t} else {\n    \t  template = GitSourceService.GITLAB_CONTENTS;\n\t\t}\n\n\t\tif (useCache && this._packages.length > 0) {\n\n\t\t\treturn of(this._packages);\n\n\t\t} else {\n\n\t\t\tif (dir.startsWith(\"/\"))\n\t\t\t\tdir = dir.substring(1);\n\n\t\t\tlet url: string = this._gitAPIUrl + template\n\t\t\t\t\t\t\t.replace(/OWNER/, git || this._gitUser)\n\t\t\t\t\t\t\t.replace(/REPO/, repo)\n\t\t\t\t\t\t\t.replace(/PATH/, dir)\n\t\t\t\t\t\t\t.replace(/TOKEN/, this._gitPassword);\n\n\t\t\tconsole.log(\"Querying git for packages with url \" + url);\n\n\t\t\treturn this._http.get(url, { headers }).pipe(map( (responseData) => {\n\n\t            return this._mapPackagesResponse(dir, responseData, repo);\n\t        }));\n\t\t  }\n    }\n\n    public fileContents(path: string, repo: string): Observable {\n\n\t\tlet template: string;\n\n\t\tlet headers = new HttpHeaders()\n\t\t\t\t.append('Content-Type', 'application/json')\n\t\t\t\t.append('Accept', 'application/json');\n\n\t\tif (this._gitType == GitType.github) {\n\n\t\t\ttemplate = GitSourceService.GITHUB_CONTENTS\n\t\t\t\t\t\t\t.replace(/OWNER/, this._gitName || this._gitUser)\n\t\t\t\t\t\t\t.replace(/REPO/, repo)\n\t\t\t\t\t\t\t.replace(/PATH/, encodeURIComponent(path));\n\n\t\t\theaders = headers.append('Authorization', `Basic ${btoa(this.authString())}`);\n\n\t\t} else {\n\t\t\ttemplate = GitSourceService.GITLAB_FILE\n\t\t\t\t\t\t\t  .replace(/REPO/, repo)\n\t\t\t\t\t\t\t  .replace(/PATH/, encodeURIComponent(path))\n                .replace(/TOKEN/, this._gitPassword);\n\t\t}\n\n\t\tlet url: string = this._gitAPIUrl + template;\n\n\t\treturn this._http.get(url, { headers }).pipe(map( (responseData) => {\n\n            return ( responseData).content;\n\n          },\n          error => {\n            return null;\n\t\t}));\n    }\n\n    private _mapPackagesResponse(dir: string, responseData: any, repo: string): WmPackageInfo[] {\n // data is returned as list called references or as a single entity\n\n \t\tlet images: WmPackageInfo[] = [];\n\n \t\tfor (let i=0; i  {\n\n\t\t\t\t  if (!success)\n\t\t\t\t\t  images.splice(i, 1);\n\t\t\t  });\n\n\t\t\t  images.push(p);\n      }\n\t\t}\n\n \t\treturn images;\n    }\n\n    private _packageDetails(pckg: WmPackageInfo, dir: string, repo: string): Observable {\n\n    \tlet path: string;\n\n    \tif (dir && dir != \".\")\n    \t\tpath = dir + (dir.endsWith(\"/\") ? \"\" : \"/\") + pckg.name + \"/manifest.v3\";\n    \telse\n    \t\tpath = pckg.name + \"/manifest.v3\";\n\n    \treturn this.fileContents(path, repo).pipe(map((c) => {\n\n    \t\tlet xmlString: string = atob(c);\n    \t\tlet xml = new DOMParser().parseFromString(xmlString, 'text/xml');\n\n    \t\tvar top = xml.getElementsByTagName('Values');\n\n\t\t\t  for(var i=0;i {\n    \t\treturn of(false);\n    \t}));\n    }\n\n    private _mapRepoResponse(url: string, responseData: any): GitRepo[] {\n\n    \tlet names: GitRepo[] = [];\n\n    \tresponseData.forEach((r) => {\n    \t\tnames.push(new GitRepo(this._gitType == GitType.github ? r.name : r.id, r.name));\n    \t});\n\n    \treturn names.sort((a,b)=> {\n\n    \t  let a1 = a.name.toLowerCase();\n    \t  let b1 = b.name.toLowerCase();\n\n    \t  if (a1 == b1)\n    \t    return 0;\n    \t  else if (a1>b1)\n    \t    return 1;\n    \t  else\n    \t    return -1;\n      });\n    }\n\n    private authString(): string {\n\n    \tif (this._gitIsPACPassword)\n    \t\treturn this._gitPassword;\n    \telse\n    \t\treturn this._gitUser + \":\" + this._gitPassword;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GitRepo.html":{"url":"classes/GitRepo.html","title":"class - GitRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GitRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/git-source-control.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                config\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, name: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/git-source-control.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RepoSettings\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/git-source-control.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/git-source-control.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/git-source-control.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } \t           \t \t  from '@angular/core';\nimport { HttpClient, HttpHeaders }      from '@angular/common/http';\nimport { Observable, of }               from 'rxjs';\nimport { switchMap, map, catchError } \tfrom 'rxjs/operators';\n\nimport { NgxXml2jsonService } \t\t\t    from 'ngx-xml2json';\n\nimport {GitType, Settings, Values,\n                    RepoSettings }      from '../settings';\nimport { WmPackageInfo }\t\t\t\t        from '../models/wm-package-info';\n\nimport * as moment from 'moment';\n\nexport class GitRepo {\n\n  public config: RepoSettings;\n\n\tconstructor(public id: string, public name: string) {\n\n\t}\n}\nexport enum FileStatus {\n\n\tadded,\n\tremoved,\n\tchanged\n}\n\nexport class FileInfo {\n\n\tpublic status: FileStatus;\n\n\tpublic constructor(public fileName: string, status: string) {\n\n\t\tif (status == 'removed')\n\t\t\tthis.status = FileStatus.removed;\n\t\telse if (status == 'added')\n\t\t\tthis.status = FileStatus.added;\n\t\telse\n\t\t\tthis.status = FileStatus.changed;\n\t}\n}\n\nexport class CommitInfo {\n\n\tpublic sha: string;\n\tpublic committer: string;\n\tpublic message: string;\n\tpublic count: number;\n\tpublic date: Date;\n\n\tpublic files: FileInfo[] = [];\n\n\tconstructor() {\n\n\t}\n\n\tpublic static make(data: any, count: number): CommitInfo {\n\n\t\tlet c: CommitInfo = new CommitInfo();\n\t\tc.sha = data.sha;\n\t\tc.count = count;\n\t\tc.committer = data.commit.committer.name;\n\t\tc.date = moment(data.commit.committer.date).toDate();\n\t\tc.message = data.commit.message;\n\n\t\tif (data.files) {\n\n\t\t\tdata.files.forEach((f) => {\n\t\t\t\tc.files.push(new FileInfo(f.filename, f.status));\n\t\t\t});\n\t\t}\n\n\t\treturn c;\n\t}\n}\n\n@Injectable()\nexport class GitSourceService {\n\n  public static GITHUB_REPOS: string = \"/user/repos\";\n\tpublic static GITHUB_CONTENTS: string = \"/repos/OWNER/REPO/contents/PATH\";\n\n\tpublic static GITLAB_REPOS: string = \"/api/v4/projects?owned=true&private_token=TOKEN\";\n\tpublic static GITLAB_CONTENTS: string = \"/api/v4/projects/REPO/repository/tree?path=PATH&private_token=TOKEN\";\n\tpublic static GITLAB_FILE: string = \"/api/v4/projects/REPO/repository/files/PATH?ref=master&private_token=TOKEN\";\n\n\tpublic _packages: WmPackageInfo[] = [];\n\tpublic _commitInfo: CommitInfo[];\n\n\tprivate _values: Values;\n\tprivate _gitType: GitType;\n\tprivate _gitAPIUrl: string;\n\tprivate _gitName: string;\n\tprivate _gitUser: string;\n\tprivate _gitPassword: string;\n\tprivate _gitIsPACPassword: string;\n\n\n    constructor(private _settings: Settings, private _http: HttpClient, private _ngxXml2jsonService: NgxXml2jsonService) {\n\n    \tthis._settings.values().subscribe((v) => {\n\n    \t  this._values = v;\n    \t  this._gitType = v.gitType;\n    \t\tthis._gitAPIUrl  = v.gitAPIUrl;\n    \t\tthis._gitName = v.gitName;\n    \t\tthis._gitUser = v.gitUser;\n    \t\tthis._gitPassword = v.gitPassword;\n    \t\tthis._gitIsPACPassword = v.gitIsPACPassword;\n\n    \t\tif (this._gitAPIUrl.endsWith(\"/\"))\n    \t\t\tthis._gitAPIUrl = this._gitAPIUrl.substring(0, this._gitAPIUrl.length-1);\n    \t});\n    }\n\n    public values(): Observable {\n\n      if (this._values) {\n        return of(this._values);\n      } else {\n        return this._settings.values();\n      }\n    }\n\n    public repositories(git: string) {\n\n    \tlet all: string;\n    \tlet template: string;\n\n    \tlet headers = new HttpHeaders()\n\t\t\t\t.append('Content-Type', 'application/json')\n\t\t\t\t.append('Accept', 'application/json');\n\n    \tif (this._gitType == GitType.github) {\n\n    \t\tall = this._gitAPIUrl + GitSourceService.GITHUB_REPOS.replace(/OWNER/, this._gitUser);\n\n    \t\theaders = headers.append('Authorization', `Basic ${btoa(this.authString())}`);\n    \t}\n    \telse {\n    \t\tall = this._gitAPIUrl + GitSourceService.GITLAB_REPOS.replace(/TOKEN/, this._gitPassword);\n    \t}\n\n\t\t  console.log(\"Querying git for repos with url \" + all);\n\n\t\t  return this._http.get(all, { headers }).pipe(map( (responseData) => {\n            return this._mapRepoResponse(this._gitAPIUrl, responseData);\n        }));\n    }\n\n    public wmPackages(git: string, repo: string, dir: string, useCache?: boolean): Observable {\n\n\t\tlet template: string;\n\n\t\tlet headers = new HttpHeaders()\n\t\t\t\t\t.append('Content-Type', 'application/json')\n\t\t\t\t\t.append('Accept', 'application/json');\n\n\t\tif (this._gitType == GitType.github) {\n        template = GitSourceService.GITHUB_CONTENTS;\n        headers = headers.append('Authorization', `Basic ${btoa(this.authString())}`);\n\n\t\t} else {\n    \t  template = GitSourceService.GITLAB_CONTENTS;\n\t\t}\n\n\t\tif (useCache && this._packages.length > 0) {\n\n\t\t\treturn of(this._packages);\n\n\t\t} else {\n\n\t\t\tif (dir.startsWith(\"/\"))\n\t\t\t\tdir = dir.substring(1);\n\n\t\t\tlet url: string = this._gitAPIUrl + template\n\t\t\t\t\t\t\t.replace(/OWNER/, git || this._gitUser)\n\t\t\t\t\t\t\t.replace(/REPO/, repo)\n\t\t\t\t\t\t\t.replace(/PATH/, dir)\n\t\t\t\t\t\t\t.replace(/TOKEN/, this._gitPassword);\n\n\t\t\tconsole.log(\"Querying git for packages with url \" + url);\n\n\t\t\treturn this._http.get(url, { headers }).pipe(map( (responseData) => {\n\n\t            return this._mapPackagesResponse(dir, responseData, repo);\n\t        }));\n\t\t  }\n    }\n\n    public fileContents(path: string, repo: string): Observable {\n\n\t\tlet template: string;\n\n\t\tlet headers = new HttpHeaders()\n\t\t\t\t.append('Content-Type', 'application/json')\n\t\t\t\t.append('Accept', 'application/json');\n\n\t\tif (this._gitType == GitType.github) {\n\n\t\t\ttemplate = GitSourceService.GITHUB_CONTENTS\n\t\t\t\t\t\t\t.replace(/OWNER/, this._gitName || this._gitUser)\n\t\t\t\t\t\t\t.replace(/REPO/, repo)\n\t\t\t\t\t\t\t.replace(/PATH/, encodeURIComponent(path));\n\n\t\t\theaders = headers.append('Authorization', `Basic ${btoa(this.authString())}`);\n\n\t\t} else {\n\t\t\ttemplate = GitSourceService.GITLAB_FILE\n\t\t\t\t\t\t\t  .replace(/REPO/, repo)\n\t\t\t\t\t\t\t  .replace(/PATH/, encodeURIComponent(path))\n                .replace(/TOKEN/, this._gitPassword);\n\t\t}\n\n\t\tlet url: string = this._gitAPIUrl + template;\n\n\t\treturn this._http.get(url, { headers }).pipe(map( (responseData) => {\n\n            return ( responseData).content;\n\n          },\n          error => {\n            return null;\n\t\t}));\n    }\n\n    private _mapPackagesResponse(dir: string, responseData: any, repo: string): WmPackageInfo[] {\n // data is returned as list called references or as a single entity\n\n \t\tlet images: WmPackageInfo[] = [];\n\n \t\tfor (let i=0; i  {\n\n\t\t\t\t  if (!success)\n\t\t\t\t\t  images.splice(i, 1);\n\t\t\t  });\n\n\t\t\t  images.push(p);\n      }\n\t\t}\n\n \t\treturn images;\n    }\n\n    private _packageDetails(pckg: WmPackageInfo, dir: string, repo: string): Observable {\n\n    \tlet path: string;\n\n    \tif (dir && dir != \".\")\n    \t\tpath = dir + (dir.endsWith(\"/\") ? \"\" : \"/\") + pckg.name + \"/manifest.v3\";\n    \telse\n    \t\tpath = pckg.name + \"/manifest.v3\";\n\n    \treturn this.fileContents(path, repo).pipe(map((c) => {\n\n    \t\tlet xmlString: string = atob(c);\n    \t\tlet xml = new DOMParser().parseFromString(xmlString, 'text/xml');\n\n    \t\tvar top = xml.getElementsByTagName('Values');\n\n\t\t\t  for(var i=0;i {\n    \t\treturn of(false);\n    \t}));\n    }\n\n    private _mapRepoResponse(url: string, responseData: any): GitRepo[] {\n\n    \tlet names: GitRepo[] = [];\n\n    \tresponseData.forEach((r) => {\n    \t\tnames.push(new GitRepo(this._gitType == GitType.github ? r.name : r.id, r.name));\n    \t});\n\n    \treturn names.sort((a,b)=> {\n\n    \t  let a1 = a.name.toLowerCase();\n    \t  let b1 = b.name.toLowerCase();\n\n    \t  if (a1 == b1)\n    \t    return 0;\n    \t  else if (a1>b1)\n    \t    return 1;\n    \t  else\n    \t    return -1;\n      });\n    }\n\n    private authString(): string {\n\n    \tif (this._gitIsPACPassword)\n    \t\treturn this._gitPassword;\n    \telse\n    \t\treturn this._gitUser + \":\" + this._gitPassword;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GitSelectionModel.html":{"url":"classes/GitSelectionModel.html","title":"class - GitSelectionModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GitSelectionModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/elements/git-sources.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    SelectionModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                select\n                            \n                            \n                                    Public\n                                setSourceModel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/elements/git-sources.component.ts:25\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WmPackageInfo[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/elements/git-sources.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            select\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    select(row: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/elements/git-sources.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setSourceModel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSourceModel(packages: WmPackageInfo[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/elements/git-sources.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    packages\n                                    \n                                                WmPackageInfo[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Component, ChangeDetectorRef, Input, Output, EventEmitter,\n\t\t\tOnInit, OnChanges, OnDestroy, ViewChild }   \t        from '@angular/core';\nimport { SelectionModel } \t\t\t\t\t\t                      from '@angular/cdk/collections';\n\nimport { FormBuilder, FormGroup, FormControl } \t            from '@angular/forms';\n\nimport { MatPaginator }\t\t\t\t\t\t\t                        from '@angular/material';\nimport { MatTableDataSource } \t\t\t\t\t                    from '@angular/material/table';\n\nimport { BuilderProperties, PropertiesChangedOwner }\t      from './build-image-choose.directive';\nimport { GitSourceService, GitRepo }\t\t\t\t                from '../../services/git-source-control.service';\nimport { WmPackageInfo }\t\t\t\t\t\t                        from '../../models/wm-package-info';\nimport { Source } \t\t\t\t\t\t\t\t                          from '../../models/git-source';\n\nimport { Settings, RepoSettings }                           from '../../settings';\nimport {PackagesService }                                   from '../../services/packages.service';\n\nexport class SourceWrapper {\n\tpublic source: Source;\n\tpublic model: SelectionModel;\n}\n\nexport class GitSelectionModel extends SelectionModel {\n\n\tprivate _data: WmPackageInfo[];\n\n\tpublic constructor() {\n\t\tsuper(true, []);\n\t}\n\n\tpublic setSourceModel(packages: WmPackageInfo[]) {\n\t\tthis._data = packages;\n\t}\n\n\tpublic select(row: any) {\n\n\t\tif (row instanceof WmPackageInfo) {\n\n\t\t\tsuper.select( row);\n\t\t} else if (this._data) {\n\n\t\t\tfor (var i = 0; i  = new EventEmitter();\n\n\t@Output()\n\tpublic selectedSourcesChanged: EventEmitter = new EventEmitter();\n\n\t@Output()\n\tpublic selectedSourcesLoaded: EventEmitter = new EventEmitter();\n\n\t@Output()\n  public apiActivated: EventEmitter = new EventEmitter();\n\n\tpublic formGroup: FormGroup;\n\tpublic selectedRepo: GitRepo;\n\tpublic packageTableDataSource: MatTableDataSource;\n\tpublic owner: PropertiesChangedOwner;\n\n\tpublic gitURI: string;\n\tpublic gits: string[];\n\tpublic repositories: GitRepo[];\n\n\tpublic selectedGit: string;\n\n\tpublic displayedColumns: string[] = ['select', 'package', 'version', 'description'];\n\tpublic selectionModel: GitSelectionModel = new GitSelectionModel();\n\n\tpublic manualSyncRequired: boolean;\n\t@ViewChild('gitPaginator')\n\tpublic gitPaginator: MatPaginator;\n  public isBusy: boolean;\n\n  private _configuredGitRepos: RepoSettings[] = [];\n\tprivate _source: Source;\n\n\tprivate _gitAPIUrl: string;\n  private _gitUser: string;\n  private _gitToken: string;\n\n\tconstructor(private _settings: Settings, private _gitService: GitSourceService, private _packagesService: PackagesService) {\n\t}\n\n\tpublic ngOnInit() {\n\n\t  this._gitService.values().subscribe((v) => {\n\n\t    this.gitURI = v.gitUri;\n\n\t\t\tif (!this.gitURI.endsWith(\"/\"))\n\t\t\t\tthis.gitURI = this.gitURI + \"/\";\n\n\t\t\tif (v.gitName)\n\t\t\t\tthis.gits = [ v.gitName ];\n\t\t\telse\n\t\t\t\tthis.gits = [ v.gitUser ];\n\n\t\t\tthis._gitAPIUrl = v.gitAPIUrl;\n\t\t\tthis._gitUser = v.gitUser;\n\t\t\tthis._gitToken = v.gitPassword;\n\n\t\t\tthis.selectedGit = this.gits[0];\n\n\t\t\tv.gitRepos.forEach((r) => {\n\t\t\t  this._configuredGitRepos.push(r);\n\t\t\t});\n\n\t\t\tthis.fetchRepositories();\n\t\t});\n\t}\n\n\tpublic ngOnChanges() {\n\n\t  this.setCurrentRepoFromInput();\n\t  this.onGitChange();\n\t}\n\n\tpublic onGitChange(event?: any) {\n\n\t  if (this._gitAPIUrl && (!this._source || this.selectedRepo.id != this._source.gitRepository)) {\n\t     this.setCurrentRepo(this.selectedRepo);\n    }\n\t}\n\n\tpublic resyncGitRepo() {\n    this.isBusy = true;\n\t  this.fetchPackageContents(true);\n  }\n\n\tpublic packagesDir(): string {\n\n\t  if (this.selectedRepo) {\n\t   let gitRepo: RepoSettings = this.configForRepo(this.selectedRepo.name);\n\n\t   if (gitRepo.packages.startsWith(\"/\"))\n\t    return gitRepo.packages;\n\t   else\n\t    return \"/\" + gitRepo.packages;\n    }\n\t}\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  \tpublic isAllSelected() {\n    \tconst numSelected = this.selectionModel.selected.length;\n    \tconst numRows = this.packageTableDataSource.data.length;\n\n    \treturn numSelected === numRows;\n  \t}\n\n  \tpublic selectRow(row) {\n\n  \t\tthis.selectionModel.toggle(row);\n\n  \t\tthis.firePropertiesChanged();\n  \t}\n\n  /** Selects all rows if they are not all selected; otherwise clear selectionModel. */\n\tpublic masterToggle() {\n\n\t    this.isAllSelected() ?\n\t        this.selectionModel.clear() :\n\t        this.packageTableDataSource.data.forEach(row => this.selectionModel.select(row));\n\n\t    this.firePropertiesChanged();\n\t}\n\tprivate fetchRepositories() {\n\n\t  this.isBusy = true;\n\n\t\tthis._gitService.repositories(this.selectedGit).subscribe((r) => {\n\t\t\tthis.repositories = r;\n\n\t\t\tif (this.repositories.length > 0 && !this.selectedRepo) {\n        let repo: GitRepo = this.repoForId(this._configuredGitRepos[0].name);\n\n\t\t\t  if (repo)\n\t\t\t    this.setCurrentRepo(repo);\n\t\t\t  else\n\t\t\t    this.setCurrentRepo(this.repositories[0]);\n      }\n\t\t\tthis.isBusy = false;\n\t\t}, error => {\n\t\t\tthis._settings.values().subscribe((v) => {\n\n\t\t\t\tthis.repositories = [];\n\t\t\t\tv.gitRepos.forEach((g) => {\n\t\t\t\t\tthis.repositories.push(new GitRepo(g.name, g.name));\n\t\t\t\t});\n\n\t\t\t\tif (this.repositories.length > 0 && !this.selectedRepoName)\n\t\t\t\t  this.setCurrentRepo(this.repositories[0]);\n        else\n          this.setCurrentRepoFromInput();\n\n\t\t\t\tthis.isBusy = false;\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate setCurrentRepoFromInput() {\n\n\t  if (this.selectedRepoName && (!this.selectedRepo || this.selectedRepoName != this.selectedRepo.id)) {\n\t    let found: GitRepo = null;\n\n\t    for (let i = 0; i  {\n\n\t\t\t\t this._setModel(packages);\n\t\t\t\t this.apiActivated.emit(true);\n          this.isBusy = false;\n\t\t\t}, error => {\n\n\t\t\t  // okay, api failed, so lets try cloning data on server side and then return the packages from there\n        // less efficient but bette than nothing.\n\n        console.log(\"git request failed, let trying indexing via clone on server and get packages back from that\");\n\n        this._packagesService.index(this.selectedRepo.name, this.configForRepo(this.selectedRepo.name).packages, this._source, resync).subscribe((p) => {\n\n          this.manualSyncRequired = true;\n          this._setModel(p);\n\n          this.selectedRepoName = this._source.gitRepository;\n          this.isBusy = false;\n\n          this.apiActivated.emit(false);\n        }, error => {\n          // bugger even that failed.\n\n          this.isBusy = false;\n\n          if (error.status == 404) {\n\t\t\t\t\t  window.alert(\"Error 404 - git request failed, this might be either because you have specified invalid user credentials, or the packages path is not valid. Please revisit your git preferences\");\n\t\t\t\t  } else {\n\t\t\t\t\t  window.alert(\"Error \" + error.status + \", git request failed with error \" + error.message);\n\t\t\t\t  }\n        });\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate _setModel(packages: WmPackageInfo[]) {\n\n\t  this.packageTableDataSource = new MatTableDataSource(packages);\n\t  this.packageTableDataSource.paginator = this.gitPaginator;\n\t  this.selectionModel.setSourceModel(packages);\n\t  this.setInitialSelection();\n\t  this.selectedSourcesLoaded.emit({source:this._source, model: this.selectionModel});\n  }\n\n\tprivate setInitialSelection() {\n\n\t\tif (this.selected) {\n\n\t\t\tthis.selectionModel.clear();\n\n\t\t\tthis.selected.forEach((s) => {\n\n\t\t\t\tfor(var i = 0; i  = new Map();\n\n\t  \tthis._source.include = [];\n\t\tthis.selectionModel.selected.forEach((p) => {\n\n\t\t\tlet l: BuilderProperties[] = [];\n\n\t\t\t//l.push(new BuilderProperties(\"name\", p.name));\n\t\t\tl.push(new BuilderProperties(\"Type\", [\"service\"]));\n\t\t\tl.push(new BuilderProperties(\"Version\", [\"\" + p.version]));\n\t\t\tl.push(new BuilderProperties(\"Description\", [p.description]));\n\n\t\t\tprops.set(p.name, l);\n\t\t\tthis._source.include.push(p.name);\n\t\t});\n\n\t\tif (this.owner)\n\t\t\tthis.owner.propertiesChangedInBuilder(\"msc\", props, this._source);\n\t\telse\n\t\t\tthis.selectedSourcesChanged.emit({source:this._source, model: this.selectionModel});\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GitSourceService.html":{"url":"injectables/GitSourceService.html","title":"injectable - GitSourceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GitSourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/git-source-control.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _commitInfo\n                            \n                            \n                                    Private\n                                _gitAPIUrl\n                            \n                            \n                                    Private\n                                _gitIsPACPassword\n                            \n                            \n                                    Private\n                                _gitName\n                            \n                            \n                                    Private\n                                _gitPassword\n                            \n                            \n                                    Private\n                                _gitType\n                            \n                            \n                                    Private\n                                _gitUser\n                            \n                            \n                                    Public\n                                _packages\n                            \n                            \n                                    Private\n                                _values\n                            \n                            \n                                    Static\n                                GITHUB_CONTENTS\n                            \n                            \n                                    Static\n                                GITHUB_REPOS\n                            \n                            \n                                    Static\n                                GITLAB_CONTENTS\n                            \n                            \n                                    Static\n                                GITLAB_FILE\n                            \n                            \n                                    Static\n                                GITLAB_REPOS\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _mapPackagesResponse\n                            \n                            \n                                    Private\n                                _mapRepoResponse\n                            \n                            \n                                    Private\n                                _packageDetails\n                            \n                            \n                                    Private\n                                authString\n                            \n                            \n                                    Public\n                                fileContents\n                            \n                            \n                                    Public\n                                repositories\n                            \n                            \n                                    Public\n                                values\n                            \n                            \n                                    Public\n                                wmPackages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_settings: Settings, _http: HttpClient, _ngxXml2jsonService: NgxXml2jsonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/git-source-control.service.ts:97\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _settings\n                                                  \n                                                        \n                                                                        Settings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _ngxXml2jsonService\n                                                  \n                                                        \n                                                                    NgxXml2jsonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _mapPackagesResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _mapPackagesResponse(dir: string, responseData: any, repo: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/git-source-control.service.ts:228\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dir\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         WmPackageInfo[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _mapRepoResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _mapRepoResponse(url: string, responseData: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/git-source-control.service.ts:289\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GitRepo[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _packageDetails\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _packageDetails(pckg: WmPackageInfo, dir: string, repo: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/git-source-control.service.ts:250\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pckg\n                                    \n                                                WmPackageInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dir\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            authString\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    authString()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/git-source-control.service.ts:311\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fileContents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fileContents(path: string, repo: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/git-source-control.service.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            repositories\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    repositories(git: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/git-source-control.service.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    git\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            values\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    values()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/git-source-control.service.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            wmPackages\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    wmPackages(git: string, repo: string, dir: string, useCache?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/git-source-control.service.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    git\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dir\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    useCache\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _commitInfo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CommitInfo[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/git-source-control.service.ts:89\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _gitAPIUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/git-source-control.service.ts:93\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _gitIsPACPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/git-source-control.service.ts:97\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _gitName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/git-source-control.service.ts:94\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _gitPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/git-source-control.service.ts:96\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _gitType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GitType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/git-source-control.service.ts:92\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _gitUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/git-source-control.service.ts:95\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _packages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WmPackageInfo[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/git-source-control.service.ts:88\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _values\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Values\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/git-source-control.service.ts:91\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            GITHUB_CONTENTS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"/repos/OWNER/REPO/contents/PATH\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/git-source-control.service.ts:82\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            GITHUB_REPOS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"/user/repos\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/git-source-control.service.ts:81\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            GITLAB_CONTENTS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"/api/v4/projects/REPO/repository/tree?path=PATH&private_token=TOKEN\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/git-source-control.service.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            GITLAB_FILE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"/api/v4/projects/REPO/repository/files/PATH?ref=master&private_token=TOKEN\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/git-source-control.service.ts:86\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            GITLAB_REPOS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"/api/v4/projects?owned=true&private_token=TOKEN\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/git-source-control.service.ts:84\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } \t           \t \t  from '@angular/core';\nimport { HttpClient, HttpHeaders }      from '@angular/common/http';\nimport { Observable, of }               from 'rxjs';\nimport { switchMap, map, catchError } \tfrom 'rxjs/operators';\n\nimport { NgxXml2jsonService } \t\t\t    from 'ngx-xml2json';\n\nimport {GitType, Settings, Values,\n                    RepoSettings }      from '../settings';\nimport { WmPackageInfo }\t\t\t\t        from '../models/wm-package-info';\n\nimport * as moment from 'moment';\n\nexport class GitRepo {\n\n  public config: RepoSettings;\n\n\tconstructor(public id: string, public name: string) {\n\n\t}\n}\nexport enum FileStatus {\n\n\tadded,\n\tremoved,\n\tchanged\n}\n\nexport class FileInfo {\n\n\tpublic status: FileStatus;\n\n\tpublic constructor(public fileName: string, status: string) {\n\n\t\tif (status == 'removed')\n\t\t\tthis.status = FileStatus.removed;\n\t\telse if (status == 'added')\n\t\t\tthis.status = FileStatus.added;\n\t\telse\n\t\t\tthis.status = FileStatus.changed;\n\t}\n}\n\nexport class CommitInfo {\n\n\tpublic sha: string;\n\tpublic committer: string;\n\tpublic message: string;\n\tpublic count: number;\n\tpublic date: Date;\n\n\tpublic files: FileInfo[] = [];\n\n\tconstructor() {\n\n\t}\n\n\tpublic static make(data: any, count: number): CommitInfo {\n\n\t\tlet c: CommitInfo = new CommitInfo();\n\t\tc.sha = data.sha;\n\t\tc.count = count;\n\t\tc.committer = data.commit.committer.name;\n\t\tc.date = moment(data.commit.committer.date).toDate();\n\t\tc.message = data.commit.message;\n\n\t\tif (data.files) {\n\n\t\t\tdata.files.forEach((f) => {\n\t\t\t\tc.files.push(new FileInfo(f.filename, f.status));\n\t\t\t});\n\t\t}\n\n\t\treturn c;\n\t}\n}\n\n@Injectable()\nexport class GitSourceService {\n\n  public static GITHUB_REPOS: string = \"/user/repos\";\n\tpublic static GITHUB_CONTENTS: string = \"/repos/OWNER/REPO/contents/PATH\";\n\n\tpublic static GITLAB_REPOS: string = \"/api/v4/projects?owned=true&private_token=TOKEN\";\n\tpublic static GITLAB_CONTENTS: string = \"/api/v4/projects/REPO/repository/tree?path=PATH&private_token=TOKEN\";\n\tpublic static GITLAB_FILE: string = \"/api/v4/projects/REPO/repository/files/PATH?ref=master&private_token=TOKEN\";\n\n\tpublic _packages: WmPackageInfo[] = [];\n\tpublic _commitInfo: CommitInfo[];\n\n\tprivate _values: Values;\n\tprivate _gitType: GitType;\n\tprivate _gitAPIUrl: string;\n\tprivate _gitName: string;\n\tprivate _gitUser: string;\n\tprivate _gitPassword: string;\n\tprivate _gitIsPACPassword: string;\n\n\n    constructor(private _settings: Settings, private _http: HttpClient, private _ngxXml2jsonService: NgxXml2jsonService) {\n\n    \tthis._settings.values().subscribe((v) => {\n\n    \t  this._values = v;\n    \t  this._gitType = v.gitType;\n    \t\tthis._gitAPIUrl  = v.gitAPIUrl;\n    \t\tthis._gitName = v.gitName;\n    \t\tthis._gitUser = v.gitUser;\n    \t\tthis._gitPassword = v.gitPassword;\n    \t\tthis._gitIsPACPassword = v.gitIsPACPassword;\n\n    \t\tif (this._gitAPIUrl.endsWith(\"/\"))\n    \t\t\tthis._gitAPIUrl = this._gitAPIUrl.substring(0, this._gitAPIUrl.length-1);\n    \t});\n    }\n\n    public values(): Observable {\n\n      if (this._values) {\n        return of(this._values);\n      } else {\n        return this._settings.values();\n      }\n    }\n\n    public repositories(git: string) {\n\n    \tlet all: string;\n    \tlet template: string;\n\n    \tlet headers = new HttpHeaders()\n\t\t\t\t.append('Content-Type', 'application/json')\n\t\t\t\t.append('Accept', 'application/json');\n\n    \tif (this._gitType == GitType.github) {\n\n    \t\tall = this._gitAPIUrl + GitSourceService.GITHUB_REPOS.replace(/OWNER/, this._gitUser);\n\n    \t\theaders = headers.append('Authorization', `Basic ${btoa(this.authString())}`);\n    \t}\n    \telse {\n    \t\tall = this._gitAPIUrl + GitSourceService.GITLAB_REPOS.replace(/TOKEN/, this._gitPassword);\n    \t}\n\n\t\t  console.log(\"Querying git for repos with url \" + all);\n\n\t\t  return this._http.get(all, { headers }).pipe(map( (responseData) => {\n            return this._mapRepoResponse(this._gitAPIUrl, responseData);\n        }));\n    }\n\n    public wmPackages(git: string, repo: string, dir: string, useCache?: boolean): Observable {\n\n\t\tlet template: string;\n\n\t\tlet headers = new HttpHeaders()\n\t\t\t\t\t.append('Content-Type', 'application/json')\n\t\t\t\t\t.append('Accept', 'application/json');\n\n\t\tif (this._gitType == GitType.github) {\n        template = GitSourceService.GITHUB_CONTENTS;\n        headers = headers.append('Authorization', `Basic ${btoa(this.authString())}`);\n\n\t\t} else {\n    \t  template = GitSourceService.GITLAB_CONTENTS;\n\t\t}\n\n\t\tif (useCache && this._packages.length > 0) {\n\n\t\t\treturn of(this._packages);\n\n\t\t} else {\n\n\t\t\tif (dir.startsWith(\"/\"))\n\t\t\t\tdir = dir.substring(1);\n\n\t\t\tlet url: string = this._gitAPIUrl + template\n\t\t\t\t\t\t\t.replace(/OWNER/, git || this._gitUser)\n\t\t\t\t\t\t\t.replace(/REPO/, repo)\n\t\t\t\t\t\t\t.replace(/PATH/, dir)\n\t\t\t\t\t\t\t.replace(/TOKEN/, this._gitPassword);\n\n\t\t\tconsole.log(\"Querying git for packages with url \" + url);\n\n\t\t\treturn this._http.get(url, { headers }).pipe(map( (responseData) => {\n\n\t            return this._mapPackagesResponse(dir, responseData, repo);\n\t        }));\n\t\t  }\n    }\n\n    public fileContents(path: string, repo: string): Observable {\n\n\t\tlet template: string;\n\n\t\tlet headers = new HttpHeaders()\n\t\t\t\t.append('Content-Type', 'application/json')\n\t\t\t\t.append('Accept', 'application/json');\n\n\t\tif (this._gitType == GitType.github) {\n\n\t\t\ttemplate = GitSourceService.GITHUB_CONTENTS\n\t\t\t\t\t\t\t.replace(/OWNER/, this._gitName || this._gitUser)\n\t\t\t\t\t\t\t.replace(/REPO/, repo)\n\t\t\t\t\t\t\t.replace(/PATH/, encodeURIComponent(path));\n\n\t\t\theaders = headers.append('Authorization', `Basic ${btoa(this.authString())}`);\n\n\t\t} else {\n\t\t\ttemplate = GitSourceService.GITLAB_FILE\n\t\t\t\t\t\t\t  .replace(/REPO/, repo)\n\t\t\t\t\t\t\t  .replace(/PATH/, encodeURIComponent(path))\n                .replace(/TOKEN/, this._gitPassword);\n\t\t}\n\n\t\tlet url: string = this._gitAPIUrl + template;\n\n\t\treturn this._http.get(url, { headers }).pipe(map( (responseData) => {\n\n            return ( responseData).content;\n\n          },\n          error => {\n            return null;\n\t\t}));\n    }\n\n    private _mapPackagesResponse(dir: string, responseData: any, repo: string): WmPackageInfo[] {\n // data is returned as list called references or as a single entity\n\n \t\tlet images: WmPackageInfo[] = [];\n\n \t\tfor (let i=0; i  {\n\n\t\t\t\t  if (!success)\n\t\t\t\t\t  images.splice(i, 1);\n\t\t\t  });\n\n\t\t\t  images.push(p);\n      }\n\t\t}\n\n \t\treturn images;\n    }\n\n    private _packageDetails(pckg: WmPackageInfo, dir: string, repo: string): Observable {\n\n    \tlet path: string;\n\n    \tif (dir && dir != \".\")\n    \t\tpath = dir + (dir.endsWith(\"/\") ? \"\" : \"/\") + pckg.name + \"/manifest.v3\";\n    \telse\n    \t\tpath = pckg.name + \"/manifest.v3\";\n\n    \treturn this.fileContents(path, repo).pipe(map((c) => {\n\n    \t\tlet xmlString: string = atob(c);\n    \t\tlet xml = new DOMParser().parseFromString(xmlString, 'text/xml');\n\n    \t\tvar top = xml.getElementsByTagName('Values');\n\n\t\t\t  for(var i=0;i {\n    \t\treturn of(false);\n    \t}));\n    }\n\n    private _mapRepoResponse(url: string, responseData: any): GitRepo[] {\n\n    \tlet names: GitRepo[] = [];\n\n    \tresponseData.forEach((r) => {\n    \t\tnames.push(new GitRepo(this._gitType == GitType.github ? r.name : r.id, r.name));\n    \t});\n\n    \treturn names.sort((a,b)=> {\n\n    \t  let a1 = a.name.toLowerCase();\n    \t  let b1 = b.name.toLowerCase();\n\n    \t  if (a1 == b1)\n    \t    return 0;\n    \t  else if (a1>b1)\n    \t    return 1;\n    \t  else\n    \t    return -1;\n      });\n    }\n\n    private authString(): string {\n\n    \tif (this._gitIsPACPassword)\n    \t\treturn this._gitPassword;\n    \telse\n    \t\treturn this._gitUser + \":\" + this._gitPassword;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                home\n            \n\n            \n                styleUrls\n                ../templates/home.css\n            \n\n\n\n            \n                templateUrl\n                ../templates/home.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _currentExtra\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _showExtraInfo\n                            \n                            \n                                    Public\n                                goBuild\n                            \n                            \n                                    Public\n                                goDeploy\n                            \n                            \n                                    Public\n                                goInstall\n                            \n                            \n                                    Public\n                                goMake\n                            \n                            \n                                    Public\n                                goRun\n                            \n                            \n                                    Public\n                                goSource\n                            \n                            \n                                    Public\n                                goStage\n                            \n                            \n                                    Public\n                                goTest\n                            \n                            \n                                    Public\n                                goTestRun\n                            \n                            \n                                    Public\n                                goTestSetup\n                            \n                            \n                                    Public\n                                hideExtraInfo\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Private\n                                offset\n                            \n                            \n                                    Private\n                                offsetForExtraInfo\n                            \n                            \n                                    Private\n                                setOffsetForExtraDivs\n                            \n                            \n                                    Public\n                                showDetailsInfo\n                            \n                            \n                                    Private\n                                xposOfMainDiv\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_location: Location, _router: Router, _settings: Settings)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/home.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _settings\n                                                  \n                                                        \n                                                                        Settings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _showExtraInfo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _showExtraInfo(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/home.component.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            goBuild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    goBuild()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/home.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            goDeploy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    goDeploy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/home.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            goInstall\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    goInstall()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/home.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            goMake\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    goMake()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/home.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            goRun\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    goRun()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/home.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            goSource\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    goSource()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/home.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            goStage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    goStage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/home.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            goTest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    goTest()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/home.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            goTestRun\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    goTestRun()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/home.component.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            goTestSetup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    goTestSetup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/home.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hideExtraInfo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hideExtraInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/home.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/home.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            offset\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    offset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/home.component.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            offsetForExtraInfo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    offsetForExtraInfo(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/home.component.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setOffsetForExtraDivs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setOffsetForExtraDivs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/home.component.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            showDetailsInfo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showDetailsInfo(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/home.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            xposOfMainDiv\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    xposOfMainDiv()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/home.component.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _currentExtra\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/home.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ChangeDetectorRef, Inject, OnInit,\n\t\t\t\t\t\t\t\t\tOnDestroy }        \t\tfrom '@angular/core';\nimport { Router }\t\t\t\t\t   \t\t\t\t\t\tfrom '@angular/router';\nimport { Location } \t\t\t\t\t\t\t\t\t\t   from \"@angular/common\";\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} \tfrom '@angular/material';\n\nimport { Settings }                                from '../settings';\n\nimport * as $ from 'jquery';\n\n@Component({\n  selector: 'home',\n  templateUrl: '../templates/home.html',\n  styleUrls: ['../templates/home.css']\n})\nexport class HomeComponent implements OnInit {\n\n\tprivate _currentExtra: string;\n\n  // constructor(public dialogRef: MatDialogRef, @Inject(MAT_DIALOG_DATA) public data: DialogData) {\n   constructor(private _location: Location, private _router: Router, private _settings: Settings) {\n   \t\n   \t\tif (this._location.path() == \"\") {\n\n   \t\t\t// user reloaded browser, do we need to go back to last page\n\n   \t\t\tthis._settings.values().subscribe(values => {\n\n\t   \t\t\tif (values.lastViewedPage && values.lastViewedPage != 'home') {\n\t   \t\t\t\tthis._settings.gotoLastViewedPage(this._router);\n\t   \t\t\t}\n   \t\t\t});\n   \t\t}\n   }\n\n   public ngOnInit() {\n\n   \t\tthis.setOffsetForExtraDivs();\n      }\n\n   public showDetailsInfo(name: string) {\n\n   \t\tif (this.hideExtraInfo()) {\n   \t\t\tlet ref: HomeComponent = this;\n   \t\t\tsetTimeout(() => {\n   \t\t\t\tref._showExtraInfo(name);\n   \t\t\t}, 100);\n\n   \t\t} else {\n   \t\t\tthis._showExtraInfo(name);\n   \t\t}\n\n   \t\t\n   }\n\n   public hideExtraInfo(): boolean {\n\n   \t\tif (this._currentExtra) {\n   \t\t\t$(this._currentExtra).animate({ bottom: '-800px' }, 400);\n   \t\t\t$(this._currentExtra).css({display: 'none'});\n   \t\t\t\n   \t\t\tthis._currentExtra = null;\n\n   \t\t\treturn true;\n   \t\t} else {\n   \t\t\treturn false;\n   \t\t}\n   }\n\n   public goBuild() {\n   \t\tthis._router.navigate(['/build']);\n   }\n\n   public goInstall() {\n   \t\tthis._router.navigate(['/install']);\n   }\n\n   public goSource() {\n   \t\tthis._router.navigate(['/package']);\n   }\n\n   public goMake() {\n   \t\tthis._router.navigate(['/image']);\n   }\n\n   public goDeploy() {\n   \t\tthis._router.navigate(['/deploy']);\n   }\n\n   public goRun() {\n   \t\tthis._router.navigate(['/run']);\n   }\n\n   public goStage() {\n   \t\tthis._router.navigate(['/stage']);\n   }\n\n   public goTest() {\n   \t\tthis._router.navigate(['/test']);\n   }\n\n   public goTestSetup() {\n   \t\tthis._router.navigate(['/testDefinition']);\n   }\n\n   public goTestRun() {\n   \t\tthis._router.navigate(['/testRun']);\n   }\n\n   private _showExtraInfo(name: string) {\n\n   \t\tthis._currentExtra = name;\n   \t\t$(name).css({display: 'block'});\n\n   \t\t$(name).animate({ bottom: this.offsetForExtraInfo(name)}, 400);\n   }\n\n   private setOffsetForExtraDivs() {\n\n   \t\tlet left: number = this.xposOfMainDiv();\n\n   \t\tif (left > 20) {\n   \t   \t\t$('#buildextra').css({left: $(\"#build-block\").offset().left - 210});\n   \t   \t\t$('#deployextra').css({left: $(\"#deploy-block\").offset().left - 210});\n   \t   \t\t$('#testextra').css({left: $(\"#test-block\").offset().left - 210});\n   \t\t}\n   \t   \telse {\n   \t   \t\t$('#buildextra').css({left: $(\"#build-block\").offset().left + 20});\n   \t   \t\t$('#deployextra').css({left: $(\"#deploy-block\").offset().left + 20});\n   \t   \t\t$('#testextra').css({left: $(\"#test-block\").offset().left + 20});\n   \t   \t}\n\n   \t   \tlet ref: HomeComponent = this;\n   \t\tsetTimeout(() => {\n   \t\t\tref.setOffsetForExtraDivs();\n   \t\t}, 500);\n   }\n\n   private offsetForExtraInfo(name: string): number {\n\n   \t\tlet dh: number = $('#home-page').offset().top + $('#home-page').height() - 10;\n   \t\tlet my: number = this.offset();\n\t\tlet bh: number = $(name).height(); \n\n   \t\tlet space: number = dh - my;\n\n   \t\treturn space - bh;\n   }\n\n   private offset(): number {\n\n   \t\treturn $('#page-content').offset().top + $('#page-content').height();\n   }\n\n   private xposOfMainDiv(): number {\n\n   \t\treturn $(\"#home-page\").offset().left;\n   }\n}\n    \n\n    \n        \n  Welcome\n  \n    \n    \t\n    \t\tEnd to end solution for docker image creation and deployment for all your micro service requirements, powered by webMethods.\n    \t\n    \t\n    \t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\tBuild\n    \t\t\t\tBuild Docker images comprising both Software AG base Products with your Micro Services.\n    \t\t\t\tBuild Summary\n    \t\t\t\n    \t\t\n    \t\t\n    \t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\tDeploy\n    \t\t\t\tRun and deploy your Micro Services using docker compose or through Kubernetes\n    \t\t\t\tDeployments\n    \t\t\t\n    \t\t\n    \t\t\n    \t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\tTest\n    \t\t\t\tGenerate Test Cases, execute and review results\n    \t\t\t\tTest Results\n    \t\t\t\n    \t\t\n    \t\n    \t\n\t    \t\n\t\t    \t\n\t\t    \t\t\n\t\t    \t\t\n\t\t    \t\t\tCreate a webMethods Docker image.\n\t    \t\t\t\tInstall Product\n\t\t    \t\t\n\t\t    \t\t\n\t\t\t\t\t\n\t\t    \t\t\tIdentify your webMethods packages and services to be deployed\n\t    \t\t\t\tIdentify Source\n\t\t    \t\t\n\t\t    \t\t\n\t\t\t\t\t\n\t\t    \t\t\tCombine your webMethods & Services into single deployable image\n\t    \t\t\t\tMake Docker Image\n\t\t    \t\t\n\t\t    \t\n\t\t    \n\t\t    \n\t\t    \t\n\t\t    \t\t\n\t\t    \t\t\n\t\t    \t\t\tSelect image & settings necessary to run your micro service\n\t    \t\t\t\tRun Containers\n\t\t    \t\t\n\t\t    \t\t\n\t\t\t\t\t\n\t\t    \t\t\tGenerate jenkins pipeline to automate startup, testing and deployment\n\t    \t\t\t\tStaging\n\t\t    \t\t\n\t\t    \t\n\t\t    \n\t\t    \n\t\t    \t\n\t\t    \t\t\n\t\t    \t\t\n\t\t    \t\t\tDefine unit tests for source packages and services\n\t    \t\t\t\tSetup\n\t\t    \t\t\n\t\t    \t\t\n\t\t\t\t\t\n\t\t    \t\t\tRun test cases on your local Integration Server\n\t    \t\t\t\tTest\n\t\t    \t\t\n\t\t    \t\n\t\t    \n\t\t\n    \n  \n\n    \n\n    \n                \n                    ../templates/home.css\n                \n                \n.block {\n\tbackground-color: rgb(23, 118,191);\n\tcolor: white;\n\tpadding: 10px;\n\twidth: 300px;\n\theight: 200px;\n\ttext-align: center;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tcursor: pointer;\n}\n.stack-vertical {\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\tpadding-bottom: 20px;\n\tpadding: 5px;\n}\n.row {\n\t display: flex;\n\t flex-direction: row;\n\t justify-content: center;\n\t align-items: center;\n\t margin-top: 100px\n}\n.page-title {\n\tfont-size: 14px;\n\tcolor: darkgray;\n}\n.page-content-title {\n\ttext-align: center;\n}\n.title {\n\tfont-size: 30px;\n\tline-height: 75px;\n\tvertical-align: middle;\n}\n.subject {\n\tfont-size: 14px;\n}\n.learn-more {\n\tbackground-color: rgba(0,0,0, 0.3);\n\tcolor: white;\n\tpadding: 5px;\n\tmargin-top: 30px;\n\tborder: none;\n\ttext-transform: uppercase;\n\tfont-size: 14px;\n}\n.learn-more:hover {\n\tcolor: orange;\n}\n.extra {\n\tposition: absolute;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\tmargin-top: 100px;\n\tdisplay: none;\n}\n.blockextra {\n\tbackground-color: rgba(23, 118,191, 0.96);\n\tcolor: white;\n\tpadding: 10px;\n\twidth: 200px;\n\theight: 75px;\n\ttext-align: center;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tcursor: pointer;\n}\n.titleExtra {\n\tfont-size: 12px;\n\tfont-weight: bold;\n}\n.subjectExtra {\n\tfont-size: 11px;\n\tfont-weight: lighter;\n}\n.go {\n\tbackground-color: rgba(0,0,0, 0.3);\n\tcolor: white;\n\tpadding: 5px;\n\tmargin-top: 10px;\n\tborder: none;\n\ttext-transform: uppercase;\n\tfont-size: 11px;\n}\n.go:hover {\n\tfont-weight: bolder;\n\tcolor: orange;\n}\n#buildextra {\n\tbottom: -800px;\n}\n#deployextra {\n\tbottom: -800px;\n}\n#testextra {\n\tbottom: -800px;\n}\n\n@keyframes fadeIn {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    visibility: visible;\n    opacity: 1;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Welcome          \t    \t\tEnd to end solution for docker image creation and deployment for all your micro service requirements, powered by webMethods.    \t    \t    \t\t    \t\t\t    \t\t\t    \t\t\t\tBuild    \t\t\t\tBuild Docker images comprising both Software AG base Products with your Micro Services.    \t\t\t\tBuild Summary    \t\t\t    \t\t    \t\t    \t\t    \t\t\t    \t\t\t    \t\t\t\tDeploy    \t\t\t\tRun and deploy your Micro Services using docker compose or through Kubernetes    \t\t\t\tDeployments    \t\t\t    \t\t    \t\t    \t\t    \t\t\t    \t\t\t    \t\t\t\tTest    \t\t\t\tGenerate Test Cases, execute and review results    \t\t\t\tTest Results    \t\t\t    \t\t    \t    \t\t    \t\t\t    \t\t\t    \t\t\t\t    \t\t\t\t    \t\t\tCreate a webMethods Docker image.\t    \t\t\t\tInstall Product\t\t    \t\t\t\t    \t\t\t\t\t\t\t\t\t    \t\t\tIdentify your webMethods packages and services to be deployed\t    \t\t\t\tIdentify Source\t\t    \t\t\t\t    \t\t\t\t\t\t\t\t\t    \t\t\tCombine your webMethods & Services into single deployable image\t    \t\t\t\tMake Docker Image\t\t    \t\t\t\t    \t\t\t    \t\t    \t\t    \t\t\t    \t\t\t\t    \t\t\t\t    \t\t\tSelect image & settings necessary to run your micro service\t    \t\t\t\tRun Containers\t\t    \t\t\t\t    \t\t\t\t\t\t\t\t\t    \t\t\tGenerate jenkins pipeline to automate startup, testing and deployment\t    \t\t\t\tStaging\t\t    \t\t\t\t    \t\t\t    \t\t    \t\t    \t\t\t    \t\t\t\t    \t\t\t\t    \t\t\tDefine unit tests for source packages and services\t    \t\t\t\tSetup\t\t    \t\t\t\t    \t\t\t\t\t\t\t\t\t    \t\t\tRun test cases on your local Integration Server\t    \t\t\t\tTest\t\t    \t\t\t\t    \t\t\t    \t\t      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about-app'},{'name': 'ActionComponent', 'selector': 'action'},{'name': 'ApiGatewayInstallerComponent', 'selector': 'jc-apigw-install'},{'name': 'ApiMicroGatewayInstallerComponent', 'selector': 'jc-apimg-install'},{'name': 'ApiPortalInstallerComponent', 'selector': 'jc-apipr-installer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildCommandsComponent', 'selector': 'build-commands'},{'name': 'BuildComponent', 'selector': 'build'},{'name': 'BuildExeComponent', 'selector': 'build-exe'},{'name': 'BuildImageComponent', 'selector': 'build-solution'},{'name': 'BuildInstallComponent', 'selector': 'build-install'},{'name': 'BuildPackagesComponent', 'selector': 'build-package'},{'name': 'ContainerComponent', 'selector': 'container'},{'name': 'ContainersComponent', 'selector': 'app-containers'},{'name': 'DeploymentDetailsComponent', 'selector': 'jc-deployment-details'},{'name': 'DeploymentListComponent', 'selector': 'jc-k8s-deployments'},{'name': 'DockerImageChooserComponent', 'selector': 'docker-image-chooser'},{'name': 'DockerImageListComponent', 'selector': 'jc-docker-images'},{'name': 'DockerImageVersionsComponent', 'selector': 'jc-docker-image-versions'},{'name': 'EditContainerComponent', 'selector': 'edit-container'},{'name': 'GitSourcesComponent', 'selector': 'git-source'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'InstallerComponent', 'selector': 'jc-install'},{'name': 'MicroServiceBuilderComponent', 'selector': 'jc-msc-configure'},{'name': 'MicroServiceInstallerComponent', 'selector': 'jc-msc-install'},{'name': 'PodsListComponent', 'selector': 'jc-pods'},{'name': 'RuntimeContainersComponent', 'selector': 'runtime-containers'},{'name': 'RuntimeDeployComponent', 'selector': 'runtime-deploy'},{'name': 'RuntimeDetailsComponent', 'selector': ''},{'name': 'RuntimeK8sComponent', 'selector': 'runtime'},{'name': 'RuntimeScaleComponent', 'selector': 'jc-runtime-scale'},{'name': 'RuntimeStageComponent', 'selector': 'runtime-stage'},{'name': 'RuntimeUpdateComponent', 'selector': ''},{'name': 'SagImageAlerterComponent', 'selector': 'sag-image-alerter'},{'name': 'ServicePropertiesComponent', 'selector': 'k8s-props'},{'name': 'SettingsComponent', 'selector': 'home'},{'name': 'SimpleNameComponent', 'selector': 'name-dialog'},{'name': 'StagingComponent', 'selector': 'staging'},{'name': 'TestCaseComponent', 'selector': 'test-case'},{'name': 'TestDefinitionComponent', 'selector': 'test-definitions'},{'name': 'TestHistoryComponent', 'selector': 'test-history'},{'name': 'TestRunComponent', 'selector': 'test-reun'},{'name': 'UMInstallerComponent', 'selector': 'jc-um-install'},{'name': 'UploadButtonComponent', 'selector': 'file-uploader-button'}];\n    var DIRECTIVES = [{'name': 'BuildImageChooseDirective', 'selector': '[builder]'},{'name': 'CancelCdkDrag', 'selector': '[appCancelCdkDrag]'},{'name': 'NgFileDrop', 'selector': '[ng-file-drop]'},{'name': 'NgFileSelect', 'selector': '[ng-file-select]'},{'name': 'RuntimeActionsDirective', 'selector': '[runtime-actions]'}];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/K8sDeployment.html":{"url":"classes/K8sDeployment.html","title":"class - K8sDeployment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  K8sDeployment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/k8s-deployment.ts\n        \n\n\n            \n                Extends\n            \n            \n                        K8sDeploymentDefinition\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _cache\n                            \n                            \n                                    Public\n                                availableReplicas\n                            \n                            \n                                    Static\n                                currentDeployment\n                            \n                            \n                                    Public\n                                readyReplicas\n                            \n                            \n                                    Public\n                                status\n                            \n                            \n                                    Public\n                                unavailableReplicas\n                            \n                            \n                                    Public\n                                containers\n                            \n                            \n                                    Public\n                                creationDate\n                            \n                            \n                                    Static\n                                currentDeployment\n                            \n                            \n                                    Public\n                                deploymentId\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                namespace\n                            \n                            \n                                    Public\n                                reference\n                            \n                            \n                                    Public\n                                replicas\n                            \n                            \n                                    Public\n                                restartPolicy\n                            \n                            \n                                    Public\n                                serviceId\n                            \n                            \n                                    Public\n                                version\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                make\n                            \n                            \n                                    Public\n                                pods\n                            \n                            \n                                    Public\n                                updatePodCount\n                            \n                            \n                                    Private\n                                updateStatus\n                            \n                            \n                                    Protected\n                                _make\n                            \n                            \n                                    Static\n                                make\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _cache\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         K8sPod[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/k8s-deployment.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            availableReplicas\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/k8s-deployment.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            currentDeployment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         K8sDeployment\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/k8s-deployment.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            readyReplicas\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/k8s-deployment.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DeploymentStatus\n\n                        \n                    \n                    \n                        \n                            Default value : DeploymentStatus.unknown\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/k8s-deployment.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unavailableReplicas\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/k8s-deployment.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            containers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DockerImage[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         K8sDeploymentDefinition\n\n                                \n                            \n                        \n                            \n                                    Defined in         K8sDeploymentDefinition:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            creationDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         K8sDeploymentDefinition\n\n                                \n                            \n                        \n                            \n                                    Defined in         K8sDeploymentDefinition:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            currentDeployment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         K8sDeploymentDefinition\n\n                        \n                    \n                            \n                                \n                                    Inherited from         K8sDeploymentDefinition\n\n                                \n                            \n                        \n                            \n                                    Defined in         K8sDeploymentDefinition:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            deploymentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         K8sDeploymentDefinition\n\n                                \n                            \n                        \n                            \n                                    Defined in         K8sDeploymentDefinition:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         K8sDeploymentDefinition\n\n                                \n                            \n                        \n                            \n                                    Defined in         K8sDeploymentDefinition:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         K8sDeploymentDefinition\n\n                                \n                            \n                        \n                            \n                                    Defined in         K8sDeploymentDefinition:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         K8sDeploymentDefinition\n\n                                \n                            \n                        \n                            \n                                    Defined in         K8sDeploymentDefinition:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            namespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         K8sDeploymentDefinition\n\n                                \n                            \n                        \n                            \n                                    Defined in         K8sDeploymentDefinition:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reference\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         K8sDeploymentDefinition\n\n                                \n                            \n                        \n                            \n                                    Defined in         K8sDeploymentDefinition:15\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            replicas\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                            \n                                \n                                    Inherited from         K8sDeploymentDefinition\n\n                                \n                            \n                        \n                            \n                                    Defined in         K8sDeploymentDefinition:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            restartPolicy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         K8sDeploymentDefinition\n\n                                \n                            \n                        \n                            \n                                    Defined in         K8sDeploymentDefinition:17\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            serviceId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         K8sDeploymentDefinition\n\n                                \n                            \n                        \n                            \n                                    Defined in         K8sDeploymentDefinition:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                            \n                                \n                                    Inherited from         K8sDeploymentDefinition\n\n                                \n                            \n                        \n                            \n                                    Defined in         K8sDeploymentDefinition:19\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            make\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    make(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/k8s-deployment.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         K8sDeployment\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            pods\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    pods(service: K8sService, refresh?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/k8s-deployment.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    service\n                                    \n                                                K8sService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    refresh\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updatePodCount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePodCount(replicas: number, readyReplicas: number, availableReplicas: number, unavailableReplicas: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/k8s-deployment.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    replicas\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    readyReplicas\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    availableReplicas\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    unavailableReplicas\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateStatus(replicas: number, readyReplicas: number, availableReplicas: number, unavailableReplicas?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/k8s-deployment.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    replicas\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    readyReplicas\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    availableReplicas\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    unavailableReplicas\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _make\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _make(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         K8sDeploymentDefinition\n\n                \n            \n            \n                \n                        Defined in         K8sDeploymentDefinition:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            make\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    make(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         K8sDeploymentDefinition\n\n                \n            \n            \n                \n                        Defined in         K8sDeploymentDefinition:43\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         K8sDeploymentDefinition\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, of }               \tfrom 'rxjs';\nimport { switchMap, map } \t\t\t\t\tfrom 'rxjs/operators';\n\nimport { K8sDeploymentDefinition } \t\t\tfrom \"./k8s-deployment-definition\";\nimport { K8sPod }\t\t\t \t\t\t\tfrom './k8s-pod';\n\nimport { K8sService }\t\t\t\t\t\tfrom '../services/k8s.service';\n\nexport enum DeploymentStatus {\n\tunknown = \"unknown\",\n\trunning = \"running\",\n\tupdating = \"updating\",\n\tsuspended = \"suspended\",\n\tstopped = \"stopped\",\n\tunavailable = \"unavailable\",\n\tnew = \"new\"\n\n}\n\nexport class K8sDeployment extends K8sDeploymentDefinition {\n\n\tpublic static currentDeployment: K8sDeployment;\n\n\tpublic status: DeploymentStatus = DeploymentStatus.unknown;\n\n\tprivate _cache: K8sPod[] = [];\n\n\tpublic readyReplicas: number = 0;\n\tpublic availableReplicas: number = 0;\n\tpublic unavailableReplicas: number = 0;\n\n\tpublic updatePodCount(replicas: number, readyReplicas: number, availableReplicas: number, unavailableReplicas: number) {\n\n\t\tthis.updateStatus(replicas, readyReplicas, availableReplicas, unavailableReplicas);\n\t}\n\n\tpublic pods(service: K8sService, refresh?: boolean): Observable {\n\n\t\tif (!refresh && this._cache.length > 0) {\n\n\t\t\treturn of(this._cache);\n\n\t\t} else {\n\n\t\t\treturn service.podsForAppLabel(this.namespace, this.description).pipe(map((pods) => {\n\n\t\t\t\tthis._cache = pods;\n\n\t\t\t\treturn pods;\n\t\t\t}));\n\t\t}\n\t}\n\n\tpublic static make(data: any): K8sDeployment {\n\n\t\tlet d: K8sDeployment = new K8sDeployment()._make(data);\n\n\t\t// now determine status and pods.\n\n\t\td.updateStatus(data.status.replicas, data.status.readyReplicas, data.status.availableReplicas, data.status.unavailableReplicas);\n\n\t\treturn d;\n\t}\n\n\tprivate updateStatus(replicas: number, readyReplicas: number, availableReplicas: number, unavailableReplicas?: number) {\n\n\t\tthis.replicas = replicas || 0;\n\t\tthis.readyReplicas = readyReplicas || 0;\n\t\tthis.availableReplicas = availableReplicas || 0;\n\t\tthis.unavailableReplicas =  unavailableReplicas || 0;\n\n\t\tif (this.replicas == 0) {\n\t\t\tthis.status = DeploymentStatus.suspended;\n\t\t}\n\t\telse if (availableReplicas > 0) {\n\t\t\tthis.status = DeploymentStatus.updating;\n\t\t}\n\t\telse if (readyReplicas > 0) {\n\t\t\tthis.status = DeploymentStatus.running;\n\t\t}\n\t\telse if (unavailableReplicas > 0) {\n\t\t\tthis.status = DeploymentStatus.unavailable;\n\t\t}\n\t\telse if (replicas > 1) {\n\t\t\tthis.status = DeploymentStatus.stopped;\n\t\t}\n\t\telse {\n\t\t\tthis.status = DeploymentStatus.new;\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/K8sDeploymentDefinition.html":{"url":"classes/K8sDeploymentDefinition.html","title":"class - K8sDeploymentDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  K8sDeploymentDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/k8s-deployment-definition.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                containers\n                            \n                            \n                                    Public\n                                creationDate\n                            \n                            \n                                    Static\n                                currentDeployment\n                            \n                            \n                                    Public\n                                deploymentId\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                namespace\n                            \n                            \n                                    Public\n                                reference\n                            \n                            \n                                    Public\n                                replicas\n                            \n                            \n                                    Public\n                                restartPolicy\n                            \n                            \n                                    Public\n                                serviceId\n                            \n                            \n                                    Public\n                                version\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _make\n                            \n                            \n                                    Static\n                                make\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/models/k8s-deployment-definition.ts:22\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            containers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DockerImage[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/k8s-deployment-definition.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            creationDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/k8s-deployment-definition.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            currentDeployment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         K8sDeploymentDefinition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/k8s-deployment-definition.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            deploymentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/k8s-deployment-definition.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/k8s-deployment-definition.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/k8s-deployment-definition.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/k8s-deployment-definition.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            namespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/k8s-deployment-definition.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reference\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/k8s-deployment-definition.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            replicas\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/k8s-deployment-definition.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            restartPolicy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/k8s-deployment-definition.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            serviceId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/k8s-deployment-definition.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/k8s-deployment-definition.ts:19\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _make\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _make(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/k8s-deployment-definition.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            make\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    make(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/k8s-deployment-definition.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         K8sDeploymentDefinition\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DockerImage }\t\t\t\t\t\t\tfrom './docker-image';\n\nimport * as moment from 'moment';\n\nexport class K8sDeploymentDefinition {\n\n\tpublic static currentDeployment: K8sDeploymentDefinition;\n\n\tpublic id: string;\n\tpublic name: string;\n\tpublic deploymentId: string;\n\tpublic serviceId: string;\n\tpublic description: string;\n\tpublic namespace: string;\n\tpublic reference: string;\n\tpublic creationDate: Date;\n\tpublic restartPolicy: string;\n\n\tpublic version: number = 1;\n\tpublic replicas: number = 1;\n\n\tpublic containers: DockerImage[];\n\n\tpublic constructor() {\n\n\t\tthis.containers = [];\n\n\t\tlet m1: DockerImage = new DockerImage();\n\t\tm1.id = \"985485fgotfkgfksdpd43ga\";\n\t\tm1.setName(\"Test Hello World Service\");\n\t\tm1.type = \"Microservice\";\n\t\tm1.description = \"classic microservice demo\";\n\n\t\tlet m2: DockerImage = new DockerImage();\n\t\tm2.id = \"69659gpfo450o5fgo40\";\n\t\tm2.setName(\"Hello World API Enforcer\");\n\t\tm2.description = \"fee fi fo fum\";\n\n\t\t//this.containers.push(m1);\n\t\t//this.containers.push(m2);\n\t}\n\n\tpublic static make(data: any): K8sDeploymentDefinition {\n\n\t  return new K8sDeploymentDefinition()._make(data);\n\t}\n\n\tprotected _make(data: any) {\n\n\t\tthis.id = data.metadata.uid;\n\t\tthis.name = data.metadata.name;\n\t\tthis.description = data.metadata.labels.app;\n\t\tthis.serviceId = data.metadata.labels.serviceId;\n\t\tthis.deploymentId = data.metadata.labels.deploymentId;\n\t\tthis.namespace = data.metadata.namespace;\n\t\tthis.reference = data.metadata.selfLink;\n\t\tthis.creationDate = moment(data.metadata.creationTimestamp).toDate();\n\n\t\tthis.restartPolicy = data.spec.template.spec.restartPolicy;\n\t\tthis.replicas = +data.spec.replicas;\n\n\t\tlet rawContainers: any[] = data.spec.template.spec.containers;\n\n\t\tthis.containers = [];\n\n\t\trawContainers.forEach((c) => {\n\n\t\t\tlet image: DockerImage = new DockerImage();\n\t\t\timage.altName = c.name;\n\n\t\t\timage.setName(c.image);\n\n\t\t\tif (image.tag().indexOf(\":\") != -1) {\n\n\t\t\t\tlet split: number = image.tag().indexOf(\":\");\n\t\t\t\timage.setName(image.tag().substring(0, split));\n\t\t\t\timage.setVersion(image.version());\n\n\t\t\t\tif (!image.version) {\n\n\t\t\t\t\t// looks like the name is the repo and the name and version are included in the tag part\n\t\t\t\t\tlet splitV: number = image.tag().lastIndexOf(\"-\");\n\n\t\t\t\t\timage.setVersion(image.version());\n\t\t\t\t\timage.setName(image.tag().substring(split+1, splitV));\n\t\t\t\t\timage.setRepository(image.tag().substring(0, split));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/*if (c.ports) {\n\t\t\t\tc.ports.forEach((p) => {\n\t\t\t\t\tif (p.containerPort)\n\t\t\t\t\t\timage.ports.push(p.containerPort);\n\t\t\t\t});\n\t\t\t}*/\n\n\t\t\tthis.containers.push(image);\n\t\t});\n\n\t\treturn this;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/K8sPod.html":{"url":"classes/K8sPod.html","title":"class - K8sPod","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  K8sPod\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/k8s-pod.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                containers\n                            \n                            \n                                    Public\n                                creationDate\n                            \n                            \n                                    Static\n                                currentPod\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                make\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            containers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DockerContainer[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/k8s-pod.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            creationDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/k8s-pod.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            currentPod\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         K8sPod\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/k8s-pod.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/k8s-pod.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/k8s-pod.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/k8s-pod.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PodStatus\n\n                        \n                    \n                    \n                        \n                            Default value : PodStatus.Pending\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/k8s-pod.ts:26\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            make\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    make(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/k8s-pod.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         K8sPod\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DockerContainer, ContainerStatus }\t\t\t\t\t\t\tfrom './docker-container';\n\nimport * as moment from 'moment';\n\nexport enum PodStatus {\n\tPending = \"Pending\",\n\tStarting = \"Starting\",\n\tRunning = \"Running\",\n\tStopping = \"Stopping\",\n\tTerminated = \"Terminated\",\n\tRemoved = \"Removed\"\n}\n\nexport class K8sPod {\n\t\n\tpublic static currentPod: K8sPod;\n\n\tpublic id: string;\n\tpublic name: string;\n\tpublic description: string;\n\tpublic creationDate: Date;\n\n\tpublic containers: DockerContainer[] = [];\n\n\tpublic status: PodStatus = PodStatus.Pending;\n\n\tpublic static make(data: any): K8sPod {\n\n\t\tlet d: K8sPod = new K8sPod();\n\n\t\td.id = data.metadata.uid;\n\t\td.name = data.metadata.name;\n\t\td.description = data.metadata.labels.app;\n\n\t\td.creationDate = moment(data.metadata.creationTimestamp).toDate();\n\t\tlet rawStatus: string = data.status.phase;\n\n\t\td.status = PodStatus[rawStatus];\n\n\t\tif (data.status.conditions) {\n\t\t\t\n\t\t\t// Pod is running, but is it available check for Readiness probe condition\n\n\t\t\tdata.status.conditions.forEach((c) => {\n\n\t\t\t\tif (c.type == \"Ready\") {\n\n\t\t\t\t\tif (d.status == \"Running\") {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (c.status != \"True\") \n\t\t\t\t\t\t\td.status = PodStatus.Starting;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\td.status = PodStatus.Running;\n\t\t\t\t\t} else if (d.status != \"Pending\") {\n\n\t\t\t\t\t\tif (c.status != \"True\") \n\t\t\t\t\t\t\td.status = PodStatus.Stopping;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\td.status = PodStatus.Terminated;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (d.status == PodStatus.Stopping) {\n\t\t\tconsole.log(\"flange\");\n\t\t}\n\n\t\tif (data.status.containerStatuses) {\n\n\t\t\tdata.status.containerStatuses.forEach((c) => {\n\n\t\t\t\tlet dc: DockerContainer = new DockerContainer();\n\t\t\t\tdc.names = [c.name];\n\t\t\t\tdc.ready = c.ready;\n\t\t\t\tdc.imageRef = c.image;\n\n\t\t\t\tif (c.state) {\n\n\t\t\t\t\tif (c.state.running)\n\t\t\t\t\t\tdc.status = ContainerStatus.Running\n\t\t\t\t\telse if (c.state.terminating)\n\t\t\t\t\t\tdc.status = ContainerStatus.Terminating;\n\t\t\t\t\telse if (c.state.terminated)\n\t\t\t\t\t\tdc.status = ContainerStatus.Terminated;\n\t\t\t\t\telse if (c.state.starting)\n\t\t\t\t\t\tdc.status = ContainerStatus.Starting;\n\t\t\t\t\telse\n\t\t\t\t\t\tdc.status = ContainerStatus.New;\n\n\t\t\t\t} else if (d.status == PodStatus.Pending) {\n\t\t\t\t\t\n\t\t\t\t\tdc.status = ContainerStatus.New;\n\t\t\t\t}\n\n\t\t\t\td.containers.push(dc);\n\n\t\t\t\tif (dc.status == ContainerStatus.Terminated)\n\t\t\t\t\td.status = PodStatus.Stopping;\n\t\t\t});\t\t\n\t\t}\n\n\t\treturn d;\n\t}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/K8sService.html":{"url":"injectables/K8sService.html","title":"injectable - K8sService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  K8sService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/k8s.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _cache\n                            \n                            \n                                    Private\n                                _K8sToken\n                            \n                            \n                                    Private\n                                _K8sUrl\n                            \n                            \n                                    Static\n                                DEPLOYMENTS\n                            \n                            \n                                    Static\n                                NAMESPACES\n                            \n                            \n                                    Static\n                                RESOURCE\n                            \n                            \n                                    Static\n                                SCALE\n                            \n                            \n                                    Private\n                                scalePut\n                            \n                            \n                                    Static\n                                UPDATE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _mapPodsResponse\n                            \n                            \n                                    Private\n                                _mapResponse\n                            \n                            \n                                    Private\n                                _mapResponseNamespace\n                            \n                            \n                                    Private\n                                buildUpdateSpec\n                            \n                            \n                                    Public\n                                deployments\n                            \n                            \n                                    Public\n                                namespaces\n                            \n                            \n                                    Public\n                                podsForAppLabel\n                            \n                            \n                                    Public\n                                rollbackLastChange\n                            \n                            \n                                    Public\n                                scalePods\n                            \n                            \n                                    Private\n                                setupTestData\n                            \n                            \n                                    Public\n                                updateVersion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_settings: Settings, _http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/k8s.service.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _settings\n                                                  \n                                                        \n                                                                        Settings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _mapPodsResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _mapPodsResponse(filter: string, responseData: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/k8s.service.ts:236\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         K8sPod[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _mapResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _mapResponse(filter: string, responseData: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/k8s.service.ts:251\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     K8sDeploymentDefinition[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _mapResponseNamespace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _mapResponseNamespace(responseData: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/k8s.service.ts:220\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    responseData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            buildUpdateSpec\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildUpdateSpec(deployment: K8sDeploymentDefinition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/k8s.service.ts:306\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    deployment\n                                    \n                                                K8sDeploymentDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deployments\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deployments(namespace: string, useCache?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/k8s.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    namespace\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    useCache\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            namespaces\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    namespaces(K8sUrl?: string, K8sToken?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/k8s.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    K8sUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    K8sToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            podsForAppLabel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    podsForAppLabel(namespace: string, app: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/k8s.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    namespace\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    app\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            rollbackLastChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    rollbackLastChange(deployment: K8sDeploymentDefinition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/k8s.service.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    deployment\n                                    \n                                                K8sDeploymentDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            scalePods\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    scalePods(deployment: K8sDeploymentDefinition, count: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/k8s.service.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    deployment\n                                    \n                                                K8sDeploymentDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    count\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setupTestData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setupTestData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/k8s.service.ts:269\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateVersion\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateVersion(deployment: K8sDeploymentDefinition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/k8s.service.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    deployment\n                                    \n                                                K8sDeploymentDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _cache\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/k8s.service.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _K8sToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/k8s.service.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _K8sUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/k8s.service.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            DEPLOYMENTS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : Settings.SERVER_API + \"/rad/jc.devops:api/k8s/deployments\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/k8s.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            NAMESPACES\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : Settings.SERVER_API + \"/rad/jc.devops:api/k8s/namespace\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/k8s.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            RESOURCE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : Settings.SERVER_API + \"/rad/jc.devops:api/k8s/pods\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/k8s.service.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            SCALE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : Settings.SERVER_API + \"/rad/jc.devops:api/k8s/scale\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/k8s.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            scalePut\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"{ \\\n          \\\"kind\\\": \\\"Scale\\\", \\\n          \\\"apiVersion\\\": \\\"autoscaling/v1\\\", \\\n          \\\"metadata\\\": { \\\n            \\\"name\\\": \\\"NAMEDEPLOY\\\", \\\n            \\\"namespace\\\": \\\"NMESPCE\\\", \\\n            \\\"selfLink\\\": \\\"SELFLNK\\\", \\\n            \\\"uid\\\": \\\"SELFID\\\", \\\n            \\\"resourceVersion\\\": \\\"RSRCVERSION\\\", \\\n            \\\"creationTimestamp\\\": \\\"DATESTAMP\\\" \\\n          }, \\\n          \\\"spec\\\": { \\\n            \\\"replicas\\\": NEWCOUNT \\\n          }, \\\n          \\\"status\\\": { \\\n            \\\"replicas\\\": OLDCOUNT, \\\n            \\\"selector\\\": \\\"app=NAMEAPP\\\" \\\n          } \\\n        }\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/k8s.service.ts:325\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            UPDATE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : Settings.SERVER_API + \"/rad/jc.devops:api/k8s/update\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/k8s.service.ts:25\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable }                  from '@angular/core';\nimport { HttpClient, HttpHeaders, \n          HttpParams }                 from '@angular/common/http';\nimport { Observable, of }              from 'rxjs';\nimport { switchMap, map, catchError }  from 'rxjs/operators';\n\nimport { Settings }                    from '../settings';\n\nimport { DockerImage, VersionType }    from '../models/docker-image';\nimport { K8sDeploymentDefinition }     from '../models/k8s-deployment-definition';\nimport { K8sDeployment }               from '../models/k8s-deployment';\nimport { K8sPod }                      from '../models/k8s-pod';\n\n@Injectable()\nexport class K8sService {\n  \n  //public static URL: string = \"/apis/apps/v1/namespaces/NMESPCE/deployments\";\n  //public static NAMESPACES: string = \"/api/v1/namespaces\";\n  //public static DEPLOYMENTS: string = \"/apis/extensions/v1beta1/namespaces/NMESPCE/deployments\";\n  //public static DEPLOY: string = \"/apis/apps/v1/namespaces/NMESPCE/deployments/NAMEDEPLOY\";\n\n  public static NAMESPACES: string = Settings.SERVER_API + \"/rad/jc.devops:api/k8s/namespace\";\n  public static DEPLOYMENTS: string = Settings.SERVER_API + \"/rad/jc.devops:api/k8s/deployments\";\n  public static SCALE: string = Settings.SERVER_API + \"/rad/jc.devops:api/k8s/scale\";\n  public static UPDATE: string = Settings.SERVER_API + \"/rad/jc.devops:api/k8s/update\";\n\n  //  public static URL: string = \"/apis/apps/v1/namespaces/NMESPCE/pods\";\n    //public static RESOURCE: string = \"/api/v1/namespaces/NMESPCE/pods\";\n  public static RESOURCE: string = Settings.SERVER_API + \"/rad/jc.devops:api/k8s/pods\";\n\n    //public static SCALE: string = \"/apis/apps/v1/namespaces/NMESPCE/deployments/NAMEDEPLOY/scale\"\n\n   private _K8sUrl: string;\n   private _K8sToken: string;\n\n  public _cache: Map;\n\n  constructor(private _settings: Settings, private _http: HttpClient) {   \n\n      this._cache = new Map();\n\n      this._settings.values().subscribe((v) => {\n            this._K8sUrl = v.k8sUrl;\n            this._K8sToken = v.k8sToken;\n      });\n  }\n\n  public namespaces(K8sUrl?: string, K8sToken?: string): Observable {\n\n    if (K8sToken)\n      this._K8sToken = K8sToken;\n\n    if (K8sUrl)\n      this._K8sUrl = K8sUrl;\n\n    //let url: string = this._K8sUrl + K8sDeploymentService.NAMESPACES;\n\n    let url: string = K8sService.NAMESPACES;\n\n    let headers = new HttpHeaders()\n      .append('Content-Type', 'application/json')\n      .append('Accept', 'application/json');\n     // .append('Authorization', 'Bearer ' + this._K8sToken);\n\n    return this._http.get(url, { headers }).pipe(map( (responseData) => {\n\n        return this._mapResponseNamespace(responseData);\n        \n      },\n      error => {\n        return null;\n     }));\n  }\n\n  public deployments(namespace: string, useCache?: boolean): Observable {\n\n    if (useCache && this._cache.get(namespace == null ? 'default' : namespace)) {\n\n      return of(this._cache.get(namespace == null ? 'default' : namespace));\n\n    } else {\n\n      //let url: string = this._K8sUrl + K8sDeploymentService.DEPLOYMENTS.replace(/NMESPCE/, namespace);\n      let url: string = K8sService.DEPLOYMENTS + \"/\" + namespace;\n\n      let headers = new HttpHeaders()\n                            .append('Content-Type', 'application/json')\n                            .append('Accept', 'application/json');\n                            //.append('Authorization', 'Bearer ' + this._K8sToken);\n\n          return this._http.get(url, { headers }).pipe(map( (responseData) => {\n\n              return this._mapResponse(namespace, responseData);\n              \n            },\n            error => {\n              return null;\n           }));\n        }\n    }\n\n    public podsForAppLabel(namespace: string, app: string): Observable {\n\n        //let url: string = this._K8sUrl + K8sPodService.RESOURCE.replace(/NMESPCE/, namespace);\n        let url: string = K8sService.RESOURCE + \"/\" + namespace;\n\n    let headers = new HttpHeaders()\n                            .append('Content-Type', 'application/json')\n                            .append('Accept', 'application/json')\n                            .append('Cache-Control', 'no-cache')\n                            .append('Cache-Control', 'no-store')\n                            .append('Pragma','no-cache')\n                            .append('Expires', '0');\n                           // .append('Authorization', 'Bearer ' + this._K8sToken);\n\n        let httpParams: HttpParams = new HttpParams().append('app', app);\n\n      return this._http.get(url, { headers, params: httpParams }).pipe(map( (responseData) => {\n\n          return this._mapPodsResponse(namespace, responseData);\n              \n          },\n          error => {\n              return null;\n      }));\n    }\n\n    public updateVersion(deployment: K8sDeploymentDefinition): Observable {\n\n       // let url: string = this._K8sUrl + K8sDeploymentService.DEPLOY\n       //                             .replace(/NMESPCE/, deployment.namespace)\n       //                             .replace(/NAMEDEPLOY/, deployment.name);\n\n       let url: string = K8sService.UPDATE;\n\n        let headers = new HttpHeaders()\n                            .append('Content-Type', 'application/strategic-merge-patch+json')\n                            .append('Accept', 'application/json');\n                          //  .append('Authorization', 'Bearer ' + this._K8sToken);\n\n        let body: string = JSON.stringify(this.buildUpdateSpec(deployment));\n\n        console.log(\"body is \" + body);\n        \n        return this._http.patch(url, body, { headers }).pipe(map((responseData) => {\n\n            deployment.containers.forEach((c) => {\n                c.setVersion(c.getNextVersion(VersionType.minor));\n            })\n                  \n            return true;        \n        },\n          error => {\n              console.log(\"error is \" + error.message);\n            return false;\n        }));\n    }\n\n    public rollbackLastChange(deployment: K8sDeploymentDefinition): Observable {\n\n        return of(true);\n    }\n\n    public scalePods(deployment: K8sDeploymentDefinition, count: number): Observable {\n\n       // let url: string = this._K8sUrl + K8sDeploymentService.DEPLOY.replace(/NMESPCE/, deployment.namespace)\n       //                                                     .replace(/NAMEDEPLOY/, deployment.name);\n\n      let url: string = K8sService.SCALE + \"/\" + deployment.namespace + \"/\" + deployment.name + \"?replicas=\" + count;\n\n      let headers = new HttpHeaders()\n                            .append('Content-Type', 'application/json')\n                            .append('Accept', 'application/json');\n                            //.append('Authorization', 'Bearer ' + this._K8sToken);\n\n      return this._http.get(url, { headers }).pipe(map((responseData) => {\n\n        return true;               \n      }), catchError((error) => {\n        console.log(\"operation failed due to:\" + error.message);\n        return of(false);\n      }));\n    }\n\n    /*private _scalePod(deployment: K8sDeploymentDefinition, count: number) {\n\n         let payload: string = this.scalePut.replace(/NAMEDEPLOY/, deployment.name)\n                                  .replace(/NMESPCE/, deployment.namespace)\n                                  .replace(/SELFLNK/, deployment.reference)\n                                  .replace(/SELFID/, deployment.id)\n                                  .replace(/RSRCVERSION/, \"\" + deployment.version)\n                                  .replace(/DATESTAMP/, deployment.creationDate.toISOString())\n                                  .replace(/NEWCOUNT/, \"\" + count)\n                                  .replace(/OLDCOUNT/, \"\" + deployment.replicas)\n                                  .replace(/NAMEAPP/, deployment.description);\n\n        let url: string = this._K8sUrl + K8sDeploymentService.DEPLOY.replace(/NMESPCE/, deployment.namespace)\n                                                            .replace(/NAMEDEPLOY/, deployment.name) + \"/scale\";\n      \n        let headers = new HttpHeaders()\n                            .append('Content-Type', 'application/json')\n                            .append('Accept', 'application/json')\n                            .append('Authorization', 'Bearer ' + this._K8sToken);\n\n        console.log(\"payload is \" + payload);\n\n        return this._http.put(url, payload, { headers }).subscribe((responseData) => {\n\n             console.log(\"good\");\n\n             deployment.replicas = count;\n            \n          },\n          error => {\n            \n            console.log(\"got an error: \" + error);\n          });    \n    }*/\n\n    private _mapResponseNamespace(responseData: any): string[]\n    {\n // data is returned as list called references or as a single entity\n\n     let names: string[] = [];\n\n     if (responseData.results.items) {\n\n        responseData.results.items.forEach((i) => {\n         names.push(i.metadata.name);\n        });\n     }\n\n     return names;\n    }\n\n    private _mapPodsResponse(filter: string, responseData: any): K8sPod[] {\n // data is returned as list called references or as a single entity\n\n       let images: K8sPod[] = [];\n\n         if (responseData.results.items) {\n\n             responseData.results.items.forEach((i) => {\n                 images.push(K8sPod.make(i));\n             });\n         }\n\n       return images;\n    }\n\n    private _mapResponse(filter: string, responseData: any): K8sDeploymentDefinition[]\n    {\n // data is returned as list called references or as a single entity\n\n     let images: K8sDeploymentDefinition[] = [];\n\n     if (responseData.results.items) {\n\n        responseData.results.items.forEach((i) => {\n         images.push(K8sDeployment.make(i));\n        });\n     }\n\n     this._cache.set(filter, images);\n\n     return images;\n    }\n\n    private setupTestData() {\n\n      let deployments: K8sDeploymentDefinition[] = [];\n      \n      let d1: K8sDeploymentDefinition = new K8sDeploymentDefinition();\n      d1.id =\"aeglr40ogf4f0330fgs30\";\n      d1.name = \"Hello World\";\n      d1.description = \"how now brown cow\";\n\n      let d2: K8sDeploymentDefinition = new K8sDeploymentDefinition();\n      d2.id =\"b604b10s4030bee\";\n      d2.name = \"UserMgmt API\";\n      d2.description = \"baa baa black sheep\";\n\n      deployments.push(d1);\n      deployments.push(d2);\n\n      this._cache.set('default', deployments);\n\n        let runningDeployments: K8sDeployment[] = [];\n        \n        let r1: K8sDeployment = new K8sDeployment();\n        r1.id =\"aeglr40ogf4f0330fgs30\";\n        r1.name = \"Hello World\";\n        r1.description = \"how now brown cow\";\n\n        let r2: K8sDeployment = new K8sDeployment();\n        r2.id =\"b604b10s4030bee\";\n        r2.name = \"UserMgmt API\";\n        r2.description = \"baa baa black sheep\";\n\n        runningDeployments.push(r1);\n        runningDeployments.push(r2);\n\n        this._cache.set('run', runningDeployments);\n    }\n\n    private buildUpdateSpec(deployment: K8sDeploymentDefinition): any {\n\n        let content: any = {};\n        content['$setElementOrder/containers'] = [];\n        content['containers'] = [];\n\n        deployment.containers.forEach((c) => {\n\n            content['$setElementOrder/containers'].push({name: c.altName});\n\n            if (c.repository)\n              content['containers'].push({image: c.repository + \":\" + c.name + \"-\" + c.getNextVersion(VersionType.minor), name: c.altName});\n            else\n              content['containers'].push({image: c.name + \":\" + c.getNextVersion(VersionType.minor), name: c.altName});\n        });\n\n        return {spec: {template: {spec: content}}};\n    }\n\n    private scalePut: string = \"{ \\\n          \\\"kind\\\": \\\"Scale\\\", \\\n          \\\"apiVersion\\\": \\\"autoscaling/v1\\\", \\\n          \\\"metadata\\\": { \\\n            \\\"name\\\": \\\"NAMEDEPLOY\\\", \\\n            \\\"namespace\\\": \\\"NMESPCE\\\", \\\n            \\\"selfLink\\\": \\\"SELFLNK\\\", \\\n            \\\"uid\\\": \\\"SELFID\\\", \\\n            \\\"resourceVersion\\\": \\\"RSRCVERSION\\\", \\\n            \\\"creationTimestamp\\\": \\\"DATESTAMP\\\" \\\n          }, \\\n          \\\"spec\\\": { \\\n            \\\"replicas\\\": NEWCOUNT \\\n          }, \\\n          \\\"status\\\": { \\\n            \\\"replicas\\\": OLDCOUNT, \\\n            \\\"selector\\\": \\\"app=NAMEAPP\\\" \\\n          } \\\n        }\";\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LivePods.html":{"url":"classes/LivePods.html","title":"class - LivePods","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LivePods\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/support/live-pods.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _dataSource\n                            \n                            \n                                    Private\n                                _hasChanges\n                            \n                            \n                                    Private\n                                _observer\n                            \n                            \n                                    Private\n                                _pleaseStop\n                            \n                            \n                                    Public\n                                appId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _refreshPods\n                            \n                            \n                                    Public\n                                dataSource\n                            \n                            \n                                    Private\n                                fetchPods\n                            \n                            \n                                    Private\n                                matchedPod\n                            \n                            \n                                    Public\n                                refreshPods\n                            \n                            \n                                    Public\n                                stop\n                            \n                            \n                                    Private\n                                updatePods\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_namespace: string, _deploymentId: string, _refreshInterval, _k8sService: K8sService)\n                    \n                \n                        \n                            \n                                Defined in src/app/support/live-pods.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _namespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _deploymentId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _refreshInterval\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _k8sService\n                                                  \n                                                        \n                                                                        K8sService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         K8sPod[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/support/live-pods.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _hasChanges\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/support/live-pods.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _observer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/support/live-pods.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _pleaseStop\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/support/live-pods.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            appId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/support/live-pods.ts:14\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _refreshPods\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _refreshPods(observer: Subscriber)\n                \n            \n\n\n            \n                \n                    Defined in src/app/support/live-pods.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observer\n                                    \n                                            Subscriber\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            dataSource\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dataSource()\n                \n            \n\n\n            \n                \n                    Defined in src/app/support/live-pods.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            fetchPods\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchPods()\n                \n            \n\n\n            \n                \n                    Defined in src/app/support/live-pods.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            matchedPod\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    matchedPod(pod: K8sPod, pods: K8sPod[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/support/live-pods.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pod\n                                    \n                                                K8sPod\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pods\n                                    \n                                                K8sPod[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            refreshPods\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshPods()\n                \n            \n\n\n            \n                \n                    Defined in src/app/support/live-pods.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            stop\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stop()\n                \n            \n\n\n            \n                \n                    Defined in src/app/support/live-pods.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updatePods\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePods(observer: Subscriber, pods: K8sPod[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/support/live-pods.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observer\n                                    \n                                            Subscriber\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pods\n                                    \n                                                K8sPod[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, Subscriber }       from 'rxjs';\n\nimport { K8sPod, PodStatus }            from '../models/k8s-pod';\nimport { K8sService }                 \tfrom '../services/k8s.service';\n\nexport class LivePodsCount {\n\n\tconstructor(public appId: string, public ready: number, public available: number, public unavailable: number) {\n\n\t}\n}\nexport class LivePods {\n\n\tpublic appId: string;\n\n\tprivate _dataSource: K8sPod[] = [];\n\tprivate _hasChanges: boolean = false;\n\tprivate _pleaseStop: boolean = false;\n\n\tprivate _observer: Observable;\n\n\tpublic constructor(private _namespace: string, private _deploymentId: string, private _refreshInterval, private _k8sService: K8sService) {\n\n\t\tthis.appId = _deploymentId;\n\t\t\n\t\tthis.fetchPods().subscribe((d) => {\n          this._dataSource = d;\n        });\n\n        // now schedule refresh\n\n        //this.refreshPods();\n\t}\n\n\tpublic stop() {\n\n\t\tthis._pleaseStop = true;\n\t}\n\n\tpublic dataSource() {\n\n\t\tlet ret: any =  {data: this._dataSource, hasChanged: this._hasChanges};\n\t\tthis._hasChanges = false;\n\t\treturn ret;\n\t}\n\n\tpublic refreshPods(): Observable {\n\n\t\treturn new Observable((observer) => {\n\n\t\t\tthis._refreshPods(observer);\n\t\t});\n\t}\n\n\tprivate _refreshPods(observer: Subscriber) {\n\n\t\tlet ref: LivePods = this;\n\t\tsetTimeout(() => {\n\n        \tref.fetchPods().subscribe((d) => {\n        \t\tref.updatePods(observer, d);\n        \t});\n\n        }, this._refreshInterval);\n\t}\n\n\tprivate updatePods(observer: Subscriber, pods: K8sPod[]) {\n\n\t\tthis._hasChanges = true;\n\n\t\tlet runTotal: number = 0;\n\t\tlet availableTotal: number = 0;\n\t\tlet unavailableTotal: number = 0;\n\n\t\tpods.forEach((p) => {\n\n\t\t\tif (p.status == PodStatus.Running)\n\t\t\t\trunTotal += 1;\n\t\t\telse if (p.status == PodStatus.Starting)\n\t\t\t\tavailableTotal += 1;\n\t\t\telse \n\t\t\t\tunavailableTotal += 1;\n\t\t});\n\n\t\tfor (var i=0; i  {\n\n\t\t\tthis._dataSource.push(p);\n\t\t});\n\n\t\tobserver.next(new LivePodsCount(this.appId, runTotal, availableTotal, unavailableTotal));\n\n\t\tif (!this._pleaseStop)\n\t\t\tthis._refreshPods(observer);\n\t\telse\n\t\t\tobserver.complete();\n\t}\n\n\tprivate matchedPod(pod: K8sPod, pods: K8sPod[]): any {\n\n\t\tlet foundIndex: number = -1;\n\n\t\tfor (var i=0; i  {\n\n\t\treturn this._k8sService.podsForAppLabel(this._namespace, this._deploymentId); //TODO: change this false\n\t}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LivePodsCount.html":{"url":"classes/LivePodsCount.html","title":"class - LivePodsCount","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LivePodsCount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/support/live-pods.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                appId\n                            \n                            \n                                    Public\n                                available\n                            \n                            \n                                    Public\n                                ready\n                            \n                            \n                                    Public\n                                unavailable\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(appId: string, ready: number, available: number, unavailable: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/support/live-pods.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ready\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        available\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        unavailable\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            appId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/support/live-pods.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            available\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/support/live-pods.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ready\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/support/live-pods.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unavailable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/support/live-pods.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, Subscriber }       from 'rxjs';\n\nimport { K8sPod, PodStatus }            from '../models/k8s-pod';\nimport { K8sService }                 \tfrom '../services/k8s.service';\n\nexport class LivePodsCount {\n\n\tconstructor(public appId: string, public ready: number, public available: number, public unavailable: number) {\n\n\t}\n}\nexport class LivePods {\n\n\tpublic appId: string;\n\n\tprivate _dataSource: K8sPod[] = [];\n\tprivate _hasChanges: boolean = false;\n\tprivate _pleaseStop: boolean = false;\n\n\tprivate _observer: Observable;\n\n\tpublic constructor(private _namespace: string, private _deploymentId: string, private _refreshInterval, private _k8sService: K8sService) {\n\n\t\tthis.appId = _deploymentId;\n\t\t\n\t\tthis.fetchPods().subscribe((d) => {\n          this._dataSource = d;\n        });\n\n        // now schedule refresh\n\n        //this.refreshPods();\n\t}\n\n\tpublic stop() {\n\n\t\tthis._pleaseStop = true;\n\t}\n\n\tpublic dataSource() {\n\n\t\tlet ret: any =  {data: this._dataSource, hasChanged: this._hasChanges};\n\t\tthis._hasChanges = false;\n\t\treturn ret;\n\t}\n\n\tpublic refreshPods(): Observable {\n\n\t\treturn new Observable((observer) => {\n\n\t\t\tthis._refreshPods(observer);\n\t\t});\n\t}\n\n\tprivate _refreshPods(observer: Subscriber) {\n\n\t\tlet ref: LivePods = this;\n\t\tsetTimeout(() => {\n\n        \tref.fetchPods().subscribe((d) => {\n        \t\tref.updatePods(observer, d);\n        \t});\n\n        }, this._refreshInterval);\n\t}\n\n\tprivate updatePods(observer: Subscriber, pods: K8sPod[]) {\n\n\t\tthis._hasChanges = true;\n\n\t\tlet runTotal: number = 0;\n\t\tlet availableTotal: number = 0;\n\t\tlet unavailableTotal: number = 0;\n\n\t\tpods.forEach((p) => {\n\n\t\t\tif (p.status == PodStatus.Running)\n\t\t\t\trunTotal += 1;\n\t\t\telse if (p.status == PodStatus.Starting)\n\t\t\t\tavailableTotal += 1;\n\t\t\telse \n\t\t\t\tunavailableTotal += 1;\n\t\t});\n\n\t\tfor (var i=0; i  {\n\n\t\t\tthis._dataSource.push(p);\n\t\t});\n\n\t\tobserver.next(new LivePodsCount(this.appId, runTotal, availableTotal, unavailableTotal));\n\n\t\tif (!this._pleaseStop)\n\t\t\tthis._refreshPods(observer);\n\t\telse\n\t\t\tobserver.complete();\n\t}\n\n\tprivate matchedPod(pod: K8sPod, pods: K8sPod[]): any {\n\n\t\tlet foundIndex: number = -1;\n\n\t\tfor (var i=0; i  {\n\n\t\treturn this._k8sService.podsForAppLabel(this._namespace, this._deploymentId); //TODO: change this false\n\t}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MicroServiceInstallerComponent.html":{"url":"components/MicroServiceInstallerComponent.html","title":"component - MicroServiceInstallerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MicroServiceInstallerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/plugins/micro-service-installer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    BuilderComponent\n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                jc-msc-install\n            \n\n\n\n\n            \n                templateUrl\n                ../../templates/plugins/msc-install.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _ignoreValuesChange\n                            \n                            \n                                    Public\n                                addMysqlDriverCtrl\n                            \n                            \n                                    Public\n                                currentInstaller\n                            \n                            \n                                    Public\n                                features\n                            \n                            \n                                    Public\n                                featuresCtrl\n                            \n                            \n                                    Public\n                                formGroup\n                            \n                            \n                                    Public\n                                owner\n                            \n                            \n                                    Public\n                                propertyFiles\n                            \n                            \n                                    Public\n                                propsCtrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                determineFeatureAddOn\n                            \n                            \n                                    Public\n                                downloadProperties\n                            \n                            \n                                    Private\n                                flagChanges\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                propertiesFileAdded\n                            \n                            \n                                    Public\n                                refreshBuildCommands\n                            \n                            \n                                    Private\n                                setDefaults\n                            \n                            \n                                    Public\n                                setLicenseFile\n                            \n                            \n                                    Private\n                                setMysqlDriverFile\n                            \n                            \n                                    Private\n                                setMysqlTypeFile\n                            \n                            \n                                    Private\n                                setPropertiesFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_runSetsService: ConfigurationService, _resources: ResourceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/plugins/micro-service-installer.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _runSetsService\n                                                  \n                                                        \n                                                                        ConfigurationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _resources\n                                                  \n                                                        \n                                                                        ResourceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            determineFeatureAddOn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    determineFeatureAddOn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/plugins/micro-service-installer.component.ts:305\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            downloadProperties\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    downloadProperties(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/plugins/micro-service-installer.component.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            flagChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    flagChanges(propsFile: string, addons: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/plugins/micro-service-installer.component.ts:290\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    propsFile\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    addons\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/plugins/micro-service-installer.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            propertiesFileAdded\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    propertiesFileAdded(filename: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/plugins/micro-service-installer.component.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            refreshBuildCommands\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshBuildCommands(show: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/plugins/micro-service-installer.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    show\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setDefaults\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDefaults()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/plugins/micro-service-installer.component.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setLicenseFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setLicenseFile(license: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/plugins/micro-service-installer.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    license\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setMysqlDriverFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setMysqlDriverFile(include: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/plugins/micro-service-installer.component.ts:186\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    include\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setMysqlTypeFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setMysqlTypeFile(include: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/plugins/micro-service-installer.component.ts:216\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    include\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setPropertiesFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setPropertiesFile(props: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/plugins/micro-service-installer.component.ts:254\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _ignoreValuesChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/plugins/micro-service-installer.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addMysqlDriverCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/plugins/micro-service-installer.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentInstaller\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Installer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/plugins/micro-service-installer.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            features\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\"JDBC Adapter\", \"Monitoring\"]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/plugins/micro-service-installer.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            featuresCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/plugins/micro-service-installer.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/plugins/micro-service-installer.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            owner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PropertiesChangedOwner\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/plugins/micro-service-installer.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            propertyFiles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/plugins/micro-service-installer.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            propsCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/plugins/micro-service-installer.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\n\nimport {FormControl, FormGroup} from '@angular/forms';\n\nimport {BuilderComponent, BuilderProperties, PropertiesChangedOwner} from '../elements/build-image-choose.directive';\nimport {BuildCommand, DisplayType, Installer} from '../../models/project';\nimport {ConfigurationService} from '../../services/configuration.service';\nimport {ResourceService} from '../../services/resources.service';\n\n@Component({\n  selector: 'jc-msc-install',\n  templateUrl: '../../templates/plugins/msc-install.html'\n})\n\nexport class MicroServiceInstallerComponent implements BuilderComponent, OnInit {\n\n  public features: string[] = [\"JDBC Adapter\", \"Monitoring\"];\n\n\tpublic formGroup: FormGroup;\n\tpublic owner: PropertiesChangedOwner;\n\n\tpublic propsCtrl: FormControl;\n\n\tpublic currentInstaller: Installer;\n\tpublic propertyFiles: string[] = [];\n  public featuresCtrl: FormControl;\n  public addMysqlDriverCtrl: FormControl;\n\n\tprivate _ignoreValuesChange: boolean;\n\n\tpublic constructor(private _runSetsService: ConfigurationService, private _resources: ResourceService) {\n\n\t\tthis.propertyFiles = [];\n\n\t\tthis._resources.resourcesForType(\"properties\").subscribe((p) => {\n\n      this.propertyFiles = [];\n      p.forEach((f) => {\n        this.propertyFiles.push(f.name);\n      });\n    });\n\t}\n\n\tpublic ngOnInit() {\n\n\t\tthis.currentInstaller = this.owner.initialProperties();\n\n    this.setDefaults();\n\n\t\tlet propsFile: BuildCommand = this.currentInstaller.fileForType(\"properties\");\n\n\t\tthis.propsCtrl = new FormControl(propsFile ? propsFile.source.replace(/-/g, \" \") : null)\n    this.featuresCtrl = new FormControl(this.determineFeatureAddOn());\n    this.addMysqlDriverCtrl = new FormControl(this.currentInstaller.fileForType(\"support\", \"mysql-connector-java-5.1.47.jar\") != null);\n    //this.addMysqlDriverCtrl = new FormControl(this.currentInstaller.fileForType(\"support\", \"mysql-connector-java-8.0.13.jar\") != null);\n\n\t\tthis.formGroup.addControl(\"propsCtrl\", this.propsCtrl);\n    this.formGroup.addControl(\"featuresCtrl\", this.featuresCtrl);\n    this.formGroup.addControl(\"addMysqlDriverCtrl\", this.addMysqlDriverCtrl);\n\n\t\tif (propsFile || this.featuresCtrl.value)\n\t\t\tthis.flagChanges(propsFile ? propsFile.source : null, this.featuresCtrl ? this.featuresCtrl.value : null);\n\n\t\tthis.formGroup.valueChanges.subscribe(values => {\n\n    \t\tif (this._ignoreValuesChange)\n    \t\t\treturn;\n\n    \t\tif (this.propsCtrl.dirty) {\n          this.setPropertiesFile(this.propsCtrl.value);\n          this.propsCtrl.markAsPristine();\n    \t\t}\n\n        if (this.featuresCtrl.dirty) {\n\n          if (this.featuresCtrl.value == 'JDBC Adapter') {\n            this.currentInstaller.productType = \"msr-jdbc\";\n          }\n          else {\n            this.currentInstaller.productType = 'msr-monitor';\n          }\n\n          this.featuresCtrl.markAsPristine();\n        }\n\n        if (this.addMysqlDriverCtrl.dirty) {\n\n          this.setMysqlDriverFile(this.addMysqlDriverCtrl.value);\n          this.setMysqlTypeFile(this.addMysqlDriverCtrl.value);\n\n          this.addMysqlDriverCtrl.markAsPristine();\n        }\n\n        this.flagChanges(this.propsCtrl.value, this.featuresCtrl.value);\n    \t});\n\t}\n\n  public setLicenseFile(license: string) {\n\n    let file: BuildCommand = this.currentInstaller.fileWithDescription(\"licenses\", \"Product License\");\n\n      if (!file) {\n          file = new BuildCommand();\n          file.commandType = \"file\";\n          file.buildTarget = \"install\";\n          file.description = \"Product License\";\n          file.fileType = \"licenses\";\n          file.description = \"License file\";\n          file.target = \"/software/license.xml\";\n          file.display = DisplayType.hidden;\n\n          //ensures that the build-components view gets updated\n          this.currentInstaller.buildCommands = Object.assign([], this.currentInstaller.buildCommands);\n\n          this.currentInstaller.buildCommands.push(file);\n      }\n\n      file.source = license.replace(/\\s/g, \"-\");\n  }\n\n  public refreshBuildCommands(show: boolean) {\n\n  }\n\n\tpublic downloadProperties(event) {\n\n      let file: BuildCommand = this.currentInstaller.fileForType(\"properties\");\n\n      if (file)\n        this._resources.downloadResource(\"properties\", file.source);\n    }\n\n\tpublic propertiesFileAdded(filename: string) {\n\n       this._resources.resourcesForType(\"properties\").subscribe((p) => {\n\n          this.propertyFiles = [];\n          p.forEach((f) => {\n            this.propertyFiles.push(f.name);\n           \tthis.propsCtrl.setValue(f.name);\n          });\n        });\n  }\n\n  private setDefaults() {\n\n      let touchdb: BuildCommand = this.currentInstaller.fileForType(\"touchdb\");\n\n      if (!touchdb) {\n          touchdb = new BuildCommand();\n          this.currentInstaller.buildCommands.push(touchdb);\n      }\n\n      touchdb.commandType = \"run\";\n      touchdb.buildTarget = \"build\";\n      touchdb.fileType = \"touchdb\";\n      touchdb.target = \"mkdir /opt/softwareag/IntegrationServer/db\";\n\n      let touchcache: BuildCommand = this.currentInstaller.fileForType(\"touchcache\");\n\n      if (!touchcache) {\n        touchcache = new BuildCommand();\n        this.currentInstaller.buildCommands.push(touchcache);\n      }\n\n      touchcache.commandType = \"run\";\n      touchcache.buildTarget = \"build\";\n      touchcache.fileType = \"touchcache\";\n      touchcache.target = \"mkdir /opt/softwareag/IntegrationServer/cache\";\n\n      let glob: BuildCommand = this.currentInstaller.fileWithDescription(\"build\", \"globalVars\");\n\n      if (!glob) {\n        glob = new BuildCommand();\n        glob.commandType = \"file\";\n        glob.buildTarget = \"build\";\n        glob.fileType = \"support\";\n        glob.description = \"globalVars\";\n        glob.source = \"globalVariables.cnf\";\n        glob.target = \"/opt/softwareag/IntegrationServer/config\";\n\n        this.currentInstaller.buildCommands.push(glob);\n      }\n  }\n\n  private setMysqlDriverFile(include: boolean) {\n\n      let file: BuildCommand = this.currentInstaller.fileForType(\"support\", \"mysql-connector-java-5.1.47.jar\");\n      //let file: BuildCommand = this.currentInstaller.fileForType(\"support\", \"mysql-connector-java-8.0.13.jar\");\n\n      if (!file && include) {\n\n        // add if not already in list\n\n        file = new BuildCommand();\n        file.commandType = \"file\";\n        file.buildTarget = \"build\";\n        file.fileType = \"support\";\n        file.description = \"mySQL JDBC Driver\";\n        file.source = \"mysql-connector-java-5.1.47.jar\";\n        //file.source = \"mysql-connector-java-8.0.13.jar\";\n\n        file.target = \"/opt/softwareag/IntegrationServer/lib/jars\";\n        file.display = DisplayType.hidden;\n\n        this.currentInstaller.buildCommands.push(file);\n\n      } else if (file && !include) {\n\n        // remove\n\n        this.currentInstaller.buildCommands.splice(this.currentInstaller.buildCommands.indexOf(file), 1);\n      }\n  }\n\n   private setMysqlTypeFile(include: boolean) {\n\n      let file: BuildCommand = this.currentInstaller.fileForType(\"support\", \"MySQLTypeMapping.xml\");\n\n      if (!file && include) {\n\n        // add if not already in list\n\n        file = new BuildCommand();\n        file.commandType = \"file\";\n        file.buildTarget = \"build\";\n        file.fileType = \"support\";\n        file.description = \"misspelled mysql type file\";\n        file.source = \"MySQLTypeMapping.xml\";\n        file.target = \"/opt/softwareag/IntegrationServer/packages/WmJDBCAdapter/config\";\n        file.display = DisplayType.hidden;\n\n        this.currentInstaller.buildCommands.push(file);\n\n        file = new BuildCommand();\n        file.commandType = \"file\";\n        file.buildTarget = \"build\";\n        file.fileType = \"support\";\n        file.description = \"mispelled mysql keyword file\";\n        file.source = \"MySQLKeywords.xml\";\n        file.target = \"/opt/softwareag/IntegrationServer/packages/WmJDBCAdapter/config/Keywords\";\n        file.display = DisplayType.hidden;\n\n        this.currentInstaller.buildCommands.push(file);\n\n      } else if (file && !include) {\n\n        // remove\n\n        this.currentInstaller.buildCommands.splice(this.currentInstaller.buildCommands.indexOf(file), 1);\n      }\n  }\n\n  private setPropertiesFile(props: string) {\n\n      let file: BuildCommand = this.currentInstaller.fileForType(\"properties\");\n\n      if (!file && props) {\n\n        // add if not already in list\n\n        file = new BuildCommand();\n        file.commandType = \"file\";\n        file.buildTarget = \"build\";\n        file.fileType = \"properties\";\n        file.description = \"Micro Service Properties Field\";\n        file.target = \"/opt/softwareag/IntegrationServer/application.properties\";\n        file.display = DisplayType.hidden;\n\n        //ensures that the build-components view gets updated\n        this.currentInstaller.buildCommands = Object.assign([], this.currentInstaller.buildCommands);\n\n        this.currentInstaller.buildCommands.push(file);\n      } else if (file && !props) {\n\n        // remove\n\n        this.currentInstaller.buildCommands.splice(this.currentInstaller.buildCommands.indexOf(file), 1);\n      }\n\n      if (props) {\n\n        file.source = props.replace(/\\s/g, \"-\");\n\n        if (!file.target)\n          file.target = \"/opt/softwareag/IntegrationServer/application.properties\";\n      }\n  }\n\n\tprivate flagChanges(propsFile: string, addons: string) {\n\n\t\tlet features: Map = new Map();\n\n    if (propsFile)\n\t\t  features.set(\"Properties\", [new BuilderProperties(\"File\", [propsFile])]);\n\n    if (addons == 'JDBC Adapter')\n      features.set(\"Adapters\", [new BuilderProperties(\"Adapters\", [\"JDBC\"])]);\n    else\n      features.set(\"Adapters\", [new BuilderProperties(\"Adapters\", [\"Monitoring\"])]);\n\n\t\tthis.owner.propertiesChangedInBuilder(\"msc\", features, this.currentInstaller);\n\t}\n\n  private determineFeatureAddOn(): string {\n\n    if (this.currentInstaller.productType == \"msr-jdbc\")\n      return \"JDBC Adapter\";\n    else  if (this.currentInstaller.productType == \"msr-monitor\")\n      return \"Monitoring\";\n    else\n      return null;\n  }\n}\n\n    \n\n    \n        \n\n  Micro Service Runtime Configuration\n  \n    \n      \n        None\n        \n          {{feature}}\n        \n      \n    \n    \n      Include mySQL JDBC Driver ?\n    \n    \n      \n        \n          None\n          \n            {{file}}\n          \n        \n        \n             \n        \n        Allows you override specific features via a simple key/value file. You can generate a file via the micro service runtime admin page. Click on the tool icon to access your local runtime.\n      \n       Download\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Micro Service Runtime Configuration                    None                  {{feature}}                            Include mySQL JDBC Driver ?                                None                      {{file}}                                                       Allows you override specific features via a simple key/value file. You can generate a file via the micro service runtime admin page. Click on the tool icon to access your local runtime.             Download            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about-app'},{'name': 'ActionComponent', 'selector': 'action'},{'name': 'ApiGatewayInstallerComponent', 'selector': 'jc-apigw-install'},{'name': 'ApiMicroGatewayInstallerComponent', 'selector': 'jc-apimg-install'},{'name': 'ApiPortalInstallerComponent', 'selector': 'jc-apipr-installer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildCommandsComponent', 'selector': 'build-commands'},{'name': 'BuildComponent', 'selector': 'build'},{'name': 'BuildExeComponent', 'selector': 'build-exe'},{'name': 'BuildImageComponent', 'selector': 'build-solution'},{'name': 'BuildInstallComponent', 'selector': 'build-install'},{'name': 'BuildPackagesComponent', 'selector': 'build-package'},{'name': 'ContainerComponent', 'selector': 'container'},{'name': 'ContainersComponent', 'selector': 'app-containers'},{'name': 'DeploymentDetailsComponent', 'selector': 'jc-deployment-details'},{'name': 'DeploymentListComponent', 'selector': 'jc-k8s-deployments'},{'name': 'DockerImageChooserComponent', 'selector': 'docker-image-chooser'},{'name': 'DockerImageListComponent', 'selector': 'jc-docker-images'},{'name': 'DockerImageVersionsComponent', 'selector': 'jc-docker-image-versions'},{'name': 'EditContainerComponent', 'selector': 'edit-container'},{'name': 'GitSourcesComponent', 'selector': 'git-source'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'InstallerComponent', 'selector': 'jc-install'},{'name': 'MicroServiceBuilderComponent', 'selector': 'jc-msc-configure'},{'name': 'MicroServiceInstallerComponent', 'selector': 'jc-msc-install'},{'name': 'PodsListComponent', 'selector': 'jc-pods'},{'name': 'RuntimeContainersComponent', 'selector': 'runtime-containers'},{'name': 'RuntimeDeployComponent', 'selector': 'runtime-deploy'},{'name': 'RuntimeDetailsComponent', 'selector': ''},{'name': 'RuntimeK8sComponent', 'selector': 'runtime'},{'name': 'RuntimeScaleComponent', 'selector': 'jc-runtime-scale'},{'name': 'RuntimeStageComponent', 'selector': 'runtime-stage'},{'name': 'RuntimeUpdateComponent', 'selector': ''},{'name': 'SagImageAlerterComponent', 'selector': 'sag-image-alerter'},{'name': 'ServicePropertiesComponent', 'selector': 'k8s-props'},{'name': 'SettingsComponent', 'selector': 'home'},{'name': 'SimpleNameComponent', 'selector': 'name-dialog'},{'name': 'StagingComponent', 'selector': 'staging'},{'name': 'TestCaseComponent', 'selector': 'test-case'},{'name': 'TestDefinitionComponent', 'selector': 'test-definitions'},{'name': 'TestHistoryComponent', 'selector': 'test-history'},{'name': 'TestRunComponent', 'selector': 'test-reun'},{'name': 'UMInstallerComponent', 'selector': 'jc-um-install'},{'name': 'UploadButtonComponent', 'selector': 'file-uploader-button'}];\n    var DIRECTIVES = [{'name': 'BuildImageChooseDirective', 'selector': '[builder]'},{'name': 'CancelCdkDrag', 'selector': '[appCancelCdkDrag]'},{'name': 'NgFileDrop', 'selector': '[ng-file-drop]'},{'name': 'NgFileSelect', 'selector': '[ng-file-select]'},{'name': 'RuntimeActionsDirective', 'selector': '[runtime-actions]'}];\n    var ACTUAL_COMPONENT = {'name': 'MicroServiceInstallerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Ng2Uploader.html":{"url":"injectables/Ng2Uploader.html","title":"injectable - Ng2Uploader","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Ng2Uploader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/extras/services/ng2-uploader.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _emitter\n                            \n                            \n                                _queue\n                            \n                            \n                                allowedExtensions\n                            \n                            \n                                authToken\n                            \n                            \n                                authTokenPrefix\n                            \n                            \n                                autoUpload\n                            \n                            \n                                cors\n                            \n                            \n                                customHeaders\n                            \n                            \n                                data\n                            \n                            \n                                debug\n                            \n                            \n                                encodeHeaders\n                            \n                            \n                                fieldName\n                            \n                            \n                                maxSize\n                            \n                            \n                                maxUploads\n                            \n                            \n                                method\n                            \n                            \n                                multipart\n                            \n                            \n                                multiple\n                            \n                            \n                                noParams\n                            \n                            \n                                url\n                            \n                            \n                                withCredentials\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addFilesToQueue\n                            \n                            \n                                clearQueue\n                            \n                            \n                                generateRandomIndex\n                            \n                            \n                                getQueueSize\n                            \n                            \n                                inQueue\n                            \n                            \n                                isFile\n                            \n                            \n                                log\n                            \n                            \n                                removeFileFromQueue\n                            \n                            \n                                setOptions\n                            \n                            \n                                uploadFile\n                            \n                            \n                                uploadFilesInQueue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addFilesToQueue\n                        \n                        \n                    \n                \n            \n            \n                \naddFilesToQueue(files: FileList)\n                \n            \n\n\n            \n                \n                    Defined in src/app/extras/services/ng2-uploader.ts:172\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    files\n                                    \n                                            FileList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearQueue\n                        \n                        \n                    \n                \n            \n            \n                \nclearQueue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/extras/services/ng2-uploader.ts:191\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            generateRandomIndex\n                        \n                        \n                    \n                \n            \n            \n                \ngenerateRandomIndex()\n                \n            \n\n\n            \n                \n                    Defined in src/app/extras/services/ng2-uploader.ts:214\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getQueueSize\n                        \n                        \n                    \n                \n            \n            \n                \ngetQueueSize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/extras/services/ng2-uploader.ts:195\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            inQueue\n                        \n                        \n                    \n                \n            \n            \n                \ninQueue(file: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/extras/services/ng2-uploader.ts:199\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isFile\n                        \n                        \n                    \n                \n            \n            \n                \nisFile(file: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/extras/services/ng2-uploader.ts:204\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            log\n                        \n                        \n                    \n                \n            \n            \n                \nlog(msg: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/extras/services/ng2-uploader.ts:208\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeFileFromQueue\n                        \n                        \n                    \n                \n            \n            \n                \nremoveFileFromQueue(i: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/extras/services/ng2-uploader.ts:187\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setOptions\n                        \n                        \n                    \n                \n            \n            \n                \nsetOptions(options: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/extras/services/ng2-uploader.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            uploadFile\n                        \n                        \n                    \n                \n            \n            \n                \nuploadFile(file: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/extras/services/ng2-uploader.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            uploadFilesInQueue\n                        \n                        \n                    \n                \n            \n            \n                \nuploadFilesInQueue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/extras/services/ng2-uploader.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _emitter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter(true)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/extras/services/ng2-uploader.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _queue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/extras/services/ng2-uploader.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allowedExtensions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/extras/services/ng2-uploader.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/extras/services/ng2-uploader.ts:69\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authTokenPrefix\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Bearer\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/extras/services/ng2-uploader.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            autoUpload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/extras/services/ng2-uploader.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/extras/services/ng2-uploader.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            customHeaders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/extras/services/ng2-uploader.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/extras/services/ng2-uploader.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            debug\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/extras/services/ng2-uploader.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            encodeHeaders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/extras/services/ng2-uploader.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"file\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/extras/services/ng2-uploader.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/extras/services/ng2-uploader.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxUploads\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 3\n                        \n                    \n                        \n                            \n                                    Defined in src/app/extras/services/ng2-uploader.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            method\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'POST'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/extras/services/ng2-uploader.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            multipart\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/extras/services/ng2-uploader.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            multiple\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/extras/services/ng2-uploader.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noParams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/extras/services/ng2-uploader.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/extras/services/ng2-uploader.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            withCredentials\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/extras/services/ng2-uploader.ts:55\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable, EventEmitter} from '@angular/core';\n\nexport class UploadedFile {\n  id: string;\n  status: number;\n  statusText: string;\n  progress: Object;\n  originalName: string;\n  size: number;\n  response: string;\n  done: boolean;\n  error: boolean;\n  abort: boolean;\n\n  constructor(id: string, originalName: string, size: number) {\n    this.id = id;\n    this.originalName = originalName;\n    this.size = size;\n    this.progress = {\n      loaded: 0,\n      total: 0,\n      percent: 0\n    };\n    this.done = false;\n    this.error = false;\n    this.abort = false;\n  }\n\n  setProgres(progress: Object): void {\n    this.progress = progress;\n  }\n\n  setError(): void {\n    this.error = true;\n    this.done = true;\n  }\n\n  setAbort(): void {\n    this.abort = true;\n    this.done = true;\n  }\n\n  onFinished(status: number, statusText: string, response: string): void {\n    this.status = status;\n    this.statusText = statusText;\n    this.response = response;\n    this.done = true;\n  }\n}\n\n@Injectable()\nexport class Ng2Uploader {\n  url: string;\n  cors: boolean = false;\n  withCredentials: boolean = false;\n  multiple: boolean = false;\n  maxUploads: number = 3;\n  allowedExtensions: string[] = [];\n  maxSize: boolean = false;\n  data: Object = {};\n  noParams: boolean = true;\n  autoUpload: boolean = true;\n  multipart: boolean = true;\n  method: string = 'POST';\n  debug: boolean = false;\n  customHeaders: any = {};\n  encodeHeaders: boolean = true;\n  authTokenPrefix: string = \"Bearer\";\n  authToken: string = undefined;\n  fieldName: string = \"file\";\n\n  _queue: any[] = [];\n  _emitter: EventEmitter = new EventEmitter(true);\n\n  setOptions(options: any): void {\n\n    this.url = options.url != null ? options.url : this.url;\n    this.cors = options.cors != null ? options.cors : this.cors;\n    this.withCredentials = options.withCredentials != null ? options.withCredentials : this.withCredentials;\n    this.multiple = options.multiple != null ? options.multiple : this.multiple;\n    this.maxUploads = options.maxUploads != null ? options.maxUploads : this.maxUploads;\n    this.allowedExtensions = options.allowedExtensions != null ? options.allowedExtensions : this.allowedExtensions;\n    this.maxSize = options.maxSize != null ? options.maxSize : this.maxSize;\n    this.data = options.data != null ? options.data : this.data;\n    this.noParams = options.noParams != null ? options.noParams : this.noParams;\n    this.autoUpload = options.autoUpload != null ? options.autoUpload : this.autoUpload;\n    this.multipart = options.multipart != null ? options.multipart : this.multipart;\n    this.method = options.method != null ? options.method : this.method;\n    this.debug = options.debug != null ? options.debug : this.debug;\n    this.customHeaders = options.customHeaders != null ? options.customHeaders : this.customHeaders;\n    this.encodeHeaders = options.encodeHeaders != null ? options.encodeHeaders : this.encodeHeaders;\n    this.authTokenPrefix = options.authTokenPrefix != null ? options.authTokenPrefix : this.authTokenPrefix;\n    this.authToken = options.authToken != null ? options.authToken : this.authToken;\n    this.fieldName = options.fieldName != null ? options.fieldName : this.fieldName;\n\n    if (!this.multiple) {\n      this.maxUploads = 1;\n    }\n  }\n\n  uploadFilesInQueue(): void {\n    let newFiles = this._queue.filter((f) => { return !f.uploading; });\n    newFiles.forEach((f) => {\n      this.uploadFile(f);\n    });\n  };\n\n  uploadFile(file: any): void {\n    let xhr = new XMLHttpRequest();\n    let form = new FormData();\n    form.append(this.fieldName, file, file.name);\n\n    let uploadingFile = new UploadedFile(\n        this.generateRandomIndex(),\n        file.name,\n        file.size\n    );\n\n    let queueIndex = this._queue.indexOf(file);\n\n    xhr.upload.onprogress = (e: ProgressEvent) => {\n      if (e.lengthComputable) {\n        let percent = Math.round(e.loaded / e.total * 100);\n        uploadingFile.setProgres({\n          total: e.total,\n          loaded: e.loaded,\n          percent: percent\n        });\n\n        this._emitter.emit(uploadingFile);\n      }\n    };\n\n    xhr.upload.onabort = (e: Event) => {\n      uploadingFile.setAbort();\n      this._emitter.emit(uploadingFile);\n    };\n\n    xhr.upload.onerror = (e: Event) => {\n      uploadingFile.setError();\n      this._emitter.emit(uploadingFile);\n    };\n\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === XMLHttpRequest.DONE) {\n        uploadingFile.onFinished(\n            xhr.status,\n            xhr.statusText,\n            xhr.response\n        );\n        this.removeFileFromQueue(queueIndex);\n        this._emitter.emit(uploadingFile);\n      }\n    };\n\n    xhr.open(this.method, this.url, true);\n    xhr.withCredentials = this.withCredentials;\n\n    if (this.customHeaders) {\n      Object.keys(this.customHeaders).forEach((key) => {\n        xhr.setRequestHeader(key, this.customHeaders[key]);\n      });\n    }\n\n    if (this.authToken) {\n      xhr.setRequestHeader(\"Authorization\", `${this.authTokenPrefix} ${this.authToken}`);\n    }\n\n    xhr.send(form);\n  }\n\n  addFilesToQueue(files: FileList): void {\n    let index: number, file: File;\n\n    for (index = 0; index  { return f === file; });\n    return fileInQueue.length ? true : false;\n  }\n\n  isFile(file: any): boolean {\n    return file !== null && (file instanceof Blob || (file.name && file.size));\n  }\n\n  log(msg: any): void {\n    if (!this.debug) {\n      return;\n    }\n  }\n\n  generateRandomIndex(): string {\n    return Math.random().toString(36).substring(7);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgFileDrop.html":{"url":"directives/NgFileDrop.html","title":"directive - NgFileDrop","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NgFileDrop\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/extras/directives/ng-file-drop.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ng-file-drop]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                el\n                            \n                            \n                                onUpload\n                            \n                            \n                                options\n                            \n                            \n                                uploader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initEvents\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/extras/directives/ng-file-drop.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initEvents\n                        \n                        \n                    \n                \n            \n            \n                \ninitEvents()\n                \n            \n\n\n            \n                \n                    Defined in src/app/extras/directives/ng-file-drop.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            el\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/extras/directives/ng-file-drop.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onUpload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/extras/directives/ng-file-drop.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/extras/directives/ng-file-drop.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ng2Uploader\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/extras/directives/ng-file-drop.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {Directive, ElementRef, EventEmitter} from '@angular/core';\nimport {Ng2Uploader} from '../services/ng2-uploader';\n\n@Directive({\n  selector: '[ng-file-drop]',\n  inputs: ['options: ng-file-drop'],\n  outputs: ['onUpload']\n})\nexport class NgFileDrop {\n  uploader: Ng2Uploader;\n  options: any;\n  onUpload: EventEmitter = new EventEmitter();\n\n  constructor(public el: ElementRef) {\n    this.uploader = new Ng2Uploader();\n    setTimeout(() => {\n      this.uploader.setOptions(this.options);\n    });\n\n    this.uploader._emitter.subscribe((fileNameStr: string, dataContent: any) => {\n      this.onUpload.emit({ fileName: fileNameStr, data: dataContent });\n    });\n\n    this.initEvents();\n  }\n\n  initEvents(): void {\n    this.el.nativeElement.addEventListener('drop', (e: any) => {\n      e.stopPropagation();\n      e.preventDefault();\n\n      let dt = e.dataTransfer;\n      let files = dt.files;\n\n      if (files.length) {\n        this.uploader.addFilesToQueue(files);\n      }\n    }, false);\n    \n    this.el.nativeElement.addEventListener('dragenter', (e: DragEvent) => {\n      e.stopPropagation();\n      e.preventDefault();\n    }, false);\n    \n    this.el.nativeElement.addEventListener('dragover', (e: DragEvent) => {\n      e.stopPropagation();\n      e.preventDefault();\n    }, false);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgFileSelect.html":{"url":"directives/NgFileSelect.html","title":"directive - NgFileSelect","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NgFileSelect\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/extras/directives/ng-file-select.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ng-file-select]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                el\n                            \n                            \n                                onUpload\n                            \n                            \n                                options\n                            \n                            \n                                uploader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onFiles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/extras/directives/ng-file-select.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onFiles\n                        \n                        \n                    \n                \n            \n            \n                \nonFiles()\n                \n            \n\n\n            \n                \n                    Defined in src/app/extras/directives/ng-file-select.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            el\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/extras/directives/ng-file-select.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onUpload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/extras/directives/ng-file-select.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/extras/directives/ng-file-select.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ng2Uploader\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/extras/directives/ng-file-select.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {Directive, ElementRef, EventEmitter} from '@angular/core';\nimport {Ng2Uploader} from '../services/ng2-uploader';\n\n@Directive({\n  selector: '[ng-file-select]',\n  inputs: ['options: ng-file-select'],\n  outputs: ['onUpload'],\n  host: { '(change)': 'onFiles()' }\n})\nexport class NgFileSelect {\n  uploader: Ng2Uploader;\n  options: any;\n  onUpload: EventEmitter = new EventEmitter();\n\n  constructor(public el: ElementRef) {\n    this.uploader = new Ng2Uploader();\n    setTimeout(() => {\n      this.uploader.setOptions(this.options);\n    });\n\n    this.uploader._emitter.subscribe((data: any) => {\n      this.onUpload.emit(data);\n    });\n  }\n\n  onFiles(): void {\n    let files = this.el.nativeElement.files;\n    if (files.length) {\n      this.uploader.addFilesToQueue(files);\n    }\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PackagesService.html":{"url":"injectables/PackagesService.html","title":"injectable - PackagesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PackagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/packages.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                URI\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _makePackage\n                            \n                            \n                                    Public\n                                checkDependenciesForPackages\n                            \n                            \n                                    Public\n                                index\n                            \n                            \n                                    Public\n                                packageDetails\n                            \n                            \n                                    Public\n                                packages\n                            \n                            \n                                    Public\n                                servicesForPackage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_settings: Settings, _http: HttpClient, _ngxXml2jsonService: NgxXml2jsonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/packages.service.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _settings\n                                                  \n                                                        \n                                                                        Settings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _ngxXml2jsonService\n                                                  \n                                                        \n                                                                    NgxXml2jsonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _makePackage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _makePackage(responseData: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/packages.service.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    responseData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         WmPackageInfo[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            checkDependenciesForPackages\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkDependenciesForPackages(packages: string[], packagesDir?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/packages.service.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    packages\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    packagesDir\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            index\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    index(deploymentSetName: string, packagesDir: string, sources: Source, forceReindex: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/packages.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    deploymentSetName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    packagesDir\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sources\n                                    \n                                                Source\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    forceReindex\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            packageDetails\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    packageDetails(name: string, packagesDir?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/packages.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    packagesDir\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            packages\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    packages(packagesDir?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/packages.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    packagesDir\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            servicesForPackage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    servicesForPackage(name: string, packagesDir?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/packages.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    packagesDir\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            URI\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : Settings.SERVER_API + \"/rad/jc.devops:api/package\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/packages.service.ts:32\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } \t           \t \t\t\t      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams }  from '@angular/common/http';\nimport { Observable, of }               \t\t    from 'rxjs';\nimport { switchMap, map } \t\t\t\t\t\t          from 'rxjs/operators';\n\nimport { NgxXml2jsonService } \t\t\t\t\t        from 'ngx-xml2json';\n\nimport { Settings }                     \t\t    from '../settings';\nimport { WmPackageInfo }                        from '../models/wm-package-info';\nimport { DeploymentSet }                        from '../models/project';\nimport {Source} from '../models/git-source';\n\nexport class DependencyWrapper {\n  public packages: WmPackageInfo[];\n  public dependencies: WmPackageInfo[];\n}\n\nexport class Sources {\n\n  public gitURI: string;\n  public gitRepository: string;\n  public gitUser: string;\n  public gitPassword: string;\n  public type: string;\n  public include: string[];\n  public targetDir: string;\n}\n\n@Injectable()\nexport class PackagesService {\n\n    public static URI: string = Settings.SERVER_API + \"/rad/jc.devops:api/package\";\n\n    constructor(private _settings: Settings, private _http: HttpClient, private _ngxXml2jsonService: NgxXml2jsonService) {\n\n    }\n\n    public packages(packagesDir?: string): Observable {\n\n      let url: string = PackagesService.URI\n\n      let headers = new HttpHeaders()\n        .set('Content-Type', 'application/json')\n        .set('Accept', 'application/json');\n\n       if (packagesDir)\n         headers = headers.set('packagesDir', packagesDir);\n\n      return this._http.get(url, { headers }).pipe(map( (responseData) => {\n\n          let packages: WmPackageInfo[] = [];\n\n          ( responseData).packages.forEach((p) => {\n            packages.push(WmPackageInfo.make(p));\n          });\n\n           return packages;\n        },\n        error => {\n            return [];\n        }));\n    }\n\n    public servicesForPackage(name: string, packagesDir?: string): Observable {\n\n      let url: string = PackagesService.URI + \"/\" + name + \"/services\";\n\n      let headers = new HttpHeaders()\n        .set('Content-Type', 'application/json')\n        .set('Accept', 'application/json');\n\n        if (name)\n          headers = headers.set('packagesDir', packagesDir);\n\n      return this._http.get(url, { headers }).pipe(map( (responseData) => {\n\n          return ( responseData).services;\n        },\n        error => {\n            return [];\n        }));\n    }\n\n    public packageDetails(name: string, packagesDir?: string): Observable {\n\n      let url: string = PackagesService.URI + \"/\" + name\n\n      let headers = new HttpHeaders()\n        .set('Content-Type', 'application/json')\n        .set('Accept', 'application/json');\n\n      if (packagesDir)\n         headers = headers.set('packagesDir', packagesDir);\n\n      return this._http.get(url, { headers }).pipe(map( (responseData) => {\n\n           return WmPackageInfo.make(( responseData).packages[0]);\n        },\n        error => {\n            return null;\n        }));\n    }\n\n    public index(deploymentSetName: string, packagesDir: string, sources: Source, forceReindex: boolean): Observable {\n\n      if (packagesDir.startsWith(\"/\"))\n        packagesDir = packagesDir.substring(packagesDir.indexOf(\"/\")+1);\n\n\t\t  let url: string = PackagesService.URI + \"/\" + deploymentSetName + \"/index?repository=\" + encodeURI(sources.gitRepository) + \"&packagesDir=\" + encodeURI(packagesDir);\n\n\t\t  let headers = new HttpHeaders()\n\t\t\t\t.set('Content-Type', 'application/json')\n\t\t\t\t.set('Accept', 'application/json');\n\n      if (forceReindex)\n        ( sources).forceReindex = forceReindex;\n\n\t\t  let body: string = JSON.stringify(sources);\n\n      return this._http.post(url, body, { headers }).pipe(map( (responseData) => {\n\n            return this._makePackage(responseData);\n          },\n          error => {\n            return [];\n       \t}));\n    }\n\n    public checkDependenciesForPackages(packages: string[], packagesDir?: string): Observable {\n\n      var packs: string = \"\";\n      packages.forEach((p) => {\n\n        if (packs != \"\")\n          packs = packs + \",\" + p;\n        else\n          packs = p;\n      });\n\n      let url: string = PackagesService.URI + \"/dependencies/\" + encodeURIComponent(packs);\n\n      let headers = new HttpHeaders()\n        .set('Content-Type', 'application/json')\n        .set('Accept', 'application/json');\n\n        if (packagesDir)\n          headers = headers.set('packagesDir', packagesDir);\n\n      return this._http.get(url, { headers }).pipe(map( (responseData) => {\n\n          let packages: WmPackageInfo[] = [];\n          (responseData).packages.forEach((p) => {\n            if (p != null)\n              packages.push(WmPackageInfo.make(p));\n            else\n              console.log(\"** WARNING ** - invalid null dependencies found for '\" + packs + \"' in \" + packagesDir);\n           });\n\n          let dependencies: WmPackageInfo[] = [];\n          (responseData).dependencies.forEach((p) => {\n            dependencies.push(WmPackageInfo.make(p))\n           });\n\n           return {packages: packages, dependencies: dependencies};\n        },\n        error => {\n            return null;\n        }));\n    }\n\n    private _makePackage(responseData: any): WmPackageInfo[] {\n\n      let packages: WmPackageInfo[] = [];\n\n      responseData.packages.forEach((p) => {\n        packages.push(WmPackageInfo.make(p));\n      });\n\n      return packages;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Payload.html":{"url":"classes/Payload.html","title":"class - Payload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Payload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/payload.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _contentType\n                            \n                            \n                                    Protected\n                                _endPoint\n                            \n                            \n                                    Protected\n                                _origin\n                            \n                            \n                                    Protected\n                                _service\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                contentType\n                            \n                            \n                                    Static\n                                make\n                            \n                            \n                                    Static\n                                makeFromJson\n                            \n                            \n                                    Public\n                                origin\n                            \n                            \n                                    Public\n                                service\n                            \n                            \n                                    Public\n                                uri\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Private\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/models/payload.ts:24\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _contentType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PayloadContentType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/payload.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _endPoint\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/payload.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _origin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PayloadOrigin\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/payload.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/payload.ts:23\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            contentType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    contentType()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/payload.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         PayloadContentType\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            make\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    make(origin: string, contentType: string, endPoint: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/payload.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    origin\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    contentType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    endPoint\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Payload\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            makeFromJson\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    makeFromJson(json: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/payload.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    json\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Payload\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            origin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    origin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/payload.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         PayloadOrigin\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            service\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    service()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/payload.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            uri\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    uri()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/payload.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export enum PayloadOrigin {\n\tnone,\n\tfile,\n\turl,\n\tservice,\n\terror\n}\n\t\nexport enum PayloadContentType {\n\tempty,\n\tjson,\n\txml,\n\tstring,\n\tobject,\n\tidata\n}\n\nexport class Payload {\n\n\tprotected _origin: PayloadOrigin;\n\tprotected _contentType: PayloadContentType;\n\tprotected _service: string;\n\tprotected _endPoint: string;\n\n\tprivate constructor() {\n\n\t}\n\n\tpublic static make(origin: string, contentType: string,  endPoint: string) : Payload {\n\n\t\tlet p: Payload = new Payload();\n\n\t\tif (origin == \"service\")\n\t\t\tp._origin = PayloadOrigin.service;\n\t\telse if (origin == \"file\")\n\t\t\tp._origin = PayloadOrigin.file;\n\t\telse if (origin == \"url\")\n\t\t\tp._origin = PayloadOrigin.url;\n\t\telse if (origin == \"error\")\n\t\t\tp._origin = PayloadOrigin.error;\n\t\telse\n\t\t\tp._origin = PayloadOrigin.none;\n\n\t\tif (contentType == 'json')\n\t\t\tp._contentType = PayloadContentType.json;\n\t\telse if (contentType == 'idata')\n\t\t\tp._contentType = PayloadContentType.idata;\n\t\telse if (contentType == 'xml')\n\t\t\tp._contentType = PayloadContentType.xml;\n\t\telse if (contentType == 'string')\n\t\t\tp._contentType = PayloadContentType.string;\n\t\telse if (contentType == 'idata')\n\t\t\tp._contentType = PayloadContentType.idata;\n\t\telse if (contentType == 'object')\n\t\t\tp._contentType = PayloadContentType.object;\n\t\telse\n\t\t\tp._contentType = PayloadContentType.empty;\n\t\t\n\t\tif (p._origin == PayloadOrigin.service)\n\t\t\tp._service = endPoint;\n\t\telse\n\t\t\tp._endPoint = endPoint;\n\n\t\treturn p;\n\t}\n\n\tpublic static makeFromJson(json: any): Payload\n \t{\n \t\treturn Payload.make(json.origin, json.contentType, json.service ? json.service : json.location);\n \t}\n\n\tpublic origin(): PayloadOrigin {\n\n\t\treturn this._origin;\n\t}\n\n\tpublic contentType(): PayloadContentType {\n\n\t\treturn this._contentType;\n\t}\n\n\tpublic service(): string {\n\n\t\treturn this._service;\n\t}\n\n\tpublic uri(): string {\n\n\t\treturn this._endPoint;\n\t}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PodsListComponent.html":{"url":"components/PodsListComponent.html","title":"component - PodsListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PodsListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/k8s/pods-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                jc-pods\n            \n\n\n\n\n            \n                templateUrl\n                ../../templates/k8s/pods-list.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _displayedColumnsBase\n                            \n                            \n                                    Private\n                                _podsSource\n                            \n                            \n                                table\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                containerSummary\n                            \n                            \n                                    Public\n                                dataSource\n                            \n                            \n                                    Public\n                                displayedColumns\n                            \n                            \n                                    Public\n                                executeAction\n                            \n                            \n                                    Public\n                                iconForAction\n                            \n                            \n                                    Public\n                                labelForAction\n                            \n                            \n                                    Public\n                                localizedStatus\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                start\n                            \n                            \n                                    Public\n                                styleForAction\n                            \n                            \n                                    Public\n                                styleForRunningPods\n                            \n                            \n                                    Public\n                                styleForStatus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                appId\n                            \n                            \n                                namespace\n                            \n                            \n                                showActions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                podCountChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_router: Router, _settings: Settings, _podService: K8sService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/k8s/pods-list.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _settings\n                                                  \n                                                        \n                                                                        Settings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _podService\n                                                  \n                                                        \n                                                                        K8sService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        appId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/k8s/pods-list.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        namespace\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/k8s/pods-list.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showActions\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/k8s/pods-list.component.ts:31\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        podCountChanged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/k8s/pods-list.component.ts:34\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            containerSummary\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    containerSummary(pod: K8sPod)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/k8s/pods-list.component.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pod\n                                    \n                                                K8sPod\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            dataSource\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dataSource()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/k8s/pods-list.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         K8sPod[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            displayedColumns\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    displayedColumns()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/k8s/pods-list.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            executeAction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    executeAction(image: K8sDeployment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/k8s/pods-list.component.ts:186\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    image\n                                    \n                                                K8sDeployment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            iconForAction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    iconForAction(image: K8sDeployment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/k8s/pods-list.component.ts:176\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    image\n                                    \n                                                K8sDeployment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            labelForAction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    labelForAction(image: K8sDeployment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/k8s/pods-list.component.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    image\n                                    \n                                                K8sDeployment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            localizedStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    localizedStatus(label: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/k8s/pods-list.component.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/k8s/pods-list.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/k8s/pods-list.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/k8s/pods-list.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            start\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    start()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/k8s/pods-list.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            styleForAction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    styleForAction(image: K8sPod)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/k8s/pods-list.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    image\n                                    \n                                                K8sPod\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            styleForRunningPods\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    styleForRunningPods(image: K8sPod)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/k8s/pods-list.component.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    image\n                                    \n                                                K8sPod\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            styleForStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    styleForStatus(pod: K8sPod)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/k8s/pods-list.component.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pod\n                                    \n                                                K8sPod\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _displayedColumnsBase\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['Name', 'Containers', 'Created', \"Status\", \"Actions\"]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/k8s/pods-list.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _podsSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LivePods\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/k8s/pods-list.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            table\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatTable\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('podsTable', {read: MatTable})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/k8s/pods-list.component.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ChangeDetectorRef, OnInit, OnChanges, OnDestroy, \n            ViewChild, Output, Input, EventEmitter }              from '@angular/core';\nimport { Router }                                                 from '@angular/router';\n\nimport { MatTable }                                               from '@angular/material';\n\nimport { Settings }                                               from '../../settings';\nimport { LivePods, LivePodsCount }                                from '../../support/live-pods';\nimport { K8sPod, PodStatus }                                      from '../../models/k8s-pod';\nimport { K8sDeployment }                                          from '../../models/k8s-deployment';\nimport { K8sService }                                             from '../../services/k8s.service';\n\nconst PODS_LIST_REFRESH_INTERVAL = 5000;\n\n@Component({\n  selector: 'jc-pods',\n  templateUrl: '../../templates/k8s/pods-list.html'\n})\n\nexport class PodsListComponent implements OnInit, OnChanges, OnDestroy {\n\n\tpublic _displayedColumnsBase: string[] = ['Name', 'Containers', 'Created', \"Status\", \"Actions\"];\n  \n    @Input()\n    public namespace: string;\n\n    @Input()\n    public appId: string;\n\n    @Input()\n    public showActions: boolean = true;\n\n    @Output()\n    public podCountChanged: EventEmitter = new EventEmitter();\n\n    private _podsSource: LivePods;\n\n    @ViewChild('podsTable', {read: MatTable}) table: MatTable;\n\n    public constructor(private _router: Router, private _settings: Settings, private _podService: K8sService) {\n\n    }\n\n    public ngOnInit() {\n\n      if (!this.showActions)\n        this._displayedColumnsBase.pop();\n\n            console.log(\"initing up for \" + this.appId);\n\n      this.start();   \n    }\n\n    public ngOnChanges() {\n\n      if (this._podsSource && this.appId != this._podsSource.appId) {\n\n        this._podsSource.stop();\n        this.start();\n      }\n    }\n\n    public ngOnDestroy() {\n\n            console.log(\"destroying for\" + this.appId);\n\n      this._podsSource.stop();\n    }\n\n    public start() {\n\n      console.log(\"starting up for \" + this.appId);\n\n      this._podsSource = new LivePods(this.namespace, this.appId, PODS_LIST_REFRESH_INTERVAL, this._podService);\n      this._podsSource.refreshPods().subscribe((podsCount) => {\n        this.podCountChanged.emit(podsCount);\n      });\n\n    }\n\n    public dataSource(): K8sPod[] {\n\n      let ret: any = this._podsSource.dataSource();\n\n      let next: K8sPod[] = ret.data;\n\n      let ref: PodsListComponent = this;\n\n      if (ret.hasChanged) {\n        setTimeout(() => {\n          ref.table.renderRows();\n        }, 10);\n      }\n\n      return next;\n    }\n\n    public displayedColumns(): string[] {\n\n       return this._displayedColumnsBase;\n    }\n\n    public styleForRunningPods(image: K8sPod): any {\n\n      let style: any = {};\n      style['text-align'] = 'center';\n      style['border-radius'] = '10px';\n      style['padding'] = '5px';\n\n\n      return style;\n    }\n\n    public styleForAction(image: K8sPod): string {\n\n      let style: any = {};\n      style['text-align'] = 'center';\n      style['border-radius'] = '10px';\n      style['padding'] = '5px';\n      style['color'] = \"white\";\n\n      return style;\n    }\n\n    public styleForStatus(pod: K8sPod): any {\n\n       let style: any = {};\n      style['text-align'] = 'center';\n      style['border-radius'] = '5px';\n      style['padding'] = '10px';\n      style['color'] = \"white\";\n\n      if (pod.status == PodStatus.Pending) {\n        style['background-color'] = 'yellow';\n        style['color'] = 'black';\n      }\n      else if (pod.status == PodStatus.Starting) {\n        style['background-color'] = 'orange';\n      }\n      else if (pod.status == PodStatus.Running) {\n        style['background-color'] = 'green';\n      }\n      else if (pod.status == PodStatus.Stopping) {\n        style['background-color'] = 'orange';\n      }\n      else if (pod.status == PodStatus.Removed) {\n        style['background-color'] = 'gray';\n      }\n      else {\n        style['background-color'] = 'pink';\n      }\n\n      return style;\n    }\n\n    public containerSummary(pod: K8sPod): string[] {\n\n      let labels: string[] = [];\n\n      pod.containers.forEach((c) => {\n\n        labels.push(c.imageRef + \" (\" + c.status + \")\");\n      });\n\n      return labels;\n    }\n\n    public localizedStatus(label: String): any {\n\n      if (label)\n        return label;\n      else\n        return \"unknown\";\n    }\n\n    public iconForAction(image: K8sDeployment): string {\n\n        return \"cloud-upload-alt\";\n    }\n\n    public labelForAction(image: K8sDeployment): string {\n\n        return \"Deploy\";\n    }\n\n    public executeAction(image: K8sDeployment) {\n\n      K8sDeployment.currentDeployment = image;\n      \n      this._router.navigate(['/solution' ], { skipLocationChange: false });\n    }\n}\n    \n\n    \n        \n\n  \n\n    \n       Name\n       {{element.name}} \n    \n\n    \n       Type \n       {{element.type}} \n    \n\n    \n       Description \n       {{element.description}} \n    \n\n    \n       Containers \n       \n        {{c}} \n      \n    \n\n    \n       Created \n       {{element.creationDate | date: 'dd/MM/yyyy HH:mm'}} \n    \n\n\n    \n       Status \n      \n        \n          {{localizedStatus(element.status)}} \n        \n      \n    \n\n     \n       Actions \n      \n        \n            \n        \n      \n    \n\n    \n    \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             Name       {{element.name}}                Type        {{element.type}}                Description        {{element.description}}                Containers                {{c}}                      Created        {{element.creationDate | date: \\'dd/MM/yyyy HH:mm\\'}}                Status                         {{localizedStatus(element.status)}}                               Actions                                                       '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about-app'},{'name': 'ActionComponent', 'selector': 'action'},{'name': 'ApiGatewayInstallerComponent', 'selector': 'jc-apigw-install'},{'name': 'ApiMicroGatewayInstallerComponent', 'selector': 'jc-apimg-install'},{'name': 'ApiPortalInstallerComponent', 'selector': 'jc-apipr-installer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildCommandsComponent', 'selector': 'build-commands'},{'name': 'BuildComponent', 'selector': 'build'},{'name': 'BuildExeComponent', 'selector': 'build-exe'},{'name': 'BuildImageComponent', 'selector': 'build-solution'},{'name': 'BuildInstallComponent', 'selector': 'build-install'},{'name': 'BuildPackagesComponent', 'selector': 'build-package'},{'name': 'ContainerComponent', 'selector': 'container'},{'name': 'ContainersComponent', 'selector': 'app-containers'},{'name': 'DeploymentDetailsComponent', 'selector': 'jc-deployment-details'},{'name': 'DeploymentListComponent', 'selector': 'jc-k8s-deployments'},{'name': 'DockerImageChooserComponent', 'selector': 'docker-image-chooser'},{'name': 'DockerImageListComponent', 'selector': 'jc-docker-images'},{'name': 'DockerImageVersionsComponent', 'selector': 'jc-docker-image-versions'},{'name': 'EditContainerComponent', 'selector': 'edit-container'},{'name': 'GitSourcesComponent', 'selector': 'git-source'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'InstallerComponent', 'selector': 'jc-install'},{'name': 'MicroServiceBuilderComponent', 'selector': 'jc-msc-configure'},{'name': 'MicroServiceInstallerComponent', 'selector': 'jc-msc-install'},{'name': 'PodsListComponent', 'selector': 'jc-pods'},{'name': 'RuntimeContainersComponent', 'selector': 'runtime-containers'},{'name': 'RuntimeDeployComponent', 'selector': 'runtime-deploy'},{'name': 'RuntimeDetailsComponent', 'selector': ''},{'name': 'RuntimeK8sComponent', 'selector': 'runtime'},{'name': 'RuntimeScaleComponent', 'selector': 'jc-runtime-scale'},{'name': 'RuntimeStageComponent', 'selector': 'runtime-stage'},{'name': 'RuntimeUpdateComponent', 'selector': ''},{'name': 'SagImageAlerterComponent', 'selector': 'sag-image-alerter'},{'name': 'ServicePropertiesComponent', 'selector': 'k8s-props'},{'name': 'SettingsComponent', 'selector': 'home'},{'name': 'SimpleNameComponent', 'selector': 'name-dialog'},{'name': 'StagingComponent', 'selector': 'staging'},{'name': 'TestCaseComponent', 'selector': 'test-case'},{'name': 'TestDefinitionComponent', 'selector': 'test-definitions'},{'name': 'TestHistoryComponent', 'selector': 'test-history'},{'name': 'TestRunComponent', 'selector': 'test-reun'},{'name': 'UMInstallerComponent', 'selector': 'jc-um-install'},{'name': 'UploadButtonComponent', 'selector': 'file-uploader-button'}];\n    var DIRECTIVES = [{'name': 'BuildImageChooseDirective', 'selector': '[builder]'},{'name': 'CancelCdkDrag', 'selector': '[appCancelCdkDrag]'},{'name': 'NgFileDrop', 'selector': '[ng-file-drop]'},{'name': 'NgFileSelect', 'selector': '[ng-file-select]'},{'name': 'RuntimeActionsDirective', 'selector': '[runtime-actions]'}];\n    var ACTUAL_COMPONENT = {'name': 'PodsListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Port.html":{"url":"classes/Port.html","title":"class - Port","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Port\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/project.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                external\n                            \n                            \n                                    Public\n                                internal\n                            \n                            \n                                    Public\n                                publicPort\n                            \n                            \n                                    Public\n                                serviceType\n                            \n                            \n                                    Public\n                                    Optional\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                makeArray\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(internal: string, external: string, description: string, type?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/project.ts:526\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        internal\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        external\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:528\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            external\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:528\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            internal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:528\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            publicPort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:525\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            serviceType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:526\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:528\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            makeArray\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    makeArray(array: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/project.ts:532\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    array\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Port[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { APIDefinition }                        from '../models/wm-package-info'\nimport { Source }                               from '../models/git-source';\nimport { DockerImage, TestStatus }              from '../models/docker-image';\n\nexport class DeploymentSet {\n\n  public id: string;\n  public name: string;\n  public source: Source;\n  public active: string;\n  public apis: APIDefinition[];\n\n  public constructor() {\n      this.apis = [];\n      this.source = new Source();\n  }\n\n  public static make(data: any): DeploymentSet {\n\n      let p: DeploymentSet = new DeploymentSet();\n      p.id = data.name;\n      p.name = data.name;\n\n      if (data.source)\n       p.source = Source.make(data.source);\n\n      p.apis = [];\n\n      if (data.apis) {\n\n        data.apis.forEach((a) => {\n          p.apis.push(APIDefinition.make(a));\n        });\n      }\n\n      return p;\n  }\n}\n\nexport enum DisplayType {\n  hidden = \"hidden\",\n  readonly = \"readonly\",\n  editable = \"editable\",\n  password = \"password\",\n  file = \"file\",\n  dropdown = \"dropdown\",\n  yesno = \"yesno\"\n}\n\nexport class BuildCommand {\n\n  public commandType: string;\n  public buildTarget: string;\n  public fileType: string;\n  public source: string;\n  public target: string;\n  public description: string = \"\";\n  public display: DisplayType = DisplayType.hidden;\n  public required: boolean = true;\n  public conditions: string[];\n\n  public static make(d: any): BuildCommand {\n\n    let f: BuildCommand = new BuildCommand();\n    f.commandType = d.commandType;\n    f.buildTarget = d.buildTarget;\n    f.fileType = d.fileType;\n    f.source = d.source;\n    f.target = d.target;\n    f.description = d.description;\n    f.conditions = d.conditions;\n\n    if (d.display == \"editable\")\n      f.display = DisplayType.editable;\n    else if (d.display == \"readonly\")\n      f.display = DisplayType.readonly;\n    else if (d.display == \"file\")\n      f.display = DisplayType.file;\n    else\n      f.display = DisplayType.hidden;\n\n    f.required = false;\n    return f;\n  }\n\n  copy() {\n    return BuildCommand.make(this);\n  }\n\n  public equals(b: BuildCommand): boolean {\n\n    return (b.source && b.source == this.source) || (!b.source && b.target == this.target);\n  }\n\n  public matchConditions(args: Map): boolean {\n\n    return ArgDisplayType._matchConditions(this.conditions, args);\n  }\n}\n\nexport interface BuildParams {\n\n  name: string;\n  publicPort(): string;\n  setPublicPort(port: string);\n  assignedLicense(): string;\n  hostName: string;\n  entryPoint: string;\n  exitPoint: string;\n  healthCheck: string;\n  args: Map\n  buildCommands: BuildCommand[];\n\n  fileForType(type: string): BuildCommand;\n  isCustomImage(): boolean;\n}\n\nexport class ArgDisplayType {\n\n  public name: string;\n  public description: string;\n  public display: DisplayType = DisplayType.hidden;\n  public conditions: string[];\n  public choices: string[];\n  public required: boolean = true;\n\n  public constructor(name: string) {\n    this.name = name;\n    this.description = this.name;\n    this.conditions = [];\n    this.choices = [];\n  }\n\n  public copy(): ArgDisplayType {\n\n      let copy: ArgDisplayType = new ArgDisplayType(this.name);\n      copy.description = this.description;\n      copy.display = this.display;\n      copy.conditions = this.conditions;\n      copy.choices = this.choices;\n      copy.required = this.required;\n\n      return copy;\n  }\n\n  public static make(d: any): ArgDisplayType {\n\n    let a: ArgDisplayType = new ArgDisplayType(d.name);\n\n    if (d.display == \"editable\")\n      a.display = DisplayType.editable;\n    else if (d.display == \"readonly\")\n      a.display = DisplayType.readonly;\n    else if (d.display == \"file\")\n      a.display = DisplayType.file;\n    else if (d.display == \"password\")\n      a.display = DisplayType.password;\n    else if (d.display == \"yesno\")\n      a.display = DisplayType.yesno;\n    else if (d.display == \"dropdown\")\n      a.display = DisplayType.dropdown;\n    else\n      a.display = DisplayType.hidden;\n\n    if (d.required != null)\n      a.required = d.required;\n\n    a.description = d.description || d.name;\n\n    if (d.conditions)\n      a.conditions = d.conditions;\n\n    if (a.choices)\n      a.choices = d.choices;\n\n    return a;\n  }\n\n  public matchConditions(args: Map): boolean {\n\n      return ArgDisplayType._matchConditions(this.conditions, args);\n  }\n\n  public static _matchConditions(conditions: string[], args: Map): boolean {\n\n      if (conditions && conditions.length > 0) {\n\n        let matched: boolean = false;\n\n        for (let i = 0; i  {\n      args.push(new Arg(a.source, a.target, a.description));\n    });\n\n    return args;\n  }\n\n}\n\nexport class Installer implements BuildParams {\n\n    public name: string;\n    public sourceImageTag: string;\n    public isNew: string = \"true\";\n    public targetImage: DockerImage;\n    public productType: string;\n    public licenseFile: string;\n    public primaryPort: string;\n    public hostName: string;\n    public wmInstallerImage: string;\n    public includeUpdate: string = \"false\";\n    public buildCommands: BuildCommand[];\n    public args: Map;\n    public isSAGProduct: string = \"true\";\n\n    public entryPoint: string;\n    public exitPoint: string;\n    public healthCheck: string;\n\n    public constructor() {\n\n    this.sourceImageTag = \"centos:latest\";\n    this.targetImage = new DockerImage();\n    this.buildCommands = [];\n    this.args = new Map();\n  }\n\n  public copy(): Installer {\n\n    return Installer.make(this);\n  }\n\n  public static parse(data: string): Installer {\n\n    return this.make(JSON.parse(data, parserReviver).install);\n  }\n\n  public isCustomImage(): boolean {\n    return true;\n  }\n\n  public static make(data: any): Installer {\n\n    let i: Installer = new Installer();\n    i.name = data.name;\n    i.isSAGProduct = data.isSAGProduct;\n    i.args = data.args;\n    i.productType = data.productType;\n    i.wmInstallerImage = data.wmInstallerImage;\n    i.sourceImageTag = data.sourceImageTag;\n\n    if (data.targetImage)\n      i.targetImage = DockerImage.make(data.targetImage);\n\n    i.licenseFile = data.licenseFile;\n    i.primaryPort = data.primaryPort;\n    i.isNew = data.isNew;\n    i.includeUpdate = data.includeUpdate;\n    i.hostName = data.hostName;\n    i.entryPoint = data.entryPoint;\n    i.exitPoint = data.exitPoint;\n    i.healthCheck = data.healthCheck;\n    i.healthCheck = data.healthCheck;\n\n    if (!i.args)\n       i.args = new Map();\n\n    if (data.buildCommands) {\n      data.buildCommands.forEach((f) => {\n        i.buildCommands.push(BuildCommand.make(f));\n      });\n    }\n\n    return i;\n  }\n\n  public publicPort(): string {\n    return this.primaryPort;\n  }\n\n  public setPublicPort(port: string) {\n    this.primaryPort = port;\n  }\n\n  public assignedLicense(): string {\n\n    return this.licenseFile;\n  }\n\n  public fileForType(type: string, name?: string): BuildCommand {\n\n      return Builder._fileForSource(this.buildCommands, type, name, null);\n  }\n\n  public fileWithDescription(type: string, description: string): BuildCommand {\n      return Builder._fileForSource(this.buildCommands, type, null, description);\n  }\n\n  public removeFileForType(type: string, name?: string) {\n\n      return Builder._removeFileForType(this.buildCommands, type, name);\n  }\n\n  public toString(): string {\n    return JSON.stringify(this, stringifyReplacer);\n  }\n}\n\nexport class Builder implements BuildParams {\n\n  public name: string;\n  public deploymentType: string;\n  public deployments: DeploymentSet[];\n\n  public sourceImage: DockerImage;\n  public targetImage: DockerImage;\n  public version: string;\n  public testStatus: string;\n  public buildCommands: BuildCommand[];\n  public hasTests: string;\n  public buildUser: string;\n  public entryUser: string;\n  public entryPoint: string;\n  public exitPoint: string;\n  public healthCheck: string;\n  public args: Map;\n\n  public hostName: string; // not used!!\n\n  public constructor() {\n\n    this.sourceImage = new DockerImage();\n    this.targetImage = new DockerImage();\n    this.buildCommands = [];\n\n    this.args = new Map();\n  }\n\n  public hyphenatedName(): string {\n\n    return this.name.toLowerCase().replace(/\\s/g, \"-\");\n  }\n\n  public static make(data: any): Builder {\n\n    let b: Builder = new Builder();\n    b.name = data.name;\n    b.deploymentType = data.type;\n\n    b.deployments = [];\n\n    if (data.deployments) {\n      data.deployments.forEach((d) => {\n            b.deployments.push(DeploymentSet.make(d));\n      });\n    }\n\n    if (data.buildCommands) {\n      data.buildCommands.forEach((f) => {\n            b.buildCommands.push(BuildCommand.make(f));\n      });\n    }\n\n    b.sourceImage = DockerImage.make(data.sourceImage);\n    b.targetImage = DockerImage.make(data.targetImage);\n    b.version = data.version;\n    b.testStatus = data.testStatus;\n    b.buildUser = data.buildUser;\n    b.entryUser = data.entryUser;\n    b.entryPoint = data.entryPoint;\n    b.exitPoint = data.exitPoint;\n    b.healthCheck = data.healthCheck;\n\n    if (data.hasTests && data.hasTests == 'true')\n      b.hasTests = \"true\";\n\n    return b;\n  }\n\n  public publicPort(): string {\n    return this.sourceImage.primaryPort;\n  }\n\n  public setPublicPort(port: string) {\n    this.sourceImage.primaryPort = port;\n  }\n\n  public assignedLicense(): string {\n\n    let lic: BuildCommand = this.fileWithDescription(\"licenses\",'Product License');\n\n    if (lic) {\n      return lic.target.replace(/\\-/g, \" \");\n    } else {\n      return null;\n    }\n  }\n\n  public isCustomImage(): boolean {\n    return this.sourceImage.isCustom;\n  }\n\n  public fileForType(type: string, name?: string): BuildCommand {\n      return Builder._fileForSource(this.buildCommands, type, name, null);\n  }\n\n  public fileWithDescription(type: string, description: string): BuildCommand {\n      return Builder._fileForSource(this.buildCommands, type, null, description);\n  }\n\n  public removeFileForType(type: string, name?: string) {\n\n      return Builder._removeFileForType(this.buildCommands, type, name);\n  }\n\n  public static _fileForSource(buildCommands: BuildCommand[], type: string, name: string, description: string): BuildCommand {\n\n      let file: BuildCommand = null;\n\n      for (var i = 0; i  {\n         d.buildCommands.push(BuildCommand.make(b));\n       });\n     }\n\n     return d;\n  }\n}\n\nexport class Port {\n\n  public publicPort: string;\n  public serviceType: string;\n\n  constructor(public internal: string, public external: string, public description: string, public type?: string) {\n\n  }\n\n  public static makeArray(array: any[]): Port[] {\n\n    let ports: Port[] = [];\n\n    array.forEach((p) => {\n      let port: Port = new Port(p.internal, p.external, p.description, p.type);\n      port.publicPort = p.publicPort;\n      port.serviceType = p.serviceType;\n\n      ports.push(port);\n    });\n\n    return ports;\n  }\n}\n\nexport class Probe {\n\n  public path: string;\n  public port: string;\n  public initialDelaySeconds: number;\n  public periodSeconds: number;\n  public timeoutSeconds: number;\n\n  public static make(data: any): Probe {\n\n    let p = new Probe();\n    p.path = data.path;\n    p.port = data.port;\n    p.initialDelaySeconds = Number(data.initialDelaySeconds);\n    p.periodSeconds = Number(data.periodSeconds);\n    p.timeoutSeconds = Number(data.timeoutSeconds);\n\n    return p;\n  }\n}\n\nexport class Container {\n\n  public name: string;\n  public names: string[];\n  public active: string;\n  public type: string;\n  public description: string;\n  public hostname: string;\n  public secure: string;\n  public image: string;\n  public build: DockerBuild;\n  public ports: Port[];\n  public env: Arg[];\n  public volumes: Arg[];\n  public readinessProbe;\n  public livenessProbe;\n  public testStatus : TestStatus;\n  public adminUser: string;\n  public adminPassword: string;\n\n  // runtime only\n\n  public id: string;\n  public state: string;\n  public status: string;\n  public created: Date;\n\n  constructor() {\n\n    this.active = \"true\";\n    this.ports = [];\n    this.env = [];\n    this.volumes = [];\n  }\n\n  public copy() {\n    return Container.make(this);\n  }\n\n  public uniqueName(usesDedicatedRepo: boolean): string {\n\n    let repo: string = this.repository();\n\n    if (repo)\n      return repo + (usesDedicatedRepo ? \"/\" : \":\") + this.imageName();\n    else\n      return this.imageName();\n  }\n\n  public repository(): string {\n\n    if (this.image.indexOf(\":\") != -1) {\n\n      return this.image.substring(0, this.image.indexOf(\":\"));\n    } else {\n      return null;\n    }\n  }\n\n  public imageName(): string {\n\n    let name: string = this.image;\n\n    let idx: number = name.indexOf(\":\");\n\n    if (idx != -1) {\n\n      let lside = name.substring(0, idx);\n      let rside = name.substring(idx+1);\n\n      if (DockerImage.isVersionNumber(rside)) {\n\n        // name is on left side\n\n         if (this.image.lastIndexOf(\"/\") != -1) {\n          let idx: number = this.image.lastIndexOf(\"/\");\n          let rdx: number = this.image.indexOf(\":\");\n\n          name = this.image.substring(idx+1, rdx);\n        }\n      } else {\n\n        // name and perhaps version is in right side\n\n        name = rside;\n\n        if (name.indexOf(\"-\") != -1) {\n\n          let idx: number = name.lastIndexOf(\"-\");\n          let b4: string = name.substring(0, idx);\n          let af: string = name.substring(idx+1, name.length);\n\n          if (DockerImage.isVersionNumber(af)) {\n            name = b4;\n          }\n        }\n      }\n    }\n\n    return name;\n  }\n\n  public preferredImageVersion(): string {\n\n    if (this.image && this.image.indexOf(\":\")) {\n\n      let version: string = this.image.substring(this.image.indexOf(\":\")+1, this.image.length);\n\n      if (version.indexOf(\"-\") != -1) {\n        let idx: number = version.lastIndexOf(\"-\");\n        version = version.substring(idx+1, version.length);\n      }\n\n      // no versioning, only a name\n\n      if (!DockerImage.isVersionNumber(version))\n          version = \"latest\";\n\n      return version;\n    } else {\n\n      return \"latest\";\n    }\n  }\n\n  public static make(data: any): Container {\n\n    let c: Container = new Container();\n    c.names = data.names;\n    if (data.names)\n      c.name = data.names[0];\n    else\n      c.name = data.name;\n\n    c.active = data.active;\n    c.description = data.description;\n    c.hostname = data.hostname;\n    c.secure  = data.secure;\n    c.image = data.image;\n    c.type = data.type;\n    c.adminUser = data.adminUser;\n    c.adminPassword = data.adminPassword;\n\n    if (data.build)\n      c.build = DockerBuild.make(data.build);\n\n    if (data.ports)\n      c.ports = Port.makeArray(data.ports);\n\n    if (data.env)\n      c.env = Arg.makeArray(data.env);\n\n    if (data.volumes)\n      c.volumes = Arg.makeArray(data.volumes);\n\n    if (data.readinessProbe)\n      c.readinessProbe = Probe.make(data.readinessProbe);\n\n    if (data.livenessProbe)\n      c.livenessProbe = Probe.make(data.livenessProbe);\n\n    return c;\n  }\n\n  public environmentVariable(id: string): Arg {\n\n    var arg: Arg = null;\n\n    for (var i = 0; i  {\n          s.tests.push(Test.make(t));\n        });\n    }\n\n    return s;\n  }\n\n  public isActive(): boolean {\n\n    return (this.apiDeployType != \"none\" && this.apiDeployType != null) || this.stop == \"true\" || (this.apiMaturity != \"none\" &&  this.apiMaturity != null) ||\n                  (this.dockerAction != \"none\"  && this.dockerAction != null) || this.dockerTag != null || this.stop != null;\n  }\n\n  public summary(): string {\n\n      var status: string = null;\n\n      if (this.apiDeployType == \"deploy\")\n          status = \"Deploy API's \";\n      else if (this.apiDeployType == \"promote\")\n        status = \"Promote API's to \" + this.apiStage;\n\n      if (this.runTests == \"true\") {\n\n        if (status != null)\n          status = status + \", run tests\";\n        else\n          status = \"Run tests\";\n      }\n\n      if (this.apiMaturity) {\n\n        if (status != null)\n            status = status + \", and set maturity to \" + this.apiMaturity;\n        else\n          status = \"Set maturity to \" + this.apiMaturity;\n      }\n\n      if (this.dockerTag) {\n\n        if (status != null)\n          status = status + \", then tag image\";\n        else\n          status = \"Tag image \";\n      }\n\n      if (this.dockerAction) {\n        if (status != null)\n          status = status + \", \" + this.dockerAction;\n        else\n          status = this.dockerAction;\n\n        status = status + \" image\";\n      }\n\n      if (this.stop == \"true\") {\n        if (status != null)\n            status = status + \" before stopping\";\n        else\n            status = \"stop containers\";\n      }\n\n      if (this.pipelineAction) {\n\n        if (status != null)\n            status = status + \", then \" + this.pipelineAction + \" pipeline\";\n        else\n            status = \"and \" + this.pipelineAction + \" pipeline execution\";\n      }\n\n      return status;\n    }\n}\n\nexport class Stage {\n\n    public id: string;\n    public name: string;\n    public containerHost: string;\n    public useKubernetes: string;\n    public buildOnStart: string;\n    public deployments: Deployment[];\n    public onStart: Action;\n    public onFail: Action;\n    public onSuccess: Action;\n\n    constructor() {\n      this.deployments = [];\n      this.useKubernetes = \"false\";\n      this.buildOnStart = \"false\";\n      this.onStart = new Action();\n      this.onSuccess = new Action();\n      this.onFail = new Action();\n    }\n\n    public copy(): Stage {\n\n      let c = Stage.make(this);\n\n      c.id = this.id + \" copy\";\n      c.name = this.name + \" copy\";\n\n      return c;\n    }\n\n    public static make(data: any): Stage {\n\n      let s: Stage = new Stage();\n\n      s.name = data.name;\n      s.id = s.name;\n      s.containerHost = data.containerHost;\n      s.useKubernetes = data.useKubernetes;\n      s.buildOnStart = data.buildOnStart;\n\n      if (data.deployments) {\n        data.deployments.forEach((c) => {\n          s.deployments.push(Deployment.make(c));\n        });\n      }\n\n      if (data.onStart) {\n        s.onStart = Action.make(data.onStart);\n      }\n\n      if (data.onSuccess) {\n        s.onSuccess = Action.make(data.onSuccess);\n      }\n\n      if (data.onFail) {\n        s.onFail = Action.make(data.onFail);\n      }\n\n      return s;\n    }\n}\n\nexport class Deployment {\n\n  public name: string;\n  public hostname: string;\n  public appName: string;\n  public apis: APIDefinition[];\n  public containers: Container[];\n  public replicas: string;\n  public serviceType: string;\n  public restartPolicy: string;\n  public requiresMonitoring: string;\n  public dependsOn: string;\n\n  constructor() {\n\n    this.containers = [];\n    this.apis = [];\n  }\n\n  public copy() {\n    return Deployment.make(this);\n  }\n\n  public static make(data: any): Deployment {\n\n    let s: Deployment = new Deployment();\n    s.name = data.name;\n    s.hostname = data.hostname;\n    s.replicas = data.replicas;\n    s.appName = data.appName;\n    s.serviceType = data.serviceType;\n    s.restartPolicy = data.restartPolicy;\n    s.requiresMonitoring = data.requiresMonitoring;\n    s.dependsOn = data.dependsOn;\n\n    if (data.apis) {\n       data.apis.forEach((a) => {\n         s.apis.push(APIDefinition.make(a));\n       });\n    }\n\n    if (data.containers) {\n       data.containers.forEach((c) => {\n         s.containers.push(Container.make(c));\n       });\n    }\n\n    return s;\n  }\n\n  public containerForType(type: string): Container {\n\n    let found: Container = null;\n\n    this.containers.forEach((c) => {\n\n      if (c.type == type) {\n        found = c;\n      }\n    });\n\n    return found;\n  }\n\n  public removeContainer(c: Container) {\n\n    var found : number = -1;\n\n    for (var i = 0; i  {\n         p.builds.push(Builder.make(i));\n       });\n    }\n\n    if (data.deployments) {\n      p.deployments = [];\n       data.deployments.forEach((i) => {\n         p.deployments.push(Deployment.make(i));\n       });\n    }\n\n    return p;\n  }\n\n  public serviceFor(id: string): Deployment {\n\n      let found: Deployment = null;\n\n      for (var z = 0; z  {\n         p.stages.push(Stage.make(s));\n       });\n    }\n\n    return p;\n  }\n}\n\nfunction stringifyReplacer(key, value) {\n  const originalObject = this[key];\n  if(originalObject instanceof Map) {\n    return {\n      dataType: 'Map',\n      value: Array.from(originalObject.entries()), // or with spread: value: [...originalObject]\n    };\n  } else {\n    return value;\n  }\n}\n\nfunction parserReviver(key, value) {\n  if(typeof value === 'object' && value !== null) {\n    if (value.dataType === 'Map') {\n      return new Map(value.value);\n    }\n  }\n  return value;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Probe.html":{"url":"classes/Probe.html","title":"class - Probe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Probe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/project.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                initialDelaySeconds\n                            \n                            \n                                    Public\n                                path\n                            \n                            \n                                    Public\n                                periodSeconds\n                            \n                            \n                                    Public\n                                port\n                            \n                            \n                                    Public\n                                timeoutSeconds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                make\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            initialDelaySeconds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:552\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:550\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            periodSeconds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:553\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            port\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:551\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            timeoutSeconds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:554\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            make\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    make(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/project.ts:556\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Probe\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { APIDefinition }                        from '../models/wm-package-info'\nimport { Source }                               from '../models/git-source';\nimport { DockerImage, TestStatus }              from '../models/docker-image';\n\nexport class DeploymentSet {\n\n  public id: string;\n  public name: string;\n  public source: Source;\n  public active: string;\n  public apis: APIDefinition[];\n\n  public constructor() {\n      this.apis = [];\n      this.source = new Source();\n  }\n\n  public static make(data: any): DeploymentSet {\n\n      let p: DeploymentSet = new DeploymentSet();\n      p.id = data.name;\n      p.name = data.name;\n\n      if (data.source)\n       p.source = Source.make(data.source);\n\n      p.apis = [];\n\n      if (data.apis) {\n\n        data.apis.forEach((a) => {\n          p.apis.push(APIDefinition.make(a));\n        });\n      }\n\n      return p;\n  }\n}\n\nexport enum DisplayType {\n  hidden = \"hidden\",\n  readonly = \"readonly\",\n  editable = \"editable\",\n  password = \"password\",\n  file = \"file\",\n  dropdown = \"dropdown\",\n  yesno = \"yesno\"\n}\n\nexport class BuildCommand {\n\n  public commandType: string;\n  public buildTarget: string;\n  public fileType: string;\n  public source: string;\n  public target: string;\n  public description: string = \"\";\n  public display: DisplayType = DisplayType.hidden;\n  public required: boolean = true;\n  public conditions: string[];\n\n  public static make(d: any): BuildCommand {\n\n    let f: BuildCommand = new BuildCommand();\n    f.commandType = d.commandType;\n    f.buildTarget = d.buildTarget;\n    f.fileType = d.fileType;\n    f.source = d.source;\n    f.target = d.target;\n    f.description = d.description;\n    f.conditions = d.conditions;\n\n    if (d.display == \"editable\")\n      f.display = DisplayType.editable;\n    else if (d.display == \"readonly\")\n      f.display = DisplayType.readonly;\n    else if (d.display == \"file\")\n      f.display = DisplayType.file;\n    else\n      f.display = DisplayType.hidden;\n\n    f.required = false;\n    return f;\n  }\n\n  copy() {\n    return BuildCommand.make(this);\n  }\n\n  public equals(b: BuildCommand): boolean {\n\n    return (b.source && b.source == this.source) || (!b.source && b.target == this.target);\n  }\n\n  public matchConditions(args: Map): boolean {\n\n    return ArgDisplayType._matchConditions(this.conditions, args);\n  }\n}\n\nexport interface BuildParams {\n\n  name: string;\n  publicPort(): string;\n  setPublicPort(port: string);\n  assignedLicense(): string;\n  hostName: string;\n  entryPoint: string;\n  exitPoint: string;\n  healthCheck: string;\n  args: Map\n  buildCommands: BuildCommand[];\n\n  fileForType(type: string): BuildCommand;\n  isCustomImage(): boolean;\n}\n\nexport class ArgDisplayType {\n\n  public name: string;\n  public description: string;\n  public display: DisplayType = DisplayType.hidden;\n  public conditions: string[];\n  public choices: string[];\n  public required: boolean = true;\n\n  public constructor(name: string) {\n    this.name = name;\n    this.description = this.name;\n    this.conditions = [];\n    this.choices = [];\n  }\n\n  public copy(): ArgDisplayType {\n\n      let copy: ArgDisplayType = new ArgDisplayType(this.name);\n      copy.description = this.description;\n      copy.display = this.display;\n      copy.conditions = this.conditions;\n      copy.choices = this.choices;\n      copy.required = this.required;\n\n      return copy;\n  }\n\n  public static make(d: any): ArgDisplayType {\n\n    let a: ArgDisplayType = new ArgDisplayType(d.name);\n\n    if (d.display == \"editable\")\n      a.display = DisplayType.editable;\n    else if (d.display == \"readonly\")\n      a.display = DisplayType.readonly;\n    else if (d.display == \"file\")\n      a.display = DisplayType.file;\n    else if (d.display == \"password\")\n      a.display = DisplayType.password;\n    else if (d.display == \"yesno\")\n      a.display = DisplayType.yesno;\n    else if (d.display == \"dropdown\")\n      a.display = DisplayType.dropdown;\n    else\n      a.display = DisplayType.hidden;\n\n    if (d.required != null)\n      a.required = d.required;\n\n    a.description = d.description || d.name;\n\n    if (d.conditions)\n      a.conditions = d.conditions;\n\n    if (a.choices)\n      a.choices = d.choices;\n\n    return a;\n  }\n\n  public matchConditions(args: Map): boolean {\n\n      return ArgDisplayType._matchConditions(this.conditions, args);\n  }\n\n  public static _matchConditions(conditions: string[], args: Map): boolean {\n\n      if (conditions && conditions.length > 0) {\n\n        let matched: boolean = false;\n\n        for (let i = 0; i  {\n      args.push(new Arg(a.source, a.target, a.description));\n    });\n\n    return args;\n  }\n\n}\n\nexport class Installer implements BuildParams {\n\n    public name: string;\n    public sourceImageTag: string;\n    public isNew: string = \"true\";\n    public targetImage: DockerImage;\n    public productType: string;\n    public licenseFile: string;\n    public primaryPort: string;\n    public hostName: string;\n    public wmInstallerImage: string;\n    public includeUpdate: string = \"false\";\n    public buildCommands: BuildCommand[];\n    public args: Map;\n    public isSAGProduct: string = \"true\";\n\n    public entryPoint: string;\n    public exitPoint: string;\n    public healthCheck: string;\n\n    public constructor() {\n\n    this.sourceImageTag = \"centos:latest\";\n    this.targetImage = new DockerImage();\n    this.buildCommands = [];\n    this.args = new Map();\n  }\n\n  public copy(): Installer {\n\n    return Installer.make(this);\n  }\n\n  public static parse(data: string): Installer {\n\n    return this.make(JSON.parse(data, parserReviver).install);\n  }\n\n  public isCustomImage(): boolean {\n    return true;\n  }\n\n  public static make(data: any): Installer {\n\n    let i: Installer = new Installer();\n    i.name = data.name;\n    i.isSAGProduct = data.isSAGProduct;\n    i.args = data.args;\n    i.productType = data.productType;\n    i.wmInstallerImage = data.wmInstallerImage;\n    i.sourceImageTag = data.sourceImageTag;\n\n    if (data.targetImage)\n      i.targetImage = DockerImage.make(data.targetImage);\n\n    i.licenseFile = data.licenseFile;\n    i.primaryPort = data.primaryPort;\n    i.isNew = data.isNew;\n    i.includeUpdate = data.includeUpdate;\n    i.hostName = data.hostName;\n    i.entryPoint = data.entryPoint;\n    i.exitPoint = data.exitPoint;\n    i.healthCheck = data.healthCheck;\n    i.healthCheck = data.healthCheck;\n\n    if (!i.args)\n       i.args = new Map();\n\n    if (data.buildCommands) {\n      data.buildCommands.forEach((f) => {\n        i.buildCommands.push(BuildCommand.make(f));\n      });\n    }\n\n    return i;\n  }\n\n  public publicPort(): string {\n    return this.primaryPort;\n  }\n\n  public setPublicPort(port: string) {\n    this.primaryPort = port;\n  }\n\n  public assignedLicense(): string {\n\n    return this.licenseFile;\n  }\n\n  public fileForType(type: string, name?: string): BuildCommand {\n\n      return Builder._fileForSource(this.buildCommands, type, name, null);\n  }\n\n  public fileWithDescription(type: string, description: string): BuildCommand {\n      return Builder._fileForSource(this.buildCommands, type, null, description);\n  }\n\n  public removeFileForType(type: string, name?: string) {\n\n      return Builder._removeFileForType(this.buildCommands, type, name);\n  }\n\n  public toString(): string {\n    return JSON.stringify(this, stringifyReplacer);\n  }\n}\n\nexport class Builder implements BuildParams {\n\n  public name: string;\n  public deploymentType: string;\n  public deployments: DeploymentSet[];\n\n  public sourceImage: DockerImage;\n  public targetImage: DockerImage;\n  public version: string;\n  public testStatus: string;\n  public buildCommands: BuildCommand[];\n  public hasTests: string;\n  public buildUser: string;\n  public entryUser: string;\n  public entryPoint: string;\n  public exitPoint: string;\n  public healthCheck: string;\n  public args: Map;\n\n  public hostName: string; // not used!!\n\n  public constructor() {\n\n    this.sourceImage = new DockerImage();\n    this.targetImage = new DockerImage();\n    this.buildCommands = [];\n\n    this.args = new Map();\n  }\n\n  public hyphenatedName(): string {\n\n    return this.name.toLowerCase().replace(/\\s/g, \"-\");\n  }\n\n  public static make(data: any): Builder {\n\n    let b: Builder = new Builder();\n    b.name = data.name;\n    b.deploymentType = data.type;\n\n    b.deployments = [];\n\n    if (data.deployments) {\n      data.deployments.forEach((d) => {\n            b.deployments.push(DeploymentSet.make(d));\n      });\n    }\n\n    if (data.buildCommands) {\n      data.buildCommands.forEach((f) => {\n            b.buildCommands.push(BuildCommand.make(f));\n      });\n    }\n\n    b.sourceImage = DockerImage.make(data.sourceImage);\n    b.targetImage = DockerImage.make(data.targetImage);\n    b.version = data.version;\n    b.testStatus = data.testStatus;\n    b.buildUser = data.buildUser;\n    b.entryUser = data.entryUser;\n    b.entryPoint = data.entryPoint;\n    b.exitPoint = data.exitPoint;\n    b.healthCheck = data.healthCheck;\n\n    if (data.hasTests && data.hasTests == 'true')\n      b.hasTests = \"true\";\n\n    return b;\n  }\n\n  public publicPort(): string {\n    return this.sourceImage.primaryPort;\n  }\n\n  public setPublicPort(port: string) {\n    this.sourceImage.primaryPort = port;\n  }\n\n  public assignedLicense(): string {\n\n    let lic: BuildCommand = this.fileWithDescription(\"licenses\",'Product License');\n\n    if (lic) {\n      return lic.target.replace(/\\-/g, \" \");\n    } else {\n      return null;\n    }\n  }\n\n  public isCustomImage(): boolean {\n    return this.sourceImage.isCustom;\n  }\n\n  public fileForType(type: string, name?: string): BuildCommand {\n      return Builder._fileForSource(this.buildCommands, type, name, null);\n  }\n\n  public fileWithDescription(type: string, description: string): BuildCommand {\n      return Builder._fileForSource(this.buildCommands, type, null, description);\n  }\n\n  public removeFileForType(type: string, name?: string) {\n\n      return Builder._removeFileForType(this.buildCommands, type, name);\n  }\n\n  public static _fileForSource(buildCommands: BuildCommand[], type: string, name: string, description: string): BuildCommand {\n\n      let file: BuildCommand = null;\n\n      for (var i = 0; i  {\n         d.buildCommands.push(BuildCommand.make(b));\n       });\n     }\n\n     return d;\n  }\n}\n\nexport class Port {\n\n  public publicPort: string;\n  public serviceType: string;\n\n  constructor(public internal: string, public external: string, public description: string, public type?: string) {\n\n  }\n\n  public static makeArray(array: any[]): Port[] {\n\n    let ports: Port[] = [];\n\n    array.forEach((p) => {\n      let port: Port = new Port(p.internal, p.external, p.description, p.type);\n      port.publicPort = p.publicPort;\n      port.serviceType = p.serviceType;\n\n      ports.push(port);\n    });\n\n    return ports;\n  }\n}\n\nexport class Probe {\n\n  public path: string;\n  public port: string;\n  public initialDelaySeconds: number;\n  public periodSeconds: number;\n  public timeoutSeconds: number;\n\n  public static make(data: any): Probe {\n\n    let p = new Probe();\n    p.path = data.path;\n    p.port = data.port;\n    p.initialDelaySeconds = Number(data.initialDelaySeconds);\n    p.periodSeconds = Number(data.periodSeconds);\n    p.timeoutSeconds = Number(data.timeoutSeconds);\n\n    return p;\n  }\n}\n\nexport class Container {\n\n  public name: string;\n  public names: string[];\n  public active: string;\n  public type: string;\n  public description: string;\n  public hostname: string;\n  public secure: string;\n  public image: string;\n  public build: DockerBuild;\n  public ports: Port[];\n  public env: Arg[];\n  public volumes: Arg[];\n  public readinessProbe;\n  public livenessProbe;\n  public testStatus : TestStatus;\n  public adminUser: string;\n  public adminPassword: string;\n\n  // runtime only\n\n  public id: string;\n  public state: string;\n  public status: string;\n  public created: Date;\n\n  constructor() {\n\n    this.active = \"true\";\n    this.ports = [];\n    this.env = [];\n    this.volumes = [];\n  }\n\n  public copy() {\n    return Container.make(this);\n  }\n\n  public uniqueName(usesDedicatedRepo: boolean): string {\n\n    let repo: string = this.repository();\n\n    if (repo)\n      return repo + (usesDedicatedRepo ? \"/\" : \":\") + this.imageName();\n    else\n      return this.imageName();\n  }\n\n  public repository(): string {\n\n    if (this.image.indexOf(\":\") != -1) {\n\n      return this.image.substring(0, this.image.indexOf(\":\"));\n    } else {\n      return null;\n    }\n  }\n\n  public imageName(): string {\n\n    let name: string = this.image;\n\n    let idx: number = name.indexOf(\":\");\n\n    if (idx != -1) {\n\n      let lside = name.substring(0, idx);\n      let rside = name.substring(idx+1);\n\n      if (DockerImage.isVersionNumber(rside)) {\n\n        // name is on left side\n\n         if (this.image.lastIndexOf(\"/\") != -1) {\n          let idx: number = this.image.lastIndexOf(\"/\");\n          let rdx: number = this.image.indexOf(\":\");\n\n          name = this.image.substring(idx+1, rdx);\n        }\n      } else {\n\n        // name and perhaps version is in right side\n\n        name = rside;\n\n        if (name.indexOf(\"-\") != -1) {\n\n          let idx: number = name.lastIndexOf(\"-\");\n          let b4: string = name.substring(0, idx);\n          let af: string = name.substring(idx+1, name.length);\n\n          if (DockerImage.isVersionNumber(af)) {\n            name = b4;\n          }\n        }\n      }\n    }\n\n    return name;\n  }\n\n  public preferredImageVersion(): string {\n\n    if (this.image && this.image.indexOf(\":\")) {\n\n      let version: string = this.image.substring(this.image.indexOf(\":\")+1, this.image.length);\n\n      if (version.indexOf(\"-\") != -1) {\n        let idx: number = version.lastIndexOf(\"-\");\n        version = version.substring(idx+1, version.length);\n      }\n\n      // no versioning, only a name\n\n      if (!DockerImage.isVersionNumber(version))\n          version = \"latest\";\n\n      return version;\n    } else {\n\n      return \"latest\";\n    }\n  }\n\n  public static make(data: any): Container {\n\n    let c: Container = new Container();\n    c.names = data.names;\n    if (data.names)\n      c.name = data.names[0];\n    else\n      c.name = data.name;\n\n    c.active = data.active;\n    c.description = data.description;\n    c.hostname = data.hostname;\n    c.secure  = data.secure;\n    c.image = data.image;\n    c.type = data.type;\n    c.adminUser = data.adminUser;\n    c.adminPassword = data.adminPassword;\n\n    if (data.build)\n      c.build = DockerBuild.make(data.build);\n\n    if (data.ports)\n      c.ports = Port.makeArray(data.ports);\n\n    if (data.env)\n      c.env = Arg.makeArray(data.env);\n\n    if (data.volumes)\n      c.volumes = Arg.makeArray(data.volumes);\n\n    if (data.readinessProbe)\n      c.readinessProbe = Probe.make(data.readinessProbe);\n\n    if (data.livenessProbe)\n      c.livenessProbe = Probe.make(data.livenessProbe);\n\n    return c;\n  }\n\n  public environmentVariable(id: string): Arg {\n\n    var arg: Arg = null;\n\n    for (var i = 0; i  {\n          s.tests.push(Test.make(t));\n        });\n    }\n\n    return s;\n  }\n\n  public isActive(): boolean {\n\n    return (this.apiDeployType != \"none\" && this.apiDeployType != null) || this.stop == \"true\" || (this.apiMaturity != \"none\" &&  this.apiMaturity != null) ||\n                  (this.dockerAction != \"none\"  && this.dockerAction != null) || this.dockerTag != null || this.stop != null;\n  }\n\n  public summary(): string {\n\n      var status: string = null;\n\n      if (this.apiDeployType == \"deploy\")\n          status = \"Deploy API's \";\n      else if (this.apiDeployType == \"promote\")\n        status = \"Promote API's to \" + this.apiStage;\n\n      if (this.runTests == \"true\") {\n\n        if (status != null)\n          status = status + \", run tests\";\n        else\n          status = \"Run tests\";\n      }\n\n      if (this.apiMaturity) {\n\n        if (status != null)\n            status = status + \", and set maturity to \" + this.apiMaturity;\n        else\n          status = \"Set maturity to \" + this.apiMaturity;\n      }\n\n      if (this.dockerTag) {\n\n        if (status != null)\n          status = status + \", then tag image\";\n        else\n          status = \"Tag image \";\n      }\n\n      if (this.dockerAction) {\n        if (status != null)\n          status = status + \", \" + this.dockerAction;\n        else\n          status = this.dockerAction;\n\n        status = status + \" image\";\n      }\n\n      if (this.stop == \"true\") {\n        if (status != null)\n            status = status + \" before stopping\";\n        else\n            status = \"stop containers\";\n      }\n\n      if (this.pipelineAction) {\n\n        if (status != null)\n            status = status + \", then \" + this.pipelineAction + \" pipeline\";\n        else\n            status = \"and \" + this.pipelineAction + \" pipeline execution\";\n      }\n\n      return status;\n    }\n}\n\nexport class Stage {\n\n    public id: string;\n    public name: string;\n    public containerHost: string;\n    public useKubernetes: string;\n    public buildOnStart: string;\n    public deployments: Deployment[];\n    public onStart: Action;\n    public onFail: Action;\n    public onSuccess: Action;\n\n    constructor() {\n      this.deployments = [];\n      this.useKubernetes = \"false\";\n      this.buildOnStart = \"false\";\n      this.onStart = new Action();\n      this.onSuccess = new Action();\n      this.onFail = new Action();\n    }\n\n    public copy(): Stage {\n\n      let c = Stage.make(this);\n\n      c.id = this.id + \" copy\";\n      c.name = this.name + \" copy\";\n\n      return c;\n    }\n\n    public static make(data: any): Stage {\n\n      let s: Stage = new Stage();\n\n      s.name = data.name;\n      s.id = s.name;\n      s.containerHost = data.containerHost;\n      s.useKubernetes = data.useKubernetes;\n      s.buildOnStart = data.buildOnStart;\n\n      if (data.deployments) {\n        data.deployments.forEach((c) => {\n          s.deployments.push(Deployment.make(c));\n        });\n      }\n\n      if (data.onStart) {\n        s.onStart = Action.make(data.onStart);\n      }\n\n      if (data.onSuccess) {\n        s.onSuccess = Action.make(data.onSuccess);\n      }\n\n      if (data.onFail) {\n        s.onFail = Action.make(data.onFail);\n      }\n\n      return s;\n    }\n}\n\nexport class Deployment {\n\n  public name: string;\n  public hostname: string;\n  public appName: string;\n  public apis: APIDefinition[];\n  public containers: Container[];\n  public replicas: string;\n  public serviceType: string;\n  public restartPolicy: string;\n  public requiresMonitoring: string;\n  public dependsOn: string;\n\n  constructor() {\n\n    this.containers = [];\n    this.apis = [];\n  }\n\n  public copy() {\n    return Deployment.make(this);\n  }\n\n  public static make(data: any): Deployment {\n\n    let s: Deployment = new Deployment();\n    s.name = data.name;\n    s.hostname = data.hostname;\n    s.replicas = data.replicas;\n    s.appName = data.appName;\n    s.serviceType = data.serviceType;\n    s.restartPolicy = data.restartPolicy;\n    s.requiresMonitoring = data.requiresMonitoring;\n    s.dependsOn = data.dependsOn;\n\n    if (data.apis) {\n       data.apis.forEach((a) => {\n         s.apis.push(APIDefinition.make(a));\n       });\n    }\n\n    if (data.containers) {\n       data.containers.forEach((c) => {\n         s.containers.push(Container.make(c));\n       });\n    }\n\n    return s;\n  }\n\n  public containerForType(type: string): Container {\n\n    let found: Container = null;\n\n    this.containers.forEach((c) => {\n\n      if (c.type == type) {\n        found = c;\n      }\n    });\n\n    return found;\n  }\n\n  public removeContainer(c: Container) {\n\n    var found : number = -1;\n\n    for (var i = 0; i  {\n         p.builds.push(Builder.make(i));\n       });\n    }\n\n    if (data.deployments) {\n      p.deployments = [];\n       data.deployments.forEach((i) => {\n         p.deployments.push(Deployment.make(i));\n       });\n    }\n\n    return p;\n  }\n\n  public serviceFor(id: string): Deployment {\n\n      let found: Deployment = null;\n\n      for (var z = 0; z  {\n         p.stages.push(Stage.make(s));\n       });\n    }\n\n    return p;\n  }\n}\n\nfunction stringifyReplacer(key, value) {\n  const originalObject = this[key];\n  if(originalObject instanceof Map) {\n    return {\n      dataType: 'Map',\n      value: Array.from(originalObject.entries()), // or with spread: value: [...originalObject]\n    };\n  } else {\n    return value;\n  }\n}\n\nfunction parserReviver(key, value) {\n  if(typeof value === 'object' && value !== null) {\n    if (value.dataType === 'Map') {\n      return new Map(value.value);\n    }\n  }\n  return value;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Project.html":{"url":"classes/Project.html","title":"class - Project","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Project\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/project.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                run\n                            \n                            \n                                    Public\n                                stages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                make\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/models/project.ts:1224\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:1222\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            run\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RunSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:1223\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Stage[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:1224\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            make\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    make(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/project.ts:1234\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Project\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { APIDefinition }                        from '../models/wm-package-info'\nimport { Source }                               from '../models/git-source';\nimport { DockerImage, TestStatus }              from '../models/docker-image';\n\nexport class DeploymentSet {\n\n  public id: string;\n  public name: string;\n  public source: Source;\n  public active: string;\n  public apis: APIDefinition[];\n\n  public constructor() {\n      this.apis = [];\n      this.source = new Source();\n  }\n\n  public static make(data: any): DeploymentSet {\n\n      let p: DeploymentSet = new DeploymentSet();\n      p.id = data.name;\n      p.name = data.name;\n\n      if (data.source)\n       p.source = Source.make(data.source);\n\n      p.apis = [];\n\n      if (data.apis) {\n\n        data.apis.forEach((a) => {\n          p.apis.push(APIDefinition.make(a));\n        });\n      }\n\n      return p;\n  }\n}\n\nexport enum DisplayType {\n  hidden = \"hidden\",\n  readonly = \"readonly\",\n  editable = \"editable\",\n  password = \"password\",\n  file = \"file\",\n  dropdown = \"dropdown\",\n  yesno = \"yesno\"\n}\n\nexport class BuildCommand {\n\n  public commandType: string;\n  public buildTarget: string;\n  public fileType: string;\n  public source: string;\n  public target: string;\n  public description: string = \"\";\n  public display: DisplayType = DisplayType.hidden;\n  public required: boolean = true;\n  public conditions: string[];\n\n  public static make(d: any): BuildCommand {\n\n    let f: BuildCommand = new BuildCommand();\n    f.commandType = d.commandType;\n    f.buildTarget = d.buildTarget;\n    f.fileType = d.fileType;\n    f.source = d.source;\n    f.target = d.target;\n    f.description = d.description;\n    f.conditions = d.conditions;\n\n    if (d.display == \"editable\")\n      f.display = DisplayType.editable;\n    else if (d.display == \"readonly\")\n      f.display = DisplayType.readonly;\n    else if (d.display == \"file\")\n      f.display = DisplayType.file;\n    else\n      f.display = DisplayType.hidden;\n\n    f.required = false;\n    return f;\n  }\n\n  copy() {\n    return BuildCommand.make(this);\n  }\n\n  public equals(b: BuildCommand): boolean {\n\n    return (b.source && b.source == this.source) || (!b.source && b.target == this.target);\n  }\n\n  public matchConditions(args: Map): boolean {\n\n    return ArgDisplayType._matchConditions(this.conditions, args);\n  }\n}\n\nexport interface BuildParams {\n\n  name: string;\n  publicPort(): string;\n  setPublicPort(port: string);\n  assignedLicense(): string;\n  hostName: string;\n  entryPoint: string;\n  exitPoint: string;\n  healthCheck: string;\n  args: Map\n  buildCommands: BuildCommand[];\n\n  fileForType(type: string): BuildCommand;\n  isCustomImage(): boolean;\n}\n\nexport class ArgDisplayType {\n\n  public name: string;\n  public description: string;\n  public display: DisplayType = DisplayType.hidden;\n  public conditions: string[];\n  public choices: string[];\n  public required: boolean = true;\n\n  public constructor(name: string) {\n    this.name = name;\n    this.description = this.name;\n    this.conditions = [];\n    this.choices = [];\n  }\n\n  public copy(): ArgDisplayType {\n\n      let copy: ArgDisplayType = new ArgDisplayType(this.name);\n      copy.description = this.description;\n      copy.display = this.display;\n      copy.conditions = this.conditions;\n      copy.choices = this.choices;\n      copy.required = this.required;\n\n      return copy;\n  }\n\n  public static make(d: any): ArgDisplayType {\n\n    let a: ArgDisplayType = new ArgDisplayType(d.name);\n\n    if (d.display == \"editable\")\n      a.display = DisplayType.editable;\n    else if (d.display == \"readonly\")\n      a.display = DisplayType.readonly;\n    else if (d.display == \"file\")\n      a.display = DisplayType.file;\n    else if (d.display == \"password\")\n      a.display = DisplayType.password;\n    else if (d.display == \"yesno\")\n      a.display = DisplayType.yesno;\n    else if (d.display == \"dropdown\")\n      a.display = DisplayType.dropdown;\n    else\n      a.display = DisplayType.hidden;\n\n    if (d.required != null)\n      a.required = d.required;\n\n    a.description = d.description || d.name;\n\n    if (d.conditions)\n      a.conditions = d.conditions;\n\n    if (a.choices)\n      a.choices = d.choices;\n\n    return a;\n  }\n\n  public matchConditions(args: Map): boolean {\n\n      return ArgDisplayType._matchConditions(this.conditions, args);\n  }\n\n  public static _matchConditions(conditions: string[], args: Map): boolean {\n\n      if (conditions && conditions.length > 0) {\n\n        let matched: boolean = false;\n\n        for (let i = 0; i  {\n      args.push(new Arg(a.source, a.target, a.description));\n    });\n\n    return args;\n  }\n\n}\n\nexport class Installer implements BuildParams {\n\n    public name: string;\n    public sourceImageTag: string;\n    public isNew: string = \"true\";\n    public targetImage: DockerImage;\n    public productType: string;\n    public licenseFile: string;\n    public primaryPort: string;\n    public hostName: string;\n    public wmInstallerImage: string;\n    public includeUpdate: string = \"false\";\n    public buildCommands: BuildCommand[];\n    public args: Map;\n    public isSAGProduct: string = \"true\";\n\n    public entryPoint: string;\n    public exitPoint: string;\n    public healthCheck: string;\n\n    public constructor() {\n\n    this.sourceImageTag = \"centos:latest\";\n    this.targetImage = new DockerImage();\n    this.buildCommands = [];\n    this.args = new Map();\n  }\n\n  public copy(): Installer {\n\n    return Installer.make(this);\n  }\n\n  public static parse(data: string): Installer {\n\n    return this.make(JSON.parse(data, parserReviver).install);\n  }\n\n  public isCustomImage(): boolean {\n    return true;\n  }\n\n  public static make(data: any): Installer {\n\n    let i: Installer = new Installer();\n    i.name = data.name;\n    i.isSAGProduct = data.isSAGProduct;\n    i.args = data.args;\n    i.productType = data.productType;\n    i.wmInstallerImage = data.wmInstallerImage;\n    i.sourceImageTag = data.sourceImageTag;\n\n    if (data.targetImage)\n      i.targetImage = DockerImage.make(data.targetImage);\n\n    i.licenseFile = data.licenseFile;\n    i.primaryPort = data.primaryPort;\n    i.isNew = data.isNew;\n    i.includeUpdate = data.includeUpdate;\n    i.hostName = data.hostName;\n    i.entryPoint = data.entryPoint;\n    i.exitPoint = data.exitPoint;\n    i.healthCheck = data.healthCheck;\n    i.healthCheck = data.healthCheck;\n\n    if (!i.args)\n       i.args = new Map();\n\n    if (data.buildCommands) {\n      data.buildCommands.forEach((f) => {\n        i.buildCommands.push(BuildCommand.make(f));\n      });\n    }\n\n    return i;\n  }\n\n  public publicPort(): string {\n    return this.primaryPort;\n  }\n\n  public setPublicPort(port: string) {\n    this.primaryPort = port;\n  }\n\n  public assignedLicense(): string {\n\n    return this.licenseFile;\n  }\n\n  public fileForType(type: string, name?: string): BuildCommand {\n\n      return Builder._fileForSource(this.buildCommands, type, name, null);\n  }\n\n  public fileWithDescription(type: string, description: string): BuildCommand {\n      return Builder._fileForSource(this.buildCommands, type, null, description);\n  }\n\n  public removeFileForType(type: string, name?: string) {\n\n      return Builder._removeFileForType(this.buildCommands, type, name);\n  }\n\n  public toString(): string {\n    return JSON.stringify(this, stringifyReplacer);\n  }\n}\n\nexport class Builder implements BuildParams {\n\n  public name: string;\n  public deploymentType: string;\n  public deployments: DeploymentSet[];\n\n  public sourceImage: DockerImage;\n  public targetImage: DockerImage;\n  public version: string;\n  public testStatus: string;\n  public buildCommands: BuildCommand[];\n  public hasTests: string;\n  public buildUser: string;\n  public entryUser: string;\n  public entryPoint: string;\n  public exitPoint: string;\n  public healthCheck: string;\n  public args: Map;\n\n  public hostName: string; // not used!!\n\n  public constructor() {\n\n    this.sourceImage = new DockerImage();\n    this.targetImage = new DockerImage();\n    this.buildCommands = [];\n\n    this.args = new Map();\n  }\n\n  public hyphenatedName(): string {\n\n    return this.name.toLowerCase().replace(/\\s/g, \"-\");\n  }\n\n  public static make(data: any): Builder {\n\n    let b: Builder = new Builder();\n    b.name = data.name;\n    b.deploymentType = data.type;\n\n    b.deployments = [];\n\n    if (data.deployments) {\n      data.deployments.forEach((d) => {\n            b.deployments.push(DeploymentSet.make(d));\n      });\n    }\n\n    if (data.buildCommands) {\n      data.buildCommands.forEach((f) => {\n            b.buildCommands.push(BuildCommand.make(f));\n      });\n    }\n\n    b.sourceImage = DockerImage.make(data.sourceImage);\n    b.targetImage = DockerImage.make(data.targetImage);\n    b.version = data.version;\n    b.testStatus = data.testStatus;\n    b.buildUser = data.buildUser;\n    b.entryUser = data.entryUser;\n    b.entryPoint = data.entryPoint;\n    b.exitPoint = data.exitPoint;\n    b.healthCheck = data.healthCheck;\n\n    if (data.hasTests && data.hasTests == 'true')\n      b.hasTests = \"true\";\n\n    return b;\n  }\n\n  public publicPort(): string {\n    return this.sourceImage.primaryPort;\n  }\n\n  public setPublicPort(port: string) {\n    this.sourceImage.primaryPort = port;\n  }\n\n  public assignedLicense(): string {\n\n    let lic: BuildCommand = this.fileWithDescription(\"licenses\",'Product License');\n\n    if (lic) {\n      return lic.target.replace(/\\-/g, \" \");\n    } else {\n      return null;\n    }\n  }\n\n  public isCustomImage(): boolean {\n    return this.sourceImage.isCustom;\n  }\n\n  public fileForType(type: string, name?: string): BuildCommand {\n      return Builder._fileForSource(this.buildCommands, type, name, null);\n  }\n\n  public fileWithDescription(type: string, description: string): BuildCommand {\n      return Builder._fileForSource(this.buildCommands, type, null, description);\n  }\n\n  public removeFileForType(type: string, name?: string) {\n\n      return Builder._removeFileForType(this.buildCommands, type, name);\n  }\n\n  public static _fileForSource(buildCommands: BuildCommand[], type: string, name: string, description: string): BuildCommand {\n\n      let file: BuildCommand = null;\n\n      for (var i = 0; i  {\n         d.buildCommands.push(BuildCommand.make(b));\n       });\n     }\n\n     return d;\n  }\n}\n\nexport class Port {\n\n  public publicPort: string;\n  public serviceType: string;\n\n  constructor(public internal: string, public external: string, public description: string, public type?: string) {\n\n  }\n\n  public static makeArray(array: any[]): Port[] {\n\n    let ports: Port[] = [];\n\n    array.forEach((p) => {\n      let port: Port = new Port(p.internal, p.external, p.description, p.type);\n      port.publicPort = p.publicPort;\n      port.serviceType = p.serviceType;\n\n      ports.push(port);\n    });\n\n    return ports;\n  }\n}\n\nexport class Probe {\n\n  public path: string;\n  public port: string;\n  public initialDelaySeconds: number;\n  public periodSeconds: number;\n  public timeoutSeconds: number;\n\n  public static make(data: any): Probe {\n\n    let p = new Probe();\n    p.path = data.path;\n    p.port = data.port;\n    p.initialDelaySeconds = Number(data.initialDelaySeconds);\n    p.periodSeconds = Number(data.periodSeconds);\n    p.timeoutSeconds = Number(data.timeoutSeconds);\n\n    return p;\n  }\n}\n\nexport class Container {\n\n  public name: string;\n  public names: string[];\n  public active: string;\n  public type: string;\n  public description: string;\n  public hostname: string;\n  public secure: string;\n  public image: string;\n  public build: DockerBuild;\n  public ports: Port[];\n  public env: Arg[];\n  public volumes: Arg[];\n  public readinessProbe;\n  public livenessProbe;\n  public testStatus : TestStatus;\n  public adminUser: string;\n  public adminPassword: string;\n\n  // runtime only\n\n  public id: string;\n  public state: string;\n  public status: string;\n  public created: Date;\n\n  constructor() {\n\n    this.active = \"true\";\n    this.ports = [];\n    this.env = [];\n    this.volumes = [];\n  }\n\n  public copy() {\n    return Container.make(this);\n  }\n\n  public uniqueName(usesDedicatedRepo: boolean): string {\n\n    let repo: string = this.repository();\n\n    if (repo)\n      return repo + (usesDedicatedRepo ? \"/\" : \":\") + this.imageName();\n    else\n      return this.imageName();\n  }\n\n  public repository(): string {\n\n    if (this.image.indexOf(\":\") != -1) {\n\n      return this.image.substring(0, this.image.indexOf(\":\"));\n    } else {\n      return null;\n    }\n  }\n\n  public imageName(): string {\n\n    let name: string = this.image;\n\n    let idx: number = name.indexOf(\":\");\n\n    if (idx != -1) {\n\n      let lside = name.substring(0, idx);\n      let rside = name.substring(idx+1);\n\n      if (DockerImage.isVersionNumber(rside)) {\n\n        // name is on left side\n\n         if (this.image.lastIndexOf(\"/\") != -1) {\n          let idx: number = this.image.lastIndexOf(\"/\");\n          let rdx: number = this.image.indexOf(\":\");\n\n          name = this.image.substring(idx+1, rdx);\n        }\n      } else {\n\n        // name and perhaps version is in right side\n\n        name = rside;\n\n        if (name.indexOf(\"-\") != -1) {\n\n          let idx: number = name.lastIndexOf(\"-\");\n          let b4: string = name.substring(0, idx);\n          let af: string = name.substring(idx+1, name.length);\n\n          if (DockerImage.isVersionNumber(af)) {\n            name = b4;\n          }\n        }\n      }\n    }\n\n    return name;\n  }\n\n  public preferredImageVersion(): string {\n\n    if (this.image && this.image.indexOf(\":\")) {\n\n      let version: string = this.image.substring(this.image.indexOf(\":\")+1, this.image.length);\n\n      if (version.indexOf(\"-\") != -1) {\n        let idx: number = version.lastIndexOf(\"-\");\n        version = version.substring(idx+1, version.length);\n      }\n\n      // no versioning, only a name\n\n      if (!DockerImage.isVersionNumber(version))\n          version = \"latest\";\n\n      return version;\n    } else {\n\n      return \"latest\";\n    }\n  }\n\n  public static make(data: any): Container {\n\n    let c: Container = new Container();\n    c.names = data.names;\n    if (data.names)\n      c.name = data.names[0];\n    else\n      c.name = data.name;\n\n    c.active = data.active;\n    c.description = data.description;\n    c.hostname = data.hostname;\n    c.secure  = data.secure;\n    c.image = data.image;\n    c.type = data.type;\n    c.adminUser = data.adminUser;\n    c.adminPassword = data.adminPassword;\n\n    if (data.build)\n      c.build = DockerBuild.make(data.build);\n\n    if (data.ports)\n      c.ports = Port.makeArray(data.ports);\n\n    if (data.env)\n      c.env = Arg.makeArray(data.env);\n\n    if (data.volumes)\n      c.volumes = Arg.makeArray(data.volumes);\n\n    if (data.readinessProbe)\n      c.readinessProbe = Probe.make(data.readinessProbe);\n\n    if (data.livenessProbe)\n      c.livenessProbe = Probe.make(data.livenessProbe);\n\n    return c;\n  }\n\n  public environmentVariable(id: string): Arg {\n\n    var arg: Arg = null;\n\n    for (var i = 0; i  {\n          s.tests.push(Test.make(t));\n        });\n    }\n\n    return s;\n  }\n\n  public isActive(): boolean {\n\n    return (this.apiDeployType != \"none\" && this.apiDeployType != null) || this.stop == \"true\" || (this.apiMaturity != \"none\" &&  this.apiMaturity != null) ||\n                  (this.dockerAction != \"none\"  && this.dockerAction != null) || this.dockerTag != null || this.stop != null;\n  }\n\n  public summary(): string {\n\n      var status: string = null;\n\n      if (this.apiDeployType == \"deploy\")\n          status = \"Deploy API's \";\n      else if (this.apiDeployType == \"promote\")\n        status = \"Promote API's to \" + this.apiStage;\n\n      if (this.runTests == \"true\") {\n\n        if (status != null)\n          status = status + \", run tests\";\n        else\n          status = \"Run tests\";\n      }\n\n      if (this.apiMaturity) {\n\n        if (status != null)\n            status = status + \", and set maturity to \" + this.apiMaturity;\n        else\n          status = \"Set maturity to \" + this.apiMaturity;\n      }\n\n      if (this.dockerTag) {\n\n        if (status != null)\n          status = status + \", then tag image\";\n        else\n          status = \"Tag image \";\n      }\n\n      if (this.dockerAction) {\n        if (status != null)\n          status = status + \", \" + this.dockerAction;\n        else\n          status = this.dockerAction;\n\n        status = status + \" image\";\n      }\n\n      if (this.stop == \"true\") {\n        if (status != null)\n            status = status + \" before stopping\";\n        else\n            status = \"stop containers\";\n      }\n\n      if (this.pipelineAction) {\n\n        if (status != null)\n            status = status + \", then \" + this.pipelineAction + \" pipeline\";\n        else\n            status = \"and \" + this.pipelineAction + \" pipeline execution\";\n      }\n\n      return status;\n    }\n}\n\nexport class Stage {\n\n    public id: string;\n    public name: string;\n    public containerHost: string;\n    public useKubernetes: string;\n    public buildOnStart: string;\n    public deployments: Deployment[];\n    public onStart: Action;\n    public onFail: Action;\n    public onSuccess: Action;\n\n    constructor() {\n      this.deployments = [];\n      this.useKubernetes = \"false\";\n      this.buildOnStart = \"false\";\n      this.onStart = new Action();\n      this.onSuccess = new Action();\n      this.onFail = new Action();\n    }\n\n    public copy(): Stage {\n\n      let c = Stage.make(this);\n\n      c.id = this.id + \" copy\";\n      c.name = this.name + \" copy\";\n\n      return c;\n    }\n\n    public static make(data: any): Stage {\n\n      let s: Stage = new Stage();\n\n      s.name = data.name;\n      s.id = s.name;\n      s.containerHost = data.containerHost;\n      s.useKubernetes = data.useKubernetes;\n      s.buildOnStart = data.buildOnStart;\n\n      if (data.deployments) {\n        data.deployments.forEach((c) => {\n          s.deployments.push(Deployment.make(c));\n        });\n      }\n\n      if (data.onStart) {\n        s.onStart = Action.make(data.onStart);\n      }\n\n      if (data.onSuccess) {\n        s.onSuccess = Action.make(data.onSuccess);\n      }\n\n      if (data.onFail) {\n        s.onFail = Action.make(data.onFail);\n      }\n\n      return s;\n    }\n}\n\nexport class Deployment {\n\n  public name: string;\n  public hostname: string;\n  public appName: string;\n  public apis: APIDefinition[];\n  public containers: Container[];\n  public replicas: string;\n  public serviceType: string;\n  public restartPolicy: string;\n  public requiresMonitoring: string;\n  public dependsOn: string;\n\n  constructor() {\n\n    this.containers = [];\n    this.apis = [];\n  }\n\n  public copy() {\n    return Deployment.make(this);\n  }\n\n  public static make(data: any): Deployment {\n\n    let s: Deployment = new Deployment();\n    s.name = data.name;\n    s.hostname = data.hostname;\n    s.replicas = data.replicas;\n    s.appName = data.appName;\n    s.serviceType = data.serviceType;\n    s.restartPolicy = data.restartPolicy;\n    s.requiresMonitoring = data.requiresMonitoring;\n    s.dependsOn = data.dependsOn;\n\n    if (data.apis) {\n       data.apis.forEach((a) => {\n         s.apis.push(APIDefinition.make(a));\n       });\n    }\n\n    if (data.containers) {\n       data.containers.forEach((c) => {\n         s.containers.push(Container.make(c));\n       });\n    }\n\n    return s;\n  }\n\n  public containerForType(type: string): Container {\n\n    let found: Container = null;\n\n    this.containers.forEach((c) => {\n\n      if (c.type == type) {\n        found = c;\n      }\n    });\n\n    return found;\n  }\n\n  public removeContainer(c: Container) {\n\n    var found : number = -1;\n\n    for (var i = 0; i  {\n         p.builds.push(Builder.make(i));\n       });\n    }\n\n    if (data.deployments) {\n      p.deployments = [];\n       data.deployments.forEach((i) => {\n         p.deployments.push(Deployment.make(i));\n       });\n    }\n\n    return p;\n  }\n\n  public serviceFor(id: string): Deployment {\n\n      let found: Deployment = null;\n\n      for (var z = 0; z  {\n         p.stages.push(Stage.make(s));\n       });\n    }\n\n    return p;\n  }\n}\n\nfunction stringifyReplacer(key, value) {\n  const originalObject = this[key];\n  if(originalObject instanceof Map) {\n    return {\n      dataType: 'Map',\n      value: Array.from(originalObject.entries()), // or with spread: value: [...originalObject]\n    };\n  } else {\n    return value;\n  }\n}\n\nfunction parserReviver(key, value) {\n  if(typeof value === 'object' && value !== null) {\n    if (value.dataType === 'Map') {\n      return new Map(value.value);\n    }\n  }\n  return value;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PropertiesChangedOwner.html":{"url":"interfaces/PropertiesChangedOwner.html","title":"interface - PropertiesChangedOwner","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PropertiesChangedOwner\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/elements/build-image-choose.directive.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    initialProperties\n                                \n                                \n                                    installerTemplateLoaded\n                                \n                                \n                                    propertiesChangedInBuilder\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialProperties\n                        \n                        \n                    \n                \n            \n            \n                \ninitialProperties()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/elements/build-image-choose.directive.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            installerTemplateLoaded\n                        \n                        \n                    \n                \n            \n            \n                \ninstallerTemplateLoaded(template: Installer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/elements/build-image-choose.directive.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    template\n                                    \n                                                Installer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            propertiesChangedInBuilder\n                        \n                        \n                    \n                \n            \n            \n                \npropertiesChangedInBuilder(type: string, displayableProperties: Map, properties: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/elements/build-image-choose.directive.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    displayableProperties\n                                    \n                                            Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    properties\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Directive, ViewContainerRef } \t\t\t\t\tfrom '@angular/core';\nimport { FormBuilder, FormGroup } \t\t  \t\t\t\tfrom '@angular/forms';\nimport {DockerImage} from '../../models/docker-image';\nimport {Installer} from '../../models/project';\n\n@Directive({\n  selector: '[builder]',\n})\n\nexport class BuildImageChooseDirective {\n  constructor(public viewContainerRef: ViewContainerRef) { }\n}\n\nexport class BuilderProperties {\n\n\tpublic constructor(public key: string, public values: string[]) {\n\n\t}\n}\n\nexport interface PropertiesChangedOwner {\n\n\tinitialProperties(): any;\n\tinstallerTemplateLoaded(template: Installer);\n\n\tpropertiesChangedInBuilder(type: string, displayableProperties: Map, properties: any);\n}\n\nexport interface BuilderComponent {\n\n  formGroup: FormGroup;\n  owner: PropertiesChangedOwner;\n\n  setLicenseFile(license: string);\n  refreshBuildCommands(show: boolean);\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RepoSettings.html":{"url":"classes/RepoSettings.html","title":"class - RepoSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RepoSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/settings.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                configuration\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                packages\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, packages: string, configuration: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/settings.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        packages\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configuration\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            configuration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            packages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } \t           \t \t\t\t\t\tfrom '@angular/core';\nimport { Router }\t\t\t\t\t   \t\t\t\t\tfrom '@angular/router';\nimport { HttpClient, HttpHeaders, HttpParams }  \t\tfrom '@angular/common/http';\nimport { Observable, of }               \t\t      \tfrom 'rxjs';\nimport { switchMap, map, catchError, share } \t\t\tfrom 'rxjs/operators';\n\nexport class RepoSettings {\n\n\tconstructor(public name: string, public packages: string, public configuration: string) {\n\n\t}\n}\n\nexport enum GitType {\n  github,\n  gitlab\n}\n\nexport class Values {\n\n\tpublic gitUri: string = \"https://github.com/\";\n\tpublic gitAPIUrl: string = \"https://api.github.com\";\n\tpublic gitType: GitType = GitType.github;\n\tpublic gitName: string;\n\tpublic gitUser: string //= \"johnpcarter\";\n\tpublic gitIsPACPassword: string = \"true\";\n\tpublic gitPassword: string// = \"jaghuc-cupWeq-hohve3\";\n\tpublic gitRepos: RepoSettings[] = [new RepoSettings(\"wm\", \"/packages\", \"/config\")];\n\n\tpublic dockerHost: string = null;\n\tpublic imagePrefix: string// = \"jc\";\n\n\tpublic lastViewedPage: string = null;\n\tpublic lastViewedPageArg: string = null;\n\n\tpublic k8sUrl: string = \"https://localhost:6443\"\n\tpublic k8sNamespace: string = null;\n\tpublic k8sToken: string = null;\n\n\tpublic dockerEmail: string = null;\n\tpublic dockerUserId: string = null;\n\tpublic dockerPassword: string = null;\n\n\tpublic empowerUserId: string = null;\n\tpublic empowerPassword: string = null;\n\tpublic empowerEncryptedPassword: string = null;\n\n\tpublic repoForName(name: string): RepoSettings {\n\n\t\tlet found: RepoSettings = null;\n\n\t\tthis.gitRepos.forEach((r) => {\n\n\t\t\tif (r.name == name) {\n\t\t\t\tfound = r;\n\t\t\t}\n\t\t});\n\n\t\treturn found;\n\t}\n}\n\n@Injectable()\nexport class Settings {\n\n\t// Use if running in Dockerised Integration Server\n\tpublic static SERVER_API = \"\";\n\tpublic static DEV_SERVER_API = \"http://host.docker.internal:5555\";\n\n\t// Use if running in separate container on local machine\n  // public static SERVER_API = \"http://localhost:5555\";\n\t// public static DEV_SERVER_API = \"http://localhost:5555\";\n\n\tpublic static WS_SERVER = \"ws://localhost:9191\";\n\n\t// runtime prefs\n\n\tpublic currentRuntime: string;\n \tpublic gitExpander: boolean;\n  \tpublic dockerExpander: boolean;\n  \tpublic gatewayExpander: boolean;\n\n  \t// server managed settings\n\n  \tprivate _values: Values;\n  \tprivate _valuesLoaded: boolean;\n\n\tprivate static CONFIG: string = Settings.SERVER_API + \"/rad/jc.devops:api/configuration/user\";\n\n\tpublic constructor(private _http: HttpClient) {\n\n\t\tthis._values = new Values();\n\n\t\tthis.values();\n\t}\n\n\tpublic values(): Observable {\n\n\t\tif (this._valuesLoaded) {\n\n\t\t\tconsole.log(\"getting preloaded settings\");\n\n\t\t\treturn of(this._values);\n\t\t}\n\t\telse {\n\t\t\tconsole.log(\"restoring settings\");\n\n\t\t\treturn this._restore().pipe(share());\n\t\t}\n\t}\n\n\tpublic setCurrentPage(page: string, arg?: string) {\n\n\t\tif (this._values.lastViewedPage != page) {\n\t\t\tthis._values.lastViewedPage = page;\n\t\t\tthis._values.lastViewedPageArg = arg;\n\t\t\tthis.saveChanges();\n\t\t}\n\t}\n\n\tpublic setCurrentNamespace(namespace: string) {\n\n\t\tif (this._values.k8sNamespace != namespace) {\n\t\t\tthis._values.k8sNamespace = namespace;\n\t\t\tthis.saveChanges();\n\t\t}\n\t}\n\n\tpublic gotoLastViewedPage(router: Router) {\n\n\t\tif (this._values.lastViewedPage) {\n\n\t\t\tif (this._values.lastViewedPageArg)\n   \t\t\t\trouter.navigate([this._values.lastViewedPage, this._values.lastViewedPageArg]);\n   \t\t\telse\n   \t\t\t\trouter.navigate([this._values.lastViewedPage]);\n\n   \t\t\tthis._values.lastViewedPage = null;\n\t\t}\n\t}\n\n\tpublic _restore(): Observable {\n\n\t\tlet url: string = Settings.CONFIG;\n    \tlet headers = new HttpHeaders()\n                    .append('Content-Type', 'application/json')\n                    .append('Accept', 'application/json')\n                    .append('Cache-Control', 'no-cache')\n                    .append('Cache-Control', 'no-store')\n                    .append('Pragma','no-cache')\n                    .append('Expires', '0')\n                    .append('Accept', 'application/json');\n\n        let options: any = { headers };\n\n        return this._http.get(url, options).pipe(map((response) => {\n\n        \treturn this._cacheValues(( response).User);\n        }));\n\t}\n\n\tpublic saveChanges() {\n\n\t\tlet url: string = Settings.CONFIG;\n    \tlet headers = new HttpHeaders()\n                    .append('Content-Type', 'application/json')\n                    .append('Accept', 'application/json')\n                    .append('Cache-Control', 'no-cache')\n                    .append('Cache-Control', 'no-store')\n                    .append('Pragma','no-cache')\n                    .append('Expires', '0')\n                    .append('Accept', 'application/json');\n\n        let options: any = { headers };\n\n        let body: string = JSON.stringify(this._values);\n\n        return this._http.post(url, this._values, options).subscribe((response) => {\n\n        \tconsole.log(\"response is \" + response);\n        },\n        error => {return new Values()});\n\t}\n\n\tprivate _cacheValues(data: any): Values {\n\n\t\tif (data) {\n\n\t\t\tif (data.gitUri) {\n\t\t\t\tthis._values.gitUri = data.gitUri;\n\n\t\t\t\tthis._values.gitType = data.gitType == 0 ? GitType.github : GitType.gitlab;\n\n\t\t\t\tif (this._values.gitType == GitType.github) {\n\t\t\t\t\tlet protoMarker: number = data.gitUri.indexOf(\"//\");\n\t\t\t\t\tthis._values.gitAPIUrl = data.gitUri.substring(0, protoMarker) + \"//api.\" + data.gitUri.substring(protoMarker + 2);\n\t\t\t\t} else {\n\t\t\t\t\tthis._values.gitAPIUrl = this._values.gitUri;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//if (data.gitAPIUrl)\n\t\t\t//\tthis._values.gitAPIUrl = data.gitAPIUrl;\n\n\t\t\tif (data.gitUser)\n\t\t\t\tthis._values.gitUser = data.gitUser;\n\n\t\t\tif (data.gitName)\n\t\t\t\tthis._values.gitName = data.gitName;\n\n\t\t\tif (data.gitPassword)\n\t\t\t\tthis._values.gitPassword = data.gitPassword;\n\n\t\t\tif (data.gitType)\n\t\t\t  this._values.gitType = data.gitType == 0 ? GitType.github : GitType.gitlab;\n\n\t\t\tif (data.gitIsPACPassword)\n\t\t\t\tthis._values.gitIsPACPassword = data.gitIsPACPassword;\n\n\t\t\tif (data.gitRepos) {\n\n\t\t\t\tthis._values.gitRepos = [];\n\n\t\t\t\tdata.gitRepos.forEach((r) => {\n\t\t\t\t\tthis._values.gitRepos.push(new RepoSettings(r.name, r.packages, r.configuration));\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (data.dockerHost)\n\t\t\t\tthis._values.dockerHost = data.dockerHost;\n\n\t\t\tif (data.imagePrefix)\n\t\t\t\tthis._values.imagePrefix = data.imagePrefix;\n\n\t\t\tif (data.k8sUrl)\n\t\t\t\tthis._values.k8sUrl = data.k8sUrl;\n\n\t\t\tif (data.k8sNamespace)\n\t\t\t\tthis._values.k8sNamespace = data.k8sNamespace;\n\n\t\t\tif (data.k8sToken)\n\t\t\t\tthis._values.k8sToken = data.k8sToken;\n\n\t\t\tif (data.dockerEmail)\n\t\t\t\tthis._values.dockerEmail = data.dockerEmail;\n\n\t\t\tif (data.dockerUserId)\n\t\t\t\tthis._values.dockerUserId = data.dockerUserId;\n\n\t\t\tif (data.dockerPassword)\n\t\t\t\tthis._values.dockerPassword = data.dockerPassword;\n\n\t\t\tif (data.empowerUserId)\n\t\t\t\tthis._values.empowerUserId = data.empowerUserId;\n\n\t\t\tif (data.empowerPassword)\n\t\t\t\tthis._values.empowerPassword = data.empowerPassword;\n\n\t\t\tif (data.empowerEncryptedPassword)\n\t\t\t\tthis._values.empowerEncryptedPassword = data.empowerEncryptedPassword;\n\n\t\t\tif (data.lastViewedPage)\n\t\t\t\tthis._values.lastViewedPage = data.lastViewedPage;\n\n\t\t\tif (data.lastViewedPageArg)\n\t\t\t\tthis._values.lastViewedPageArg = data.lastViewedPageArg;\n\t\t}\n\n\t\tconsole.log(\"loaded settings: \" + this._values.dockerHost);\n\n\t\tthis._valuesLoaded = true;\n\n\t\treturn this._values;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResourceService.html":{"url":"injectables/ResourceService.html","title":"injectable - ResourceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ResourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/resources.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                URI_RESOURCES\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                downloadResource\n                            \n                            \n                                    Public\n                                resourcesForType\n                            \n                            \n                                    Public\n                                resourceTypes\n                            \n                            \n                                    Public\n                                uploadResource\n                            \n                            \n                                    Public\n                                uploadResourceUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_settings: Settings, _http: HttpClient, _ngxXml2jsonService: NgxXml2jsonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/resources.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _settings\n                                                  \n                                                        \n                                                                        Settings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _ngxXml2jsonService\n                                                  \n                                                        \n                                                                    NgxXml2jsonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            downloadResource\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    downloadResource(type: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/resources.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resourcesForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resourcesForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/resources.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resourceTypes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resourceTypes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/resources.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            uploadResource\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadResource(type: string, name: string, contentType: string, data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/resources.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    contentType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            uploadResourceUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadResourceUrl(type: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/resources.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            URI_RESOURCES\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : Settings.SERVER_API + \"/rad/jc.devops:api/resources\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/resources.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } \t           \t \t\t\t      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams }  from '@angular/common/http';\nimport { Observable, of }               \t\t    from 'rxjs';\nimport { switchMap, map } \t\t\t\t\t\t          from 'rxjs/operators';\n\nimport { NgxXml2jsonService } \t\t\t\t\t        from 'ngx-xml2json';\n\nimport { Source }                              from './../models/git-source';\nimport { Settings }                     \t\t    from '../settings';\n\n\n@Injectable()\nexport class ResourceService {\n\t\n    public static URI_RESOURCES: string = Settings.SERVER_API + \"/rad/jc.devops:api/resources\";\n   \n    constructor(private _settings: Settings, private _http: HttpClient, private _ngxXml2jsonService: NgxXml2jsonService) {  \n\n    }\n\n    public resourceTypes(): Observable {\n\n\t\t  let url: string = ResourceService.URI_RESOURCES;\n\n\t\t  let headers = new HttpHeaders()\n\t\t\t\t.set('Content-Type', 'application/json')\n\t\t\t\t.set('Accept', 'application/json');\n\n      return this._http.get(url, { headers }).pipe(map( (responseData) => {\n\n            return (responseData).types;\n          },\n          error => {\n            return null;\n       \t}));\n    }\n\n    public resourcesForType(type: string): Observable {\n\n      let url: string = ResourceService.URI_RESOURCES + \"/type/\" + type;\n\n      let headers = new HttpHeaders()\n        .set('Content-Type', 'application/json')\n        .set('Accept', 'application/json');\n\n      return this._http.get(url, { headers }).pipe(map( (responseData) => {\n\n            return (responseData).files;\n          },\n          error => {\n            return null;\n         }));\n    }\n\n    public downloadResource(type: string, name: string) {\n\n       window.open(ResourceService.URI_RESOURCES + \"/type/\" + encodeURIComponent(type) + \"/\" + encodeURIComponent(name));\n    }\n\n    public uploadResourceUrl(type: string, name: string): string {  \n\n      return ResourceService.URI_RESOURCES + \"/type/\" + encodeURIComponent(type) + \"/default/\" + encodeURIComponent(name);  \n    }\n\n    public uploadResource(type: string, name: string, contentType: string, data: any): Observable {     \n\n      let url: string = ResourceService.URI_RESOURCES + \"/type/\" + encodeURIComponent(type) + \"/default/\" + encodeURIComponent(name);\n\n      let headers = new HttpHeaders()\n        .set('Content-Type', \"tex/plain\")\n        .set('Accept', 'application/json');\n\n      let formData:FormData = new FormData();\n      formData.append('files', data, name);\n\n      return this._http.post(url, formData, { headers }).pipe(map( (responseData) => {\n\n            return true;\n          },\n          error => {\n            return false;\n         }));\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Result.html":{"url":"classes/Result.html","title":"class - Result","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Result\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/docker.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                imageId\n                            \n                            \n                                    Public\n                                    Optional\n                                otherId\n                            \n                            \n                                    Public\n                                success\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(success: boolean, imageId?: string, otherId?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/docker.service.ts:674\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        success\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        imageId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        otherId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            imageId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/docker.service.ts:676\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            otherId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/docker.service.ts:676\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            success\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/docker.service.ts:676\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } \t           \t \t\t\t        from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams }  \tfrom '@angular/common/http';\nimport { Observer, Observable, of }               from 'rxjs';\nimport { switchMap, map, catchError } \t\t\t\t\t\tfrom 'rxjs/operators';\n\nimport { NgxXml2jsonService } \t\t\t\t\t  \t      from 'ngx-xml2json';\n\nimport { Source }\t\t\t\t\t\t\t\t\t                from '../models/git-source';\nimport { Installer, Builder, RunSet }             from '../models/project';\n\nimport { Settings,Values }                        from '../settings';\nimport { Container, Port }                        from '../models/project';\nimport { DockerImage, VersionType }               from '../models/docker-image';\n\nimport { WebSocketService }                       from './websocket.service';\n\nexport enum DockerFilterType {\n all,\n sag,\n custom\n}\n\n@Injectable()\nexport class DockerService {\n\n    public static INSTALL: string = Settings.SERVER_API + \"/rad/jc.devops:api/docker/install\";\n    public static BUILD: string = Settings.SERVER_API + \"/rad/jc.devops:api/docker/build\";\n    public static RUN: string = Settings.SERVER_API + \"/rad/jc.devops:api/docker/run\";\n    public static RUNKS8: string = Settings.SERVER_API + \"/rad/jc.devops:api/k8s/run\";\n    public static STOP: string = Settings.SERVER_API + \"/rad/jc.devops:api/docker/stop\";\n    public static CONTAINERS: string = Settings.SERVER_API + \"/rad/jc.devops:api/docker/containers\";\n    public static IMAGES: string = Settings.SERVER_API + \"/rad/jc.devops:api/docker/images/\";\n    public static IMAGE: string = Settings.SERVER_API + \"/rad/jc.devops:api/docker/image/\";\n\n    private __allImages: DockerImage[] = [];\n    private _baseImages: DockerImage[] = [];\n    private _sagImages: DockerImage[] = [];\n    private _customImages: DockerImage[] = [];\n\n    private _keyedImages: Map = new Map();\n\n    private _dockerHost: string;\n    private _dockerEmail: string;\n    private _dockerUserId: string;\n    private _dockerPassword: string;\n\n    constructor(private _settings: Settings, private _http: HttpClient, private _ngxXml2jsonService: NgxXml2jsonService) {\n\n        this._keyedImages = new Map();\n\n        console.log(\"getting setting for docker service\");\n\n        this._settings.values().subscribe((v) => {\n\n          this.setup(v);\n        });\n    }\n\n    public setup(v: Values) {\n\n      console.log(\"settings loaded in docker service\");\n\n      this._dockerHost = v.dockerHost;\n      this._dockerEmail = v.dockerEmail;\n      this._dockerUserId = v.dockerUserId;\n      this._dockerPassword = v.dockerPassword;\n    }\n\n    public pullImage(name: string, version?: string): Observable {\n\n      let url: string = DockerService.IMAGE + encodeURIComponent(name) + \"/\"\n\n      if (version)\n        url += \"?version=\" + version;\n\n      let headers = this.headers();\n\n       let options: any = { headers };\n\n       return this._http.get(url, options).pipe(map( (responseData) => {\n\n            return DockerImage.make((responseData).image);\n\n          },\n          error => {\n            return null;\n        }));\n    }\n\n    public pushImage(image: DockerImage): Observable {\n\n      let url: string = DockerService.IMAGE + encodeURIComponent(image.tag()) + \"/\"\n\n      //if (image.version())\n       // url += \"?version=\" + image.version();\n\n      let headers = this.headers();\n\n       let options: any = { headers };\n\n       return this._http.put(url, options).pipe(map( (responseData) => {\n\n            return true;\n\n          }), catchError(error => {\n            return of(false);\n        }));\n    }\n\n    public image(name: string):Observable {\n\n      if (this._keyedImages.size == 0) {\n\n        return this.customImages(false, this._dockerHost).pipe(map( (images) => {\n          return this._image(name);\n        }));\n      } else {\n        return of(this._image(name));\n      }\n    }\n\n    public images(useCache: boolean, filterKey?: string, filterValue?: string, dockerHost?: string): Observable {\n\n    let url: string = DockerService.IMAGES;\n    let headers = this.headers(dockerHost);\n\n    let options: any = { headers };\n\n    if (filterValue) {\n        options = { headers, params: new HttpParams().append(\"filter\", \"{ label: [ \" +  filterKey + \"=\" + filterValue  + \"]}\") };\n    }\n\n    return this._http.get(url, options).pipe(map( (responseData) => {\n\n        return this._mapImagesResponse(filterValue, responseData);\n\n      },\n      error => {\n        return null;\n     }));\n    }\n\n    public baseImages(refresh: boolean, dockerHost?: string): Observable {\n\n         if (this._baseImages.length > 0 && !refresh) {\n             return of(this._baseImages);\n         } else {\n             return this._allImages(refresh, DockerFilterType.all, dockerHost).pipe(map((results) => {\n\n                 this._baseImages = this._groupImagesByVersion(results, DockerFilterType.all);\n\n                 return this._baseImages;\n             }));\n         }\n    }\n\n    public sagImages(refresh: boolean, dockerHost?: string): Observable {\n\n         if (this._sagImages.length > 0 && !refresh) {\n             return of(this._sagImages);\n         } else {\n             return this._allImages(refresh, DockerFilterType.sag, dockerHost).pipe(map((results) => {\n\n                 this._sagImages = this._groupImagesByVersion(results, DockerFilterType.sag);\n\n                 return this._sagImages;\n             }));\n         }\n    }\n\n    public customImages(refresh: boolean, dockerHost?: string): Observable {\n\n        if (this._customImages.length > 0 && !refresh) {\n             return of(this._customImages);\n        } else {\n             return this._allImages(refresh, DockerFilterType.custom, dockerHost).pipe(map((results) => {\n\n                 this._customImages = this._groupImagesByVersion(results, DockerFilterType.custom);\n\n                 return this._customImages;\n             }));\n        }\n    }\n\n    public versions(uniqueName: string): Observable {\n\n        if (this._customImages.length == 0) {\n           return this.customImages(true).pipe(map((imgs) => {\n                return this._versions(uniqueName);\n            }));\n        } else {\n            return of(this._versions(uniqueName));\n        }\n    }\n\n    public containers(filterValue?: string): Observable {\n\n        let url: string = DockerService.CONTAINERS;\n\n        let headers = this.headers();\n\n        let options: any = { headers };\n\n        return this._http.get(url, options).pipe(map( (responseData) => {\n\n            return this._mapContainerResponse(filterValue, responseData);\n\n          },\n          error => {\n            return null;\n           }));\n    }\n\n    public containerLog(containerId: string): Observable {\n\n       let ws: WebSocketService = WebSocketService.default(\"docker/container\", containerId);\n\n       console.log(\"ws \" + ws.isActive());\n\n       let def: any = {\"containerId\": containerId};\n\n       if (this._dockerHost)\n         def['dockerHost'] = this._dockerHost;\n\n       return Observable.create((observer: Observer) => {\n\n          ws.send(JSON.stringify(def)).subscribe((result) => {\n\n         if (result) {\n           return ws.listen().subscribe((log) => {\n             observer.next(log);\n           });\n         }\n         else {\n           observer.complete();\n         }\n         });\n       });\n    }\n\n    public install(installer: Installer, comments: string, user?: string, password?: string, encryptedPassword?: string, archiveWmImage?: boolean): Observable {\n\n      let url: string = DockerService.INSTALL;\n\n      let headers = this.headers();\n\n      headers = headers.append(\"dedicatedRepo\", \"\" + installer.targetImage.dedicatedRepository());\n\n      if (archiveWmImage)\n        headers = headers.append(\"archiveWmImage\", \"\" + archiveWmImage);\n\n      //installer.version = version;\n      installer.targetImage.id = null;\n\n      let wrapper = {install: installer, comments: comments, downloadOnly: \"false\"};\n      let body: string = JSON.stringify(wrapper, stringifyReplacer);\n\n      let obs: Observable =  this._http.post(url, body, { headers }).pipe(map( (responseData) => {\n\n          let targetImage: DockerImage = this._keyedImages.get(installer.targetImage.uniqueName());\n\n          if (!targetImage) {\n            targetImage = installer.targetImage;\n            this._keyedImages.set(targetImage.uniqueName(), targetImage);\n            this._sagImages.push(targetImage);\n            this.__allImages.push(targetImage);\n          }\n\n          targetImage.availableVersions.unshift(installer.targetImage);\n\n          installer.targetImage.id = (responseData).imageId;\n          this._baseImages.unshift(installer.targetImage);\n\n          if ((responseData).imageId) {\n            if (archiveWmImage)\n              return new Result(true, (responseData).imageId, (responseData).wmImageName);\n            else\n              return new Result(true, (responseData).imageId);\n          } else {\n            return new Result(false);\n          }\n\n        }));\n\n      return WebSocketService.default(\"docker/log\").listen(obs);\n    }\n\n    public build(builder: Builder, version: string, comments: string): Observable {\n\n  \t\tlet url: string = DockerService.BUILD;\n\n  \t\tlet headers = this.headers();\n\n      headers = headers.append(\"dedicatedRepo\", \"\" + builder.targetImage.dedicatedRepository());\n\n      builder.version = version;\n      builder.targetImage.id = null;\n\n      let wrapper = {build: builder, comments: comments, downloadOnly: \"false\"};\n  \t\tlet body: string = JSON.stringify(wrapper, stringifyReplacer);\n\n  \t\tlet obs: Observable = this._http.post(url, body, { headers }).pipe(\n\n        map( (responseData) => {\n\n          let targetImage: DockerImage = this._keyedImages.get(builder.targetImage.uniqueName());\n\n          if (!targetImage) {\n            targetImage = builder.targetImage.copy();\n            this._keyedImages.set(targetImage.uniqueName(), targetImage);\n            this._customImages.push(targetImage);\n            this.__allImages.push(targetImage);\n          }\n\n          targetImage.availableVersions.unshift(builder.targetImage);\n\n           builder.targetImage.id = (responseData).imageId;\n           this._customImages.unshift(builder.targetImage);\n\n           if ((responseData).imageId) {\n              return new Result(true, (responseData).imageId);\n           } else {\n             return new Result(false);\n           }\n        }));\n\n      return WebSocketService.default(\"docker/log\").listen(obs);\n    }\n\n    public closeLog() {\n\n      WebSocketService.closeDefault();\n    }\n\n     public downloadInstall(installer: Installer, comments: string, user?: string, password?: string, encryptedPassword?: string): Observable {\n\n      let url: string = DockerService.INSTALL;\n\n      let headers = this.headers();\n\n      headers = headers.append(\"dedicatedRepo\", \"\" + installer.targetImage.dedicatedRepository());\n\n      //installer.version = version;\n      installer.targetImage.id = null;\n\n      let wrapper = {install: installer, comments: comments, downloadOnly: \"true\"};\n      let body: string = JSON.stringify(wrapper, stringifyReplacer);\n\n      return this._http.post(url, body, { headers }).pipe(\n\n        map( (responseData) => {\n\n          return (responseData).zipFile;\n\n        }));\n    }\n\n    public downloadBuild(builder: Builder, version: string, comments: string): Observable {\n\n      let url: string = DockerService.BUILD;\n\n      let headers = this.headers();\n\n      headers = headers.append(\"dedicatedRepo\", \"\" + builder.targetImage.dedicatedRepository());\n\n      builder.version = version;\n      builder.targetImage.id = null;\n\n      let wrapper = {build: builder, comments: comments, downloadOnly: \"true\"};\n      let body: string = JSON.stringify(wrapper, stringifyReplacer);\n\n      return this._http.post(url, body, { headers }).pipe(\n\n        map( (responseData) => {\n\n          return (responseData).zipFile;\n\n        }));\n    }\n\n\n    public run(run: RunSet, runAsKS8: boolean, includeTests: boolean, download: boolean, uploadAPI: boolean): Observable {\n\n      let url: string;\n\n      if (runAsKS8)\n        url = DockerService.RUNKS8;\n      else\n        url = DockerService.RUN;\n\n      let headers = this.headers();\n\n      if (includeTests != null) {\n        headers = headers.append(\"test\", \"\" + includeTests);\n      }\n\n      if (uploadAPI != null) {\n        headers = headers.append(\"uploadAPIs\", \"\" + uploadAPI);\n      }\n\n      if (download) {\n        headers = headers.append(\"generateOnly\", \"true\");\n      }\n\n      let wrapper = {definition: run};\n\n      let body: string = JSON.stringify(run);\n\n      console.log(body);\n\n      let obs: Observable = this._http.post(url, body, { headers, responseType: \"blob\" as \"json\" }).pipe(\n\n        map( (responseData) => {\n\n          if (download)\n            return responseData;\n          else\n            return \"ok\";\n\n        }),\n        catchError((error) => {\n          console.log(error.message);\n          return of(error.message);\n        }));\n\n      if (download)\n        return obs;\n      else\n        return WebSocketService.default(\"docker/log\").listen(obs);\n    }\n\n    public stop(run: RunSet): Observable {\n\n      let url: string = DockerService.STOP + \"/\" + encodeURIComponent(run.name);\n\n      let headers = this.headers();\n\n      return this._http.get(url, { headers }).pipe(\n\n        map( (responseData) => {\n\n          return true;\n\n        }), catchError(this.handleErrorBool));\n    }\n\n    public stopContainer(containerId: string): Observable {\n\n      let url: string = DockerService.STOP + \"/\" + containerId + \"?isContainerId=true\";\n\n      let headers = this.headers();\n\n      return this._http.get(url, { headers }).pipe(\n\n        map( (responseData) => {\n\n          return true;\n\n        }), catchError(this.handleErrorBool));\n    }\n\n    private handleError(error): string {\n\n      console.log(\"intercepted error: \" + JSON.stringify(error));\n\n      return error;//of(\"\");\n    }\n\n    private handleErrorBool(error): Observable {\n\n      console.log(\"intercepted error: \" + JSON.stringify(error));\n\n      return of(false);\n    }\n\n    private _mapContainerResponse(filter: string, responseData: any): Container[]\n    {\n // data is returned as list called references or as a single entity\n\n         let containers: Container[] = [];\n\n         responseData.containers.forEach((c) => {\n            containers.push(this._makeContainerFromDockerResponse(c));\n         });\n\n         return containers;\n    }\n\n    private _versions(uniqueName: string): DockerImage[] {\n\n        if (this._keyedImages.get(uniqueName)) {\n\n            let img: DockerImage = this._keyedImages.get(uniqueName);\n            let versions: DockerImage[] = img.availableVersions;\n\n            let out: DockerImage[] = [];\n\n            if (versions.length == 0) {\n              out.push(img);\n            } else {\n                 versions.forEach((v) => {\n                    out.push(v);\n                });\n            }\n\n            return out;\n        }\n        else {\n            return [];\n        }\n    }\n\n    private _image(name: string): DockerImage {\n\n      return this._keyedImages.get(name);\n    }\n\n    private _allImages(refresh: boolean, filterType: DockerFilterType, dockerHost?: string): Observable {\n\n        if (!refresh && this.__allImages.length > 0) {\n\n            return of(this._filterAllList(filterType));\n\n        } else {\n            // fetch\n\n            return this.images(false, null, null, dockerHost).pipe(map((results) => {\n\n                this.__allImages = [];\n\n                results.forEach((a) => {\n                    this.__allImages.push(a);\n                });\n\n                return this._filterAllList(filterType);\n            }));\n        }\n    }\n\n    private _groupImagesByVersion(dockerList: DockerImage[], type: DockerFilterType): DockerImage[] {\n\n        dockerList.forEach((d) => {\n\n          if (!d.repository().startsWith(\"test-\")) {\n            let matchedImage: DockerImage = this._keyedImages.get(d.uniqueName());\n\n            if (matchedImage == null) {\n                this._keyedImages.set(d.uniqueName(), d);\n                matchedImage = d;\n            }\n\n            // add to version huistory too\n\n            if (!matchedImage.hasVersionAlready(d)) {\n              matchedImage.addVersion(d);\n            }\n          }\n        });\n\n        let it: IterableIterator = this._keyedImages.values();\n\n        let groupedList: DockerImage[] = [];\n        let itObj: IteratorResult;\n\n        while (!(itObj=it.next()).done) {\n\n            if (type == DockerFilterType.custom && itObj.value.isCustom)\n              groupedList.push(itObj.value);\n            else if (type == DockerFilterType.sag && itObj.value.isSagImage && !itObj.value.isCustom)\n               groupedList.push(itObj.value);\n            else if (type == DockerFilterType.all)\n               groupedList.push(itObj.value);\n        }\n\n        return groupedList;\n    }\n\n    private _filterAllList(type: DockerFilterType): DockerImage[] {\n\n        let out: DockerImage[] = [];\n\n        this.__allImages.forEach((a) => {\n\n            if (a.name) {\n                if (type == DockerFilterType.custom && a.isCustom)\n                  out.push(a);\n                else if (type == DockerFilterType.sag && a.isSagImage && !a.isCustom)\n                  out.push(a);\n                else  if (type == DockerFilterType.all)\n                  out.push(a);\n            }\n        });\n\n        return out;\n    }\n\n    private _mapImagesResponse(filter: string, responseData: any): DockerImage[]\n    {\n // data is returned as list called references or as a single entity\n\n     let images: DockerImage[] = [];\n\n     responseData.images.forEach((i) => {\n\n            let image: DockerImage = DockerImage.make(i);\n\n            if (image.name() && image.tag() && image.tag() != 'none')\n             images.push(image);\n     });\n\n     return images;\n    }\n\n    private _makeContainerFromDockerResponse(data: any): Container {\n\n        let c: Container = new Container();\n\n        c.id = data.id.substring(0, 8);\n        c.names = data.names;\n        c.image = data.image; // key\n        c.status = data.status;\n        c.state = data.state;\n\n        if (c.names) {\n          for (var i =0; i  {\n                if (p.external)\n                    c.ports.push(new Port(p.internal, p.external,  p.external, p.type));\n            });\n        }\n        return c;\n    }\n\n    private headers(altDockerHost?: string): HttpHeaders {\n\n      console.log(\"gettings headers for docker service \" + this._dockerHost);\n\n      let headers: HttpHeaders = new HttpHeaders()\n          .append('Content-Type', 'application/json')\n          .append('Accept', 'application/json')\n          .append('Cache-Control', 'no-cache')\n          .append('Cache-Control', 'no-store')\n          .append('Pragma','no-cache')\n          .append('Expires', '0')\n          .append('Accept', 'application/json');\n         // .append('dockerHost', altDockerHost != null ? altDockerHost : this._dockerHost != null ? this._dockerHost : \"\");\n\n     // if (this._dockerEmail) {\n     //   headers = headers.append('dockerEmail', this._dockerEmail).append('dockerUser', this._dockerUserId).append('dockerPassword', this._dockerPassword);\n     // }\n\n      return headers;\n    }\n}\n\nexport class Result {\n\n  public constructor(public success: boolean, public imageId?: string, public otherId?: string) {\n\n  }\n}\n\nfunction stringifyReplacer(key, value) {\n  const originalObject = this[key];\n  if(originalObject instanceof Map) {\n    return {\n      dataType: 'Map',\n      value: Array.from(originalObject.entries()), // or with spread: value: [...originalObject]\n    };\n  } else {\n    return value;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RunSet.html":{"url":"classes/RunSet.html","title":"class - RunSet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RunSet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/project.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                builds\n                            \n                            \n                                    Public\n                                deployments\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                namespace\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                useKubernetes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                containerInDeploymentFor\n                            \n                            \n                                    Public\n                                deploymentForContainer\n                            \n                            \n                                    Static\n                                make\n                            \n                            \n                                    Public\n                                serviceFor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/models/project.ts:1126\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            builds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Builder[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:1120\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            deployments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Deployment[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:1121\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:1125\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:1119\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            namespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:1123\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:1126\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            useKubernetes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:1124\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            containerInDeploymentFor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    containerInDeploymentFor(id: string, tag?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/project.ts:1195\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tag\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Container\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deploymentForContainer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deploymentForContainer(container: Container)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/project.ts:1180\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                                Container\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Deployment\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            make\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    make(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/project.ts:1137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         RunSet\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            serviceFor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    serviceFor(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/project.ts:1163\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Deployment\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { APIDefinition }                        from '../models/wm-package-info'\nimport { Source }                               from '../models/git-source';\nimport { DockerImage, TestStatus }              from '../models/docker-image';\n\nexport class DeploymentSet {\n\n  public id: string;\n  public name: string;\n  public source: Source;\n  public active: string;\n  public apis: APIDefinition[];\n\n  public constructor() {\n      this.apis = [];\n      this.source = new Source();\n  }\n\n  public static make(data: any): DeploymentSet {\n\n      let p: DeploymentSet = new DeploymentSet();\n      p.id = data.name;\n      p.name = data.name;\n\n      if (data.source)\n       p.source = Source.make(data.source);\n\n      p.apis = [];\n\n      if (data.apis) {\n\n        data.apis.forEach((a) => {\n          p.apis.push(APIDefinition.make(a));\n        });\n      }\n\n      return p;\n  }\n}\n\nexport enum DisplayType {\n  hidden = \"hidden\",\n  readonly = \"readonly\",\n  editable = \"editable\",\n  password = \"password\",\n  file = \"file\",\n  dropdown = \"dropdown\",\n  yesno = \"yesno\"\n}\n\nexport class BuildCommand {\n\n  public commandType: string;\n  public buildTarget: string;\n  public fileType: string;\n  public source: string;\n  public target: string;\n  public description: string = \"\";\n  public display: DisplayType = DisplayType.hidden;\n  public required: boolean = true;\n  public conditions: string[];\n\n  public static make(d: any): BuildCommand {\n\n    let f: BuildCommand = new BuildCommand();\n    f.commandType = d.commandType;\n    f.buildTarget = d.buildTarget;\n    f.fileType = d.fileType;\n    f.source = d.source;\n    f.target = d.target;\n    f.description = d.description;\n    f.conditions = d.conditions;\n\n    if (d.display == \"editable\")\n      f.display = DisplayType.editable;\n    else if (d.display == \"readonly\")\n      f.display = DisplayType.readonly;\n    else if (d.display == \"file\")\n      f.display = DisplayType.file;\n    else\n      f.display = DisplayType.hidden;\n\n    f.required = false;\n    return f;\n  }\n\n  copy() {\n    return BuildCommand.make(this);\n  }\n\n  public equals(b: BuildCommand): boolean {\n\n    return (b.source && b.source == this.source) || (!b.source && b.target == this.target);\n  }\n\n  public matchConditions(args: Map): boolean {\n\n    return ArgDisplayType._matchConditions(this.conditions, args);\n  }\n}\n\nexport interface BuildParams {\n\n  name: string;\n  publicPort(): string;\n  setPublicPort(port: string);\n  assignedLicense(): string;\n  hostName: string;\n  entryPoint: string;\n  exitPoint: string;\n  healthCheck: string;\n  args: Map\n  buildCommands: BuildCommand[];\n\n  fileForType(type: string): BuildCommand;\n  isCustomImage(): boolean;\n}\n\nexport class ArgDisplayType {\n\n  public name: string;\n  public description: string;\n  public display: DisplayType = DisplayType.hidden;\n  public conditions: string[];\n  public choices: string[];\n  public required: boolean = true;\n\n  public constructor(name: string) {\n    this.name = name;\n    this.description = this.name;\n    this.conditions = [];\n    this.choices = [];\n  }\n\n  public copy(): ArgDisplayType {\n\n      let copy: ArgDisplayType = new ArgDisplayType(this.name);\n      copy.description = this.description;\n      copy.display = this.display;\n      copy.conditions = this.conditions;\n      copy.choices = this.choices;\n      copy.required = this.required;\n\n      return copy;\n  }\n\n  public static make(d: any): ArgDisplayType {\n\n    let a: ArgDisplayType = new ArgDisplayType(d.name);\n\n    if (d.display == \"editable\")\n      a.display = DisplayType.editable;\n    else if (d.display == \"readonly\")\n      a.display = DisplayType.readonly;\n    else if (d.display == \"file\")\n      a.display = DisplayType.file;\n    else if (d.display == \"password\")\n      a.display = DisplayType.password;\n    else if (d.display == \"yesno\")\n      a.display = DisplayType.yesno;\n    else if (d.display == \"dropdown\")\n      a.display = DisplayType.dropdown;\n    else\n      a.display = DisplayType.hidden;\n\n    if (d.required != null)\n      a.required = d.required;\n\n    a.description = d.description || d.name;\n\n    if (d.conditions)\n      a.conditions = d.conditions;\n\n    if (a.choices)\n      a.choices = d.choices;\n\n    return a;\n  }\n\n  public matchConditions(args: Map): boolean {\n\n      return ArgDisplayType._matchConditions(this.conditions, args);\n  }\n\n  public static _matchConditions(conditions: string[], args: Map): boolean {\n\n      if (conditions && conditions.length > 0) {\n\n        let matched: boolean = false;\n\n        for (let i = 0; i  {\n      args.push(new Arg(a.source, a.target, a.description));\n    });\n\n    return args;\n  }\n\n}\n\nexport class Installer implements BuildParams {\n\n    public name: string;\n    public sourceImageTag: string;\n    public isNew: string = \"true\";\n    public targetImage: DockerImage;\n    public productType: string;\n    public licenseFile: string;\n    public primaryPort: string;\n    public hostName: string;\n    public wmInstallerImage: string;\n    public includeUpdate: string = \"false\";\n    public buildCommands: BuildCommand[];\n    public args: Map;\n    public isSAGProduct: string = \"true\";\n\n    public entryPoint: string;\n    public exitPoint: string;\n    public healthCheck: string;\n\n    public constructor() {\n\n    this.sourceImageTag = \"centos:latest\";\n    this.targetImage = new DockerImage();\n    this.buildCommands = [];\n    this.args = new Map();\n  }\n\n  public copy(): Installer {\n\n    return Installer.make(this);\n  }\n\n  public static parse(data: string): Installer {\n\n    return this.make(JSON.parse(data, parserReviver).install);\n  }\n\n  public isCustomImage(): boolean {\n    return true;\n  }\n\n  public static make(data: any): Installer {\n\n    let i: Installer = new Installer();\n    i.name = data.name;\n    i.isSAGProduct = data.isSAGProduct;\n    i.args = data.args;\n    i.productType = data.productType;\n    i.wmInstallerImage = data.wmInstallerImage;\n    i.sourceImageTag = data.sourceImageTag;\n\n    if (data.targetImage)\n      i.targetImage = DockerImage.make(data.targetImage);\n\n    i.licenseFile = data.licenseFile;\n    i.primaryPort = data.primaryPort;\n    i.isNew = data.isNew;\n    i.includeUpdate = data.includeUpdate;\n    i.hostName = data.hostName;\n    i.entryPoint = data.entryPoint;\n    i.exitPoint = data.exitPoint;\n    i.healthCheck = data.healthCheck;\n    i.healthCheck = data.healthCheck;\n\n    if (!i.args)\n       i.args = new Map();\n\n    if (data.buildCommands) {\n      data.buildCommands.forEach((f) => {\n        i.buildCommands.push(BuildCommand.make(f));\n      });\n    }\n\n    return i;\n  }\n\n  public publicPort(): string {\n    return this.primaryPort;\n  }\n\n  public setPublicPort(port: string) {\n    this.primaryPort = port;\n  }\n\n  public assignedLicense(): string {\n\n    return this.licenseFile;\n  }\n\n  public fileForType(type: string, name?: string): BuildCommand {\n\n      return Builder._fileForSource(this.buildCommands, type, name, null);\n  }\n\n  public fileWithDescription(type: string, description: string): BuildCommand {\n      return Builder._fileForSource(this.buildCommands, type, null, description);\n  }\n\n  public removeFileForType(type: string, name?: string) {\n\n      return Builder._removeFileForType(this.buildCommands, type, name);\n  }\n\n  public toString(): string {\n    return JSON.stringify(this, stringifyReplacer);\n  }\n}\n\nexport class Builder implements BuildParams {\n\n  public name: string;\n  public deploymentType: string;\n  public deployments: DeploymentSet[];\n\n  public sourceImage: DockerImage;\n  public targetImage: DockerImage;\n  public version: string;\n  public testStatus: string;\n  public buildCommands: BuildCommand[];\n  public hasTests: string;\n  public buildUser: string;\n  public entryUser: string;\n  public entryPoint: string;\n  public exitPoint: string;\n  public healthCheck: string;\n  public args: Map;\n\n  public hostName: string; // not used!!\n\n  public constructor() {\n\n    this.sourceImage = new DockerImage();\n    this.targetImage = new DockerImage();\n    this.buildCommands = [];\n\n    this.args = new Map();\n  }\n\n  public hyphenatedName(): string {\n\n    return this.name.toLowerCase().replace(/\\s/g, \"-\");\n  }\n\n  public static make(data: any): Builder {\n\n    let b: Builder = new Builder();\n    b.name = data.name;\n    b.deploymentType = data.type;\n\n    b.deployments = [];\n\n    if (data.deployments) {\n      data.deployments.forEach((d) => {\n            b.deployments.push(DeploymentSet.make(d));\n      });\n    }\n\n    if (data.buildCommands) {\n      data.buildCommands.forEach((f) => {\n            b.buildCommands.push(BuildCommand.make(f));\n      });\n    }\n\n    b.sourceImage = DockerImage.make(data.sourceImage);\n    b.targetImage = DockerImage.make(data.targetImage);\n    b.version = data.version;\n    b.testStatus = data.testStatus;\n    b.buildUser = data.buildUser;\n    b.entryUser = data.entryUser;\n    b.entryPoint = data.entryPoint;\n    b.exitPoint = data.exitPoint;\n    b.healthCheck = data.healthCheck;\n\n    if (data.hasTests && data.hasTests == 'true')\n      b.hasTests = \"true\";\n\n    return b;\n  }\n\n  public publicPort(): string {\n    return this.sourceImage.primaryPort;\n  }\n\n  public setPublicPort(port: string) {\n    this.sourceImage.primaryPort = port;\n  }\n\n  public assignedLicense(): string {\n\n    let lic: BuildCommand = this.fileWithDescription(\"licenses\",'Product License');\n\n    if (lic) {\n      return lic.target.replace(/\\-/g, \" \");\n    } else {\n      return null;\n    }\n  }\n\n  public isCustomImage(): boolean {\n    return this.sourceImage.isCustom;\n  }\n\n  public fileForType(type: string, name?: string): BuildCommand {\n      return Builder._fileForSource(this.buildCommands, type, name, null);\n  }\n\n  public fileWithDescription(type: string, description: string): BuildCommand {\n      return Builder._fileForSource(this.buildCommands, type, null, description);\n  }\n\n  public removeFileForType(type: string, name?: string) {\n\n      return Builder._removeFileForType(this.buildCommands, type, name);\n  }\n\n  public static _fileForSource(buildCommands: BuildCommand[], type: string, name: string, description: string): BuildCommand {\n\n      let file: BuildCommand = null;\n\n      for (var i = 0; i  {\n         d.buildCommands.push(BuildCommand.make(b));\n       });\n     }\n\n     return d;\n  }\n}\n\nexport class Port {\n\n  public publicPort: string;\n  public serviceType: string;\n\n  constructor(public internal: string, public external: string, public description: string, public type?: string) {\n\n  }\n\n  public static makeArray(array: any[]): Port[] {\n\n    let ports: Port[] = [];\n\n    array.forEach((p) => {\n      let port: Port = new Port(p.internal, p.external, p.description, p.type);\n      port.publicPort = p.publicPort;\n      port.serviceType = p.serviceType;\n\n      ports.push(port);\n    });\n\n    return ports;\n  }\n}\n\nexport class Probe {\n\n  public path: string;\n  public port: string;\n  public initialDelaySeconds: number;\n  public periodSeconds: number;\n  public timeoutSeconds: number;\n\n  public static make(data: any): Probe {\n\n    let p = new Probe();\n    p.path = data.path;\n    p.port = data.port;\n    p.initialDelaySeconds = Number(data.initialDelaySeconds);\n    p.periodSeconds = Number(data.periodSeconds);\n    p.timeoutSeconds = Number(data.timeoutSeconds);\n\n    return p;\n  }\n}\n\nexport class Container {\n\n  public name: string;\n  public names: string[];\n  public active: string;\n  public type: string;\n  public description: string;\n  public hostname: string;\n  public secure: string;\n  public image: string;\n  public build: DockerBuild;\n  public ports: Port[];\n  public env: Arg[];\n  public volumes: Arg[];\n  public readinessProbe;\n  public livenessProbe;\n  public testStatus : TestStatus;\n  public adminUser: string;\n  public adminPassword: string;\n\n  // runtime only\n\n  public id: string;\n  public state: string;\n  public status: string;\n  public created: Date;\n\n  constructor() {\n\n    this.active = \"true\";\n    this.ports = [];\n    this.env = [];\n    this.volumes = [];\n  }\n\n  public copy() {\n    return Container.make(this);\n  }\n\n  public uniqueName(usesDedicatedRepo: boolean): string {\n\n    let repo: string = this.repository();\n\n    if (repo)\n      return repo + (usesDedicatedRepo ? \"/\" : \":\") + this.imageName();\n    else\n      return this.imageName();\n  }\n\n  public repository(): string {\n\n    if (this.image.indexOf(\":\") != -1) {\n\n      return this.image.substring(0, this.image.indexOf(\":\"));\n    } else {\n      return null;\n    }\n  }\n\n  public imageName(): string {\n\n    let name: string = this.image;\n\n    let idx: number = name.indexOf(\":\");\n\n    if (idx != -1) {\n\n      let lside = name.substring(0, idx);\n      let rside = name.substring(idx+1);\n\n      if (DockerImage.isVersionNumber(rside)) {\n\n        // name is on left side\n\n         if (this.image.lastIndexOf(\"/\") != -1) {\n          let idx: number = this.image.lastIndexOf(\"/\");\n          let rdx: number = this.image.indexOf(\":\");\n\n          name = this.image.substring(idx+1, rdx);\n        }\n      } else {\n\n        // name and perhaps version is in right side\n\n        name = rside;\n\n        if (name.indexOf(\"-\") != -1) {\n\n          let idx: number = name.lastIndexOf(\"-\");\n          let b4: string = name.substring(0, idx);\n          let af: string = name.substring(idx+1, name.length);\n\n          if (DockerImage.isVersionNumber(af)) {\n            name = b4;\n          }\n        }\n      }\n    }\n\n    return name;\n  }\n\n  public preferredImageVersion(): string {\n\n    if (this.image && this.image.indexOf(\":\")) {\n\n      let version: string = this.image.substring(this.image.indexOf(\":\")+1, this.image.length);\n\n      if (version.indexOf(\"-\") != -1) {\n        let idx: number = version.lastIndexOf(\"-\");\n        version = version.substring(idx+1, version.length);\n      }\n\n      // no versioning, only a name\n\n      if (!DockerImage.isVersionNumber(version))\n          version = \"latest\";\n\n      return version;\n    } else {\n\n      return \"latest\";\n    }\n  }\n\n  public static make(data: any): Container {\n\n    let c: Container = new Container();\n    c.names = data.names;\n    if (data.names)\n      c.name = data.names[0];\n    else\n      c.name = data.name;\n\n    c.active = data.active;\n    c.description = data.description;\n    c.hostname = data.hostname;\n    c.secure  = data.secure;\n    c.image = data.image;\n    c.type = data.type;\n    c.adminUser = data.adminUser;\n    c.adminPassword = data.adminPassword;\n\n    if (data.build)\n      c.build = DockerBuild.make(data.build);\n\n    if (data.ports)\n      c.ports = Port.makeArray(data.ports);\n\n    if (data.env)\n      c.env = Arg.makeArray(data.env);\n\n    if (data.volumes)\n      c.volumes = Arg.makeArray(data.volumes);\n\n    if (data.readinessProbe)\n      c.readinessProbe = Probe.make(data.readinessProbe);\n\n    if (data.livenessProbe)\n      c.livenessProbe = Probe.make(data.livenessProbe);\n\n    return c;\n  }\n\n  public environmentVariable(id: string): Arg {\n\n    var arg: Arg = null;\n\n    for (var i = 0; i  {\n          s.tests.push(Test.make(t));\n        });\n    }\n\n    return s;\n  }\n\n  public isActive(): boolean {\n\n    return (this.apiDeployType != \"none\" && this.apiDeployType != null) || this.stop == \"true\" || (this.apiMaturity != \"none\" &&  this.apiMaturity != null) ||\n                  (this.dockerAction != \"none\"  && this.dockerAction != null) || this.dockerTag != null || this.stop != null;\n  }\n\n  public summary(): string {\n\n      var status: string = null;\n\n      if (this.apiDeployType == \"deploy\")\n          status = \"Deploy API's \";\n      else if (this.apiDeployType == \"promote\")\n        status = \"Promote API's to \" + this.apiStage;\n\n      if (this.runTests == \"true\") {\n\n        if (status != null)\n          status = status + \", run tests\";\n        else\n          status = \"Run tests\";\n      }\n\n      if (this.apiMaturity) {\n\n        if (status != null)\n            status = status + \", and set maturity to \" + this.apiMaturity;\n        else\n          status = \"Set maturity to \" + this.apiMaturity;\n      }\n\n      if (this.dockerTag) {\n\n        if (status != null)\n          status = status + \", then tag image\";\n        else\n          status = \"Tag image \";\n      }\n\n      if (this.dockerAction) {\n        if (status != null)\n          status = status + \", \" + this.dockerAction;\n        else\n          status = this.dockerAction;\n\n        status = status + \" image\";\n      }\n\n      if (this.stop == \"true\") {\n        if (status != null)\n            status = status + \" before stopping\";\n        else\n            status = \"stop containers\";\n      }\n\n      if (this.pipelineAction) {\n\n        if (status != null)\n            status = status + \", then \" + this.pipelineAction + \" pipeline\";\n        else\n            status = \"and \" + this.pipelineAction + \" pipeline execution\";\n      }\n\n      return status;\n    }\n}\n\nexport class Stage {\n\n    public id: string;\n    public name: string;\n    public containerHost: string;\n    public useKubernetes: string;\n    public buildOnStart: string;\n    public deployments: Deployment[];\n    public onStart: Action;\n    public onFail: Action;\n    public onSuccess: Action;\n\n    constructor() {\n      this.deployments = [];\n      this.useKubernetes = \"false\";\n      this.buildOnStart = \"false\";\n      this.onStart = new Action();\n      this.onSuccess = new Action();\n      this.onFail = new Action();\n    }\n\n    public copy(): Stage {\n\n      let c = Stage.make(this);\n\n      c.id = this.id + \" copy\";\n      c.name = this.name + \" copy\";\n\n      return c;\n    }\n\n    public static make(data: any): Stage {\n\n      let s: Stage = new Stage();\n\n      s.name = data.name;\n      s.id = s.name;\n      s.containerHost = data.containerHost;\n      s.useKubernetes = data.useKubernetes;\n      s.buildOnStart = data.buildOnStart;\n\n      if (data.deployments) {\n        data.deployments.forEach((c) => {\n          s.deployments.push(Deployment.make(c));\n        });\n      }\n\n      if (data.onStart) {\n        s.onStart = Action.make(data.onStart);\n      }\n\n      if (data.onSuccess) {\n        s.onSuccess = Action.make(data.onSuccess);\n      }\n\n      if (data.onFail) {\n        s.onFail = Action.make(data.onFail);\n      }\n\n      return s;\n    }\n}\n\nexport class Deployment {\n\n  public name: string;\n  public hostname: string;\n  public appName: string;\n  public apis: APIDefinition[];\n  public containers: Container[];\n  public replicas: string;\n  public serviceType: string;\n  public restartPolicy: string;\n  public requiresMonitoring: string;\n  public dependsOn: string;\n\n  constructor() {\n\n    this.containers = [];\n    this.apis = [];\n  }\n\n  public copy() {\n    return Deployment.make(this);\n  }\n\n  public static make(data: any): Deployment {\n\n    let s: Deployment = new Deployment();\n    s.name = data.name;\n    s.hostname = data.hostname;\n    s.replicas = data.replicas;\n    s.appName = data.appName;\n    s.serviceType = data.serviceType;\n    s.restartPolicy = data.restartPolicy;\n    s.requiresMonitoring = data.requiresMonitoring;\n    s.dependsOn = data.dependsOn;\n\n    if (data.apis) {\n       data.apis.forEach((a) => {\n         s.apis.push(APIDefinition.make(a));\n       });\n    }\n\n    if (data.containers) {\n       data.containers.forEach((c) => {\n         s.containers.push(Container.make(c));\n       });\n    }\n\n    return s;\n  }\n\n  public containerForType(type: string): Container {\n\n    let found: Container = null;\n\n    this.containers.forEach((c) => {\n\n      if (c.type == type) {\n        found = c;\n      }\n    });\n\n    return found;\n  }\n\n  public removeContainer(c: Container) {\n\n    var found : number = -1;\n\n    for (var i = 0; i  {\n         p.builds.push(Builder.make(i));\n       });\n    }\n\n    if (data.deployments) {\n      p.deployments = [];\n       data.deployments.forEach((i) => {\n         p.deployments.push(Deployment.make(i));\n       });\n    }\n\n    return p;\n  }\n\n  public serviceFor(id: string): Deployment {\n\n      let found: Deployment = null;\n\n      for (var z = 0; z  {\n         p.stages.push(Stage.make(s));\n       });\n    }\n\n    return p;\n  }\n}\n\nfunction stringifyReplacer(key, value) {\n  const originalObject = this[key];\n  if(originalObject instanceof Map) {\n    return {\n      dataType: 'Map',\n      value: Array.from(originalObject.entries()), // or with spread: value: [...originalObject]\n    };\n  } else {\n    return value;\n  }\n}\n\nfunction parserReviver(key, value) {\n  if(typeof value === 'object' && value !== null) {\n    if (value.dataType === 'Map') {\n      return new Map(value.value);\n    }\n  }\n  return value;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/RuntimeActionsDirective.html":{"url":"directives/RuntimeActionsDirective.html","title":"directive - RuntimeActionsDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  RuntimeActionsDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/k8s/runtime-actions.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [runtime-actions]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                viewContainerRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainerRef: ViewContainerRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/k8s/runtime-actions.directive.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            viewContainerRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ViewContainerRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/k8s/runtime-actions.directive.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ViewContainerRef } \t\t\t\t\tfrom '@angular/core';\n\nimport { K8sDeploymentDefinition }                      from '../../models/k8s-deployment-definition';\n\n@Directive({\n  selector: '[runtime-actions]',\n})\n\nexport class RuntimeActionsDirective {\n  constructor(public viewContainerRef: ViewContainerRef) { }\n}\n\nexport interface ActionsComponent {\n  selectedDeployment: K8sDeploymentDefinition;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RuntimeDetailsComponent.html":{"url":"components/RuntimeDetailsComponent.html","title":"component - RuntimeDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RuntimeDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/k8s/runtime-details.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ../../templates/k8s/runtime-details.css\n            \n\n\n\n            \n                templateUrl\n                ../../templates/k8s/runtime-details.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actions\n                            \n                            \n                                    Public\n                                deployments\n                            \n                            \n                                    Public\n                                panelOpenState\n                            \n                            \n                                    Public\n                                selectedDeployment\n                            \n                            \n                                selectedDeploymentControl\n                            \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                back\n                            \n                            \n                                    Public\n                                deploymentSelectionChanged\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Private\n                                setActionsComponent\n                            \n                            \n                                    Private\n                                showActions\n                            \n                            \n                                    Public\n                                updatePodCount\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                actionComponent\n                            \n                            \n                                namespace\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _route: ActivatedRoute, _settings: Settings, _k8sService: K8sService, componentFactoryResolver: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/k8s/runtime-details.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _settings\n                                                  \n                                                        \n                                                                        Settings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _k8sService\n                                                  \n                                                        \n                                                                        K8sService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        actionComponent\n                    \n                \n                \n                    \n                        Type :         Type\n\n                    \n                \n                \n                    \n                        Default value : RuntimeScaleComponent\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/k8s/runtime-details.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        namespace\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/k8s/runtime-details.component.ts:29\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            back\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    back()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/k8s/runtime-details.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deploymentSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deploymentSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/k8s/runtime-details.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/k8s/runtime-details.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setActionsComponent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setActionsComponent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/k8s/runtime-details.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            showActions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showActions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/k8s/runtime-details.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updatePodCount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePodCount(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/k8s/runtime-details.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     RuntimeActionsDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(RuntimeActionsDirective)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/k8s/runtime-details.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            deployments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     K8sDeploymentDefinition[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/k8s/runtime-details.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            panelOpenState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/k8s/runtime-details.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectedDeployment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         K8sDeploymentDefinition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/k8s/runtime-details.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedDeploymentControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSelect\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatSelect)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/k8s/runtime-details.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/k8s/runtime-details.component.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ChangeDetectorRef, OnInit, ComponentFactoryResolver, Input, Type,\n                                       ViewChild }      from '@angular/core';\nimport { Router, ActivatedRoute }                       from '@angular/router';\n\nimport { MatSelect }                                    from '@angular/material';\n\nimport { Settings }                                     from '../../settings';\n\nimport { K8sDeploymentDefinition }                      from '../../models/k8s-deployment-definition';\nimport { K8sDeployment }                                from '../../models/k8s-deployment';\nimport { K8sService }                                   from '../../services/k8s.service';\n\nimport { RuntimeActionsDirective, ActionsComponent }    from './runtime-actions.directive';\n\nimport { RuntimeScaleComponent }                        from './runtime-scale.component';\nimport { RuntimeUpdateComponent }                       from './runtime-update.component';\n\n@Component({\n  templateUrl: '../../templates/k8s/runtime-details.html',\n  styleUrls: ['../../templates/k8s/runtime-details.css']\n})\n\nexport class RuntimeDetailsComponent implements OnInit {\n\n  @Input()\n  public actionComponent: Type = RuntimeScaleComponent;\n\n  @Input()\n  public namespace: string;\n  public selectedDeployment: K8sDeploymentDefinition;\n\n  public title: string;\n  public deployments: K8sDeploymentDefinition[];\n\n  public panelOpenState: boolean;\n\n  @ViewChild(MatSelect) selectedDeploymentControl: MatSelect;\n\n  @ViewChild(RuntimeActionsDirective) actions: RuntimeActionsDirective;\n\n\tconstructor(private _router: Router, private _route: ActivatedRoute, private _settings: Settings, private _k8sService: K8sService, private componentFactoryResolver: ComponentFactoryResolver) {\n\n    this._settings.values().subscribe((settings) => {\n\n        this.namespace = settings.k8sNamespace;\n        this._k8sService.deployments(settings.k8sNamespace, true).subscribe((d) => {\n          this.deployments = d;\n        });\n    });\n\n    if (K8sDeployment.currentDeployment) {\n      this.selectedDeployment = K8sDeployment.currentDeployment;\n    }\n\n    if (this._route.snapshot.url.toString().indexOf(\"scale\") != -1) {\n      this.actionComponent = RuntimeScaleComponent;\n      this.title = \"Scale Performance\";\n    } else if (this._route.snapshot.url.toString().indexOf(\"update\") != -1) {\n       this.title = \"Update Container Version(s)\";\n       this.actionComponent = RuntimeUpdateComponent;\n    }\n  }\n\n  public ngOnInit() {\n\n    if (this.selectedDeployment) {\n      this.selectedDeploymentControl.value = this.selectedDeployment;\n      \n       this.showActions();\n    }\n  }\n\n  public deploymentSelectionChanged(event: any) {\n\n    this.selectedDeployment = event.value;\n    this.showActions();\n  }\n\n  public updatePodCount(event: any) {\n\n  }\n\n  public back() {\n\n    this._router.navigate([\"/runtime\"]);\n  }\n\n  private showActions() {\n\n    let ref: RuntimeDetailsComponent = this;\n      setTimeout(() => {\n        ref.setActionsComponent();\n    });\n  }\n\n  private setActionsComponent() {\n\n    let componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.actionComponent);\n\n    if (this.actions) {\n      let viewContainerRef = this.actions.viewContainerRef;\n      viewContainerRef.clear();\n\n      let componentRef = viewContainerRef.createComponent(componentFactory);\n      (componentRef.instance).selectedDeployment = this.selectedDeployment;\n    }\n  }\n}\n    \n\n    \n        \n\n  \n    {{title}}\n    \n  \n  \n    \n      \n        \n          \n            \n             Deployment Details\n            \n            \n               \n                Select Deployment (required)\n                \n                  \n                    {{deployment.name}}\n                  \n                \n              \n            \n          \n          \n          \n        \n        \n          \n            \n              Pods\n            \n            \n              Runtime Environments\n            \n          \n\n          \n        \n      \n\n      \n    \n  \n\n\n    \n\n    \n                \n                    ../../templates/k8s/runtime-details.css\n                \n                table {\n  width: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{title}}                                                             Deployment Details                                                       Select Deployment (required)                                                      {{deployment.name}}                                                                                                                                              Pods                                      Runtime Environments                                                          '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about-app'},{'name': 'ActionComponent', 'selector': 'action'},{'name': 'ApiGatewayInstallerComponent', 'selector': 'jc-apigw-install'},{'name': 'ApiMicroGatewayInstallerComponent', 'selector': 'jc-apimg-install'},{'name': 'ApiPortalInstallerComponent', 'selector': 'jc-apipr-installer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildCommandsComponent', 'selector': 'build-commands'},{'name': 'BuildComponent', 'selector': 'build'},{'name': 'BuildExeComponent', 'selector': 'build-exe'},{'name': 'BuildImageComponent', 'selector': 'build-solution'},{'name': 'BuildInstallComponent', 'selector': 'build-install'},{'name': 'BuildPackagesComponent', 'selector': 'build-package'},{'name': 'ContainerComponent', 'selector': 'container'},{'name': 'ContainersComponent', 'selector': 'app-containers'},{'name': 'DeploymentDetailsComponent', 'selector': 'jc-deployment-details'},{'name': 'DeploymentListComponent', 'selector': 'jc-k8s-deployments'},{'name': 'DockerImageChooserComponent', 'selector': 'docker-image-chooser'},{'name': 'DockerImageListComponent', 'selector': 'jc-docker-images'},{'name': 'DockerImageVersionsComponent', 'selector': 'jc-docker-image-versions'},{'name': 'EditContainerComponent', 'selector': 'edit-container'},{'name': 'GitSourcesComponent', 'selector': 'git-source'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'InstallerComponent', 'selector': 'jc-install'},{'name': 'MicroServiceBuilderComponent', 'selector': 'jc-msc-configure'},{'name': 'MicroServiceInstallerComponent', 'selector': 'jc-msc-install'},{'name': 'PodsListComponent', 'selector': 'jc-pods'},{'name': 'RuntimeContainersComponent', 'selector': 'runtime-containers'},{'name': 'RuntimeDeployComponent', 'selector': 'runtime-deploy'},{'name': 'RuntimeDetailsComponent', 'selector': ''},{'name': 'RuntimeK8sComponent', 'selector': 'runtime'},{'name': 'RuntimeScaleComponent', 'selector': 'jc-runtime-scale'},{'name': 'RuntimeStageComponent', 'selector': 'runtime-stage'},{'name': 'RuntimeUpdateComponent', 'selector': ''},{'name': 'SagImageAlerterComponent', 'selector': 'sag-image-alerter'},{'name': 'ServicePropertiesComponent', 'selector': 'k8s-props'},{'name': 'SettingsComponent', 'selector': 'home'},{'name': 'SimpleNameComponent', 'selector': 'name-dialog'},{'name': 'StagingComponent', 'selector': 'staging'},{'name': 'TestCaseComponent', 'selector': 'test-case'},{'name': 'TestDefinitionComponent', 'selector': 'test-definitions'},{'name': 'TestHistoryComponent', 'selector': 'test-history'},{'name': 'TestRunComponent', 'selector': 'test-reun'},{'name': 'UMInstallerComponent', 'selector': 'jc-um-install'},{'name': 'UploadButtonComponent', 'selector': 'file-uploader-button'}];\n    var DIRECTIVES = [{'name': 'BuildImageChooseDirective', 'selector': '[builder]'},{'name': 'CancelCdkDrag', 'selector': '[appCancelCdkDrag]'},{'name': 'NgFileDrop', 'selector': '[ng-file-drop]'},{'name': 'NgFileSelect', 'selector': '[ng-file-select]'},{'name': 'RuntimeActionsDirective', 'selector': '[runtime-actions]'}];\n    var ACTUAL_COMPONENT = {'name': 'RuntimeDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RuntimeK8sComponent.html":{"url":"components/RuntimeK8sComponent.html","title":"component - RuntimeK8sComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RuntimeK8sComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/k8s/runtime-k8s.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                runtime\n            \n\n            \n                styleUrls\n                ../../templates/k8s/runtime-k8s.css\n            \n\n\n\n            \n                templateUrl\n                ../../templates/k8s/runtime-k8s.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                k8sDashboardUrl\n                            \n                            \n                                    Public\n                                namespace\n                            \n                            \n                                    Public\n                                namespaces\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                namespaceSelectionChanged\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_settings: Settings, _k8sService: K8sService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/k8s/runtime-k8s.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _settings\n                                                  \n                                                        \n                                                                        Settings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _k8sService\n                                                  \n                                                        \n                                                                        K8sService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            namespaceSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    namespaceSelectionChanged()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/k8s/runtime-k8s.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/k8s/runtime-k8s.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            k8sDashboardUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/k8s/runtime-k8s.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            namespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/k8s/runtime-k8s.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            namespaces\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/k8s/runtime-k8s.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ChangeDetectorRef, OnInit }   \t  from '@angular/core';\n\nimport { MediaMatcher }                               from '@angular/cdk/layout';\n\nimport { MatAccordion }                               from '@angular/material';\n\nimport { K8sService }                       \t\t  from '../../services/k8s.service';\n\nimport { Settings }                                   from '../../settings';\n\n@Component({\n  selector: 'runtime',\n  templateUrl: '../../templates/k8s/runtime-k8s.html',\n  styleUrls: ['../../templates/k8s/runtime-k8s.css']\n})\n\nexport class RuntimeK8sComponent implements OnInit {\n\n\tpublic namespace: string;\n    public namespaces: string[];\n\n    public k8sDashboardUrl: string;\n\n\tpublic constructor(private _settings: Settings, private _k8sService: K8sService) {\n\n\t\tthis._settings.values().subscribe((v) => {\n\n\t\t\tif (v.k8sNamespace)\n\t\t\t\tthis.namespace = v.k8sNamespace;\n\n\t\t\tif (v.k8sUrl) {\n\t\t\t\tthis.k8sDashboardUrl = v.k8sUrl;\n\n\t\t\t\tlet i: number = this.k8sDashboardUrl.lastIndexOf(\":\");\n\t\t\t\tthis.k8sDashboardUrl = this.k8sDashboardUrl.substring(0, i+1) + \"8443\";\n\t\t\t} else {\n\t\t\t\tthis.k8sDashboardUrl = \"https://host.docker.internal:8443\";\n\t\t\t}\n\n\t\t\tthis._k8sService.namespaces(v.k8sUrl, v.k8sToken).subscribe((names) => {\n\t\t        this.namespaces = names;\n\n\t\t        if (!this.namespace)\n\t\t        \tthis.namespace = this.namespaces[0];\n\t\t    });\n\n\t\t    this._settings.setCurrentPage(\"k8s\");\n\t\t});\n\t}\n\n\tpublic ngOnInit() {\n\n\t}\n\n\tpublic namespaceSelectionChanged() {\n\t\tthis._settings.setCurrentNamespace(this.namespace);\n\t}\n}\n    \n\n    \n        \n  Kubernetes Deployments\n  \n    \n    \t\n\t  \t\t\n\t  \t\t\t\n\t                Select Name space\n\t                \n\t                  \n\t                    {{name}}\n\t                  \n\t                \n\t              \n\t  \t\t\n  \t\t\n  \t\t\n    \t\t\n    \t\n    \n     K8s Dashboard\n  \n\n    \n\n    \n                \n                    ../../templates/k8s/runtime-k8s.css\n                \n                a {\n\ttext-decoration: none !important;\n\tcolor: white !important;\n\tbackground-color: rgba(255,255,255,0.1);\n\tborder-radius: 10px;\n\tpadding-left: 5px;\n\tpadding-right: 5px;\n\tpadding-top: 2px;\n\tpadding-bottom: 2px;\n\tmargin-left: 10px;\n}\na:visited {\n\tcolor: white;\n}\na:hover {\n\tbackground-color: gray;\n}\n\n.toolbar {\n\theight: 50px;\n\tbackground-color: rgb(23, 115, 187);\n}\n.toolbar-content {\n\tdisplay: flex;\n\talign-items: stretch;\n\twidth: 100%;\n\theight: 30px;\n\tpadding: 5px;\n}\n.toolbar-title-column {\n\tdisplay: flex;\n\tflex-direction: column;\n\tflex-grow: 0;\n\twidth: 250px;\n\tcolor: white;\n\tfont-size: 10px;\n}\n.toolbar-right-column {\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: flex-end;\n\tflex-grow: 2;\n\tcolor: white;\n}\n.toolbar-links {\n\tfont-size: 11px;\n\tline-height: 21px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Kubernetes Deployments          \t\t  \t\t\t  \t\t\t\t                Select Name space\t                \t                  \t                    {{name}}\t                  \t                \t              \t  \t\t  \t\t  \t\t    \t\t    \t         K8s Dashboard  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about-app'},{'name': 'ActionComponent', 'selector': 'action'},{'name': 'ApiGatewayInstallerComponent', 'selector': 'jc-apigw-install'},{'name': 'ApiMicroGatewayInstallerComponent', 'selector': 'jc-apimg-install'},{'name': 'ApiPortalInstallerComponent', 'selector': 'jc-apipr-installer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildCommandsComponent', 'selector': 'build-commands'},{'name': 'BuildComponent', 'selector': 'build'},{'name': 'BuildExeComponent', 'selector': 'build-exe'},{'name': 'BuildImageComponent', 'selector': 'build-solution'},{'name': 'BuildInstallComponent', 'selector': 'build-install'},{'name': 'BuildPackagesComponent', 'selector': 'build-package'},{'name': 'ContainerComponent', 'selector': 'container'},{'name': 'ContainersComponent', 'selector': 'app-containers'},{'name': 'DeploymentDetailsComponent', 'selector': 'jc-deployment-details'},{'name': 'DeploymentListComponent', 'selector': 'jc-k8s-deployments'},{'name': 'DockerImageChooserComponent', 'selector': 'docker-image-chooser'},{'name': 'DockerImageListComponent', 'selector': 'jc-docker-images'},{'name': 'DockerImageVersionsComponent', 'selector': 'jc-docker-image-versions'},{'name': 'EditContainerComponent', 'selector': 'edit-container'},{'name': 'GitSourcesComponent', 'selector': 'git-source'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'InstallerComponent', 'selector': 'jc-install'},{'name': 'MicroServiceBuilderComponent', 'selector': 'jc-msc-configure'},{'name': 'MicroServiceInstallerComponent', 'selector': 'jc-msc-install'},{'name': 'PodsListComponent', 'selector': 'jc-pods'},{'name': 'RuntimeContainersComponent', 'selector': 'runtime-containers'},{'name': 'RuntimeDeployComponent', 'selector': 'runtime-deploy'},{'name': 'RuntimeDetailsComponent', 'selector': ''},{'name': 'RuntimeK8sComponent', 'selector': 'runtime'},{'name': 'RuntimeScaleComponent', 'selector': 'jc-runtime-scale'},{'name': 'RuntimeStageComponent', 'selector': 'runtime-stage'},{'name': 'RuntimeUpdateComponent', 'selector': ''},{'name': 'SagImageAlerterComponent', 'selector': 'sag-image-alerter'},{'name': 'ServicePropertiesComponent', 'selector': 'k8s-props'},{'name': 'SettingsComponent', 'selector': 'home'},{'name': 'SimpleNameComponent', 'selector': 'name-dialog'},{'name': 'StagingComponent', 'selector': 'staging'},{'name': 'TestCaseComponent', 'selector': 'test-case'},{'name': 'TestDefinitionComponent', 'selector': 'test-definitions'},{'name': 'TestHistoryComponent', 'selector': 'test-history'},{'name': 'TestRunComponent', 'selector': 'test-reun'},{'name': 'UMInstallerComponent', 'selector': 'jc-um-install'},{'name': 'UploadButtonComponent', 'selector': 'file-uploader-button'}];\n    var DIRECTIVES = [{'name': 'BuildImageChooseDirective', 'selector': '[builder]'},{'name': 'CancelCdkDrag', 'selector': '[appCancelCdkDrag]'},{'name': 'NgFileDrop', 'selector': '[ng-file-drop]'},{'name': 'NgFileSelect', 'selector': '[ng-file-select]'},{'name': 'RuntimeActionsDirective', 'selector': '[runtime-actions]'}];\n    var ACTUAL_COMPONENT = {'name': 'RuntimeK8sComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RuntimeScaleComponent.html":{"url":"components/RuntimeScaleComponent.html","title":"component - RuntimeScaleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RuntimeScaleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/k8s/runtime-scale.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    ActionsComponent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                jc-runtime-scale\n            \n\n\n\n\n            \n                templateUrl\n                ../../templates/k8s/runtime-scale.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                haveChanges\n                            \n                            \n                                    Public\n                                podsCount\n                            \n                            \n                                updateButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                podCountChange\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedDeployment\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_snackBar: MatSnackBar, _k8sService: K8sService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/k8s/runtime-scale.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _k8sService\n                                                  \n                                                        \n                                                                        K8sService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selectedDeployment\n                    \n                \n                \n                    \n                        Type :         K8sDeploymentDefinition\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/k8s/runtime-scale.component.ts:24\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/k8s/runtime-scale.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            podCountChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    podCountChange(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/k8s/runtime-scale.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/k8s/runtime-scale.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            haveChanges\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/k8s/runtime-scale.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            podsCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 5\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/k8s/runtime-scale.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateButton\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatButton\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('updateButton', {read: MatButton})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/k8s/runtime-scale.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ChangeDetectorRef, OnInit, Input, \n                                           ViewChild }  from '@angular/core';\nimport { Router }                                       from '@angular/router';\n\nimport { MatSelect, MatButton }                         from '@angular/material';\nimport {MatSnackBar}                                    from '@angular/material/snack-bar';\n\nimport { Settings }                                     from '../../settings';\n\nimport { K8sDeploymentDefinition }                      from '../../models/k8s-deployment-definition';\nimport { K8sDeployment }                                from '../../models/k8s-deployment';\nimport { K8sService }                                   from '../../services/k8s.service';\n\nimport { ActionsComponent }                             from './runtime-actions.directive';\n\n@Component({\n  selector: 'jc-runtime-scale',\n  templateUrl: '../../templates/k8s/runtime-scale.html'\n})\n\nexport class RuntimeScaleComponent implements OnInit, ActionsComponent {\n\n  @Input()\n  public selectedDeployment: K8sDeploymentDefinition;\n\n  public podsCount: number = 5;\n  public haveChanges: boolean = false;\n\n  @ViewChild('updateButton', {read: MatButton}) updateButton: MatButton;\n\n  public constructor(private _snackBar: MatSnackBar, private _k8sService: K8sService) {\n\n  }\n\n  public ngOnInit() {\n\n    this.podsCount = this.selectedDeployment.replicas;\n  }\n\n  public podCountChange(event: any) {\n\n    if (this.updateButton)\n      this.updateButton.disabled = false;\n\n    this.haveChanges = this.podsCount != this.selectedDeployment.replicas;   \n  }\n\n  public update(event: any) {\n\n    this.updateButton.disabled = true;\n\n    this._k8sService.scalePods(this.selectedDeployment, +this.podsCount).subscribe((result) => {\n\n      if (result)\n        this._snackBar.open(\"Update Successed\", \"Dismiss\", {\n          duration: 2000,\n        });\n      else\n         this._snackBar.open(\"Update failed\", \"Dismiss\", {\n          duration: 2000,\n        });\n    });\n  }\n}\n    \n\n    \n        \n    \n      Manage Pod instances\n    \n  \n  \n      Update\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Manage Pod instances              Update  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about-app'},{'name': 'ActionComponent', 'selector': 'action'},{'name': 'ApiGatewayInstallerComponent', 'selector': 'jc-apigw-install'},{'name': 'ApiMicroGatewayInstallerComponent', 'selector': 'jc-apimg-install'},{'name': 'ApiPortalInstallerComponent', 'selector': 'jc-apipr-installer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildCommandsComponent', 'selector': 'build-commands'},{'name': 'BuildComponent', 'selector': 'build'},{'name': 'BuildExeComponent', 'selector': 'build-exe'},{'name': 'BuildImageComponent', 'selector': 'build-solution'},{'name': 'BuildInstallComponent', 'selector': 'build-install'},{'name': 'BuildPackagesComponent', 'selector': 'build-package'},{'name': 'ContainerComponent', 'selector': 'container'},{'name': 'ContainersComponent', 'selector': 'app-containers'},{'name': 'DeploymentDetailsComponent', 'selector': 'jc-deployment-details'},{'name': 'DeploymentListComponent', 'selector': 'jc-k8s-deployments'},{'name': 'DockerImageChooserComponent', 'selector': 'docker-image-chooser'},{'name': 'DockerImageListComponent', 'selector': 'jc-docker-images'},{'name': 'DockerImageVersionsComponent', 'selector': 'jc-docker-image-versions'},{'name': 'EditContainerComponent', 'selector': 'edit-container'},{'name': 'GitSourcesComponent', 'selector': 'git-source'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'InstallerComponent', 'selector': 'jc-install'},{'name': 'MicroServiceBuilderComponent', 'selector': 'jc-msc-configure'},{'name': 'MicroServiceInstallerComponent', 'selector': 'jc-msc-install'},{'name': 'PodsListComponent', 'selector': 'jc-pods'},{'name': 'RuntimeContainersComponent', 'selector': 'runtime-containers'},{'name': 'RuntimeDeployComponent', 'selector': 'runtime-deploy'},{'name': 'RuntimeDetailsComponent', 'selector': ''},{'name': 'RuntimeK8sComponent', 'selector': 'runtime'},{'name': 'RuntimeScaleComponent', 'selector': 'jc-runtime-scale'},{'name': 'RuntimeStageComponent', 'selector': 'runtime-stage'},{'name': 'RuntimeUpdateComponent', 'selector': ''},{'name': 'SagImageAlerterComponent', 'selector': 'sag-image-alerter'},{'name': 'ServicePropertiesComponent', 'selector': 'k8s-props'},{'name': 'SettingsComponent', 'selector': 'home'},{'name': 'SimpleNameComponent', 'selector': 'name-dialog'},{'name': 'StagingComponent', 'selector': 'staging'},{'name': 'TestCaseComponent', 'selector': 'test-case'},{'name': 'TestDefinitionComponent', 'selector': 'test-definitions'},{'name': 'TestHistoryComponent', 'selector': 'test-history'},{'name': 'TestRunComponent', 'selector': 'test-reun'},{'name': 'UMInstallerComponent', 'selector': 'jc-um-install'},{'name': 'UploadButtonComponent', 'selector': 'file-uploader-button'}];\n    var DIRECTIVES = [{'name': 'BuildImageChooseDirective', 'selector': '[builder]'},{'name': 'CancelCdkDrag', 'selector': '[appCancelCdkDrag]'},{'name': 'NgFileDrop', 'selector': '[ng-file-drop]'},{'name': 'NgFileSelect', 'selector': '[ng-file-select]'},{'name': 'RuntimeActionsDirective', 'selector': '[runtime-actions]'}];\n    var ACTUAL_COMPONENT = {'name': 'RuntimeScaleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RuntimeUpdateComponent.html":{"url":"components/RuntimeUpdateComponent.html","title":"component - RuntimeUpdateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RuntimeUpdateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/k8s/runtime-update.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    ActionsComponent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ../../templates/k8s/runtime-update.css\n            \n\n\n\n            \n                templateUrl\n                ../../templates/k8s/runtime-update.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _dialogRef\n                            \n                            \n                                    Private\n                                _image\n                            \n                            \n                                    Public\n                                haveActions\n                            \n                            \n                                    Public\n                                references\n                            \n                            \n                                rollbackButton\n                            \n                            \n                                    Public\n                                rollbackPossible\n                            \n                            \n                                updateButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                commitUpdate\n                            \n                            \n                                    Private\n                                confirmUpdate\n                            \n                            \n                                    Public\n                                flagHaveActions\n                            \n                            \n                                    Public\n                                implementAction\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                rollback\n                            \n                            \n                                    Private\n                                updateVersion\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedDeployment\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_dockerService: DockerService, _k8sService: K8sService, _matDialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/k8s/runtime-update.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _dockerService\n                                                  \n                                                        \n                                                                        DockerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _k8sService\n                                                  \n                                                        \n                                                                        K8sService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _matDialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selectedDeployment\n                    \n                \n                \n                    \n                        Type :         K8sDeploymentDefinition\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/k8s/runtime-update.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            commitUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    commitUpdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/k8s/runtime-update.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            confirmUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    confirmUpdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/k8s/runtime-update.component.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            flagHaveActions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    flagHaveActions(haveChanges: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/k8s/runtime-update.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    haveChanges\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            implementAction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    implementAction(action: Action)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/k8s/runtime-update.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                Action\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/k8s/runtime-update.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            rollback\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    rollback()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/k8s/runtime-update.component.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateVersion\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateVersion(image: DockerImage)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/k8s/runtime-update.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    image\n                                    \n                                                DockerImage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/k8s/runtime-update.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _image\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DockerImage\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/k8s/runtime-update.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            haveActions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/k8s/runtime-update.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            references\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/k8s/runtime-update.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rollbackButton\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatButton\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('rollbackButton', {read: MatButton})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/k8s/runtime-update.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rollbackPossible\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/k8s/runtime-update.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateButton\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatButton\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('updateButton', {read: MatButton})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/k8s/runtime-update.component.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ChangeDetectorRef, Input, ViewChild,\n\t\t\t\t\t\t\tOnInit, OnDestroy } \t\tfrom '@angular/core';\n\nimport { MatButton, MatDialog }                         from '@angular/material';\n\nimport { DockerImage, VersionType }                   \tfrom '../../models/docker-image';\n\nimport { K8sDeploymentDefinition }                      from '../../models/k8s-deployment-definition';\nimport { K8sDeployment }                                from '../../models/k8s-deployment';\nimport { K8sService }                                   from '../../services/k8s.service';\nimport { DockerService }                                from '../../services/docker.service';\n\nimport { ActionsComponent }                             from './runtime-actions.directive';\nimport { Action }\t\t\t\t\t\t\t\t\t\t                    from '../elements/docker-images-list.component';\nimport { DockerImageVersionsComponent }\t\t\t\t\t        from '../elements/docker-image-versions.component';\n\n@Component({\n  templateUrl: '../../templates/k8s/runtime-update.html',\n  styleUrls: ['../../templates/k8s/runtime-update.css']\n})\n\nexport class RuntimeUpdateComponent implements OnInit, ActionsComponent {\n\n\t  @Input()\n  \tpublic selectedDeployment: K8sDeploymentDefinition;\n\n  \tpublic haveActions: boolean = false;\n  \tpublic rollbackPossible: boolean = false;\n\n  \tpublic references: any[];\n\n  \tprivate _dialogRef: any;\n  \tprivate _image: DockerImage;\n\n  \t@ViewChild('updateButton', {read: MatButton}) updateButton: MatButton;\n  \t@ViewChild('rollbackButton', {read: MatButton}) rollbackButton: MatButton;\n\n  \tpublic constructor(private _dockerService: DockerService, private _k8sService: K8sService, private _matDialog: MatDialog) {\n\n  \t}\n\n  \tpublic ngOnInit() {\n\n  \t\tthis.references = [];\n\n      this.selectedDeployment.containers.forEach((c) => {\n        this.references.push({name: c.name(), version: c.version()});\n      });\n  \t}\n\n  \tpublic implementAction(action: Action) {\n\n  \t\tthis._image = action.image;\n\n  \t\tthis._dockerService.versions(action.image.uniqueName()).subscribe((images) => {\n\n        let ref: RuntimeUpdateComponent = this;\n        this._dialogRef = this._matDialog.open(DockerImageVersionsComponent, {\n          height: '80%',\n          width: '80%',\n          data: { dataSource: images, currentVersion: action.image.version(), selectHandler: (image) => {\n\n              if (image != null)\n                ref.updateVersion(image);\n              else\n               ref._dialogRef.close();\n\n            }}\n        });\n      });\n  \t}\n\n    public flagHaveActions(haveChanges: boolean) {\n\n      this.haveActions = haveChanges;\n\n      if (this.updateButton)\n        this.updateButton.disabled = false;\n    }\n\n     private updateVersion(image: DockerImage) {\n\n      let haveChange: boolean = false;\n\n      this._image.testStatus = image.testStatus;\n      \n      let nextVersion: string = this._image.latestVersion().version();\n\n      this.selectedDeployment.containers.forEach((c) => {\n\n         if (c.name == image.name) {\n           c.setVersion(nextVersion);\n           c.testStatus = image.testStatus;\n         }\n\n         haveChange = haveChange || nextVersion != c.version();\n       });\n\n      this._dialogRef.close();\n\n      if (haveChange)\n        this.flagHaveActions(true);\n    }\n\n  \tpublic commitUpdate() {\n  \t\t\n  \t\tthis.updateButton.disabled = true;\n\n  \t\tthis._k8sService.updateVersion(this.selectedDeployment).subscribe(result=> {\n\n  \t\t\tthis.haveActions = false;\n  \t\t\tthis.rollbackPossible = true;\n        this.confirmUpdate();\n  \t\t});\n  \t}\n\n  \tpublic rollback() {\n  \t\t\n  \t\tthis.rollbackButton.disabled = true;\n\n  \t\tthis._k8sService.rollbackLastChange(this.selectedDeployment).subscribe(result=> {\n\n  \t\t\tthis.rollbackButton.disabled = false;\n  \t\t\tthis.updateButton.disabled = false;\n  \t\t\tthis.haveActions = false;\n  \t\t\tthis.rollbackPossible = false;\n  \t\t});\n  \t}\n\n     private confirmUpdate() {\n\n      let refs: any[] = [];\n\n      for (var i=0; i \n    \n\n    \n        \n  \n    Images\n  \n  \n  \n    Rollback\n    Update\n  \n\n    \n\n    \n                \n                    ../../templates/k8s/runtime-update.css\n                \n                table {\n  width: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Images          Rollback    Update  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about-app'},{'name': 'ActionComponent', 'selector': 'action'},{'name': 'ApiGatewayInstallerComponent', 'selector': 'jc-apigw-install'},{'name': 'ApiMicroGatewayInstallerComponent', 'selector': 'jc-apimg-install'},{'name': 'ApiPortalInstallerComponent', 'selector': 'jc-apipr-installer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildCommandsComponent', 'selector': 'build-commands'},{'name': 'BuildComponent', 'selector': 'build'},{'name': 'BuildExeComponent', 'selector': 'build-exe'},{'name': 'BuildImageComponent', 'selector': 'build-solution'},{'name': 'BuildInstallComponent', 'selector': 'build-install'},{'name': 'BuildPackagesComponent', 'selector': 'build-package'},{'name': 'ContainerComponent', 'selector': 'container'},{'name': 'ContainersComponent', 'selector': 'app-containers'},{'name': 'DeploymentDetailsComponent', 'selector': 'jc-deployment-details'},{'name': 'DeploymentListComponent', 'selector': 'jc-k8s-deployments'},{'name': 'DockerImageChooserComponent', 'selector': 'docker-image-chooser'},{'name': 'DockerImageListComponent', 'selector': 'jc-docker-images'},{'name': 'DockerImageVersionsComponent', 'selector': 'jc-docker-image-versions'},{'name': 'EditContainerComponent', 'selector': 'edit-container'},{'name': 'GitSourcesComponent', 'selector': 'git-source'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'InstallerComponent', 'selector': 'jc-install'},{'name': 'MicroServiceBuilderComponent', 'selector': 'jc-msc-configure'},{'name': 'MicroServiceInstallerComponent', 'selector': 'jc-msc-install'},{'name': 'PodsListComponent', 'selector': 'jc-pods'},{'name': 'RuntimeContainersComponent', 'selector': 'runtime-containers'},{'name': 'RuntimeDeployComponent', 'selector': 'runtime-deploy'},{'name': 'RuntimeDetailsComponent', 'selector': ''},{'name': 'RuntimeK8sComponent', 'selector': 'runtime'},{'name': 'RuntimeScaleComponent', 'selector': 'jc-runtime-scale'},{'name': 'RuntimeStageComponent', 'selector': 'runtime-stage'},{'name': 'RuntimeUpdateComponent', 'selector': ''},{'name': 'SagImageAlerterComponent', 'selector': 'sag-image-alerter'},{'name': 'ServicePropertiesComponent', 'selector': 'k8s-props'},{'name': 'SettingsComponent', 'selector': 'home'},{'name': 'SimpleNameComponent', 'selector': 'name-dialog'},{'name': 'StagingComponent', 'selector': 'staging'},{'name': 'TestCaseComponent', 'selector': 'test-case'},{'name': 'TestDefinitionComponent', 'selector': 'test-definitions'},{'name': 'TestHistoryComponent', 'selector': 'test-history'},{'name': 'TestRunComponent', 'selector': 'test-reun'},{'name': 'UMInstallerComponent', 'selector': 'jc-um-install'},{'name': 'UploadButtonComponent', 'selector': 'file-uploader-button'}];\n    var DIRECTIVES = [{'name': 'BuildImageChooseDirective', 'selector': '[builder]'},{'name': 'CancelCdkDrag', 'selector': '[appCancelCdkDrag]'},{'name': 'NgFileDrop', 'selector': '[ng-file-drop]'},{'name': 'NgFileSelect', 'selector': '[ng-file-select]'},{'name': 'RuntimeActionsDirective', 'selector': '[runtime-actions]'}];\n    var ACTUAL_COMPONENT = {'name': 'RuntimeUpdateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SagImageAlerterComponent.html":{"url":"components/SagImageAlerterComponent.html","title":"component - SagImageAlerterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SagImageAlerterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/build-image.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sag-image-alerter\n            \n\n\n\n            \n                template\n                  Attention\n  \n  Image will have to be pulled\n   This is an official Software AG Image that has not yet been downloaded to your local repository. This will be done automatically if you have provided your docker hub credentials in the Preferences page and also accepted Software AG's usage conditions here\n  \n  \n  Confirm\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                image\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                linkToImage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/build-image.component.ts:858\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            linkToImage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    linkToImage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/build-image.component.ts:865\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/build-image.component.ts:860\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            image\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DockerImage\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/build-image.component.ts:858\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ChangeDetectorRef, Input, OnInit, ViewChild, ComponentFactoryResolver,\n\t\t\t\tComponentRef, Inject, OnDestroy, NgZone}   \t\t\t            from '@angular/core';\n import { DomSanitizer, SafeUrl }                     from '@angular/platform-browser';\nimport { Router, ActivatedRoute }\t\t\t\t\t\t\t\t\t    from '@angular/router';\nimport {FormBuilder, FormGroup, FormControl,\n\t\t\t\t\t\t\t\tValidators} \t\t                      from '@angular/forms';\nimport { SelectionModel }                             from '@angular/cdk/collections';\n\nimport { MediaMatcher }                               from '@angular/cdk/layout';\nimport { MatAccordion }                               from '@angular/material';\nimport { MatInput, MatButton }\t\t\t\t\t\t            from '@angular/material';\nimport { MatDialog, MatDialogRef,\n\t\t\t\t\tMAT_DIALOG_DATA }\t  \t\t\t                  from '@angular/material';\n\nimport { Settings }                                   from '../settings';\n\nimport { DockerImage, VersionType } \t\t\t\t\t\t\t\t  from '../models/docker-image';\nimport { ResourceService }                            from '../services/resources.service';\n\nimport { BuildImageChooseDirective, PropertiesChangedOwner,\n\t\t\tBuilderProperties, BuilderComponent } \t\t\t    from './elements/build-image-choose.directive';\n\nimport { DockerService } \t\t\t\t                      from '../services/docker.service';\nimport { Source }                                     from '../models/git-source';\nimport {Builder, DeploymentSet, BuildCommand, Installer} from '../models/project';\nimport { WmPackageInfo, APIDefinition }               from '../models/wm-package-info';\nimport { ConfigurationService }                       from '../services/configuration.service';\nimport { BuildExeComponent }                          from './build-exe.component';\n\n\nimport { MicroServiceBuilderComponent }               from './plugins/micro-service-builder.component';\nimport { ApiMicroGatewayInstallerComponent }          from './plugins/apimg-installer.component';\n\n@Component({\n  selector: 'build-solution',\n  templateUrl: '../templates/build-image.html',\n  styleUrls: ['../templates/build-image.css']\n})\n\nexport class BuildImageComponent implements OnInit, PropertiesChangedOwner {\n\n\t  public selectedImage: DockerImage;\n    public currentBuild: Builder;\n    public isLinearStepper: boolean = true;\n\n  // tslint:disable-next-line:indent\n\t  public baseImages: DockerImage[] = [];\n\t  public customImages: DockerImage[] = [];\n\t  public licenceFiles: string[] = [];\n    public builds: string[] = [];\n\t  public comments: string = '';\n\n\t  public baseImageFormGroup: FormGroup;\n  \tpublic builderFormGroup: FormGroup;\n  \tpublic propertiesFormGroup: FormGroup;\n    public commandsFormGroup: FormGroup;\n  \tpublic targetImageFormGroup: FormGroup;\n  \tpublic commitFormGroup: FormGroup;\n\n    public buildCtrl: FormControl;\n    public baseImageCtrl: FormControl;\n    public targetRepoCtrl: FormControl;\n  \tpublic targetImageCtrl: FormControl;\n  \tpublic targetVersionCtrl: FormControl;\n    public dedicatedRepoCtrl: FormControl;\n    public versionTypeCtrl: FormControl;\n  \tpublic licCtrl: FormControl;\n  \tpublic commentsCtrl: FormControl;\n    public buildNameCtrl: FormControl;\n    public downloadCtrl: FormControl;\n    public buildUserCtrl: FormControl;\n    public entryUserCtrl: FormControl;\n\n    public buildTemplateName: string;\n\n    public selectionModel: SelectionModel = new SelectionModel();\n\n  \tpublic builderDisplayableEntries: string[];\n  \tpublic builderDisplayableProperties: Map;\n\n    public isBuilding: boolean = false;\n  \tpublic downloadRef: string = null;\n\n    public apiDisplayedColumns: string[] = ['select', 'name', 'description'];\n    public versionTypes: string[] = ['minor', 'major', 'patch'];\n    public settingsLoaded: boolean;\n    public userTypes: string[] = ['sagadmin', 'root'];\n\n  \t@ViewChild(BuildImageChooseDirective) builder: BuildImageChooseDirective;\n  \t@ViewChild('buildButton', {read: MatButton}) buildButton: MatButton;\n    @ViewChild('saveButton', {read: MatButton}) saveButton: MatButton;\n\n  \tprivate _ignoreValuesChange: boolean = false;\n    private _id: string = null;\n\n    private _customBuilderComponent: BuilderComponent;\n\n\t  public constructor(private _inboundRouter: ActivatedRoute, private _settings: Settings, private _dockerService: DockerService, private _dialog: MatDialog,\n\t\tprivate _formBuilder: FormBuilder, private componentFactoryResolver: ComponentFactoryResolver,\n    private _resources: ResourceService, private _configService: ConfigurationService,\n    private _sanitizer: DomSanitizer) {\n\n        let sub = this._inboundRouter.params.subscribe(params => {\n\n          this._id = params['id'];\n        });\n\n        this._settings.values().subscribe((v) => {\n\n          console.log(\"setttings loaded for build image \" + v.dockerHost);\n\n          this._dockerService.sagImages(true, v.dockerHost).subscribe((d) => {\n            this.baseImages = d;\n            this.settingsLoaded = true;\n\n            if (this._id)\n            this.baseImageSelected(this.imageFor(this._id));\n          });\n\n          this._dockerService.customImages(true, v.dockerHost).subscribe((d) => {\n           this.customImages = d;\n            /*d.forEach((i) => {\n              this.customImages.push(i.name);\n            })*/\n          })\n\n          this.licenceFiles = [];\n\n          this._resources.resourcesForType(\"licenses\").subscribe((p) => {\n            this.licenceFiles = [];\n             p.forEach((f) => {\n              this.licenceFiles.push(f.name);\n            })\n          });\n\n          this._configService.builds().subscribe((b) => {\n            this.builds = b;\n          });\n\n          this._settings.setCurrentPage(\"image\");\n      });\n\n      this.currentBuild = new Builder();\n  }\n\n\tpublic ngOnInit() {\n\n      this.baseImageCtrl = new FormControl();\n      this.buildCtrl = new FormControl();\n  \t\tthis.targetImageCtrl = new FormControl();\n  \t\tthis.licCtrl = new FormControl();\n  \t\tthis.commentsCtrl = new FormControl();\n      this.targetVersionCtrl = new FormControl(\"0.0.1\");\n      this.versionTypeCtrl = new FormControl(\"minor\");\n      this.dedicatedRepoCtrl = new FormControl();\n      this.targetRepoCtrl = new FormControl();\n      this.buildNameCtrl = new FormControl();\n      this.downloadCtrl = new FormControl(true);\n      this.buildUserCtrl = new FormControl(\"sagadmin\");\n      this.entryUserCtrl = new FormControl(\"sagadmin\");\n\n      this.baseImageFormGroup = this._formBuilder.group({\n            baseImageCtrl: this.baseImageCtrl,\n            buildCtrl: this.buildCtrl\n      });\n\n      this.builderFormGroup = this._formBuilder.group({});\n\n    \tthis.propertiesFormGroup = this._formBuilder.group({\n          licCtrl: this.licCtrl,\n          buildUserCtrl: this.buildUserCtrl,\n          entryUserCtrl: this.entryUserCtrl\n    \t});\n\n    \tthis.targetImageFormGroup = this._formBuilder.group({\n      \t\ttargetImageCtrl: this.targetImageCtrl,\n      \t\ttargetVersionCtrl: this.targetVersionCtrl,\n          targetRepoCtrl: this.targetRepoCtrl,\n          dedicatedRepoCtrl: this.dedicatedRepoCtrl,\n          versionTypeCtrl: this.versionTypeCtrl\n    \t});\n\n    \tthis.commitFormGroup = this._formBuilder.group({\n      \t\tcommentsCtrl: this.commentsCtrl,\n          buildNameCtrl: this.buildNameCtrl,\n          downloadCtrl: this.downloadCtrl\n    \t});\n\n      this.commandsFormGroup = this._formBuilder.group({});\n\n    \tthis.baseImageFormGroup.valueChanges.subscribe(values =>\n    \t{\n        if (this._ignoreValuesChange)\n    \t\t\treturn;\n\n        if (this.buildCtrl.dirty) {\n          this.setTemplate(this.buildCtrl.value);\n        }\n    \t});\n\n    \tthis.propertiesFormGroup.valueChanges.subscribe(values => {\n\n    \t\tif (this._ignoreValuesChange)\n    \t\t\treturn;\n\n        if (this.licCtrl.dirty) {\n          this.licCtrl.markAsPristine();\n          this.setLicenseFile(this.licCtrl.value);\n          this._save();\n        } else if (this.buildUserCtrl.dirty) {\n           this.buildUserCtrl.markAsPristine();\n           this.currentBuild.buildUser = this.buildUserCtrl.value;\n           this._save();\n        } else if (this.entryUserCtrl.dirty) {\n           this.entryUserCtrl.markAsPristine();\n           this.currentBuild.entryUser = this.entryUserCtrl.value;\n           this._save();\n        }\n    \t});\n\n    \tthis.targetImageFormGroup.valueChanges.subscribe(values =>\n    \t{\n    \t\tif (this._ignoreValuesChange)\n    \t\t\treturn;\n\n        if (this.targetRepoCtrl.dirty && this.currentBuild.targetImage.name()) {\n\n          this.targetRepoCtrl.markAsPristine();\n\n          this.currentBuild.targetImage.setRepository(this.targetRepoCtrl.value);\n\n          this._save();\n        }\n\n        if (this.targetImageCtrl.dirty) {\n\n            this.targetImageCtrl.markAsPristine();\n\n            if (!this.currentBuild.targetImage || (this.targetImageCtrl.value != null && this.targetImageCtrl.value != this.currentBuild.targetImage)) {\n\n              this.updateTargetImage();\n\n              this._save();\n            } else {\n             this.currentBuild.targetImage.setDedicatedRepository(this.dedicatedRepoCtrl.value);\n             this.currentBuild.targetImage.setName(this.targetImageCtrl.value.name());\n\n             this._save();\n           }\n\n           this.targetImageCtrl.markAsPristine();\n        }\n\n        if (this.dedicatedRepoCtrl.dirty) {\n\n          this.dedicatedRepoCtrl.markAsPristine();\n\n          this.currentBuild.targetImage.setDedicatedRepository(this.dedicatedRepoCtrl.value);\n          this._save();\n\n        } else if (this.targetVersionCtrl.dirty) {\n\n\n            this.currentBuild.targetImage.setDedicatedRepository(this.dedicatedRepoCtrl.value);\n            this.currentBuild.targetImage.setVersion(this.targetVersionCtrl.value);\n\n            this._save();\n\n            this.targetVersionCtrl.markAsPristine();\n        } else if (this.versionTypeCtrl.dirty) {\n          this.setNextVersion(this.targetImageCtrl.value.uniqueName());\n\n          this.versionTypeCtrl.markAsPristine();\n        }\n    \t});\n\n    \tthis.commitFormGroup.valueChanges.subscribe(values => {\n\n    \t\tif (this._ignoreValuesChange)\n    \t\t\treturn;\n\n    \t\tif (this.commentsCtrl.dirty) {\n    \t\t\tthis.comments = this.commentsCtrl.value;\n        }\n\n        if (this.buildNameCtrl.dirty) {\n          this.buildTemplateName = this.buildNameCtrl.value;\n        }\n\n        if (this.downloadCtrl.dirty) {\n          this.downloadCtrl.markAsPristine();\n          this.downloadRef = null;\n        }\n    \t})\n    }\n\n    public productCodeLabel(): string {\n\n      if (this.currentBuild && this.currentBuild.sourceImage && this.currentBuild.sourceImage.name())\n        return \"Base: \" + this.currentBuild.sourceImage.name();\n      else\n        return \"Base Image\";\n    }\n\n    public currentBaseImage(): DockerImage {\n\n      if (this.currentBuild.sourceImage) {\n        return this.currentBuild.sourceImage;\n      } else {\n        return null;\n      }\n    }\n\n    public baseImageSelected(image: DockerImage) {\n\n      if (image) {\n\n        this._ignoreValuesChange = true;\n        this.baseImageCtrl.setValue(image.name());\n        this._ignoreValuesChange = false;\n\n        this.currentBuild.sourceImage = image.copy();\n        this.setBuilderComponent(image.type);\n\n        this._save();\n\n        if (!image.id) {\n          let dialogRef = this._dialog.open(SagImageAlerterComponent, {\n          width: \"30%\",\n          height: \"30%\",\n          data: { image: image }\n        });\n        }\n      }\n    }\n\n    public availableVersions(): DockerImage[] {\n\n      if (this.currentBuild) {\n        if (this.currentBuild.sourceImage.availableVersions.length > 0) {\n           let versions = [this.currentBuild.sourceImage];\n\n           this.currentBuild.sourceImage.availableVersions.forEach((v) => {\n             versions.push(v);\n           });\n\n           return versions;\n        } else {\n           return [this.currentBuild.sourceImage];\n        }\n      }\n      else {\n        return [];\n      }\n    }\n\n    public imageName(image: DockerImage) {\n\n      if (image)\n        return image.name();\n      else\n        return null;\n    }\n\n    public isExistingTemplate(): boolean {\n\n      return this.indexOfTemplate(this.currentBuild.name) != -1;\n    }\n\n    public addTemplate(event: any) {\n\n      this.currentBuild.name = this.buildCtrl.value;\n\n      this._configService.uploadBuild(this.currentBuild).subscribe((success) => {\n\n        this.builds.push(this.currentBuild.name);\n      })\n    }\n\n    public saveTemplate() {\n\n      this.currentBuild.name = this.buildTemplateName;\n\n      this.saveButton.disabled = true;\n\n      this._ignoreValuesChange = true;\n      this.buildCtrl.setValue(this.currentBuild.name);\n      this._ignoreValuesChange = false;\n\n      this._save();\n    }\n\n    public deleteTemplate(event) {\n\n      this._configService.deleteBuild(this.currentBuild.name).subscribe((success) => {\n        this.builds.splice(this.indexOfTemplate(this.currentBuild.name), 1);\n        this.currentBuild = new Builder();\n      });\n    }\n\n    public labelForGoButton(): string {\n\n      if (this.downloadCtrl.value)\n        return \"  Build   \";\n      else\n        return \"  Download  \";\n    }\n\n    public labelForPreparingButton(): string {\n\n      if (this.downloadCtrl.value)\n        return \"Building...\";\n      else\n        return \"Preparing...\";\n    }\n\n    private setTemplate(name: string) {\n\n      this.buildNameCtrl.setValue(name);\n\n      if (this.indexOfTemplate(name) == -1)\n        return;\n\n      if (name) {\n\n        this.currentBuild = new Builder();\n\n        this._configService.build(name).subscribe((build) => {\n\n          this.currentBuild = build;\n          this.isLinearStepper = false;\n\n          this._ignoreValuesChange = true;\n\n          if (this.currentBuild.targetImage.repository())\n            this.targetRepoCtrl.setValue(this.repoNameWithoutImageName());\n\n          this.dedicatedRepoCtrl.setValue(this.currentBuild.targetImage.dedicatedRepository());\n\n          if (this.currentBuild.targetImage.name()) {\n            this.baseImageCtrl.setValue(build.sourceImage.name());\n            this.targetImageCtrl.setValue(this.currentBuild.targetImage);\n            this.updateTargetImage();\n          }\n\n          let licFile: BuildCommand = this.currentBuild.fileForType(\"licenses\");\n          this.licCtrl.setValue(licFile ? licFile.source.replace(/\\-/g, \" \") : null);\n\n          this.buildUserCtrl.setValue(this.currentBuild.buildUser ? this.currentBuild.buildUser : \"sagadmin\");\n          this.entryUserCtrl.setValue(this.currentBuild.entryUser ? this.currentBuild.entryUser : \"sagadmin\");\n\n          this.buildNameCtrl.setValue(this.currentBuild.name);\n\n          this.setBuilderComponent(this.currentBuild.sourceImage.type);\n\n          if (this.currentTargetVersionExists())\n            this.setNextVersion(this.targetImageCtrl.value.uniqueName());\n          else\n            this._setCtrlVersion(this.currentBuild.targetImage.version());\n\n          this._ignoreValuesChange = false;\n        });\n      } else {\n\n          this.currentBuild = new Builder();\n          this.buildTemplateName = \"\";\n      }\n    }\n\n    private currentTargetVersionExists(): boolean {\n\n        if (this.targetImageCtrl.value) {\n\n          let img: DockerImage = this.imageFor(this.currentBuild.targetImage.name());\n\n          return img && img.exists();\n\n        } else {\n          return false;\n        }\n    }\n\n    private repoNameWithoutImageName(): string {\n\n      let repo: string = this.currentBuild.targetImage.repository();\n\n      if (this.currentBuild.targetImage.dedicatedRepository() && repo && this.currentBuild.targetImage.name()) {\n\n        repo = repo.substring(0, repo.indexOf(this.currentBuild.targetImage.name())-1);\n      }\n\n      return repo;\n    }\n\n    public commandsUpdated(event: any) {\n\n      this._save();\n    }\n\n    private setLicenseFile(lic: string) {\n\n      this._customBuilderComponent.setLicenseFile(lic);\n    }\n    \n    private updateTargetImage() {\n\n      if (typeof this.targetImageCtrl.value == 'string') {\n\n        // user manually entered name of image\n\n          let img: DockerImage = this.imageFor(this.targetImageCtrl.value);\n\n          if (img && (!this.targetRepoCtrl.value || this.targetRepoCtrl.value == img.repository())) {\n\n            // image\n              this.currentBuild.targetImage = DockerImage.make(img);\n          }\n          else {\n              this.currentBuild.targetImage = new DockerImage();\n              this.currentBuild.targetImage.setName(this.targetImageCtrl.value);\n              this.currentBuild.targetImage.setRepository(this.targetRepoCtrl.value);\n              this.currentBuild.targetImage.setVersion(this.targetVersionCtrl.value);\n            }\n\n      } else {\n          this.currentBuild.targetImage = this.targetImageCtrl.value.copy();\n\n          if (this.currentBuild.targetImage) {\n\n            this._ignoreValuesChange = true;\n            this.targetRepoCtrl.setValue(this.repoNameWithoutImageName());\n            this.targetVersionCtrl.setValue(this.currentBuild.targetImage.version());\n            this.dedicatedRepoCtrl.setValue(this.currentBuild.targetImage.dedicatedRepository());\n            this._ignoreValuesChange = false;\n\n            //if (this.targetRepoCtrl.value) {\n            //   this.currentBuild.targetImage.setRepository(this.targetRepoCtrl.value);\n            //}\n          }\n      }\n\n      this.setNextVersion(this.currentBuild.targetImage.uniqueName());\n    }\n\n    private nextVersion():string {\n\n      return this.targetVersionCtrl.value;\n    }\n\n    private setNextVersion(name: string) {\n\n      this._dockerService.versions(name).subscribe((images) => {\n\n        if (images.length > 0) {\n\n          let nextVersion: string = images[0].getNextVersion(this.determineVersionType());\n          this._setCtrlVersion(nextVersion);\n        } else {\n\n          if (this.determineVersionType() == VersionType.patch)\n            this._setCtrlVersion(\"0.0.1\");\n          else if (this.determineVersionType() == VersionType.minor)\n            this._setCtrlVersion(\"0.1\");\n          else if (this.determineVersionType() == VersionType.major)\n            this._setCtrlVersion(\"1.0\");\n        }\n      });\n    }\n\n    private _setCtrlVersion(value: string) {\n\n      this._ignoreValuesChange = true;\n      this.targetVersionCtrl.setValue(value);\n      this._ignoreValuesChange = false;\n    }\n\n    private _save() {\n\n      if (!this.currentBuild.name)\n        return;\n\n      this._configService.uploadBuild(this.currentBuild).subscribe((success) => {\n\n        // do now't\n      });\n    }\n\n    private indexOfTemplate(name): number {\n\n      var found: number = -1;\n\n      for (var i=0; i  0)\n      {\n        builderDisplayableKeys = [];\n        let it: IterableIterator = this.builderDisplayableProperties.keys();\n        let result: IteratorResult;\n\n        this.builderDisplayableEntries = [];\n\n        while(!(result=it.next()).done) {\n          this.builderDisplayableEntries.push(result.value);\n        }\n\n        let first: BuilderProperties[] = this.builderDisplayableProperties.get(this.builderDisplayableProperties.keys().next().value);\n\n        first.forEach((a) => {\n          builderDisplayableKeys.push(a.key);\n        });\n      }\n\n      return builderDisplayableKeys;\n    }\n\n    private imageFor(name: string) {\n\n      var found: DockerImage = null;\n\n      for (var i=0; i  = viewContainerRef.createComponent(componentFactory);\n        customBuilderComponentRef.instance.owner = this;\n        customBuilderComponentRef.instance.formGroup = this.builderFormGroup;\n\n        this._customBuilderComponent = customBuilderComponentRef.instance;\n\t    }\n  \t}\n\n    public initialProperties(): any {\n\n      return this.currentBuild;\n    }\n\n    public propertiesChangedInBuilder(type: string, displayableProperties: Map, values: any) {\n\n      this.currentBuild.deploymentType = type;\n\n      if (displayableProperties) {\n        this.builderDisplayableProperties = displayableProperties;\n      }\n\n      if (values) {\n        this.currentBuild = values;\n        this._save();\n      }\n    }\n\n    public targetName(): string {\n\n      if (this.currentBuild && this.currentBuild.targetImage) {\n        return this.currentBuild.targetImage.name();\n      } else {\n        return \"\";\n      }\n    }\n\n    public sourceTag(): string {\n\n      return this.currentBuild.sourceImage.tag();\n    }\n\n    public targetTag(): string {\n\n      let tag: string = null;\n\n      if (this.targetImageCtrl.value) {\n\n        let name: string = null;\n\n        if (typeof this.targetImageCtrl.value == 'string')\n           name = this.targetImageCtrl.value;\n        else\n          name = this.targetImageCtrl.value.name();\n\n        if (this.targetRepoCtrl.value)\n          tag = this.targetRepoCtrl.value + (this.dedicatedRepoCtrl.value ? \"/\" : \":\") + name;\n        else\n          tag = name;\n\n        if (this.dedicatedRepoCtrl.value) {\n\n          tag += \":\" + this.targetVersionCtrl.value\n        } else {\n\n          tag += \"-\" + this.targetVersionCtrl.value;\n        }\n      }\n\n      return tag;\n    }\n\n    public downloadLicence(event) {\n\n      let file: BuildCommand = this.currentBuild.fileForType(\"licenses\");\n\n      if (file)\n        this._resources.downloadResource(\"licenses\", file.source);\n    }\n\n    public licenseFileAdded(filename: string) {\n\n       this._resources.resourcesForType(\"licenses\").subscribe((p) => {\n          this.licenceFiles = [];\n           p.forEach((f) => {\n            this.licenceFiles.push(f.name);\n          })\n        });\n    }\n\n    public build() {\n\n      this.buildButton.disabled = true;\n\n      let name = this.currentBuild.sourceImage.name();\n\n      if (this.currentBuild.sourceImage.repository() != null)\n        name = this.currentBuild.sourceImage.repository() + \"/\" + this.currentBuild.sourceImage.name();\n\n\n      this.currentBuild.targetImage.setVersion(this.targetVersionCtrl.value);\n\n      if (!this.downloadCtrl.value) {\n\n        this.isBuilding = true;\n\n        this._dockerService.downloadBuild(this.currentBuild, \"\" + this.nextVersion(), this.comments).subscribe(result => {\n\n            this.isBuilding = false;\n\n            if (!result) {\n                window.alert(\"Build failed, refer to server log for more information\");\n             } else {\n                this.downloadRef = result;\n                window.alert(\"Build Successed, with image id \" + result);\n            }\n\n            this._save();\n        });\n      } else {\n\n        // build on server\n\n        let dialogRef = this._dialog.open(BuildExeComponent, {\n          width: \"80%\",\n          height: \"80%\",\n          data: { build: this.currentBuild, version: this.nextVersion(), comments: this.comments },\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n\n          this.buildButton.disabled = false;\n          this.isBuilding = false;\n\n          if (result) {\n            this._save();\n          }\n        });\n      }\n    }\n\n    public downloadNow(fileRef: string) {\n\n        window.open(\"/rad/jc.devops:api/docker/build/\" + fileRef);\n    }\n\n    private determineVersionType(): VersionType {\n\n      if (this.versionTypeCtrl.value == 'major')\n        return VersionType.major;\n      else if (this.versionTypeCtrl.value == 'patch')\n        return VersionType.patch;\n      else\n        return VersionType.minor;\n    }\n\n    public installerTemplateLoaded(template: Installer) {\n\t    // ignore\n    }\n}\n\n@Component({\n  selector: 'sag-image-alerter',\n  template: `\n  Attention\n  \n  Image will have to be pulled\n   This is an official Software AG Image that has not yet been downloaded to your local repository. This will be done automatically if you have provided your docker hub credentials in the Preferences page and also accepted Software AG's usage conditions here\n  \n  \n  Confirm\n\n`\n})\n\nexport class SagImageAlerterComponent {\n\n  public image: DockerImage;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any) {\n\n    this.image = data.image;\n  }\n\n  public linkToImage() {\n\n    return \"https://hub.docker.com/_/softwareag-\" + this.image.name();\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Attention    Image will have to be pulled   This is an official Software AG Image that has not yet been downloaded to your local repository. This will be done automatically if you have provided your docker hub credentials in the Preferences page and also accepted Software AG\\'s usage conditions here      Confirm'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about-app'},{'name': 'ActionComponent', 'selector': 'action'},{'name': 'ApiGatewayInstallerComponent', 'selector': 'jc-apigw-install'},{'name': 'ApiMicroGatewayInstallerComponent', 'selector': 'jc-apimg-install'},{'name': 'ApiPortalInstallerComponent', 'selector': 'jc-apipr-installer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildCommandsComponent', 'selector': 'build-commands'},{'name': 'BuildComponent', 'selector': 'build'},{'name': 'BuildExeComponent', 'selector': 'build-exe'},{'name': 'BuildImageComponent', 'selector': 'build-solution'},{'name': 'BuildInstallComponent', 'selector': 'build-install'},{'name': 'BuildPackagesComponent', 'selector': 'build-package'},{'name': 'ContainerComponent', 'selector': 'container'},{'name': 'ContainersComponent', 'selector': 'app-containers'},{'name': 'DeploymentDetailsComponent', 'selector': 'jc-deployment-details'},{'name': 'DeploymentListComponent', 'selector': 'jc-k8s-deployments'},{'name': 'DockerImageChooserComponent', 'selector': 'docker-image-chooser'},{'name': 'DockerImageListComponent', 'selector': 'jc-docker-images'},{'name': 'DockerImageVersionsComponent', 'selector': 'jc-docker-image-versions'},{'name': 'EditContainerComponent', 'selector': 'edit-container'},{'name': 'GitSourcesComponent', 'selector': 'git-source'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'InstallerComponent', 'selector': 'jc-install'},{'name': 'MicroServiceBuilderComponent', 'selector': 'jc-msc-configure'},{'name': 'MicroServiceInstallerComponent', 'selector': 'jc-msc-install'},{'name': 'PodsListComponent', 'selector': 'jc-pods'},{'name': 'RuntimeContainersComponent', 'selector': 'runtime-containers'},{'name': 'RuntimeDeployComponent', 'selector': 'runtime-deploy'},{'name': 'RuntimeDetailsComponent', 'selector': ''},{'name': 'RuntimeK8sComponent', 'selector': 'runtime'},{'name': 'RuntimeScaleComponent', 'selector': 'jc-runtime-scale'},{'name': 'RuntimeStageComponent', 'selector': 'runtime-stage'},{'name': 'RuntimeUpdateComponent', 'selector': ''},{'name': 'SagImageAlerterComponent', 'selector': 'sag-image-alerter'},{'name': 'ServicePropertiesComponent', 'selector': 'k8s-props'},{'name': 'SettingsComponent', 'selector': 'home'},{'name': 'SimpleNameComponent', 'selector': 'name-dialog'},{'name': 'StagingComponent', 'selector': 'staging'},{'name': 'TestCaseComponent', 'selector': 'test-case'},{'name': 'TestDefinitionComponent', 'selector': 'test-definitions'},{'name': 'TestHistoryComponent', 'selector': 'test-history'},{'name': 'TestRunComponent', 'selector': 'test-reun'},{'name': 'UMInstallerComponent', 'selector': 'jc-um-install'},{'name': 'UploadButtonComponent', 'selector': 'file-uploader-button'}];\n    var DIRECTIVES = [{'name': 'BuildImageChooseDirective', 'selector': '[builder]'},{'name': 'CancelCdkDrag', 'selector': '[appCancelCdkDrag]'},{'name': 'NgFileDrop', 'selector': '[ng-file-drop]'},{'name': 'NgFileSelect', 'selector': '[ng-file-select]'},{'name': 'RuntimeActionsDirective', 'selector': '[runtime-actions]'}];\n    var ACTUAL_COMPONENT = {'name': 'SagImageAlerterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Scope.html":{"url":"classes/Scope.html","title":"class - Scope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Scope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api-gateway.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                attributeName\n                            \n                            \n                                keyWord\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attributeName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/api-gateway.service.ts:142\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            keyWord\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/api-gateway.service.ts:143\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } \t           \t \tfrom '@angular/core';\nimport { HttpClient, HttpHeaders, \n                      HttpParams }      from '@angular/common/http';\nimport { Observable, of }               from 'rxjs';\nimport { switchMap, map } \t\t\t\tfrom 'rxjs/operators';\n\nimport { Settings }                     from '../settings';\n\nexport enum APIType {\n\tREST = \"REST\",\n\tSOAP = \"SOAP\",\n\tSOCKET =\"Web Socket\"\n}\n\nexport class APIPolicy {\n\n\tpublic static make(data: any): APIPolicy {\n\n\t\tlet p: APIPolicy = new APIPolicy();\n\n\t\treturn p;\n\t}\n}\n\nexport class API {\n\n\tpublic id: string;\n\tpublic name: string;\n\tpublic isActive: boolean;\n\tpublic type: APIType;\n\tpublic policies: APIPolicy[];\n\tpublic owner: string;\n\n\tconstructor(id: string) {\n\t\t\n\t\tthis.id = id;\n\t\tthis.policies = [];\n\t}\n\n\tpublic static make(data: any): API {\n\n\t\tlet api: API = new API(data.id);\n\t\tapi.name = data.apiName;\n\t\tapi.isActive = data.isActive == 'true',\n\t\tapi.type = APIType[ data.type];\n\t\tapi.owner = data.owner;\n\n\t\tif (data.policy) {\n\t\t\tapi.policies.push(APIPolicy.make(data.policy));\n\t\t}\n\n\t\treturn api;\n\t}\n}\n\nexport enum Maturity {\n\tBeta = \"Beta\",\n\tDeprecated = \"Deprecated\",\n\tExperimental = \"Experimental\",\n\tProduction = \"Production\",\n\tTest = \"Test\"\n}\n\n@Injectable()\nexport class APIGatewayService {\n\t\n\tpublic static SEARCH: string = \"/rest/apigateway/search\";\n\n\tprivate _gatewayUrl: string;\n\tprivate _gatewayUser: string;\n\tprivate _gatewayPwd: string;\n\n\tconstructor(private _settings: Settings, private _http: HttpClient) {   \n\t\t\n    }\n\n\tpublic apiList(apiGatewayUrl: string, apiGatewayUser: string, apiGatewayPassword: string, maturity: string, activeOnly: boolean): Observable {\n\n\t\tlet url: string = apiGatewayUrl + APIGatewayService.SEARCH;\n\n\t\tlet search: SearchObj = new SearchObj([Type.api], Condition.and, 0, -1);\n\t\tsearch.responseFields = ['apiName', 'id', 'name', 'owner', 'policyScope','names'];\n\n\t\tif (activeOnly)\n\t\t\tsearch.addScope('isActive', true);\n\n\t\tsearch.addScope('maturityState', maturity.toString());\n\n\t\tlet payload: string = JSON.stringify(search);\n\n\t\tlet headers = new HttpHeaders()\n                    .append('Content-Type', 'application/json')\n                    .append('Accept', 'application/json')\n                    .append('Cache-Control', 'no-cache')\n                    .append('Cache-Control', 'no-store')\n                    .append('Pragma','no-cache')\n                    .append('Expires', '0')\n                    .append('Accept', 'application/json')\n                    .set('Authorization', `Basic ${btoa(apiGatewayUser + \":\" + apiGatewayPassword)}`);\n\n\t\tlet options: any = { headers };\n\n      \treturn this._http.post(url, payload, options).pipe(map( (responseData) => {\n\n            return this._mapResponse(responseData);\n            \n          },\n          error => {\n            return null;\n       \t}));\n\t}\n\n\t private _mapResponse(responseData: any): API[]\n    {\n // data is returned as list called references or as a single entity\n\n \t\tlet images: API[] = [];\n\n \t\tresponseData.forEach((i) => {\n \t\t\timages.push(API.make(i));\n \t\t});\n\n \t\treturn images;\n    }\n}\n\nenum Type {\n\tapi = \"api\",\n\tapplication = \"application\",\n\talias = \"application\",\n\tuser = \"user\",\n\tgroup = \"group\",\n\tpolicy = \"policy\"\n}\n\nenum Condition {\n\tor = \"or\",\n\tand = \"and\"\n}\n\nclass Scope {\n\tattributeName: string;\n\tkeyWord: any;\n}\n\nclass SearchObj {\n\n\tpublic types: Type[];\n\tpublic condition: Condition;\n\tpublic scope: Scope[];\n\tpublic responseFields: string[];\n\tpublic from: number;\n\tpublic size: number;\n\n\tconstructor(types: Type[], condition: Condition, from: number, size: number) {\n\n\t\tthis.types = types;\n\t\tthis.condition = condition;\n\t\tthis.from = from;\n\t\tthis.size = size;\n\t\tthis.scope = [];\n\t}\n\n\tpublic addScope(attributeName: string, keyWord: any) {\n\n\t\tlet scope: Scope = new Scope();\n\t\tscope.attributeName = attributeName;\n\t\tscope.keyWord = keyWord;\n\n\t\tthis.scope.push(scope);\n\t}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SearchObj.html":{"url":"classes/SearchObj.html","title":"class - SearchObj","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SearchObj\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api-gateway.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                condition\n                            \n                            \n                                    Public\n                                from\n                            \n                            \n                                    Public\n                                responseFields\n                            \n                            \n                                    Public\n                                scope\n                            \n                            \n                                    Public\n                                size\n                            \n                            \n                                    Public\n                                types\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addScope\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(types: Type[], condition: Condition, from: number, size: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api-gateway.service.ts:153\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        types\n                                                  \n                                                        \n                                                                        Type[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        condition\n                                                  \n                                                        \n                                                                        Condition\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        from\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        size\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            condition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Condition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/api-gateway.service.ts:149\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            from\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/api-gateway.service.ts:152\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            responseFields\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/api-gateway.service.ts:151\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            scope\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Scope[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/api-gateway.service.ts:150\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/api-gateway.service.ts:153\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            types\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/api-gateway.service.ts:148\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addScope\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addScope(attributeName: string, keyWord: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api-gateway.service.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    attributeName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    keyWord\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } \t           \t \tfrom '@angular/core';\nimport { HttpClient, HttpHeaders, \n                      HttpParams }      from '@angular/common/http';\nimport { Observable, of }               from 'rxjs';\nimport { switchMap, map } \t\t\t\tfrom 'rxjs/operators';\n\nimport { Settings }                     from '../settings';\n\nexport enum APIType {\n\tREST = \"REST\",\n\tSOAP = \"SOAP\",\n\tSOCKET =\"Web Socket\"\n}\n\nexport class APIPolicy {\n\n\tpublic static make(data: any): APIPolicy {\n\n\t\tlet p: APIPolicy = new APIPolicy();\n\n\t\treturn p;\n\t}\n}\n\nexport class API {\n\n\tpublic id: string;\n\tpublic name: string;\n\tpublic isActive: boolean;\n\tpublic type: APIType;\n\tpublic policies: APIPolicy[];\n\tpublic owner: string;\n\n\tconstructor(id: string) {\n\t\t\n\t\tthis.id = id;\n\t\tthis.policies = [];\n\t}\n\n\tpublic static make(data: any): API {\n\n\t\tlet api: API = new API(data.id);\n\t\tapi.name = data.apiName;\n\t\tapi.isActive = data.isActive == 'true',\n\t\tapi.type = APIType[ data.type];\n\t\tapi.owner = data.owner;\n\n\t\tif (data.policy) {\n\t\t\tapi.policies.push(APIPolicy.make(data.policy));\n\t\t}\n\n\t\treturn api;\n\t}\n}\n\nexport enum Maturity {\n\tBeta = \"Beta\",\n\tDeprecated = \"Deprecated\",\n\tExperimental = \"Experimental\",\n\tProduction = \"Production\",\n\tTest = \"Test\"\n}\n\n@Injectable()\nexport class APIGatewayService {\n\t\n\tpublic static SEARCH: string = \"/rest/apigateway/search\";\n\n\tprivate _gatewayUrl: string;\n\tprivate _gatewayUser: string;\n\tprivate _gatewayPwd: string;\n\n\tconstructor(private _settings: Settings, private _http: HttpClient) {   \n\t\t\n    }\n\n\tpublic apiList(apiGatewayUrl: string, apiGatewayUser: string, apiGatewayPassword: string, maturity: string, activeOnly: boolean): Observable {\n\n\t\tlet url: string = apiGatewayUrl + APIGatewayService.SEARCH;\n\n\t\tlet search: SearchObj = new SearchObj([Type.api], Condition.and, 0, -1);\n\t\tsearch.responseFields = ['apiName', 'id', 'name', 'owner', 'policyScope','names'];\n\n\t\tif (activeOnly)\n\t\t\tsearch.addScope('isActive', true);\n\n\t\tsearch.addScope('maturityState', maturity.toString());\n\n\t\tlet payload: string = JSON.stringify(search);\n\n\t\tlet headers = new HttpHeaders()\n                    .append('Content-Type', 'application/json')\n                    .append('Accept', 'application/json')\n                    .append('Cache-Control', 'no-cache')\n                    .append('Cache-Control', 'no-store')\n                    .append('Pragma','no-cache')\n                    .append('Expires', '0')\n                    .append('Accept', 'application/json')\n                    .set('Authorization', `Basic ${btoa(apiGatewayUser + \":\" + apiGatewayPassword)}`);\n\n\t\tlet options: any = { headers };\n\n      \treturn this._http.post(url, payload, options).pipe(map( (responseData) => {\n\n            return this._mapResponse(responseData);\n            \n          },\n          error => {\n            return null;\n       \t}));\n\t}\n\n\t private _mapResponse(responseData: any): API[]\n    {\n // data is returned as list called references or as a single entity\n\n \t\tlet images: API[] = [];\n\n \t\tresponseData.forEach((i) => {\n \t\t\timages.push(API.make(i));\n \t\t});\n\n \t\treturn images;\n    }\n}\n\nenum Type {\n\tapi = \"api\",\n\tapplication = \"application\",\n\talias = \"application\",\n\tuser = \"user\",\n\tgroup = \"group\",\n\tpolicy = \"policy\"\n}\n\nenum Condition {\n\tor = \"or\",\n\tand = \"and\"\n}\n\nclass Scope {\n\tattributeName: string;\n\tkeyWord: any;\n}\n\nclass SearchObj {\n\n\tpublic types: Type[];\n\tpublic condition: Condition;\n\tpublic scope: Scope[];\n\tpublic responseFields: string[];\n\tpublic from: number;\n\tpublic size: number;\n\n\tconstructor(types: Type[], condition: Condition, from: number, size: number) {\n\n\t\tthis.types = types;\n\t\tthis.condition = condition;\n\t\tthis.from = from;\n\t\tthis.size = size;\n\t\tthis.scope = [];\n\t}\n\n\tpublic addScope(attributeName: string, keyWord: any) {\n\n\t\tlet scope: Scope = new Scope();\n\t\tscope.attributeName = attributeName;\n\t\tscope.keyWord = keyWord;\n\n\t\tthis.scope.push(scope);\n\t}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Server.html":{"url":"classes/Server.html","title":"class - Server","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Server\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/project.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authentication\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                make\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/models/project.ts:829\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authentication\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Authentication\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:829\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:828\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            make\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    make(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/project.ts:835\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Server\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { APIDefinition }                        from '../models/wm-package-info'\nimport { Source }                               from '../models/git-source';\nimport { DockerImage, TestStatus }              from '../models/docker-image';\n\nexport class DeploymentSet {\n\n  public id: string;\n  public name: string;\n  public source: Source;\n  public active: string;\n  public apis: APIDefinition[];\n\n  public constructor() {\n      this.apis = [];\n      this.source = new Source();\n  }\n\n  public static make(data: any): DeploymentSet {\n\n      let p: DeploymentSet = new DeploymentSet();\n      p.id = data.name;\n      p.name = data.name;\n\n      if (data.source)\n       p.source = Source.make(data.source);\n\n      p.apis = [];\n\n      if (data.apis) {\n\n        data.apis.forEach((a) => {\n          p.apis.push(APIDefinition.make(a));\n        });\n      }\n\n      return p;\n  }\n}\n\nexport enum DisplayType {\n  hidden = \"hidden\",\n  readonly = \"readonly\",\n  editable = \"editable\",\n  password = \"password\",\n  file = \"file\",\n  dropdown = \"dropdown\",\n  yesno = \"yesno\"\n}\n\nexport class BuildCommand {\n\n  public commandType: string;\n  public buildTarget: string;\n  public fileType: string;\n  public source: string;\n  public target: string;\n  public description: string = \"\";\n  public display: DisplayType = DisplayType.hidden;\n  public required: boolean = true;\n  public conditions: string[];\n\n  public static make(d: any): BuildCommand {\n\n    let f: BuildCommand = new BuildCommand();\n    f.commandType = d.commandType;\n    f.buildTarget = d.buildTarget;\n    f.fileType = d.fileType;\n    f.source = d.source;\n    f.target = d.target;\n    f.description = d.description;\n    f.conditions = d.conditions;\n\n    if (d.display == \"editable\")\n      f.display = DisplayType.editable;\n    else if (d.display == \"readonly\")\n      f.display = DisplayType.readonly;\n    else if (d.display == \"file\")\n      f.display = DisplayType.file;\n    else\n      f.display = DisplayType.hidden;\n\n    f.required = false;\n    return f;\n  }\n\n  copy() {\n    return BuildCommand.make(this);\n  }\n\n  public equals(b: BuildCommand): boolean {\n\n    return (b.source && b.source == this.source) || (!b.source && b.target == this.target);\n  }\n\n  public matchConditions(args: Map): boolean {\n\n    return ArgDisplayType._matchConditions(this.conditions, args);\n  }\n}\n\nexport interface BuildParams {\n\n  name: string;\n  publicPort(): string;\n  setPublicPort(port: string);\n  assignedLicense(): string;\n  hostName: string;\n  entryPoint: string;\n  exitPoint: string;\n  healthCheck: string;\n  args: Map\n  buildCommands: BuildCommand[];\n\n  fileForType(type: string): BuildCommand;\n  isCustomImage(): boolean;\n}\n\nexport class ArgDisplayType {\n\n  public name: string;\n  public description: string;\n  public display: DisplayType = DisplayType.hidden;\n  public conditions: string[];\n  public choices: string[];\n  public required: boolean = true;\n\n  public constructor(name: string) {\n    this.name = name;\n    this.description = this.name;\n    this.conditions = [];\n    this.choices = [];\n  }\n\n  public copy(): ArgDisplayType {\n\n      let copy: ArgDisplayType = new ArgDisplayType(this.name);\n      copy.description = this.description;\n      copy.display = this.display;\n      copy.conditions = this.conditions;\n      copy.choices = this.choices;\n      copy.required = this.required;\n\n      return copy;\n  }\n\n  public static make(d: any): ArgDisplayType {\n\n    let a: ArgDisplayType = new ArgDisplayType(d.name);\n\n    if (d.display == \"editable\")\n      a.display = DisplayType.editable;\n    else if (d.display == \"readonly\")\n      a.display = DisplayType.readonly;\n    else if (d.display == \"file\")\n      a.display = DisplayType.file;\n    else if (d.display == \"password\")\n      a.display = DisplayType.password;\n    else if (d.display == \"yesno\")\n      a.display = DisplayType.yesno;\n    else if (d.display == \"dropdown\")\n      a.display = DisplayType.dropdown;\n    else\n      a.display = DisplayType.hidden;\n\n    if (d.required != null)\n      a.required = d.required;\n\n    a.description = d.description || d.name;\n\n    if (d.conditions)\n      a.conditions = d.conditions;\n\n    if (a.choices)\n      a.choices = d.choices;\n\n    return a;\n  }\n\n  public matchConditions(args: Map): boolean {\n\n      return ArgDisplayType._matchConditions(this.conditions, args);\n  }\n\n  public static _matchConditions(conditions: string[], args: Map): boolean {\n\n      if (conditions && conditions.length > 0) {\n\n        let matched: boolean = false;\n\n        for (let i = 0; i  {\n      args.push(new Arg(a.source, a.target, a.description));\n    });\n\n    return args;\n  }\n\n}\n\nexport class Installer implements BuildParams {\n\n    public name: string;\n    public sourceImageTag: string;\n    public isNew: string = \"true\";\n    public targetImage: DockerImage;\n    public productType: string;\n    public licenseFile: string;\n    public primaryPort: string;\n    public hostName: string;\n    public wmInstallerImage: string;\n    public includeUpdate: string = \"false\";\n    public buildCommands: BuildCommand[];\n    public args: Map;\n    public isSAGProduct: string = \"true\";\n\n    public entryPoint: string;\n    public exitPoint: string;\n    public healthCheck: string;\n\n    public constructor() {\n\n    this.sourceImageTag = \"centos:latest\";\n    this.targetImage = new DockerImage();\n    this.buildCommands = [];\n    this.args = new Map();\n  }\n\n  public copy(): Installer {\n\n    return Installer.make(this);\n  }\n\n  public static parse(data: string): Installer {\n\n    return this.make(JSON.parse(data, parserReviver).install);\n  }\n\n  public isCustomImage(): boolean {\n    return true;\n  }\n\n  public static make(data: any): Installer {\n\n    let i: Installer = new Installer();\n    i.name = data.name;\n    i.isSAGProduct = data.isSAGProduct;\n    i.args = data.args;\n    i.productType = data.productType;\n    i.wmInstallerImage = data.wmInstallerImage;\n    i.sourceImageTag = data.sourceImageTag;\n\n    if (data.targetImage)\n      i.targetImage = DockerImage.make(data.targetImage);\n\n    i.licenseFile = data.licenseFile;\n    i.primaryPort = data.primaryPort;\n    i.isNew = data.isNew;\n    i.includeUpdate = data.includeUpdate;\n    i.hostName = data.hostName;\n    i.entryPoint = data.entryPoint;\n    i.exitPoint = data.exitPoint;\n    i.healthCheck = data.healthCheck;\n    i.healthCheck = data.healthCheck;\n\n    if (!i.args)\n       i.args = new Map();\n\n    if (data.buildCommands) {\n      data.buildCommands.forEach((f) => {\n        i.buildCommands.push(BuildCommand.make(f));\n      });\n    }\n\n    return i;\n  }\n\n  public publicPort(): string {\n    return this.primaryPort;\n  }\n\n  public setPublicPort(port: string) {\n    this.primaryPort = port;\n  }\n\n  public assignedLicense(): string {\n\n    return this.licenseFile;\n  }\n\n  public fileForType(type: string, name?: string): BuildCommand {\n\n      return Builder._fileForSource(this.buildCommands, type, name, null);\n  }\n\n  public fileWithDescription(type: string, description: string): BuildCommand {\n      return Builder._fileForSource(this.buildCommands, type, null, description);\n  }\n\n  public removeFileForType(type: string, name?: string) {\n\n      return Builder._removeFileForType(this.buildCommands, type, name);\n  }\n\n  public toString(): string {\n    return JSON.stringify(this, stringifyReplacer);\n  }\n}\n\nexport class Builder implements BuildParams {\n\n  public name: string;\n  public deploymentType: string;\n  public deployments: DeploymentSet[];\n\n  public sourceImage: DockerImage;\n  public targetImage: DockerImage;\n  public version: string;\n  public testStatus: string;\n  public buildCommands: BuildCommand[];\n  public hasTests: string;\n  public buildUser: string;\n  public entryUser: string;\n  public entryPoint: string;\n  public exitPoint: string;\n  public healthCheck: string;\n  public args: Map;\n\n  public hostName: string; // not used!!\n\n  public constructor() {\n\n    this.sourceImage = new DockerImage();\n    this.targetImage = new DockerImage();\n    this.buildCommands = [];\n\n    this.args = new Map();\n  }\n\n  public hyphenatedName(): string {\n\n    return this.name.toLowerCase().replace(/\\s/g, \"-\");\n  }\n\n  public static make(data: any): Builder {\n\n    let b: Builder = new Builder();\n    b.name = data.name;\n    b.deploymentType = data.type;\n\n    b.deployments = [];\n\n    if (data.deployments) {\n      data.deployments.forEach((d) => {\n            b.deployments.push(DeploymentSet.make(d));\n      });\n    }\n\n    if (data.buildCommands) {\n      data.buildCommands.forEach((f) => {\n            b.buildCommands.push(BuildCommand.make(f));\n      });\n    }\n\n    b.sourceImage = DockerImage.make(data.sourceImage);\n    b.targetImage = DockerImage.make(data.targetImage);\n    b.version = data.version;\n    b.testStatus = data.testStatus;\n    b.buildUser = data.buildUser;\n    b.entryUser = data.entryUser;\n    b.entryPoint = data.entryPoint;\n    b.exitPoint = data.exitPoint;\n    b.healthCheck = data.healthCheck;\n\n    if (data.hasTests && data.hasTests == 'true')\n      b.hasTests = \"true\";\n\n    return b;\n  }\n\n  public publicPort(): string {\n    return this.sourceImage.primaryPort;\n  }\n\n  public setPublicPort(port: string) {\n    this.sourceImage.primaryPort = port;\n  }\n\n  public assignedLicense(): string {\n\n    let lic: BuildCommand = this.fileWithDescription(\"licenses\",'Product License');\n\n    if (lic) {\n      return lic.target.replace(/\\-/g, \" \");\n    } else {\n      return null;\n    }\n  }\n\n  public isCustomImage(): boolean {\n    return this.sourceImage.isCustom;\n  }\n\n  public fileForType(type: string, name?: string): BuildCommand {\n      return Builder._fileForSource(this.buildCommands, type, name, null);\n  }\n\n  public fileWithDescription(type: string, description: string): BuildCommand {\n      return Builder._fileForSource(this.buildCommands, type, null, description);\n  }\n\n  public removeFileForType(type: string, name?: string) {\n\n      return Builder._removeFileForType(this.buildCommands, type, name);\n  }\n\n  public static _fileForSource(buildCommands: BuildCommand[], type: string, name: string, description: string): BuildCommand {\n\n      let file: BuildCommand = null;\n\n      for (var i = 0; i  {\n         d.buildCommands.push(BuildCommand.make(b));\n       });\n     }\n\n     return d;\n  }\n}\n\nexport class Port {\n\n  public publicPort: string;\n  public serviceType: string;\n\n  constructor(public internal: string, public external: string, public description: string, public type?: string) {\n\n  }\n\n  public static makeArray(array: any[]): Port[] {\n\n    let ports: Port[] = [];\n\n    array.forEach((p) => {\n      let port: Port = new Port(p.internal, p.external, p.description, p.type);\n      port.publicPort = p.publicPort;\n      port.serviceType = p.serviceType;\n\n      ports.push(port);\n    });\n\n    return ports;\n  }\n}\n\nexport class Probe {\n\n  public path: string;\n  public port: string;\n  public initialDelaySeconds: number;\n  public periodSeconds: number;\n  public timeoutSeconds: number;\n\n  public static make(data: any): Probe {\n\n    let p = new Probe();\n    p.path = data.path;\n    p.port = data.port;\n    p.initialDelaySeconds = Number(data.initialDelaySeconds);\n    p.periodSeconds = Number(data.periodSeconds);\n    p.timeoutSeconds = Number(data.timeoutSeconds);\n\n    return p;\n  }\n}\n\nexport class Container {\n\n  public name: string;\n  public names: string[];\n  public active: string;\n  public type: string;\n  public description: string;\n  public hostname: string;\n  public secure: string;\n  public image: string;\n  public build: DockerBuild;\n  public ports: Port[];\n  public env: Arg[];\n  public volumes: Arg[];\n  public readinessProbe;\n  public livenessProbe;\n  public testStatus : TestStatus;\n  public adminUser: string;\n  public adminPassword: string;\n\n  // runtime only\n\n  public id: string;\n  public state: string;\n  public status: string;\n  public created: Date;\n\n  constructor() {\n\n    this.active = \"true\";\n    this.ports = [];\n    this.env = [];\n    this.volumes = [];\n  }\n\n  public copy() {\n    return Container.make(this);\n  }\n\n  public uniqueName(usesDedicatedRepo: boolean): string {\n\n    let repo: string = this.repository();\n\n    if (repo)\n      return repo + (usesDedicatedRepo ? \"/\" : \":\") + this.imageName();\n    else\n      return this.imageName();\n  }\n\n  public repository(): string {\n\n    if (this.image.indexOf(\":\") != -1) {\n\n      return this.image.substring(0, this.image.indexOf(\":\"));\n    } else {\n      return null;\n    }\n  }\n\n  public imageName(): string {\n\n    let name: string = this.image;\n\n    let idx: number = name.indexOf(\":\");\n\n    if (idx != -1) {\n\n      let lside = name.substring(0, idx);\n      let rside = name.substring(idx+1);\n\n      if (DockerImage.isVersionNumber(rside)) {\n\n        // name is on left side\n\n         if (this.image.lastIndexOf(\"/\") != -1) {\n          let idx: number = this.image.lastIndexOf(\"/\");\n          let rdx: number = this.image.indexOf(\":\");\n\n          name = this.image.substring(idx+1, rdx);\n        }\n      } else {\n\n        // name and perhaps version is in right side\n\n        name = rside;\n\n        if (name.indexOf(\"-\") != -1) {\n\n          let idx: number = name.lastIndexOf(\"-\");\n          let b4: string = name.substring(0, idx);\n          let af: string = name.substring(idx+1, name.length);\n\n          if (DockerImage.isVersionNumber(af)) {\n            name = b4;\n          }\n        }\n      }\n    }\n\n    return name;\n  }\n\n  public preferredImageVersion(): string {\n\n    if (this.image && this.image.indexOf(\":\")) {\n\n      let version: string = this.image.substring(this.image.indexOf(\":\")+1, this.image.length);\n\n      if (version.indexOf(\"-\") != -1) {\n        let idx: number = version.lastIndexOf(\"-\");\n        version = version.substring(idx+1, version.length);\n      }\n\n      // no versioning, only a name\n\n      if (!DockerImage.isVersionNumber(version))\n          version = \"latest\";\n\n      return version;\n    } else {\n\n      return \"latest\";\n    }\n  }\n\n  public static make(data: any): Container {\n\n    let c: Container = new Container();\n    c.names = data.names;\n    if (data.names)\n      c.name = data.names[0];\n    else\n      c.name = data.name;\n\n    c.active = data.active;\n    c.description = data.description;\n    c.hostname = data.hostname;\n    c.secure  = data.secure;\n    c.image = data.image;\n    c.type = data.type;\n    c.adminUser = data.adminUser;\n    c.adminPassword = data.adminPassword;\n\n    if (data.build)\n      c.build = DockerBuild.make(data.build);\n\n    if (data.ports)\n      c.ports = Port.makeArray(data.ports);\n\n    if (data.env)\n      c.env = Arg.makeArray(data.env);\n\n    if (data.volumes)\n      c.volumes = Arg.makeArray(data.volumes);\n\n    if (data.readinessProbe)\n      c.readinessProbe = Probe.make(data.readinessProbe);\n\n    if (data.livenessProbe)\n      c.livenessProbe = Probe.make(data.livenessProbe);\n\n    return c;\n  }\n\n  public environmentVariable(id: string): Arg {\n\n    var arg: Arg = null;\n\n    for (var i = 0; i  {\n          s.tests.push(Test.make(t));\n        });\n    }\n\n    return s;\n  }\n\n  public isActive(): boolean {\n\n    return (this.apiDeployType != \"none\" && this.apiDeployType != null) || this.stop == \"true\" || (this.apiMaturity != \"none\" &&  this.apiMaturity != null) ||\n                  (this.dockerAction != \"none\"  && this.dockerAction != null) || this.dockerTag != null || this.stop != null;\n  }\n\n  public summary(): string {\n\n      var status: string = null;\n\n      if (this.apiDeployType == \"deploy\")\n          status = \"Deploy API's \";\n      else if (this.apiDeployType == \"promote\")\n        status = \"Promote API's to \" + this.apiStage;\n\n      if (this.runTests == \"true\") {\n\n        if (status != null)\n          status = status + \", run tests\";\n        else\n          status = \"Run tests\";\n      }\n\n      if (this.apiMaturity) {\n\n        if (status != null)\n            status = status + \", and set maturity to \" + this.apiMaturity;\n        else\n          status = \"Set maturity to \" + this.apiMaturity;\n      }\n\n      if (this.dockerTag) {\n\n        if (status != null)\n          status = status + \", then tag image\";\n        else\n          status = \"Tag image \";\n      }\n\n      if (this.dockerAction) {\n        if (status != null)\n          status = status + \", \" + this.dockerAction;\n        else\n          status = this.dockerAction;\n\n        status = status + \" image\";\n      }\n\n      if (this.stop == \"true\") {\n        if (status != null)\n            status = status + \" before stopping\";\n        else\n            status = \"stop containers\";\n      }\n\n      if (this.pipelineAction) {\n\n        if (status != null)\n            status = status + \", then \" + this.pipelineAction + \" pipeline\";\n        else\n            status = \"and \" + this.pipelineAction + \" pipeline execution\";\n      }\n\n      return status;\n    }\n}\n\nexport class Stage {\n\n    public id: string;\n    public name: string;\n    public containerHost: string;\n    public useKubernetes: string;\n    public buildOnStart: string;\n    public deployments: Deployment[];\n    public onStart: Action;\n    public onFail: Action;\n    public onSuccess: Action;\n\n    constructor() {\n      this.deployments = [];\n      this.useKubernetes = \"false\";\n      this.buildOnStart = \"false\";\n      this.onStart = new Action();\n      this.onSuccess = new Action();\n      this.onFail = new Action();\n    }\n\n    public copy(): Stage {\n\n      let c = Stage.make(this);\n\n      c.id = this.id + \" copy\";\n      c.name = this.name + \" copy\";\n\n      return c;\n    }\n\n    public static make(data: any): Stage {\n\n      let s: Stage = new Stage();\n\n      s.name = data.name;\n      s.id = s.name;\n      s.containerHost = data.containerHost;\n      s.useKubernetes = data.useKubernetes;\n      s.buildOnStart = data.buildOnStart;\n\n      if (data.deployments) {\n        data.deployments.forEach((c) => {\n          s.deployments.push(Deployment.make(c));\n        });\n      }\n\n      if (data.onStart) {\n        s.onStart = Action.make(data.onStart);\n      }\n\n      if (data.onSuccess) {\n        s.onSuccess = Action.make(data.onSuccess);\n      }\n\n      if (data.onFail) {\n        s.onFail = Action.make(data.onFail);\n      }\n\n      return s;\n    }\n}\n\nexport class Deployment {\n\n  public name: string;\n  public hostname: string;\n  public appName: string;\n  public apis: APIDefinition[];\n  public containers: Container[];\n  public replicas: string;\n  public serviceType: string;\n  public restartPolicy: string;\n  public requiresMonitoring: string;\n  public dependsOn: string;\n\n  constructor() {\n\n    this.containers = [];\n    this.apis = [];\n  }\n\n  public copy() {\n    return Deployment.make(this);\n  }\n\n  public static make(data: any): Deployment {\n\n    let s: Deployment = new Deployment();\n    s.name = data.name;\n    s.hostname = data.hostname;\n    s.replicas = data.replicas;\n    s.appName = data.appName;\n    s.serviceType = data.serviceType;\n    s.restartPolicy = data.restartPolicy;\n    s.requiresMonitoring = data.requiresMonitoring;\n    s.dependsOn = data.dependsOn;\n\n    if (data.apis) {\n       data.apis.forEach((a) => {\n         s.apis.push(APIDefinition.make(a));\n       });\n    }\n\n    if (data.containers) {\n       data.containers.forEach((c) => {\n         s.containers.push(Container.make(c));\n       });\n    }\n\n    return s;\n  }\n\n  public containerForType(type: string): Container {\n\n    let found: Container = null;\n\n    this.containers.forEach((c) => {\n\n      if (c.type == type) {\n        found = c;\n      }\n    });\n\n    return found;\n  }\n\n  public removeContainer(c: Container) {\n\n    var found : number = -1;\n\n    for (var i = 0; i  {\n         p.builds.push(Builder.make(i));\n       });\n    }\n\n    if (data.deployments) {\n      p.deployments = [];\n       data.deployments.forEach((i) => {\n         p.deployments.push(Deployment.make(i));\n       });\n    }\n\n    return p;\n  }\n\n  public serviceFor(id: string): Deployment {\n\n      let found: Deployment = null;\n\n      for (var z = 0; z  {\n         p.stages.push(Stage.make(s));\n       });\n    }\n\n    return p;\n  }\n}\n\nfunction stringifyReplacer(key, value) {\n  const originalObject = this[key];\n  if(originalObject instanceof Map) {\n    return {\n      dataType: 'Map',\n      value: Array.from(originalObject.entries()), // or with spread: value: [...originalObject]\n    };\n  } else {\n    return value;\n  }\n}\n\nfunction parserReviver(key, value) {\n  if(typeof value === 'object' && value !== null) {\n    if (value.dataType === 'Map') {\n      return new Map(value.value);\n    }\n  }\n  return value;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ServiceInfo.html":{"url":"classes/ServiceInfo.html","title":"class - ServiceInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ServiceInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/test-definition.component.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                endpoint\n                            \n                            \n                                    Public\n                                mocks\n                            \n                            \n                                    Public\n                                tests\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            endpoint\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/test-definition.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mocks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/test-definition.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tests\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TestCase[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/test-definition.component.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, ChangeDetectorRef,\n\t\t\tOnInit, OnDestroy, ViewChild }   \t\t\t\tfrom '@angular/core';\n\nimport { Router }\t\t\t\t\t\t\t\t\t  \t    from '@angular/router';\nimport {FormBuilder, FormGroup, FormControl,\n\t\t\t\t\t\t\t\tValidators} \t\t\t   \tfrom '@angular/forms';\nimport { SelectionModel }                             \t\tfrom '@angular/cdk/collections';\n\nimport { MediaMatcher }                               \t\tfrom '@angular/cdk/layout';\nimport { MatAccordion, MatStepper, MatInput, MatButton,\n\tMatDialog, MatDialogRef, MatPaginator, MAT_DIALOG_DATA }from '@angular/material';\nimport { MatTableDataSource } \t\t\t\t\t\t\t\tfrom '@angular/material/table';\n\nimport { Settings }                                   \t  \tfrom '../settings';\n\nimport { DockerImage, TestStatus } \t\t\t\t\t\t\tfrom '../models/docker-image';\nimport { Source }                                     \t  \tfrom '../models/git-source';\nimport { RunSet, Builder, DeploymentSet,\n  Probe, Port, Arg, Stage, Container }       \t\t\t\tfrom '../models/project';\nimport { WmPackageInfo, APIDefinition }               \t  \tfrom '../models/wm-package-info';\nimport { TestSuite }\t\t\t\t\t\t\t\t\t\tfrom \"../models/test-suite\";\nimport { TestCase }\t\t\t\t\t\t\t\t\t\t\tfrom \"../models/test-case\";\n\nimport { ResourceService }                                \tfrom '../services/resources.service';\nimport { DockerService } \t\t\t\t          \t    \tfrom '../services/docker.service';\nimport { ConfigurationService }                    \t\t    from '../services/configuration.service';\nimport { PackagesService }\t\t\t\t\t\t\t\t\tfrom '../services/packages.service';\nimport { TestConfigService }\t\t\t\t\t\t\t\tfrom '../services/test-config.service';\n\nimport { ContainerTemplates }\t\t\t\t\t\t\t   \tfrom '../support/container.templates';\n\nexport class ServiceInfo {\n\n\tpublic endpoint: string;\n\tpublic tests: TestCase[];\n\tpublic mocks: any[];\n}\n\n@Component({\n  selector: 'test-definitions',\n  templateUrl: '../templates/test-definition.html',\n  styleUrls: ['../templates/test-definition.css']\n})\n\nexport class TestDefinitionComponent implements OnInit {\n\n\tpublic panelOpenState: any;\n\tpublic length;\n\tpublic pageSize;\n\tpublic pageEvent;\n\n\tpublic packageChooserFormGroup: FormGroup;\n\tpublic servicesFormGroup: FormGroup;\n\tpublic testCaseFormGroup: FormGroup;\n\n\tpublic selectedPackageCtrl: FormControl;\n\tpublic selectedServiceCtrl: FormControl;\n\n\tpublic packageTableDataSource: MatTableDataSource;\n\tpublic packages: WmPackageInfo[];\n\n\tpublic selectedPackage: WmPackageInfo;\n\n\tpublic servicesTableDataSource: MatTableDataSource;\n\tpublic servicesAndAPIsForSelectedPackage: ServiceInfo[];\n\tpublic currentTestSuite: TestSuite;\n\tpublic currentTestSuiteEndpoints: any[];\n\n\tpublic selectedService: ServiceInfo;\n\tpublic selectedTestCase: TestCase;\n\tpublic isNewTestCase: boolean;\n\n\tpublic displayedPackageColumns: string[] = [\"name\", \"version\", \"apis\", \"status\"];\n\tpublic displayedServicesColumns: string[] = [\"name\", \"tests\"];\n\n\t@ViewChild('stepper')\n\tpublic stepper: MatStepper;\n\n\t@ViewChild('packagesPaginator')\n\tpublic packagesPaginator: MatPaginator;\n\n\t@ViewChild('servicesPaginator')\n\tpublic servicesPaginator: MatPaginator;\n\n\tpublic constructor(private _router: Router, private _settings: Settings, private _dockerService: DockerService, private _dialog: MatDialog,\n\t\tprivate _formBuilder: FormBuilder, private _resources: ResourceService, private _configService: ConfigurationService, private _testSuiteConfig: TestConfigService) {\n\n     \tthis._testSuiteConfig.packages().subscribe((p) => {\n\n     \t\tthis.packages = p;\n\n     \t\tthis.packageTableDataSource = new MatTableDataSource(p);\n\t\t\tthis.packageTableDataSource.paginator = this.packagesPaginator;\n\n\t\t\tthis.packages.forEach((p) => {\n\n\t\t\t\tif (p.testStatus != TestStatus.none) {\n\n\t\t\t\t\tthis._testSuiteConfig.getTestSuiteDefinition(p.name).subscribe((testSuites) => {\n\t\t\t\t\t\tp['testCounts'] = testSuites[0].tests.size;\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tp['testCounts'] = 0;\n\t\t\t\t}\n\t\t\t});\n     \t});\n\n     \tthis.selectedPackageCtrl = new FormControl(null, Validators.required);\n     \tthis.selectedServiceCtrl = new FormControl(null, Validators.required);\n\n     \tthis.packageChooserFormGroup = _formBuilder.group({selectedPackageCtrl: this.selectedPackageCtrl});\n     \tthis.servicesFormGroup = _formBuilder.group({selectedServiceCtrl: this.selectedServiceCtrl});\n     \tthis.testCaseFormGroup = _formBuilder.group({});\n\t}\n\n\tpublic ngOnInit() {\n\n\t}\n\n\tpublic haveTests(element: WmPackageInfo): boolean {\n\n\t\treturn element.testStatus != null && element.testStatus != TestStatus.none\n\t}\n\n\tpublic testLabelFor(container: WmPackageInfo): string {\n\n\t\tlet s: string = \"\";\n\n\t\tif (container.testStatus == TestStatus.none)\n\t\t\ts = \"No test cases defined\";\n\t\telse if (container.testStatus == TestStatus.passed)\n\t\t\ts = \"All test cases pased successfully\";\n\t\tif (container.testStatus == TestStatus.failed)\n\t\t\ts = \"Some test cases failed\";\n\t\tif (container.testStatus == TestStatus.running)\n\t\t\ts = \"Test Cases are running\";\n\t\tif (container.testStatus == TestStatus.todo)\n\t\t\ts = \"Test cases defined, but not yet run\";\n\n\t\treturn s;\n\t}\n\n\tpublic todoTests(element: WmPackageInfo): boolean {\n\n\t\treturn element.testStatus == TestStatus.todo;\n\t}\n\n\tpublic runningTests(element: WmPackageInfo): boolean {\n\n\t\treturn element.testStatus == TestStatus.todo;\n\t}\n\n\tpublic failedTests(element: WmPackageInfo): boolean {\n\n\t\treturn element.testStatus == TestStatus.failed;\n\t}\n\n\tpublic passedTests(element: WmPackageInfo): boolean {\n\n\t\treturn element.testStatus == TestStatus.passed;\n\t}\n\n\tpublic showTestResults(container: Container) {\n\n\t\twindow.open(Settings.SERVER_API + \"/JcTestSuite\", \"test\");\n\t}\n\n\tpublic selectPackage(packageInfo: WmPackageInfo) {\n\n\t\tthis._testSuiteConfig.getTestSuiteDefinition(packageInfo.name).subscribe((testSuites) => {\n\t\t\tthis.currentTestSuite = testSuites[0];\n\n\t\t\tthis.selectedPackageCtrl.setValue(packageInfo.name);\n\n\t\t\tthis.setupEndPointsForCurrentTestSuite();\n\n\t\t\tthis._testSuiteConfig.packageDetails(packageInfo.name).subscribe((p) => {\n\t\t\t\tthis.selectedPackage = p;\n\n\t\t\t\tthis.servicesAndAPIsForSelectedPackage = [];\n\n\t\t\t\tthis.selectedPackage.services.forEach((s) => {\n\t\t\t\t\tlet si: ServiceInfo = new ServiceInfo();\n\t\t\t\t\tsi.endpoint = s;\n\t\t\t\t\tsi.tests = [];\n\n\t\t\t\t\tthis.currentTestSuite.tests.forEach((t) => {\n\n\t\t\t\t\t\tif (t.endpoint == si.endpoint)\n\t\t\t\t\t\t\tsi.tests.push(t);\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.servicesAndAPIsForSelectedPackage.push(si);\n\t\t\t\t});\n\n\t\t\t\tthis.selectedPackage.apis.forEach((a) => {\n\n\t\t\t\t\tlet si: ServiceInfo = new ServiceInfo();\n\t\t\t\t\tsi.endpoint = a.name;\n\t\t\t\t\tsi.tests = [];\n\n\t\t\t\t\tthis.currentTestSuite.tests.forEach((t) => {\n\n\t\t\t\t\t\tif (a.swaggerEndPoint.indexOf(t.api) != -1)\n\t\t\t\t\t\t\tsi.tests.push(t);\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.servicesAndAPIsForSelectedPackage.push(si)\n\t\t\t\t});\n\n\t\t\t\tthis.servicesTableDataSource = new MatTableDataSource(this.servicesAndAPIsForSelectedPackage);\n\t\t\t\tthis.servicesTableDataSource.paginator = this.servicesPaginator;\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic selectService(service: ServiceInfo) {\n\n\t\tthis.selectedServiceCtrl.setValue(service.endpoint);\n\t\tthis.selectedService = service;\n\t}\n\n\tpublic colorForTestSuite(pckg: WmPackageInfo) {\n\n\t\tif (pckg.testStatus == TestStatus.failed)\n\t\t\treturn \"warn\";\n\t\telse\n\t\t\treturn \"primary\";\n\t}\n\n\tpublic setupEndPointsForCurrentTestSuite() {\n\n\t\tlet keys: IterableIterator = this.currentTestSuite.tests.keys();\n\t\tlet key: IteratorResult = keys.next();\n\n\t\tthis.currentTestSuiteEndpoints = [];\n\n\t\twhile(!key.done) {\n\t\t\tlet v: any = {};\n\t\t\tv.endpoint = this.currentTestSuite.tests.get(key.value).endpoint;\n\t\t\tv.isAPI = this.currentTestSuite.tests.get(key.value).apiMethod != null;\n\t\t\tv.tests = [];\n\t\t\tv.tests.push(this.currentTestSuite.tests.get(key.value));\n\n\t\t\tlet existing: any = null;\n\n\t\t\tif ((existing=this.inList(v, this.currentTestSuiteEndpoints)) == null)\n\t\t\t\tthis.currentTestSuiteEndpoints.push(v);\n\t\t\telse\n\t\t\t\texisting.tests.push(this.currentTestSuite.tests.get(key.value));\n\n\t\t\tkey = keys.next();\n\t\t}\n\t}\n\n\tpublic testCountForTestSuite(pckg: WmPackageInfo) {\n\n\t\treturn pckg['testCounts'];\n\t}\n\n\tpublic haveTestsForService(service: ServiceInfo) {\n\n\t\treturn service.tests.length > 0;\n\t}\n\n\tpublic testCountForService(service: ServiceInfo) {\n\n\t\treturn service.tests.length;\n\t}\n\n\tpublic colorForEndpoint(endpoint: any) {\n\n\t\tif (endpoint.isAPI)\n\t\t\treturn \"accent\";\n\t\telse\n\t\t\treturn \"primary\";\n\t}\n\n\tpublic selectServiceChip(service: ServiceInfo) {\n\n\t\tthis.selectService(service);\n\t\tthis.stepper.next();\n\t}\n\n\tpublic selectTestCaseChip(testCase: TestCase) {\n\n\t\tthis.isNewTestCase = false;\n\t\tthis.selectedTestCase = testCase;\n\t\tthis.stepper.next();\n\t}\n\n\tpublic stepChanged(event: any) {\n\n\t\tif (event.selectedIndex == 2 && event.previouslySelectedIndex == 1 && this.selectedTestCase == null) {\n\n\t\t\tthis.selectedTestCase = new TestCase();\n\t\t\tthis.selectedTestCase.suiteId = this.currentTestSuite.id();\n\t\t\tthis.selectedTestCase.endpoint = this.selectedService.endpoint;\n\t\t\tthis.isNewTestCase = true;\n\t\t} else if (event.previouslySelectedIndex == 2) {\n\t\t\tthis.selectedTestCase = null;\n\t\t}\n\t}\n\n\tpublic testCaseUpdated(testCase: TestCase) {\n\n\t\tif (this.isNewTestCase) {\n\n\t\t\t// do nothing, until new test case is confirmed\n\n\t\t} else {\n\n\t\t\tthis.saveChanges();\n\t\t}\n\t}\n\n\tpublic saveNewTestCase() {\n\n\t\tthis.isNewTestCase = false;\n\n\t\tthis.currentTestSuite.tests.set(this.selectedTestCase.id(), this.selectedTestCase);\n\t}\n\n\tpublic removeTestCase(testCase: TestCase) {\n\n\t\tthis.currentTestSuite.tests.delete(testCase.id());\n\t\tthis.saveChanges();\n\n\t\tthis.selectedService.tests = [];\n\n\t\tthis.currentTestSuite.tests.forEach((t) => {\n\n\t\t\tif (t.endpoint == this.selectedService.endpoint)\n\t\t\t\tthis.selectedService.tests.push(t);\n\t\t});\n\t}\n\n\tprivate saveChanges() {\n\n\t}\n\n\tprivate inList(a: any, list: any[]): any {\n\n\t\tlet found: any = null;\n\n\t\tthis.currentTestSuiteEndpoints.forEach((e) => {\n\t\t\tif (e.endpoint == a.endpoint)\n\t\t\t\tfound = e;\n\t\t});\n\n\t\treturn found;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ServicePropertiesComponent.html":{"url":"components/ServicePropertiesComponent.html","title":"component - ServicePropertiesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ServicePropertiesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/k8s/service-properties.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                k8s-props\n            \n\n\n\n\n            \n                templateUrl\n                ../../templates/k8s/service-properties.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                appNameCtrl\n                            \n                            \n                                    Public\n                                formGroup\n                            \n                            \n                                    Public\n                                hostNameCtrl\n                            \n                            \n                                    Public\n                                replicasCtrl\n                            \n                            \n                                    Public\n                                requiresMonitoringCtrl\n                            \n                            \n                                    Public\n                                restartOnFailCtrl\n                            \n                            \n                                    Public\n                                restartPolicies\n                            \n                            \n                                    Public\n                                serviceStates\n                            \n                            \n                                    Public\n                                serviceTypeCtrl\n                            \n                            \n                                    Public\n                                typeCtrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                service\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                serviceUpdated\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_formBuilder: FormBuilder, _router: Router, _settings: Settings)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/k8s/service-properties.component.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _settings\n                                                  \n                                                        \n                                                                        Settings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        service\n                    \n                \n                \n                    \n                        Type :         Deployment\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/k8s/service-properties.component.ts:32\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        serviceUpdated\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/k8s/service-properties.component.ts:35\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/k8s/service-properties.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            appNameCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/k8s/service-properties.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/k8s/service-properties.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hostNameCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/k8s/service-properties.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            replicasCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/k8s/service-properties.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            requiresMonitoringCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/k8s/service-properties.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            restartOnFailCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/k8s/service-properties.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            restartPolicies\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['Always', 'OnFailure', 'Never']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/k8s/service-properties.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            serviceStates\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['Stateless', 'Stateful']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/k8s/service-properties.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            serviceTypeCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/k8s/service-properties.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            typeCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/k8s/service-properties.component.ts:42\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ChangeDetectorRef, OnInit, OnDestroy, \n          Input, Output, EventEmitter }                           from '@angular/core';\nimport { Router }                                                 from '@angular/router';\nimport { animate, state, style, transition, trigger }             from '@angular/animations';\nimport { DataSource }                                             from '@angular/cdk/collections';\n\nimport {FormBuilder, FormGroup, FormControl, \n                Validators}                                       from '@angular/forms';\n\nimport { Observable, of, pipe }                                   from 'rxjs';\nimport { map }                                                    from 'rxjs/operators';\n\nimport { Settings }                                               from '../../settings';\nimport { Deployment }                                             from '../../models/project'\n\n\n@Component({\n  selector: 'k8s-props',\n  templateUrl: '../../templates/k8s/service-properties.html',\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({ height: '0px', minHeight: '0', visibility: 'hidden' })),\n      state('expanded', style({ height: '*', visibility: 'visible' })),\n      transition('expanded  collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ]\n})\n\nexport class ServicePropertiesComponent implements OnInit {\n\n    @Input()\n    public service: Deployment;\n\n    @Output()\n    public serviceUpdated: EventEmitter = new EventEmitter();\n\n    public serviceStates: string[] = ['Stateless', 'Stateful'];\n    public restartPolicies: string[] = ['Always', 'OnFailure', 'Never'];\n    public formGroup: FormGroup;\n    public appNameCtrl: FormControl;\n    public hostNameCtrl: FormControl;\n    public typeCtrl: FormControl;\n    public replicasCtrl: FormControl;\n    public serviceTypeCtrl: FormControl;\n    public requiresMonitoringCtrl: FormControl;\n    public restartOnFailCtrl: FormControl;\n\n    public constructor(private _formBuilder: FormBuilder, private _router: Router, private _settings: Settings) {\n          this.formGroup = this._formBuilder.group({});\n    }\n\n    public ngOnInit() {\n\n      this.appNameCtrl = new FormControl(this.service.appName);\n      this.hostNameCtrl = new FormControl(this.service.hostname);\n      this.replicasCtrl = new FormControl(this.service.replicas || 1);\n      this.serviceTypeCtrl = new FormControl(this.service.serviceType);\n      this.requiresMonitoringCtrl = new FormControl(this.service.requiresMonitoring == 'true' ? true : false);\n      this.restartOnFailCtrl = new FormControl(this.service.restartPolicy || 'Always');\n\n      this.formGroup.addControl(\"appNameCtrl\", this.appNameCtrl);\n      this.formGroup.addControl(\"hostNameCtrl\", this.hostNameCtrl);\n      this.formGroup.addControl(\"replicasCtrl\", this.replicasCtrl);\n      this.formGroup.addControl(\"serviceTypeCtrl\", this.serviceTypeCtrl);\n      this.formGroup.addControl(\"requiresMonitoringCtrl\", this.requiresMonitoringCtrl);\n      this.formGroup.addControl(\"restartOnFailCtrl\", this.restartOnFailCtrl);\n\n      this.formGroup.valueChanges.subscribe((v) => {\n\n        if (this.appNameCtrl.dirty) {\n\n          this.service.appName = this.appNameCtrl.value;\n          this.appNameCtrl.markAsPristine();\n        }\n\n        if (this.hostNameCtrl.dirty) {\n\n          this.service.hostname = this.hostNameCtrl.value;\n          this.hostNameCtrl.markAsPristine();\n        }\n\n        if (this.replicasCtrl.dirty) {\n\n          this.service.replicas = this.replicasCtrl.value;\n          this.replicasCtrl.markAsPristine();\n        }\n\n        if (this.serviceTypeCtrl.dirty) {\n\n          this.service.serviceType = this.serviceTypeCtrl.value;\n          this.serviceTypeCtrl.markAsPristine();\n        }\n\n        if (this.restartOnFailCtrl.dirty) {\n\n          this.service.restartPolicy = this.restartOnFailCtrl.value;\n          this.restartOnFailCtrl.markAsPristine();\n        }\n\n        if (this.requiresMonitoringCtrl.dirty) {\n\n          this.service.requiresMonitoring = this.requiresMonitoringCtrl.value ? \"true\" : \"false\";\n          this.requiresMonitoringCtrl.markAsPristine();\n        }\n\n        this.serviceUpdated.emit(this.service);\n      });\n    }\n}\n    \n\n    \n        \n\t\n\t\t\n\t\t\tKubernetes\n\t\t\n\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tUsed to identify this deployment to Kubernetes\n                \n                \n\t\t\t\t\t\n\t\t\t\t\tVirtual host name assigned to all containers\n                \n                \n\t\t\t\t\t\n\t\t\t\t\tDefines maximum number of pods that can be instantiated for this layer\n                \n                \n\t\t\t\t\t\n\t\t\t\t\t\t{{state}}\n\t\t\t\t\t\n\t\t\t\t\tEnsures that instances have their own persistent volumes rather than shared if stateful\n                \n                \n                \t\n\t\t\t\t\t\t{{policy}}\n\t\t\t\t\t\n\t\t\t\t\tSpecifies what to do with indidivual Pods if they become unresponsive\n\t\t\t\t\n                Requires Monitoring\n\t\t\t\n\t\t\n\t\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t\t\tKubernetes\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tUsed to identify this deployment to Kubernetes                                \t\t\t\t\t\t\t\t\t\tVirtual host name assigned to all containers                                \t\t\t\t\t\t\t\t\t\tDefines maximum number of pods that can be instantiated for this layer                                \t\t\t\t\t\t\t\t\t\t\t{{state}}\t\t\t\t\t\t\t\t\t\tEnsures that instances have their own persistent volumes rather than shared if stateful                                                \t\t\t\t\t\t\t{{policy}}\t\t\t\t\t\t\t\t\t\tSpecifies what to do with indidivual Pods if they become unresponsive\t\t\t\t                Requires Monitoring\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about-app'},{'name': 'ActionComponent', 'selector': 'action'},{'name': 'ApiGatewayInstallerComponent', 'selector': 'jc-apigw-install'},{'name': 'ApiMicroGatewayInstallerComponent', 'selector': 'jc-apimg-install'},{'name': 'ApiPortalInstallerComponent', 'selector': 'jc-apipr-installer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildCommandsComponent', 'selector': 'build-commands'},{'name': 'BuildComponent', 'selector': 'build'},{'name': 'BuildExeComponent', 'selector': 'build-exe'},{'name': 'BuildImageComponent', 'selector': 'build-solution'},{'name': 'BuildInstallComponent', 'selector': 'build-install'},{'name': 'BuildPackagesComponent', 'selector': 'build-package'},{'name': 'ContainerComponent', 'selector': 'container'},{'name': 'ContainersComponent', 'selector': 'app-containers'},{'name': 'DeploymentDetailsComponent', 'selector': 'jc-deployment-details'},{'name': 'DeploymentListComponent', 'selector': 'jc-k8s-deployments'},{'name': 'DockerImageChooserComponent', 'selector': 'docker-image-chooser'},{'name': 'DockerImageListComponent', 'selector': 'jc-docker-images'},{'name': 'DockerImageVersionsComponent', 'selector': 'jc-docker-image-versions'},{'name': 'EditContainerComponent', 'selector': 'edit-container'},{'name': 'GitSourcesComponent', 'selector': 'git-source'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'InstallerComponent', 'selector': 'jc-install'},{'name': 'MicroServiceBuilderComponent', 'selector': 'jc-msc-configure'},{'name': 'MicroServiceInstallerComponent', 'selector': 'jc-msc-install'},{'name': 'PodsListComponent', 'selector': 'jc-pods'},{'name': 'RuntimeContainersComponent', 'selector': 'runtime-containers'},{'name': 'RuntimeDeployComponent', 'selector': 'runtime-deploy'},{'name': 'RuntimeDetailsComponent', 'selector': ''},{'name': 'RuntimeK8sComponent', 'selector': 'runtime'},{'name': 'RuntimeScaleComponent', 'selector': 'jc-runtime-scale'},{'name': 'RuntimeStageComponent', 'selector': 'runtime-stage'},{'name': 'RuntimeUpdateComponent', 'selector': ''},{'name': 'SagImageAlerterComponent', 'selector': 'sag-image-alerter'},{'name': 'ServicePropertiesComponent', 'selector': 'k8s-props'},{'name': 'SettingsComponent', 'selector': 'home'},{'name': 'SimpleNameComponent', 'selector': 'name-dialog'},{'name': 'StagingComponent', 'selector': 'staging'},{'name': 'TestCaseComponent', 'selector': 'test-case'},{'name': 'TestDefinitionComponent', 'selector': 'test-definitions'},{'name': 'TestHistoryComponent', 'selector': 'test-history'},{'name': 'TestRunComponent', 'selector': 'test-reun'},{'name': 'UMInstallerComponent', 'selector': 'jc-um-install'},{'name': 'UploadButtonComponent', 'selector': 'file-uploader-button'}];\n    var DIRECTIVES = [{'name': 'BuildImageChooseDirective', 'selector': '[builder]'},{'name': 'CancelCdkDrag', 'selector': '[appCancelCdkDrag]'},{'name': 'NgFileDrop', 'selector': '[ng-file-drop]'},{'name': 'NgFileSelect', 'selector': '[ng-file-select]'},{'name': 'RuntimeActionsDirective', 'selector': '[runtime-actions]'}];\n    var ACTUAL_COMPONENT = {'name': 'ServicePropertiesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Settings.html":{"url":"injectables/Settings.html","title":"injectable - Settings","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Settings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/settings.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _values\n                            \n                            \n                                    Private\n                                _valuesLoaded\n                            \n                            \n                                    Private\n                                    Static\n                                CONFIG\n                            \n                            \n                                    Public\n                                currentRuntime\n                            \n                            \n                                    Static\n                                DEV_SERVER_API\n                            \n                            \n                                    Public\n                                dockerExpander\n                            \n                            \n                                    Public\n                                gatewayExpander\n                            \n                            \n                                    Public\n                                gitExpander\n                            \n                            \n                                    Static\n                                SERVER_API\n                            \n                            \n                                    Static\n                                WS_SERVER\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _cacheValues\n                            \n                            \n                                    Public\n                                _restore\n                            \n                            \n                                    Public\n                                gotoLastViewedPage\n                            \n                            \n                                    Public\n                                saveChanges\n                            \n                            \n                                    Public\n                                setCurrentNamespace\n                            \n                            \n                                    Public\n                                setCurrentPage\n                            \n                            \n                                    Public\n                                values\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/settings.ts:88\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _cacheValues\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _cacheValues(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Values\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            _restore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _restore()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            gotoLastViewedPage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    gotoLastViewedPage(router: Router)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    router\n                                    \n                                                Router\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            saveChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setCurrentNamespace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setCurrentNamespace(namespace: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    namespace\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setCurrentPage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setCurrentPage(page: string, arg?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    arg\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            values\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    values()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _values\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Values\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _valuesLoaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings.ts:86\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : Settings.SERVER_API + \"/rad/jc.devops:api/configuration/user\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings.ts:88\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentRuntime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            DEV_SERVER_API\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://host.docker.internal:5555\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dockerExpander\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings.ts:80\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gatewayExpander\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings.ts:81\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gitExpander\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            SERVER_API\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            WS_SERVER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"ws://localhost:9191\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings.ts:74\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } \t           \t \t\t\t\t\tfrom '@angular/core';\nimport { Router }\t\t\t\t\t   \t\t\t\t\tfrom '@angular/router';\nimport { HttpClient, HttpHeaders, HttpParams }  \t\tfrom '@angular/common/http';\nimport { Observable, of }               \t\t      \tfrom 'rxjs';\nimport { switchMap, map, catchError, share } \t\t\tfrom 'rxjs/operators';\n\nexport class RepoSettings {\n\n\tconstructor(public name: string, public packages: string, public configuration: string) {\n\n\t}\n}\n\nexport enum GitType {\n  github,\n  gitlab\n}\n\nexport class Values {\n\n\tpublic gitUri: string = \"https://github.com/\";\n\tpublic gitAPIUrl: string = \"https://api.github.com\";\n\tpublic gitType: GitType = GitType.github;\n\tpublic gitName: string;\n\tpublic gitUser: string //= \"johnpcarter\";\n\tpublic gitIsPACPassword: string = \"true\";\n\tpublic gitPassword: string// = \"jaghuc-cupWeq-hohve3\";\n\tpublic gitRepos: RepoSettings[] = [new RepoSettings(\"wm\", \"/packages\", \"/config\")];\n\n\tpublic dockerHost: string = null;\n\tpublic imagePrefix: string// = \"jc\";\n\n\tpublic lastViewedPage: string = null;\n\tpublic lastViewedPageArg: string = null;\n\n\tpublic k8sUrl: string = \"https://localhost:6443\"\n\tpublic k8sNamespace: string = null;\n\tpublic k8sToken: string = null;\n\n\tpublic dockerEmail: string = null;\n\tpublic dockerUserId: string = null;\n\tpublic dockerPassword: string = null;\n\n\tpublic empowerUserId: string = null;\n\tpublic empowerPassword: string = null;\n\tpublic empowerEncryptedPassword: string = null;\n\n\tpublic repoForName(name: string): RepoSettings {\n\n\t\tlet found: RepoSettings = null;\n\n\t\tthis.gitRepos.forEach((r) => {\n\n\t\t\tif (r.name == name) {\n\t\t\t\tfound = r;\n\t\t\t}\n\t\t});\n\n\t\treturn found;\n\t}\n}\n\n@Injectable()\nexport class Settings {\n\n\t// Use if running in Dockerised Integration Server\n\tpublic static SERVER_API = \"\";\n\tpublic static DEV_SERVER_API = \"http://host.docker.internal:5555\";\n\n\t// Use if running in separate container on local machine\n  // public static SERVER_API = \"http://localhost:5555\";\n\t// public static DEV_SERVER_API = \"http://localhost:5555\";\n\n\tpublic static WS_SERVER = \"ws://localhost:9191\";\n\n\t// runtime prefs\n\n\tpublic currentRuntime: string;\n \tpublic gitExpander: boolean;\n  \tpublic dockerExpander: boolean;\n  \tpublic gatewayExpander: boolean;\n\n  \t// server managed settings\n\n  \tprivate _values: Values;\n  \tprivate _valuesLoaded: boolean;\n\n\tprivate static CONFIG: string = Settings.SERVER_API + \"/rad/jc.devops:api/configuration/user\";\n\n\tpublic constructor(private _http: HttpClient) {\n\n\t\tthis._values = new Values();\n\n\t\tthis.values();\n\t}\n\n\tpublic values(): Observable {\n\n\t\tif (this._valuesLoaded) {\n\n\t\t\tconsole.log(\"getting preloaded settings\");\n\n\t\t\treturn of(this._values);\n\t\t}\n\t\telse {\n\t\t\tconsole.log(\"restoring settings\");\n\n\t\t\treturn this._restore().pipe(share());\n\t\t}\n\t}\n\n\tpublic setCurrentPage(page: string, arg?: string) {\n\n\t\tif (this._values.lastViewedPage != page) {\n\t\t\tthis._values.lastViewedPage = page;\n\t\t\tthis._values.lastViewedPageArg = arg;\n\t\t\tthis.saveChanges();\n\t\t}\n\t}\n\n\tpublic setCurrentNamespace(namespace: string) {\n\n\t\tif (this._values.k8sNamespace != namespace) {\n\t\t\tthis._values.k8sNamespace = namespace;\n\t\t\tthis.saveChanges();\n\t\t}\n\t}\n\n\tpublic gotoLastViewedPage(router: Router) {\n\n\t\tif (this._values.lastViewedPage) {\n\n\t\t\tif (this._values.lastViewedPageArg)\n   \t\t\t\trouter.navigate([this._values.lastViewedPage, this._values.lastViewedPageArg]);\n   \t\t\telse\n   \t\t\t\trouter.navigate([this._values.lastViewedPage]);\n\n   \t\t\tthis._values.lastViewedPage = null;\n\t\t}\n\t}\n\n\tpublic _restore(): Observable {\n\n\t\tlet url: string = Settings.CONFIG;\n    \tlet headers = new HttpHeaders()\n                    .append('Content-Type', 'application/json')\n                    .append('Accept', 'application/json')\n                    .append('Cache-Control', 'no-cache')\n                    .append('Cache-Control', 'no-store')\n                    .append('Pragma','no-cache')\n                    .append('Expires', '0')\n                    .append('Accept', 'application/json');\n\n        let options: any = { headers };\n\n        return this._http.get(url, options).pipe(map((response) => {\n\n        \treturn this._cacheValues(( response).User);\n        }));\n\t}\n\n\tpublic saveChanges() {\n\n\t\tlet url: string = Settings.CONFIG;\n    \tlet headers = new HttpHeaders()\n                    .append('Content-Type', 'application/json')\n                    .append('Accept', 'application/json')\n                    .append('Cache-Control', 'no-cache')\n                    .append('Cache-Control', 'no-store')\n                    .append('Pragma','no-cache')\n                    .append('Expires', '0')\n                    .append('Accept', 'application/json');\n\n        let options: any = { headers };\n\n        let body: string = JSON.stringify(this._values);\n\n        return this._http.post(url, this._values, options).subscribe((response) => {\n\n        \tconsole.log(\"response is \" + response);\n        },\n        error => {return new Values()});\n\t}\n\n\tprivate _cacheValues(data: any): Values {\n\n\t\tif (data) {\n\n\t\t\tif (data.gitUri) {\n\t\t\t\tthis._values.gitUri = data.gitUri;\n\n\t\t\t\tthis._values.gitType = data.gitType == 0 ? GitType.github : GitType.gitlab;\n\n\t\t\t\tif (this._values.gitType == GitType.github) {\n\t\t\t\t\tlet protoMarker: number = data.gitUri.indexOf(\"//\");\n\t\t\t\t\tthis._values.gitAPIUrl = data.gitUri.substring(0, protoMarker) + \"//api.\" + data.gitUri.substring(protoMarker + 2);\n\t\t\t\t} else {\n\t\t\t\t\tthis._values.gitAPIUrl = this._values.gitUri;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//if (data.gitAPIUrl)\n\t\t\t//\tthis._values.gitAPIUrl = data.gitAPIUrl;\n\n\t\t\tif (data.gitUser)\n\t\t\t\tthis._values.gitUser = data.gitUser;\n\n\t\t\tif (data.gitName)\n\t\t\t\tthis._values.gitName = data.gitName;\n\n\t\t\tif (data.gitPassword)\n\t\t\t\tthis._values.gitPassword = data.gitPassword;\n\n\t\t\tif (data.gitType)\n\t\t\t  this._values.gitType = data.gitType == 0 ? GitType.github : GitType.gitlab;\n\n\t\t\tif (data.gitIsPACPassword)\n\t\t\t\tthis._values.gitIsPACPassword = data.gitIsPACPassword;\n\n\t\t\tif (data.gitRepos) {\n\n\t\t\t\tthis._values.gitRepos = [];\n\n\t\t\t\tdata.gitRepos.forEach((r) => {\n\t\t\t\t\tthis._values.gitRepos.push(new RepoSettings(r.name, r.packages, r.configuration));\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (data.dockerHost)\n\t\t\t\tthis._values.dockerHost = data.dockerHost;\n\n\t\t\tif (data.imagePrefix)\n\t\t\t\tthis._values.imagePrefix = data.imagePrefix;\n\n\t\t\tif (data.k8sUrl)\n\t\t\t\tthis._values.k8sUrl = data.k8sUrl;\n\n\t\t\tif (data.k8sNamespace)\n\t\t\t\tthis._values.k8sNamespace = data.k8sNamespace;\n\n\t\t\tif (data.k8sToken)\n\t\t\t\tthis._values.k8sToken = data.k8sToken;\n\n\t\t\tif (data.dockerEmail)\n\t\t\t\tthis._values.dockerEmail = data.dockerEmail;\n\n\t\t\tif (data.dockerUserId)\n\t\t\t\tthis._values.dockerUserId = data.dockerUserId;\n\n\t\t\tif (data.dockerPassword)\n\t\t\t\tthis._values.dockerPassword = data.dockerPassword;\n\n\t\t\tif (data.empowerUserId)\n\t\t\t\tthis._values.empowerUserId = data.empowerUserId;\n\n\t\t\tif (data.empowerPassword)\n\t\t\t\tthis._values.empowerPassword = data.empowerPassword;\n\n\t\t\tif (data.empowerEncryptedPassword)\n\t\t\t\tthis._values.empowerEncryptedPassword = data.empowerEncryptedPassword;\n\n\t\t\tif (data.lastViewedPage)\n\t\t\t\tthis._values.lastViewedPage = data.lastViewedPage;\n\n\t\t\tif (data.lastViewedPageArg)\n\t\t\t\tthis._values.lastViewedPageArg = data.lastViewedPageArg;\n\t\t}\n\n\t\tconsole.log(\"loaded settings: \" + this._values.dockerHost);\n\n\t\tthis._valuesLoaded = true;\n\n\t\treturn this._values;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SimpleNameComponent.html":{"url":"components/SimpleNameComponent.html","title":"component - SimpleNameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SimpleNameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/elements/simple-name.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                name-dialog\n            \n\n\n\n            \n                template\n                  {{title}}\n  \n  \t\n  \n  \n  \tCancel\n  \tContinue\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/elements/simple-name.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/elements/simple-name.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/elements/simple-name.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ChangeDetectorRef, EventEmitter, Inject,\n\t\t\tOnInit, OnChanges, OnDestroy, Input, \n\t\t\t\t\t\t\t\t\t\tOutput }   \t\tfrom '@angular/core';\nimport {MAT_DIALOG_DATA} \t\t\t\t\t\t\t\tfrom '@angular/material';\n\n@Component({\n  selector: 'name-dialog',\n  template: `\n  {{title}}\n  \n  \t\n  \n  \n  \tCancel\n  \tContinue\n`\n})\n\nexport class SimpleNameComponent {\n\n\tpublic title: string;\n\n\tconstructor(@Inject(MAT_DIALOG_DATA) public data: any) { \n\n\t\tthis.title = data.title;\n\t}\n}\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{title}}    \t      \tCancel  \tContinue'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about-app'},{'name': 'ActionComponent', 'selector': 'action'},{'name': 'ApiGatewayInstallerComponent', 'selector': 'jc-apigw-install'},{'name': 'ApiMicroGatewayInstallerComponent', 'selector': 'jc-apimg-install'},{'name': 'ApiPortalInstallerComponent', 'selector': 'jc-apipr-installer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildCommandsComponent', 'selector': 'build-commands'},{'name': 'BuildComponent', 'selector': 'build'},{'name': 'BuildExeComponent', 'selector': 'build-exe'},{'name': 'BuildImageComponent', 'selector': 'build-solution'},{'name': 'BuildInstallComponent', 'selector': 'build-install'},{'name': 'BuildPackagesComponent', 'selector': 'build-package'},{'name': 'ContainerComponent', 'selector': 'container'},{'name': 'ContainersComponent', 'selector': 'app-containers'},{'name': 'DeploymentDetailsComponent', 'selector': 'jc-deployment-details'},{'name': 'DeploymentListComponent', 'selector': 'jc-k8s-deployments'},{'name': 'DockerImageChooserComponent', 'selector': 'docker-image-chooser'},{'name': 'DockerImageListComponent', 'selector': 'jc-docker-images'},{'name': 'DockerImageVersionsComponent', 'selector': 'jc-docker-image-versions'},{'name': 'EditContainerComponent', 'selector': 'edit-container'},{'name': 'GitSourcesComponent', 'selector': 'git-source'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'InstallerComponent', 'selector': 'jc-install'},{'name': 'MicroServiceBuilderComponent', 'selector': 'jc-msc-configure'},{'name': 'MicroServiceInstallerComponent', 'selector': 'jc-msc-install'},{'name': 'PodsListComponent', 'selector': 'jc-pods'},{'name': 'RuntimeContainersComponent', 'selector': 'runtime-containers'},{'name': 'RuntimeDeployComponent', 'selector': 'runtime-deploy'},{'name': 'RuntimeDetailsComponent', 'selector': ''},{'name': 'RuntimeK8sComponent', 'selector': 'runtime'},{'name': 'RuntimeScaleComponent', 'selector': 'jc-runtime-scale'},{'name': 'RuntimeStageComponent', 'selector': 'runtime-stage'},{'name': 'RuntimeUpdateComponent', 'selector': ''},{'name': 'SagImageAlerterComponent', 'selector': 'sag-image-alerter'},{'name': 'ServicePropertiesComponent', 'selector': 'k8s-props'},{'name': 'SettingsComponent', 'selector': 'home'},{'name': 'SimpleNameComponent', 'selector': 'name-dialog'},{'name': 'StagingComponent', 'selector': 'staging'},{'name': 'TestCaseComponent', 'selector': 'test-case'},{'name': 'TestDefinitionComponent', 'selector': 'test-definitions'},{'name': 'TestHistoryComponent', 'selector': 'test-history'},{'name': 'TestRunComponent', 'selector': 'test-reun'},{'name': 'UMInstallerComponent', 'selector': 'jc-um-install'},{'name': 'UploadButtonComponent', 'selector': 'file-uploader-button'}];\n    var DIRECTIVES = [{'name': 'BuildImageChooseDirective', 'selector': '[builder]'},{'name': 'CancelCdkDrag', 'selector': '[appCancelCdkDrag]'},{'name': 'NgFileDrop', 'selector': '[ng-file-drop]'},{'name': 'NgFileSelect', 'selector': '[ng-file-select]'},{'name': 'RuntimeActionsDirective', 'selector': '[runtime-actions]'}];\n    var ACTUAL_COMPONENT = {'name': 'SimpleNameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Source.html":{"url":"classes/Source.html","title":"class - Source","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Source\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/git-source.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                exclude\n                            \n                            \n                                    Public\n                                gitPassword\n                            \n                            \n                                    Public\n                                gitRepository\n                            \n                            \n                                    Public\n                                gitURI\n                            \n                            \n                                    Public\n                                gitUser\n                            \n                            \n                                    Public\n                                include\n                            \n                            \n                                    Public\n                                targetDir\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                make\n                            \n                            \n                                    Public\n                                merge\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/models/git-source.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            exclude\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/git-source.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gitPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/git-source.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gitRepository\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/git-source.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gitURI\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/git-source.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gitUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/git-source.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            include\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/git-source.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            targetDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/git-source.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/git-source.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            make\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    make(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/git-source.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Source\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            merge\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    merge(other: Source)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/git-source.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                                Source\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Source {\n\n  \tpublic gitURI: string;\n  \tpublic gitUser: string;\n  \tpublic gitPassword: string;\n  \tpublic gitRepository: string;\n  \tpublic type: string;\n  \tpublic include: string[];\n  \tpublic exclude: string[];\n  \tpublic targetDir: string;\n\n \tpublic constructor() {\n\n  \t\tthis.include = [];\n  \t\tthis.exclude = [];\n  \t}\n\n \tpublic merge(other: Source) {\n\n \t\tthis.include = other.include;\n \t\tthis.exclude = other.exclude;\n\n \t\tif (other.gitURI)\n \t\t\tthis.gitURI = other.gitURI;\n\n \t\tif (other.gitRepository)\n \t\t  this.gitRepository = other.gitRepository;\n\n \t\tif (other.gitUser)\n \t\t\tthis.gitUser = other.gitUser;\n\n \t\tif (other.gitPassword)\n \t\t\tthis.gitPassword = other.gitPassword;\n\n \t\tif (other.type)\n \t\t\tthis.type = other.type;\n\n \t\tif (other.targetDir)\n \t\t\tthis.targetDir = other.targetDir;\n \t}\n\n \tpublic static make(data: any): Source {\n\n \t\tlet s: Source = new Source();\n\t\ts.gitURI = data.gitURI;\n\t\ts.gitRepository = data.gitRepository;\n\t\ts.gitUser = data.gitUser;\n\t\ts.gitPassword = data.gitPassword;\n\t\ts.targetDir = data.targetDir;\n\t\ts.type = data.type;\n\n\t\tif (data.include)\n\t\t\ts.include = data.include;\n\n\t\tif (data.exclude)\n\t\t\ts.exclude = data.exclude;\n\n\t\treturn s;\n \t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SourceWrapper.html":{"url":"classes/SourceWrapper.html","title":"class - SourceWrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SourceWrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/elements/git-sources.component.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                model\n                            \n                            \n                                    Public\n                                source\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SelectionModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/elements/git-sources.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Source\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/elements/git-sources.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, ChangeDetectorRef, Input, Output, EventEmitter,\n\t\t\tOnInit, OnChanges, OnDestroy, ViewChild }   \t        from '@angular/core';\nimport { SelectionModel } \t\t\t\t\t\t                      from '@angular/cdk/collections';\n\nimport { FormBuilder, FormGroup, FormControl } \t            from '@angular/forms';\n\nimport { MatPaginator }\t\t\t\t\t\t\t                        from '@angular/material';\nimport { MatTableDataSource } \t\t\t\t\t                    from '@angular/material/table';\n\nimport { BuilderProperties, PropertiesChangedOwner }\t      from './build-image-choose.directive';\nimport { GitSourceService, GitRepo }\t\t\t\t                from '../../services/git-source-control.service';\nimport { WmPackageInfo }\t\t\t\t\t\t                        from '../../models/wm-package-info';\nimport { Source } \t\t\t\t\t\t\t\t                          from '../../models/git-source';\n\nimport { Settings, RepoSettings }                           from '../../settings';\nimport {PackagesService }                                   from '../../services/packages.service';\n\nexport class SourceWrapper {\n\tpublic source: Source;\n\tpublic model: SelectionModel;\n}\n\nexport class GitSelectionModel extends SelectionModel {\n\n\tprivate _data: WmPackageInfo[];\n\n\tpublic constructor() {\n\t\tsuper(true, []);\n\t}\n\n\tpublic setSourceModel(packages: WmPackageInfo[]) {\n\t\tthis._data = packages;\n\t}\n\n\tpublic select(row: any) {\n\n\t\tif (row instanceof WmPackageInfo) {\n\n\t\t\tsuper.select( row);\n\t\t} else if (this._data) {\n\n\t\t\tfor (var i = 0; i  = new EventEmitter();\n\n\t@Output()\n\tpublic selectedSourcesChanged: EventEmitter = new EventEmitter();\n\n\t@Output()\n\tpublic selectedSourcesLoaded: EventEmitter = new EventEmitter();\n\n\t@Output()\n  public apiActivated: EventEmitter = new EventEmitter();\n\n\tpublic formGroup: FormGroup;\n\tpublic selectedRepo: GitRepo;\n\tpublic packageTableDataSource: MatTableDataSource;\n\tpublic owner: PropertiesChangedOwner;\n\n\tpublic gitURI: string;\n\tpublic gits: string[];\n\tpublic repositories: GitRepo[];\n\n\tpublic selectedGit: string;\n\n\tpublic displayedColumns: string[] = ['select', 'package', 'version', 'description'];\n\tpublic selectionModel: GitSelectionModel = new GitSelectionModel();\n\n\tpublic manualSyncRequired: boolean;\n\t@ViewChild('gitPaginator')\n\tpublic gitPaginator: MatPaginator;\n  public isBusy: boolean;\n\n  private _configuredGitRepos: RepoSettings[] = [];\n\tprivate _source: Source;\n\n\tprivate _gitAPIUrl: string;\n  private _gitUser: string;\n  private _gitToken: string;\n\n\tconstructor(private _settings: Settings, private _gitService: GitSourceService, private _packagesService: PackagesService) {\n\t}\n\n\tpublic ngOnInit() {\n\n\t  this._gitService.values().subscribe((v) => {\n\n\t    this.gitURI = v.gitUri;\n\n\t\t\tif (!this.gitURI.endsWith(\"/\"))\n\t\t\t\tthis.gitURI = this.gitURI + \"/\";\n\n\t\t\tif (v.gitName)\n\t\t\t\tthis.gits = [ v.gitName ];\n\t\t\telse\n\t\t\t\tthis.gits = [ v.gitUser ];\n\n\t\t\tthis._gitAPIUrl = v.gitAPIUrl;\n\t\t\tthis._gitUser = v.gitUser;\n\t\t\tthis._gitToken = v.gitPassword;\n\n\t\t\tthis.selectedGit = this.gits[0];\n\n\t\t\tv.gitRepos.forEach((r) => {\n\t\t\t  this._configuredGitRepos.push(r);\n\t\t\t});\n\n\t\t\tthis.fetchRepositories();\n\t\t});\n\t}\n\n\tpublic ngOnChanges() {\n\n\t  this.setCurrentRepoFromInput();\n\t  this.onGitChange();\n\t}\n\n\tpublic onGitChange(event?: any) {\n\n\t  if (this._gitAPIUrl && (!this._source || this.selectedRepo.id != this._source.gitRepository)) {\n\t     this.setCurrentRepo(this.selectedRepo);\n    }\n\t}\n\n\tpublic resyncGitRepo() {\n    this.isBusy = true;\n\t  this.fetchPackageContents(true);\n  }\n\n\tpublic packagesDir(): string {\n\n\t  if (this.selectedRepo) {\n\t   let gitRepo: RepoSettings = this.configForRepo(this.selectedRepo.name);\n\n\t   if (gitRepo.packages.startsWith(\"/\"))\n\t    return gitRepo.packages;\n\t   else\n\t    return \"/\" + gitRepo.packages;\n    }\n\t}\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  \tpublic isAllSelected() {\n    \tconst numSelected = this.selectionModel.selected.length;\n    \tconst numRows = this.packageTableDataSource.data.length;\n\n    \treturn numSelected === numRows;\n  \t}\n\n  \tpublic selectRow(row) {\n\n  \t\tthis.selectionModel.toggle(row);\n\n  \t\tthis.firePropertiesChanged();\n  \t}\n\n  /** Selects all rows if they are not all selected; otherwise clear selectionModel. */\n\tpublic masterToggle() {\n\n\t    this.isAllSelected() ?\n\t        this.selectionModel.clear() :\n\t        this.packageTableDataSource.data.forEach(row => this.selectionModel.select(row));\n\n\t    this.firePropertiesChanged();\n\t}\n\tprivate fetchRepositories() {\n\n\t  this.isBusy = true;\n\n\t\tthis._gitService.repositories(this.selectedGit).subscribe((r) => {\n\t\t\tthis.repositories = r;\n\n\t\t\tif (this.repositories.length > 0 && !this.selectedRepo) {\n        let repo: GitRepo = this.repoForId(this._configuredGitRepos[0].name);\n\n\t\t\t  if (repo)\n\t\t\t    this.setCurrentRepo(repo);\n\t\t\t  else\n\t\t\t    this.setCurrentRepo(this.repositories[0]);\n      }\n\t\t\tthis.isBusy = false;\n\t\t}, error => {\n\t\t\tthis._settings.values().subscribe((v) => {\n\n\t\t\t\tthis.repositories = [];\n\t\t\t\tv.gitRepos.forEach((g) => {\n\t\t\t\t\tthis.repositories.push(new GitRepo(g.name, g.name));\n\t\t\t\t});\n\n\t\t\t\tif (this.repositories.length > 0 && !this.selectedRepoName)\n\t\t\t\t  this.setCurrentRepo(this.repositories[0]);\n        else\n          this.setCurrentRepoFromInput();\n\n\t\t\t\tthis.isBusy = false;\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate setCurrentRepoFromInput() {\n\n\t  if (this.selectedRepoName && (!this.selectedRepo || this.selectedRepoName != this.selectedRepo.id)) {\n\t    let found: GitRepo = null;\n\n\t    for (let i = 0; i  {\n\n\t\t\t\t this._setModel(packages);\n\t\t\t\t this.apiActivated.emit(true);\n          this.isBusy = false;\n\t\t\t}, error => {\n\n\t\t\t  // okay, api failed, so lets try cloning data on server side and then return the packages from there\n        // less efficient but bette than nothing.\n\n        console.log(\"git request failed, let trying indexing via clone on server and get packages back from that\");\n\n        this._packagesService.index(this.selectedRepo.name, this.configForRepo(this.selectedRepo.name).packages, this._source, resync).subscribe((p) => {\n\n          this.manualSyncRequired = true;\n          this._setModel(p);\n\n          this.selectedRepoName = this._source.gitRepository;\n          this.isBusy = false;\n\n          this.apiActivated.emit(false);\n        }, error => {\n          // bugger even that failed.\n\n          this.isBusy = false;\n\n          if (error.status == 404) {\n\t\t\t\t\t  window.alert(\"Error 404 - git request failed, this might be either because you have specified invalid user credentials, or the packages path is not valid. Please revisit your git preferences\");\n\t\t\t\t  } else {\n\t\t\t\t\t  window.alert(\"Error \" + error.status + \", git request failed with error \" + error.message);\n\t\t\t\t  }\n        });\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate _setModel(packages: WmPackageInfo[]) {\n\n\t  this.packageTableDataSource = new MatTableDataSource(packages);\n\t  this.packageTableDataSource.paginator = this.gitPaginator;\n\t  this.selectionModel.setSourceModel(packages);\n\t  this.setInitialSelection();\n\t  this.selectedSourcesLoaded.emit({source:this._source, model: this.selectionModel});\n  }\n\n\tprivate setInitialSelection() {\n\n\t\tif (this.selected) {\n\n\t\t\tthis.selectionModel.clear();\n\n\t\t\tthis.selected.forEach((s) => {\n\n\t\t\t\tfor(var i = 0; i  = new Map();\n\n\t  \tthis._source.include = [];\n\t\tthis.selectionModel.selected.forEach((p) => {\n\n\t\t\tlet l: BuilderProperties[] = [];\n\n\t\t\t//l.push(new BuilderProperties(\"name\", p.name));\n\t\t\tl.push(new BuilderProperties(\"Type\", [\"service\"]));\n\t\t\tl.push(new BuilderProperties(\"Version\", [\"\" + p.version]));\n\t\t\tl.push(new BuilderProperties(\"Description\", [p.description]));\n\n\t\t\tprops.set(p.name, l);\n\t\t\tthis._source.include.push(p.name);\n\t\t});\n\n\t\tif (this.owner)\n\t\t\tthis.owner.propertiesChangedInBuilder(\"msc\", props, this._source);\n\t\telse\n\t\t\tthis.selectedSourcesChanged.emit({source:this._source, model: this.selectionModel});\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Sources.html":{"url":"classes/Sources.html","title":"class - Sources","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Sources\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/packages.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                gitPassword\n                            \n                            \n                                    Public\n                                gitRepository\n                            \n                            \n                                    Public\n                                gitURI\n                            \n                            \n                                    Public\n                                gitUser\n                            \n                            \n                                    Public\n                                include\n                            \n                            \n                                    Public\n                                targetDir\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gitPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/packages.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gitRepository\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/packages.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gitURI\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/packages.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gitUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/packages.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            include\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/packages.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            targetDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/packages.service.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/packages.service.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } \t           \t \t\t\t      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams }  from '@angular/common/http';\nimport { Observable, of }               \t\t    from 'rxjs';\nimport { switchMap, map } \t\t\t\t\t\t          from 'rxjs/operators';\n\nimport { NgxXml2jsonService } \t\t\t\t\t        from 'ngx-xml2json';\n\nimport { Settings }                     \t\t    from '../settings';\nimport { WmPackageInfo }                        from '../models/wm-package-info';\nimport { DeploymentSet }                        from '../models/project';\nimport {Source} from '../models/git-source';\n\nexport class DependencyWrapper {\n  public packages: WmPackageInfo[];\n  public dependencies: WmPackageInfo[];\n}\n\nexport class Sources {\n\n  public gitURI: string;\n  public gitRepository: string;\n  public gitUser: string;\n  public gitPassword: string;\n  public type: string;\n  public include: string[];\n  public targetDir: string;\n}\n\n@Injectable()\nexport class PackagesService {\n\n    public static URI: string = Settings.SERVER_API + \"/rad/jc.devops:api/package\";\n\n    constructor(private _settings: Settings, private _http: HttpClient, private _ngxXml2jsonService: NgxXml2jsonService) {\n\n    }\n\n    public packages(packagesDir?: string): Observable {\n\n      let url: string = PackagesService.URI\n\n      let headers = new HttpHeaders()\n        .set('Content-Type', 'application/json')\n        .set('Accept', 'application/json');\n\n       if (packagesDir)\n         headers = headers.set('packagesDir', packagesDir);\n\n      return this._http.get(url, { headers }).pipe(map( (responseData) => {\n\n          let packages: WmPackageInfo[] = [];\n\n          ( responseData).packages.forEach((p) => {\n            packages.push(WmPackageInfo.make(p));\n          });\n\n           return packages;\n        },\n        error => {\n            return [];\n        }));\n    }\n\n    public servicesForPackage(name: string, packagesDir?: string): Observable {\n\n      let url: string = PackagesService.URI + \"/\" + name + \"/services\";\n\n      let headers = new HttpHeaders()\n        .set('Content-Type', 'application/json')\n        .set('Accept', 'application/json');\n\n        if (name)\n          headers = headers.set('packagesDir', packagesDir);\n\n      return this._http.get(url, { headers }).pipe(map( (responseData) => {\n\n          return ( responseData).services;\n        },\n        error => {\n            return [];\n        }));\n    }\n\n    public packageDetails(name: string, packagesDir?: string): Observable {\n\n      let url: string = PackagesService.URI + \"/\" + name\n\n      let headers = new HttpHeaders()\n        .set('Content-Type', 'application/json')\n        .set('Accept', 'application/json');\n\n      if (packagesDir)\n         headers = headers.set('packagesDir', packagesDir);\n\n      return this._http.get(url, { headers }).pipe(map( (responseData) => {\n\n           return WmPackageInfo.make(( responseData).packages[0]);\n        },\n        error => {\n            return null;\n        }));\n    }\n\n    public index(deploymentSetName: string, packagesDir: string, sources: Source, forceReindex: boolean): Observable {\n\n      if (packagesDir.startsWith(\"/\"))\n        packagesDir = packagesDir.substring(packagesDir.indexOf(\"/\")+1);\n\n\t\t  let url: string = PackagesService.URI + \"/\" + deploymentSetName + \"/index?repository=\" + encodeURI(sources.gitRepository) + \"&packagesDir=\" + encodeURI(packagesDir);\n\n\t\t  let headers = new HttpHeaders()\n\t\t\t\t.set('Content-Type', 'application/json')\n\t\t\t\t.set('Accept', 'application/json');\n\n      if (forceReindex)\n        ( sources).forceReindex = forceReindex;\n\n\t\t  let body: string = JSON.stringify(sources);\n\n      return this._http.post(url, body, { headers }).pipe(map( (responseData) => {\n\n            return this._makePackage(responseData);\n          },\n          error => {\n            return [];\n       \t}));\n    }\n\n    public checkDependenciesForPackages(packages: string[], packagesDir?: string): Observable {\n\n      var packs: string = \"\";\n      packages.forEach((p) => {\n\n        if (packs != \"\")\n          packs = packs + \",\" + p;\n        else\n          packs = p;\n      });\n\n      let url: string = PackagesService.URI + \"/dependencies/\" + encodeURIComponent(packs);\n\n      let headers = new HttpHeaders()\n        .set('Content-Type', 'application/json')\n        .set('Accept', 'application/json');\n\n        if (packagesDir)\n          headers = headers.set('packagesDir', packagesDir);\n\n      return this._http.get(url, { headers }).pipe(map( (responseData) => {\n\n          let packages: WmPackageInfo[] = [];\n          (responseData).packages.forEach((p) => {\n            if (p != null)\n              packages.push(WmPackageInfo.make(p));\n            else\n              console.log(\"** WARNING ** - invalid null dependencies found for '\" + packs + \"' in \" + packagesDir);\n           });\n\n          let dependencies: WmPackageInfo[] = [];\n          (responseData).dependencies.forEach((p) => {\n            dependencies.push(WmPackageInfo.make(p))\n           });\n\n           return {packages: packages, dependencies: dependencies};\n        },\n        error => {\n            return null;\n        }));\n    }\n\n    private _makePackage(responseData: any): WmPackageInfo[] {\n\n      let packages: WmPackageInfo[] = [];\n\n      responseData.packages.forEach((p) => {\n        packages.push(WmPackageInfo.make(p));\n      });\n\n      return packages;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Stage.html":{"url":"classes/Stage.html","title":"class - Stage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Stage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/project.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                buildOnStart\n                            \n                            \n                                    Public\n                                containerHost\n                            \n                            \n                                    Public\n                                deployments\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                onFail\n                            \n                            \n                                    Public\n                                onStart\n                            \n                            \n                                    Public\n                                onSuccess\n                            \n                            \n                                    Public\n                                useKubernetes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                copy\n                            \n                            \n                                    Static\n                                make\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/models/project.ts:969\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            buildOnStart\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:965\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            containerHost\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:963\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            deployments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Deployment[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:966\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:961\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:962\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onFail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Action\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:968\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onStart\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Action\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:967\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onSuccess\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Action\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:969\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            useKubernetes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:964\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            copy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    copy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/project.ts:980\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Stage\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            make\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    make(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/project.ts:990\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Stage\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { APIDefinition }                        from '../models/wm-package-info'\nimport { Source }                               from '../models/git-source';\nimport { DockerImage, TestStatus }              from '../models/docker-image';\n\nexport class DeploymentSet {\n\n  public id: string;\n  public name: string;\n  public source: Source;\n  public active: string;\n  public apis: APIDefinition[];\n\n  public constructor() {\n      this.apis = [];\n      this.source = new Source();\n  }\n\n  public static make(data: any): DeploymentSet {\n\n      let p: DeploymentSet = new DeploymentSet();\n      p.id = data.name;\n      p.name = data.name;\n\n      if (data.source)\n       p.source = Source.make(data.source);\n\n      p.apis = [];\n\n      if (data.apis) {\n\n        data.apis.forEach((a) => {\n          p.apis.push(APIDefinition.make(a));\n        });\n      }\n\n      return p;\n  }\n}\n\nexport enum DisplayType {\n  hidden = \"hidden\",\n  readonly = \"readonly\",\n  editable = \"editable\",\n  password = \"password\",\n  file = \"file\",\n  dropdown = \"dropdown\",\n  yesno = \"yesno\"\n}\n\nexport class BuildCommand {\n\n  public commandType: string;\n  public buildTarget: string;\n  public fileType: string;\n  public source: string;\n  public target: string;\n  public description: string = \"\";\n  public display: DisplayType = DisplayType.hidden;\n  public required: boolean = true;\n  public conditions: string[];\n\n  public static make(d: any): BuildCommand {\n\n    let f: BuildCommand = new BuildCommand();\n    f.commandType = d.commandType;\n    f.buildTarget = d.buildTarget;\n    f.fileType = d.fileType;\n    f.source = d.source;\n    f.target = d.target;\n    f.description = d.description;\n    f.conditions = d.conditions;\n\n    if (d.display == \"editable\")\n      f.display = DisplayType.editable;\n    else if (d.display == \"readonly\")\n      f.display = DisplayType.readonly;\n    else if (d.display == \"file\")\n      f.display = DisplayType.file;\n    else\n      f.display = DisplayType.hidden;\n\n    f.required = false;\n    return f;\n  }\n\n  copy() {\n    return BuildCommand.make(this);\n  }\n\n  public equals(b: BuildCommand): boolean {\n\n    return (b.source && b.source == this.source) || (!b.source && b.target == this.target);\n  }\n\n  public matchConditions(args: Map): boolean {\n\n    return ArgDisplayType._matchConditions(this.conditions, args);\n  }\n}\n\nexport interface BuildParams {\n\n  name: string;\n  publicPort(): string;\n  setPublicPort(port: string);\n  assignedLicense(): string;\n  hostName: string;\n  entryPoint: string;\n  exitPoint: string;\n  healthCheck: string;\n  args: Map\n  buildCommands: BuildCommand[];\n\n  fileForType(type: string): BuildCommand;\n  isCustomImage(): boolean;\n}\n\nexport class ArgDisplayType {\n\n  public name: string;\n  public description: string;\n  public display: DisplayType = DisplayType.hidden;\n  public conditions: string[];\n  public choices: string[];\n  public required: boolean = true;\n\n  public constructor(name: string) {\n    this.name = name;\n    this.description = this.name;\n    this.conditions = [];\n    this.choices = [];\n  }\n\n  public copy(): ArgDisplayType {\n\n      let copy: ArgDisplayType = new ArgDisplayType(this.name);\n      copy.description = this.description;\n      copy.display = this.display;\n      copy.conditions = this.conditions;\n      copy.choices = this.choices;\n      copy.required = this.required;\n\n      return copy;\n  }\n\n  public static make(d: any): ArgDisplayType {\n\n    let a: ArgDisplayType = new ArgDisplayType(d.name);\n\n    if (d.display == \"editable\")\n      a.display = DisplayType.editable;\n    else if (d.display == \"readonly\")\n      a.display = DisplayType.readonly;\n    else if (d.display == \"file\")\n      a.display = DisplayType.file;\n    else if (d.display == \"password\")\n      a.display = DisplayType.password;\n    else if (d.display == \"yesno\")\n      a.display = DisplayType.yesno;\n    else if (d.display == \"dropdown\")\n      a.display = DisplayType.dropdown;\n    else\n      a.display = DisplayType.hidden;\n\n    if (d.required != null)\n      a.required = d.required;\n\n    a.description = d.description || d.name;\n\n    if (d.conditions)\n      a.conditions = d.conditions;\n\n    if (a.choices)\n      a.choices = d.choices;\n\n    return a;\n  }\n\n  public matchConditions(args: Map): boolean {\n\n      return ArgDisplayType._matchConditions(this.conditions, args);\n  }\n\n  public static _matchConditions(conditions: string[], args: Map): boolean {\n\n      if (conditions && conditions.length > 0) {\n\n        let matched: boolean = false;\n\n        for (let i = 0; i  {\n      args.push(new Arg(a.source, a.target, a.description));\n    });\n\n    return args;\n  }\n\n}\n\nexport class Installer implements BuildParams {\n\n    public name: string;\n    public sourceImageTag: string;\n    public isNew: string = \"true\";\n    public targetImage: DockerImage;\n    public productType: string;\n    public licenseFile: string;\n    public primaryPort: string;\n    public hostName: string;\n    public wmInstallerImage: string;\n    public includeUpdate: string = \"false\";\n    public buildCommands: BuildCommand[];\n    public args: Map;\n    public isSAGProduct: string = \"true\";\n\n    public entryPoint: string;\n    public exitPoint: string;\n    public healthCheck: string;\n\n    public constructor() {\n\n    this.sourceImageTag = \"centos:latest\";\n    this.targetImage = new DockerImage();\n    this.buildCommands = [];\n    this.args = new Map();\n  }\n\n  public copy(): Installer {\n\n    return Installer.make(this);\n  }\n\n  public static parse(data: string): Installer {\n\n    return this.make(JSON.parse(data, parserReviver).install);\n  }\n\n  public isCustomImage(): boolean {\n    return true;\n  }\n\n  public static make(data: any): Installer {\n\n    let i: Installer = new Installer();\n    i.name = data.name;\n    i.isSAGProduct = data.isSAGProduct;\n    i.args = data.args;\n    i.productType = data.productType;\n    i.wmInstallerImage = data.wmInstallerImage;\n    i.sourceImageTag = data.sourceImageTag;\n\n    if (data.targetImage)\n      i.targetImage = DockerImage.make(data.targetImage);\n\n    i.licenseFile = data.licenseFile;\n    i.primaryPort = data.primaryPort;\n    i.isNew = data.isNew;\n    i.includeUpdate = data.includeUpdate;\n    i.hostName = data.hostName;\n    i.entryPoint = data.entryPoint;\n    i.exitPoint = data.exitPoint;\n    i.healthCheck = data.healthCheck;\n    i.healthCheck = data.healthCheck;\n\n    if (!i.args)\n       i.args = new Map();\n\n    if (data.buildCommands) {\n      data.buildCommands.forEach((f) => {\n        i.buildCommands.push(BuildCommand.make(f));\n      });\n    }\n\n    return i;\n  }\n\n  public publicPort(): string {\n    return this.primaryPort;\n  }\n\n  public setPublicPort(port: string) {\n    this.primaryPort = port;\n  }\n\n  public assignedLicense(): string {\n\n    return this.licenseFile;\n  }\n\n  public fileForType(type: string, name?: string): BuildCommand {\n\n      return Builder._fileForSource(this.buildCommands, type, name, null);\n  }\n\n  public fileWithDescription(type: string, description: string): BuildCommand {\n      return Builder._fileForSource(this.buildCommands, type, null, description);\n  }\n\n  public removeFileForType(type: string, name?: string) {\n\n      return Builder._removeFileForType(this.buildCommands, type, name);\n  }\n\n  public toString(): string {\n    return JSON.stringify(this, stringifyReplacer);\n  }\n}\n\nexport class Builder implements BuildParams {\n\n  public name: string;\n  public deploymentType: string;\n  public deployments: DeploymentSet[];\n\n  public sourceImage: DockerImage;\n  public targetImage: DockerImage;\n  public version: string;\n  public testStatus: string;\n  public buildCommands: BuildCommand[];\n  public hasTests: string;\n  public buildUser: string;\n  public entryUser: string;\n  public entryPoint: string;\n  public exitPoint: string;\n  public healthCheck: string;\n  public args: Map;\n\n  public hostName: string; // not used!!\n\n  public constructor() {\n\n    this.sourceImage = new DockerImage();\n    this.targetImage = new DockerImage();\n    this.buildCommands = [];\n\n    this.args = new Map();\n  }\n\n  public hyphenatedName(): string {\n\n    return this.name.toLowerCase().replace(/\\s/g, \"-\");\n  }\n\n  public static make(data: any): Builder {\n\n    let b: Builder = new Builder();\n    b.name = data.name;\n    b.deploymentType = data.type;\n\n    b.deployments = [];\n\n    if (data.deployments) {\n      data.deployments.forEach((d) => {\n            b.deployments.push(DeploymentSet.make(d));\n      });\n    }\n\n    if (data.buildCommands) {\n      data.buildCommands.forEach((f) => {\n            b.buildCommands.push(BuildCommand.make(f));\n      });\n    }\n\n    b.sourceImage = DockerImage.make(data.sourceImage);\n    b.targetImage = DockerImage.make(data.targetImage);\n    b.version = data.version;\n    b.testStatus = data.testStatus;\n    b.buildUser = data.buildUser;\n    b.entryUser = data.entryUser;\n    b.entryPoint = data.entryPoint;\n    b.exitPoint = data.exitPoint;\n    b.healthCheck = data.healthCheck;\n\n    if (data.hasTests && data.hasTests == 'true')\n      b.hasTests = \"true\";\n\n    return b;\n  }\n\n  public publicPort(): string {\n    return this.sourceImage.primaryPort;\n  }\n\n  public setPublicPort(port: string) {\n    this.sourceImage.primaryPort = port;\n  }\n\n  public assignedLicense(): string {\n\n    let lic: BuildCommand = this.fileWithDescription(\"licenses\",'Product License');\n\n    if (lic) {\n      return lic.target.replace(/\\-/g, \" \");\n    } else {\n      return null;\n    }\n  }\n\n  public isCustomImage(): boolean {\n    return this.sourceImage.isCustom;\n  }\n\n  public fileForType(type: string, name?: string): BuildCommand {\n      return Builder._fileForSource(this.buildCommands, type, name, null);\n  }\n\n  public fileWithDescription(type: string, description: string): BuildCommand {\n      return Builder._fileForSource(this.buildCommands, type, null, description);\n  }\n\n  public removeFileForType(type: string, name?: string) {\n\n      return Builder._removeFileForType(this.buildCommands, type, name);\n  }\n\n  public static _fileForSource(buildCommands: BuildCommand[], type: string, name: string, description: string): BuildCommand {\n\n      let file: BuildCommand = null;\n\n      for (var i = 0; i  {\n         d.buildCommands.push(BuildCommand.make(b));\n       });\n     }\n\n     return d;\n  }\n}\n\nexport class Port {\n\n  public publicPort: string;\n  public serviceType: string;\n\n  constructor(public internal: string, public external: string, public description: string, public type?: string) {\n\n  }\n\n  public static makeArray(array: any[]): Port[] {\n\n    let ports: Port[] = [];\n\n    array.forEach((p) => {\n      let port: Port = new Port(p.internal, p.external, p.description, p.type);\n      port.publicPort = p.publicPort;\n      port.serviceType = p.serviceType;\n\n      ports.push(port);\n    });\n\n    return ports;\n  }\n}\n\nexport class Probe {\n\n  public path: string;\n  public port: string;\n  public initialDelaySeconds: number;\n  public periodSeconds: number;\n  public timeoutSeconds: number;\n\n  public static make(data: any): Probe {\n\n    let p = new Probe();\n    p.path = data.path;\n    p.port = data.port;\n    p.initialDelaySeconds = Number(data.initialDelaySeconds);\n    p.periodSeconds = Number(data.periodSeconds);\n    p.timeoutSeconds = Number(data.timeoutSeconds);\n\n    return p;\n  }\n}\n\nexport class Container {\n\n  public name: string;\n  public names: string[];\n  public active: string;\n  public type: string;\n  public description: string;\n  public hostname: string;\n  public secure: string;\n  public image: string;\n  public build: DockerBuild;\n  public ports: Port[];\n  public env: Arg[];\n  public volumes: Arg[];\n  public readinessProbe;\n  public livenessProbe;\n  public testStatus : TestStatus;\n  public adminUser: string;\n  public adminPassword: string;\n\n  // runtime only\n\n  public id: string;\n  public state: string;\n  public status: string;\n  public created: Date;\n\n  constructor() {\n\n    this.active = \"true\";\n    this.ports = [];\n    this.env = [];\n    this.volumes = [];\n  }\n\n  public copy() {\n    return Container.make(this);\n  }\n\n  public uniqueName(usesDedicatedRepo: boolean): string {\n\n    let repo: string = this.repository();\n\n    if (repo)\n      return repo + (usesDedicatedRepo ? \"/\" : \":\") + this.imageName();\n    else\n      return this.imageName();\n  }\n\n  public repository(): string {\n\n    if (this.image.indexOf(\":\") != -1) {\n\n      return this.image.substring(0, this.image.indexOf(\":\"));\n    } else {\n      return null;\n    }\n  }\n\n  public imageName(): string {\n\n    let name: string = this.image;\n\n    let idx: number = name.indexOf(\":\");\n\n    if (idx != -1) {\n\n      let lside = name.substring(0, idx);\n      let rside = name.substring(idx+1);\n\n      if (DockerImage.isVersionNumber(rside)) {\n\n        // name is on left side\n\n         if (this.image.lastIndexOf(\"/\") != -1) {\n          let idx: number = this.image.lastIndexOf(\"/\");\n          let rdx: number = this.image.indexOf(\":\");\n\n          name = this.image.substring(idx+1, rdx);\n        }\n      } else {\n\n        // name and perhaps version is in right side\n\n        name = rside;\n\n        if (name.indexOf(\"-\") != -1) {\n\n          let idx: number = name.lastIndexOf(\"-\");\n          let b4: string = name.substring(0, idx);\n          let af: string = name.substring(idx+1, name.length);\n\n          if (DockerImage.isVersionNumber(af)) {\n            name = b4;\n          }\n        }\n      }\n    }\n\n    return name;\n  }\n\n  public preferredImageVersion(): string {\n\n    if (this.image && this.image.indexOf(\":\")) {\n\n      let version: string = this.image.substring(this.image.indexOf(\":\")+1, this.image.length);\n\n      if (version.indexOf(\"-\") != -1) {\n        let idx: number = version.lastIndexOf(\"-\");\n        version = version.substring(idx+1, version.length);\n      }\n\n      // no versioning, only a name\n\n      if (!DockerImage.isVersionNumber(version))\n          version = \"latest\";\n\n      return version;\n    } else {\n\n      return \"latest\";\n    }\n  }\n\n  public static make(data: any): Container {\n\n    let c: Container = new Container();\n    c.names = data.names;\n    if (data.names)\n      c.name = data.names[0];\n    else\n      c.name = data.name;\n\n    c.active = data.active;\n    c.description = data.description;\n    c.hostname = data.hostname;\n    c.secure  = data.secure;\n    c.image = data.image;\n    c.type = data.type;\n    c.adminUser = data.adminUser;\n    c.adminPassword = data.adminPassword;\n\n    if (data.build)\n      c.build = DockerBuild.make(data.build);\n\n    if (data.ports)\n      c.ports = Port.makeArray(data.ports);\n\n    if (data.env)\n      c.env = Arg.makeArray(data.env);\n\n    if (data.volumes)\n      c.volumes = Arg.makeArray(data.volumes);\n\n    if (data.readinessProbe)\n      c.readinessProbe = Probe.make(data.readinessProbe);\n\n    if (data.livenessProbe)\n      c.livenessProbe = Probe.make(data.livenessProbe);\n\n    return c;\n  }\n\n  public environmentVariable(id: string): Arg {\n\n    var arg: Arg = null;\n\n    for (var i = 0; i  {\n          s.tests.push(Test.make(t));\n        });\n    }\n\n    return s;\n  }\n\n  public isActive(): boolean {\n\n    return (this.apiDeployType != \"none\" && this.apiDeployType != null) || this.stop == \"true\" || (this.apiMaturity != \"none\" &&  this.apiMaturity != null) ||\n                  (this.dockerAction != \"none\"  && this.dockerAction != null) || this.dockerTag != null || this.stop != null;\n  }\n\n  public summary(): string {\n\n      var status: string = null;\n\n      if (this.apiDeployType == \"deploy\")\n          status = \"Deploy API's \";\n      else if (this.apiDeployType == \"promote\")\n        status = \"Promote API's to \" + this.apiStage;\n\n      if (this.runTests == \"true\") {\n\n        if (status != null)\n          status = status + \", run tests\";\n        else\n          status = \"Run tests\";\n      }\n\n      if (this.apiMaturity) {\n\n        if (status != null)\n            status = status + \", and set maturity to \" + this.apiMaturity;\n        else\n          status = \"Set maturity to \" + this.apiMaturity;\n      }\n\n      if (this.dockerTag) {\n\n        if (status != null)\n          status = status + \", then tag image\";\n        else\n          status = \"Tag image \";\n      }\n\n      if (this.dockerAction) {\n        if (status != null)\n          status = status + \", \" + this.dockerAction;\n        else\n          status = this.dockerAction;\n\n        status = status + \" image\";\n      }\n\n      if (this.stop == \"true\") {\n        if (status != null)\n            status = status + \" before stopping\";\n        else\n            status = \"stop containers\";\n      }\n\n      if (this.pipelineAction) {\n\n        if (status != null)\n            status = status + \", then \" + this.pipelineAction + \" pipeline\";\n        else\n            status = \"and \" + this.pipelineAction + \" pipeline execution\";\n      }\n\n      return status;\n    }\n}\n\nexport class Stage {\n\n    public id: string;\n    public name: string;\n    public containerHost: string;\n    public useKubernetes: string;\n    public buildOnStart: string;\n    public deployments: Deployment[];\n    public onStart: Action;\n    public onFail: Action;\n    public onSuccess: Action;\n\n    constructor() {\n      this.deployments = [];\n      this.useKubernetes = \"false\";\n      this.buildOnStart = \"false\";\n      this.onStart = new Action();\n      this.onSuccess = new Action();\n      this.onFail = new Action();\n    }\n\n    public copy(): Stage {\n\n      let c = Stage.make(this);\n\n      c.id = this.id + \" copy\";\n      c.name = this.name + \" copy\";\n\n      return c;\n    }\n\n    public static make(data: any): Stage {\n\n      let s: Stage = new Stage();\n\n      s.name = data.name;\n      s.id = s.name;\n      s.containerHost = data.containerHost;\n      s.useKubernetes = data.useKubernetes;\n      s.buildOnStart = data.buildOnStart;\n\n      if (data.deployments) {\n        data.deployments.forEach((c) => {\n          s.deployments.push(Deployment.make(c));\n        });\n      }\n\n      if (data.onStart) {\n        s.onStart = Action.make(data.onStart);\n      }\n\n      if (data.onSuccess) {\n        s.onSuccess = Action.make(data.onSuccess);\n      }\n\n      if (data.onFail) {\n        s.onFail = Action.make(data.onFail);\n      }\n\n      return s;\n    }\n}\n\nexport class Deployment {\n\n  public name: string;\n  public hostname: string;\n  public appName: string;\n  public apis: APIDefinition[];\n  public containers: Container[];\n  public replicas: string;\n  public serviceType: string;\n  public restartPolicy: string;\n  public requiresMonitoring: string;\n  public dependsOn: string;\n\n  constructor() {\n\n    this.containers = [];\n    this.apis = [];\n  }\n\n  public copy() {\n    return Deployment.make(this);\n  }\n\n  public static make(data: any): Deployment {\n\n    let s: Deployment = new Deployment();\n    s.name = data.name;\n    s.hostname = data.hostname;\n    s.replicas = data.replicas;\n    s.appName = data.appName;\n    s.serviceType = data.serviceType;\n    s.restartPolicy = data.restartPolicy;\n    s.requiresMonitoring = data.requiresMonitoring;\n    s.dependsOn = data.dependsOn;\n\n    if (data.apis) {\n       data.apis.forEach((a) => {\n         s.apis.push(APIDefinition.make(a));\n       });\n    }\n\n    if (data.containers) {\n       data.containers.forEach((c) => {\n         s.containers.push(Container.make(c));\n       });\n    }\n\n    return s;\n  }\n\n  public containerForType(type: string): Container {\n\n    let found: Container = null;\n\n    this.containers.forEach((c) => {\n\n      if (c.type == type) {\n        found = c;\n      }\n    });\n\n    return found;\n  }\n\n  public removeContainer(c: Container) {\n\n    var found : number = -1;\n\n    for (var i = 0; i  {\n         p.builds.push(Builder.make(i));\n       });\n    }\n\n    if (data.deployments) {\n      p.deployments = [];\n       data.deployments.forEach((i) => {\n         p.deployments.push(Deployment.make(i));\n       });\n    }\n\n    return p;\n  }\n\n  public serviceFor(id: string): Deployment {\n\n      let found: Deployment = null;\n\n      for (var z = 0; z  {\n         p.stages.push(Stage.make(s));\n       });\n    }\n\n    return p;\n  }\n}\n\nfunction stringifyReplacer(key, value) {\n  const originalObject = this[key];\n  if(originalObject instanceof Map) {\n    return {\n      dataType: 'Map',\n      value: Array.from(originalObject.entries()), // or with spread: value: [...originalObject]\n    };\n  } else {\n    return value;\n  }\n}\n\nfunction parserReviver(key, value) {\n  if(typeof value === 'object' && value !== null) {\n    if (value.dataType === 'Map') {\n      return new Map(value.value);\n    }\n  }\n  return value;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StagingComponent.html":{"url":"components/StagingComponent.html","title":"component - StagingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StagingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/staging.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                staging\n            \n\n\n\n\n            \n                templateUrl\n                ../templates/stage.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _ignoreValueChanges\n                            \n                            \n                                    Public\n                                apiMaturityList\n                            \n                            \n                                    Public\n                                buildServiceCtrl\n                            \n                            \n                                    Public\n                                containerNameCtrl\n                            \n                            \n                                    Public\n                                runTypeCtrl\n                            \n                            \n                                    Public\n                                stageNameCtrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _save\n                            \n                            \n                                    Private\n                                _setupForm\n                            \n                            \n                                    Public\n                                actionChanged\n                            \n                            \n                                    Public\n                                activationChanged\n                            \n                            \n                                    Public\n                                colorForContainer\n                            \n                            \n                                    Public\n                                editContainer\n                            \n                            \n                                    Public\n                                haveAPIs\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                removeAPI\n                            \n                            \n                                    Public\n                                removeContainer\n                            \n                            \n                                    Private\n                                updateForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                            \n                                stage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                stageUpdated\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_formBuilder: FormBuilder, _dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/staging.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/staging.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        stage\n                    \n                \n                \n                    \n                        Type :         Stage\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/staging.component.ts:27\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        stageUpdated\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/staging.component.ts:33\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _save()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/staging.component.ts:203\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _setupForm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _setupForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/staging.component.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            actionChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    actionChanged(action: Action)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/staging.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                Action\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            activationChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    activationChanged(obj: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/staging.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            colorForContainer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    colorForContainer(container: Container)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/staging.component.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                                Container\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     \"gray\" | \"accent\" | \"primary\"\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            editContainer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editContainer(container: Container, event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/staging.component.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                                Container\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            haveAPIs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    haveAPIs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/staging.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/staging.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/staging.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            removeAPI\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAPI(service: Deployment, api: APIDefinition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/staging.component.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    service\n                                    \n                                                Deployment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    api\n                                    \n                                                APIDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            removeContainer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeContainer(service: Deployment, container: Container)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/staging.component.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    service\n                                    \n                                                Deployment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    container\n                                    \n                                                Container\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateForm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/staging.component.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _ignoreValueChanges\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/staging.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiMaturityList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\"Beta\", \"Test\", \"Production\", \"Deprecated\"]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/staging.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            buildServiceCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/staging.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            containerNameCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/staging.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            runTypeCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/staging.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stageNameCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/staging.component.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ChangeDetectorRef, EventEmitter,\n\t\t\tOnInit, OnChanges, OnDestroy, Input, Inject,\n\t\t\t\t\t\t\t\t\t\tOutput }   \t\tfrom '@angular/core';\n\nimport { Router }\t\t\t\t\t\t\t\t\t  \tfrom '@angular/router';\nimport {FormBuilder, FormGroup, FormControl, \n\t\t\t\t\t\t\t\tValidators} \t\t\tfrom '@angular/forms';\nimport { SelectionModel }                             \tfrom '@angular/cdk/collections';\n\nimport { MediaMatcher }                               \tfrom '@angular/cdk/layout';\nimport { MatAccordion }                               \tfrom '@angular/material';\nimport { MatInput, MatButton }\t\t\t\t\t\t\tfrom '@angular/material';\nimport { MatDialog, MatDialogRef, DialogPosition,\n\t\t\t\t\tMAT_DIALOG_DATA }\t  \t\t\t\tfrom '@angular/material';\n\nimport { Stage, Deployment, Container, Action }         from '../models/project';\nimport { APIDefinition }               \t\t\t\t\tfrom '../models/wm-package-info';\n\n@Component({\n  selector: 'staging',\n  templateUrl: '../templates/stage.html'\n})\n\nexport class StagingComponent implements OnInit, OnChanges {\n\n\t@Input()\n\tpublic stage: Stage;\n\n\t@Input()\n\tpublic form: FormGroup;\n\n\t@Output()\n\tpublic stageUpdated: EventEmitter = new EventEmitter();\n\n\tpublic apiMaturityList: string[] = [\"Beta\", \"Test\", \"Production\", \"Deprecated\"];\n\n\tpublic stageNameCtrl: FormControl;\n  \tpublic containerNameCtrl: FormControl;\n  \tpublic buildServiceCtrl: FormControl;\n  \tpublic runTypeCtrl: FormControl;\n\n  \tprivate _ignoreValueChanges: boolean;\n\n  \tpublic constructor(private _formBuilder: FormBuilder, private _dialog: MatDialog) {\n  \t}\n\n\tpublic ngOnInit() {\n\n\t\tconsole.log(\"stage is \" + this.stage.name);\n\n\t\tthis._setupForm();\n\t}\n\n\tpublic ngOnChanges() {\n\t\t\n\t\tthis.updateForm();\n\t}\n\n\tpublic haveAPIs(): boolean {\n\n\t\tvar found: boolean = false;\n\n\t\tfor (var i=0; i  0) {\n\t\t\t\tfound = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn found;\n\t}\n\n\tpublic actionChanged(action: Action) {\n\n\t\tif (this.stage.onStart.runTests) {\n\t\t\tif (!this.stage.onSuccess)\n\t\t\t\tthis.stage.onSuccess = new Action();\n\n\t\t\tif (!this.stage.onFail)\n\t\t\t\tthis.stage.onFail = new Action();\n\n\t\t\tthis.stage.onSuccess.active = \"true\";\n\t\t\tthis.stage.onFail.active = \"true\";\n\t\t} else {\n\t\t\tif (this.stage.onSuccess.isActive()) {\n\t\t\t\tthis.stage.onSuccess = new Action();\n\t\t\t\tthis.stage.onSuccess.active = \"false\";\n\t\t\t}\n\n\t\t\tif (this.stage.onFail.isActive()) {\n\t\t\t\tthis.stage.onFail = new Action();\n\t\t\t\tthis.stage.onFail.active = \"false\";\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn this._save();\n\t}\n\n\tpublic activationChanged(obj: any) {\n\n\t\tlet ref: StagingComponent = this;\n\t\tsetTimeout(() => {\n\t\t\tobj.active = !obj.active;\n\t\t\tref._save();\n\t\t});\n\t}\n\n\tpublic colorForContainer(container: Container) {\n\n\t\tif (container.active == \"true\")\n\t\t\treturn \"primary\";\n\t\telse if (container.hostname) \n\t\t\treturn \"accent\";\n\t\telse\n\t\t\treturn \"gray\";\n\t}\n\n\tpublic editContainer(container: Container, event: any) {\n\n\t\tlet x = event.pageX;\n\t\tlet y = event.pageY;\n\n\t\tlet dialogRef = this._dialog.open(EditContainerComponent, {\n\t\t\tdata: { container: container, formBuilder: this._formBuilder },\n\t\t\twidth: '360px',\n  \t\t\theight: '300px',\n\t\t});\n\n\t\tconsole.log(\"left: '${x}px', top: '${y}px'\");\n\n\t\tdialogRef.updatePosition({ left: x + \"px\", top: y + \"px\" });\n\n\t\tdialogRef.afterClosed().subscribe(container => {\n  \t\t\tconsole.log(`Dialog result: ${container}`);\n\n  \t\t\tthis._save();\n\t\t});\n\t}\n\n\tpublic removeAPI(service: Deployment, api: APIDefinition) {\n\n\t\tservice.removeAPI(api);\n\t\tthis._save();\n\t}\n\n\tpublic removeContainer(service: Deployment, container: Container) {\n\n\t\tservice.removeContainer(container);\n\t\tthis._save();\n\t}\n\n\tprivate updateForm() {\n\n\t\tif (this.stageNameCtrl) {\n\n\t\t\tthis._ignoreValueChanges = true;\n\n\t\t\tthis.stageNameCtrl.setValue(this.stage ? this.stage.name : \"\");\n\t  \t\tthis.containerNameCtrl.setValue(this.stage ? this.stage.containerHost: \"\");\n\t  \t\tthis.runTypeCtrl.setValue(this.stage ? (this.stage.useKubernetes == \"true\" ? \"k8s\" : \"docker\") : \"docker\");\n\t  \t\tthis.buildServiceCtrl.setValue(this.stage ? this.stage.buildOnStart == \"true\" ? true : false : false);\n\n\t  \t\tthis._ignoreValueChanges = false;\n  \t\t}\n\t}\n\n\tprivate _setupForm() {\n\n  \t\tthis.stageNameCtrl = new FormControl();\n  \t\tthis.containerNameCtrl = new FormControl();\n  \t\tthis.runTypeCtrl = new FormControl(\"docker\");\n  \t\tthis.buildServiceCtrl = new FormControl();\n\n  \t\tthis.form.addControl(\"stageNameCtrl\", this.stageNameCtrl);\n  \t\tthis.form.addControl(\"containerNameCtrl\", this.containerNameCtrl);\n  \t\tthis.form.addControl(\"runTypeCtrl\", this.runTypeCtrl);\n  \t\tthis.form.addControl(\"buildServiceCtrl\", this.buildServiceCtrl);\n\n  \t\tthis.updateForm();\n\n  \t\tthis.form.valueChanges.subscribe((d) => {\n\n  \t\t\tif (this._ignoreValueChanges)\n  \t\t\t\treturn;\n\n\t\t\tif (this.stageNameCtrl.dirty)\n\t\t\t\tthis.stage.name = this.stageNameCtrl.value;\n\n\t\t\tif (this.containerNameCtrl.dirty)\n\t\t\t\tthis.stage.containerHost = this.containerNameCtrl.value;\n\n\t\t\tif (this.runTypeCtrl.dirty)\n\t\t\t\tthis.stage.useKubernetes = \"\" + (this.runTypeCtrl.value == \"k8s\");\n\n\t\t\tif (this.buildServiceCtrl.dirty)\n\t\t\t\tthis.stage.buildOnStart = \"\" + this.buildServiceCtrl.value;\n\t\t\t\n\t\t\tthis._save();\n\t\t}); \n  \t}\n\n  \tprivate _save() {\n\n  \t\tif (this.stage.onStart.runTests == \"false\") {\n\n  \t\t\tthis.stage.onSuccess = new Action();\n  \t\t\tthis.stage.onFail = new Action();\n  \t\t}\n\n  \t\tthis.stageUpdated.emit(this.stage);\n  \t}\n}\n\n@Component({\n\tselector: 'edit-container',\n  \ttemplateUrl: '../templates/container-host.html'\n})\nexport class EditContainerComponent {\n\n\tpublic container: Container;\n\n\tpublic formBuilder: FormBuilder;\n\tpublic formGroup: FormGroup;\n\tpublic activeCtrl: FormControl;\n\tpublic hostCtrl: FormControl;\n\tpublic portCtrl: FormControl;\n\tpublic imageCtrl: FormControl;\n\n\tpublic hint: string;\n\n\tpublic hostLabel:  string;\n\tpublic portLabel: string;\n\tpublic publicHost: string;\n\tpublic publicPort:  string;\n\tpublic privateHost: string;\n\tpublic privatePort:  string;\n\n\tprivate _ignore: boolean = false;\n\n\tconstructor(public dialogRef: MatDialogRef, @Inject(MAT_DIALOG_DATA) public data: any) { \n\n\t\tthis.container = data.container;\n\t\tthis.formBuilder = data.formBuilder;\n\n\t\tthis.activeCtrl = new FormControl(this.container.active == \"true\" ? true : false);\n\n\t\tif (this.activeCtrl.value) {\n\n\t\t\tthis.hostCtrl = new FormControl(this.container.name);\n\t\t\tthis.portCtrl = new  FormControl(this.container.ports[0].internal);\n\t\t} else {\n\n\t\t\tthis.hostCtrl = new FormControl(this.container.hostname);\n\t\t\tthis.portCtrl = new  FormControl(this.container.ports[0].external);\n\t\t}\n\t\t\n\t\tthis.imageCtrl = new FormControl(this.container.image);\n\t\tthis.imageCtrl.disable();\n\t\t\n\t\tthis.formGroup = this.formBuilder.group({\n\t\t\tactiveCtrl: this.activeCtrl,\n\t\t\thostCtrl: this.hostCtrl,\n\t\t\tportCtrl: this.portCtrl,\n\t\t\timageCtrl: this.imageCtrl\n\t\t});\n\n\t\tthis.formGroup.valueChanges.subscribe((d) => {\n\n\t\t\tif (this._ignore)\n\t\t\t\treturn;\n\n\t\t\tif (((this.activeCtrl.value && this.container.active == \"false\") \n\t\t\t\t|| !this.activeCtrl.value && this.container.active == \"true\")) {\n\n\t\t\t\tif (this.activeCtrl.value) {\n\t\t\t\t\tthis.container.active = \"true\";\n\t\t\t\t\tthis.container.hostname = this.privateHost;\n\t\t\t\t} else {\n\t\t\t\t\tthis.container.active = \"false\";\n\t\t\t\t\tthis.container.hostname = this.publicHost;\n\t\t\t\t}\n\n\t\t\t\tthis._ignore = true;\n\t\t\t\tthis.enableControls();\n\t\t\t\tthis._ignore = false;\n\t\t\t} else {\n\n\t\t\t\tthis.container.active = this.activeCtrl.value ? \"true\" : \"false\";\n\n\t\t\t\tif (!this.activeCtrl.value) {\n\t\t\t\t\tif (this.hostCtrl.value && this.hostCtrl.value.length > 0)\n\t\t\t\t\t\tthis.container.hostname = this.hostCtrl.value;\n\t\t\t\t\telse\n\t\t\t\t\t\tthis.container.hostname = null;\n\n\t\t\t\t\tif (this.activeCtrl.value)\n\t\t\t\t\t\tthis.container.ports[0].internal = \"\" + this.portCtrl.value;\n\t\t\t\t\telse\n\t\t\t\t\t\tthis.container.ports[0].external = \"\" + this.portCtrl.value;\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.container.hostname = null;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (this.container.hostname && this.container.hostname.length > 0)\n\t\t\tthis.publicHost = this.container.hostname;\n\n\t\tthis.publicPort = this.container.ports[0].external;\n\n\t\tthis.privateHost = this.container.name;\n\t\tthis.privatePort = this.container.ports[0].internal;\n\n\t\tthis.enableControls();\n\t}\n\n\tcloseDialog() {\n\n    \tthis.dialogRef.close(this.container);\n  \t}\n\n  \tprivate enableControls() {\n  \t\t\n  \t\tif (this.activeCtrl.value) {\n\t\t\tthis.hostCtrl.disable();\n\t\t\tthis.portCtrl.disable();\n\n\t\t\tthis.hostLabel = \"Docker network Host\";\n\t\t\tthis.portLabel = \"Internal Port\";\n\n\t\t\tthis.hostCtrl.setValue(this.privateHost);\n\t\t\tthis.portCtrl.setValue(this.privatePort);\n\n\t\t\tthis.hint = \"Container will be included in stage, intra container communication will be via private network and use container names as hosts\"\n\n\t\t} else {\n\t\t\tthis.hostCtrl.enable();\n\t\t\tthis.portCtrl.enable();\n\n\t\t\tthis.hostLabel = \"External Host\";\n\t\t\tthis.portLabel = \"Public Port\";\n\n\t\t\tthis.hostCtrl.setValue(this.publicHost);\n\t\t\tthis.portCtrl.setValue(this.publicPort);\n\n\t\t\tif (this.hostCtrl.value)\n\t\t\t\tthis.hint = \"Not included in stage and if features are required will communicate with external application via host and port\";\n\t\t\telse\n\t\t\t\tthis.hint = \"Not included in stage and features will not be available for any actions\";\n\t\t}\n\n  \t}\n}\n\n    \n\n    \n        \n\t\n\t\t\n\t\t\t\n\t\t\n\t\t\n\t\t\tStart Up\n\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\tBuild MicroService Image\n\t\t\t\n          \t\tDocker\n          \tKubernetes Deployment\n        \t\n        \t\n\t\t        \n\t\t          Service\n\t\t          Containers\n\t\t          API's\n\t\t        \n\t\t        \n\t\t          {{service.name}}\n\t\t          \n\t\t            \n\t\t              \n\t\t              \t{{container.description}} \n\t\t              \n\t\t            \n\t\t          \n\t\t           \n\t\t            \n\t\t              \n\t\t              \t{{api.name}}\n\t\t              \n\t\t            \n\t\t          \n\t\t        \n\t\t        \n\t\t        \t\n\t\t        \tClick container to activate/deactivate and or specify alternative endpoint\n\t\t    \n\t\t \n        \n\t\t\tOn Start\n\t        \n\t    \n        \n\t\t\tOn Success\n\t        \n\t    \n\t    \n\t\t\tOn Fail\n\t        \n\t    \n\t\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t\t\t\t\t\t\t\t\t\tStart Up\t\t\t\t\t\t\t\t\t\t\t\t\tBuild MicroService Image\t\t\t          \t\tDocker          \tKubernetes Deployment        \t        \t\t\t        \t\t          Service\t\t          Containers\t\t          API\\'s\t\t        \t\t        \t\t          {{service.name}}\t\t          \t\t            \t\t              \t\t              \t{{container.description}} \t\t              \t\t            \t\t          \t\t           \t\t            \t\t              \t\t              \t{{api.name}}\t\t              \t\t            \t\t          \t\t        \t\t        \t\t        \t\t\t        \tClick container to activate/deactivate and or specify alternative endpoint\t\t    \t\t         \t\t\tOn Start\t        \t            \t\t\tOn Success\t        \t    \t    \t\t\tOn Fail\t        \t    \t'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about-app'},{'name': 'ActionComponent', 'selector': 'action'},{'name': 'ApiGatewayInstallerComponent', 'selector': 'jc-apigw-install'},{'name': 'ApiMicroGatewayInstallerComponent', 'selector': 'jc-apimg-install'},{'name': 'ApiPortalInstallerComponent', 'selector': 'jc-apipr-installer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildCommandsComponent', 'selector': 'build-commands'},{'name': 'BuildComponent', 'selector': 'build'},{'name': 'BuildExeComponent', 'selector': 'build-exe'},{'name': 'BuildImageComponent', 'selector': 'build-solution'},{'name': 'BuildInstallComponent', 'selector': 'build-install'},{'name': 'BuildPackagesComponent', 'selector': 'build-package'},{'name': 'ContainerComponent', 'selector': 'container'},{'name': 'ContainersComponent', 'selector': 'app-containers'},{'name': 'DeploymentDetailsComponent', 'selector': 'jc-deployment-details'},{'name': 'DeploymentListComponent', 'selector': 'jc-k8s-deployments'},{'name': 'DockerImageChooserComponent', 'selector': 'docker-image-chooser'},{'name': 'DockerImageListComponent', 'selector': 'jc-docker-images'},{'name': 'DockerImageVersionsComponent', 'selector': 'jc-docker-image-versions'},{'name': 'EditContainerComponent', 'selector': 'edit-container'},{'name': 'GitSourcesComponent', 'selector': 'git-source'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'InstallerComponent', 'selector': 'jc-install'},{'name': 'MicroServiceBuilderComponent', 'selector': 'jc-msc-configure'},{'name': 'MicroServiceInstallerComponent', 'selector': 'jc-msc-install'},{'name': 'PodsListComponent', 'selector': 'jc-pods'},{'name': 'RuntimeContainersComponent', 'selector': 'runtime-containers'},{'name': 'RuntimeDeployComponent', 'selector': 'runtime-deploy'},{'name': 'RuntimeDetailsComponent', 'selector': ''},{'name': 'RuntimeK8sComponent', 'selector': 'runtime'},{'name': 'RuntimeScaleComponent', 'selector': 'jc-runtime-scale'},{'name': 'RuntimeStageComponent', 'selector': 'runtime-stage'},{'name': 'RuntimeUpdateComponent', 'selector': ''},{'name': 'SagImageAlerterComponent', 'selector': 'sag-image-alerter'},{'name': 'ServicePropertiesComponent', 'selector': 'k8s-props'},{'name': 'SettingsComponent', 'selector': 'home'},{'name': 'SimpleNameComponent', 'selector': 'name-dialog'},{'name': 'StagingComponent', 'selector': 'staging'},{'name': 'TestCaseComponent', 'selector': 'test-case'},{'name': 'TestDefinitionComponent', 'selector': 'test-definitions'},{'name': 'TestHistoryComponent', 'selector': 'test-history'},{'name': 'TestRunComponent', 'selector': 'test-reun'},{'name': 'UMInstallerComponent', 'selector': 'jc-um-install'},{'name': 'UploadButtonComponent', 'selector': 'file-uploader-button'}];\n    var DIRECTIVES = [{'name': 'BuildImageChooseDirective', 'selector': '[builder]'},{'name': 'CancelCdkDrag', 'selector': '[appCancelCdkDrag]'},{'name': 'NgFileDrop', 'selector': '[ng-file-drop]'},{'name': 'NgFileSelect', 'selector': '[ng-file-select]'},{'name': 'RuntimeActionsDirective', 'selector': '[runtime-actions]'}];\n    var ACTUAL_COMPONENT = {'name': 'StagingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Test.html":{"url":"classes/Test.html","title":"class - Test","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Test\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/project.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cases\n                            \n                            \n                                    Public\n                                package\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                make\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/models/project.ts:783\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cases\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:783\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            package\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/project.ts:782\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            make\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    make(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/project.ts:789\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Test\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { APIDefinition }                        from '../models/wm-package-info'\nimport { Source }                               from '../models/git-source';\nimport { DockerImage, TestStatus }              from '../models/docker-image';\n\nexport class DeploymentSet {\n\n  public id: string;\n  public name: string;\n  public source: Source;\n  public active: string;\n  public apis: APIDefinition[];\n\n  public constructor() {\n      this.apis = [];\n      this.source = new Source();\n  }\n\n  public static make(data: any): DeploymentSet {\n\n      let p: DeploymentSet = new DeploymentSet();\n      p.id = data.name;\n      p.name = data.name;\n\n      if (data.source)\n       p.source = Source.make(data.source);\n\n      p.apis = [];\n\n      if (data.apis) {\n\n        data.apis.forEach((a) => {\n          p.apis.push(APIDefinition.make(a));\n        });\n      }\n\n      return p;\n  }\n}\n\nexport enum DisplayType {\n  hidden = \"hidden\",\n  readonly = \"readonly\",\n  editable = \"editable\",\n  password = \"password\",\n  file = \"file\",\n  dropdown = \"dropdown\",\n  yesno = \"yesno\"\n}\n\nexport class BuildCommand {\n\n  public commandType: string;\n  public buildTarget: string;\n  public fileType: string;\n  public source: string;\n  public target: string;\n  public description: string = \"\";\n  public display: DisplayType = DisplayType.hidden;\n  public required: boolean = true;\n  public conditions: string[];\n\n  public static make(d: any): BuildCommand {\n\n    let f: BuildCommand = new BuildCommand();\n    f.commandType = d.commandType;\n    f.buildTarget = d.buildTarget;\n    f.fileType = d.fileType;\n    f.source = d.source;\n    f.target = d.target;\n    f.description = d.description;\n    f.conditions = d.conditions;\n\n    if (d.display == \"editable\")\n      f.display = DisplayType.editable;\n    else if (d.display == \"readonly\")\n      f.display = DisplayType.readonly;\n    else if (d.display == \"file\")\n      f.display = DisplayType.file;\n    else\n      f.display = DisplayType.hidden;\n\n    f.required = false;\n    return f;\n  }\n\n  copy() {\n    return BuildCommand.make(this);\n  }\n\n  public equals(b: BuildCommand): boolean {\n\n    return (b.source && b.source == this.source) || (!b.source && b.target == this.target);\n  }\n\n  public matchConditions(args: Map): boolean {\n\n    return ArgDisplayType._matchConditions(this.conditions, args);\n  }\n}\n\nexport interface BuildParams {\n\n  name: string;\n  publicPort(): string;\n  setPublicPort(port: string);\n  assignedLicense(): string;\n  hostName: string;\n  entryPoint: string;\n  exitPoint: string;\n  healthCheck: string;\n  args: Map\n  buildCommands: BuildCommand[];\n\n  fileForType(type: string): BuildCommand;\n  isCustomImage(): boolean;\n}\n\nexport class ArgDisplayType {\n\n  public name: string;\n  public description: string;\n  public display: DisplayType = DisplayType.hidden;\n  public conditions: string[];\n  public choices: string[];\n  public required: boolean = true;\n\n  public constructor(name: string) {\n    this.name = name;\n    this.description = this.name;\n    this.conditions = [];\n    this.choices = [];\n  }\n\n  public copy(): ArgDisplayType {\n\n      let copy: ArgDisplayType = new ArgDisplayType(this.name);\n      copy.description = this.description;\n      copy.display = this.display;\n      copy.conditions = this.conditions;\n      copy.choices = this.choices;\n      copy.required = this.required;\n\n      return copy;\n  }\n\n  public static make(d: any): ArgDisplayType {\n\n    let a: ArgDisplayType = new ArgDisplayType(d.name);\n\n    if (d.display == \"editable\")\n      a.display = DisplayType.editable;\n    else if (d.display == \"readonly\")\n      a.display = DisplayType.readonly;\n    else if (d.display == \"file\")\n      a.display = DisplayType.file;\n    else if (d.display == \"password\")\n      a.display = DisplayType.password;\n    else if (d.display == \"yesno\")\n      a.display = DisplayType.yesno;\n    else if (d.display == \"dropdown\")\n      a.display = DisplayType.dropdown;\n    else\n      a.display = DisplayType.hidden;\n\n    if (d.required != null)\n      a.required = d.required;\n\n    a.description = d.description || d.name;\n\n    if (d.conditions)\n      a.conditions = d.conditions;\n\n    if (a.choices)\n      a.choices = d.choices;\n\n    return a;\n  }\n\n  public matchConditions(args: Map): boolean {\n\n      return ArgDisplayType._matchConditions(this.conditions, args);\n  }\n\n  public static _matchConditions(conditions: string[], args: Map): boolean {\n\n      if (conditions && conditions.length > 0) {\n\n        let matched: boolean = false;\n\n        for (let i = 0; i  {\n      args.push(new Arg(a.source, a.target, a.description));\n    });\n\n    return args;\n  }\n\n}\n\nexport class Installer implements BuildParams {\n\n    public name: string;\n    public sourceImageTag: string;\n    public isNew: string = \"true\";\n    public targetImage: DockerImage;\n    public productType: string;\n    public licenseFile: string;\n    public primaryPort: string;\n    public hostName: string;\n    public wmInstallerImage: string;\n    public includeUpdate: string = \"false\";\n    public buildCommands: BuildCommand[];\n    public args: Map;\n    public isSAGProduct: string = \"true\";\n\n    public entryPoint: string;\n    public exitPoint: string;\n    public healthCheck: string;\n\n    public constructor() {\n\n    this.sourceImageTag = \"centos:latest\";\n    this.targetImage = new DockerImage();\n    this.buildCommands = [];\n    this.args = new Map();\n  }\n\n  public copy(): Installer {\n\n    return Installer.make(this);\n  }\n\n  public static parse(data: string): Installer {\n\n    return this.make(JSON.parse(data, parserReviver).install);\n  }\n\n  public isCustomImage(): boolean {\n    return true;\n  }\n\n  public static make(data: any): Installer {\n\n    let i: Installer = new Installer();\n    i.name = data.name;\n    i.isSAGProduct = data.isSAGProduct;\n    i.args = data.args;\n    i.productType = data.productType;\n    i.wmInstallerImage = data.wmInstallerImage;\n    i.sourceImageTag = data.sourceImageTag;\n\n    if (data.targetImage)\n      i.targetImage = DockerImage.make(data.targetImage);\n\n    i.licenseFile = data.licenseFile;\n    i.primaryPort = data.primaryPort;\n    i.isNew = data.isNew;\n    i.includeUpdate = data.includeUpdate;\n    i.hostName = data.hostName;\n    i.entryPoint = data.entryPoint;\n    i.exitPoint = data.exitPoint;\n    i.healthCheck = data.healthCheck;\n    i.healthCheck = data.healthCheck;\n\n    if (!i.args)\n       i.args = new Map();\n\n    if (data.buildCommands) {\n      data.buildCommands.forEach((f) => {\n        i.buildCommands.push(BuildCommand.make(f));\n      });\n    }\n\n    return i;\n  }\n\n  public publicPort(): string {\n    return this.primaryPort;\n  }\n\n  public setPublicPort(port: string) {\n    this.primaryPort = port;\n  }\n\n  public assignedLicense(): string {\n\n    return this.licenseFile;\n  }\n\n  public fileForType(type: string, name?: string): BuildCommand {\n\n      return Builder._fileForSource(this.buildCommands, type, name, null);\n  }\n\n  public fileWithDescription(type: string, description: string): BuildCommand {\n      return Builder._fileForSource(this.buildCommands, type, null, description);\n  }\n\n  public removeFileForType(type: string, name?: string) {\n\n      return Builder._removeFileForType(this.buildCommands, type, name);\n  }\n\n  public toString(): string {\n    return JSON.stringify(this, stringifyReplacer);\n  }\n}\n\nexport class Builder implements BuildParams {\n\n  public name: string;\n  public deploymentType: string;\n  public deployments: DeploymentSet[];\n\n  public sourceImage: DockerImage;\n  public targetImage: DockerImage;\n  public version: string;\n  public testStatus: string;\n  public buildCommands: BuildCommand[];\n  public hasTests: string;\n  public buildUser: string;\n  public entryUser: string;\n  public entryPoint: string;\n  public exitPoint: string;\n  public healthCheck: string;\n  public args: Map;\n\n  public hostName: string; // not used!!\n\n  public constructor() {\n\n    this.sourceImage = new DockerImage();\n    this.targetImage = new DockerImage();\n    this.buildCommands = [];\n\n    this.args = new Map();\n  }\n\n  public hyphenatedName(): string {\n\n    return this.name.toLowerCase().replace(/\\s/g, \"-\");\n  }\n\n  public static make(data: any): Builder {\n\n    let b: Builder = new Builder();\n    b.name = data.name;\n    b.deploymentType = data.type;\n\n    b.deployments = [];\n\n    if (data.deployments) {\n      data.deployments.forEach((d) => {\n            b.deployments.push(DeploymentSet.make(d));\n      });\n    }\n\n    if (data.buildCommands) {\n      data.buildCommands.forEach((f) => {\n            b.buildCommands.push(BuildCommand.make(f));\n      });\n    }\n\n    b.sourceImage = DockerImage.make(data.sourceImage);\n    b.targetImage = DockerImage.make(data.targetImage);\n    b.version = data.version;\n    b.testStatus = data.testStatus;\n    b.buildUser = data.buildUser;\n    b.entryUser = data.entryUser;\n    b.entryPoint = data.entryPoint;\n    b.exitPoint = data.exitPoint;\n    b.healthCheck = data.healthCheck;\n\n    if (data.hasTests && data.hasTests == 'true')\n      b.hasTests = \"true\";\n\n    return b;\n  }\n\n  public publicPort(): string {\n    return this.sourceImage.primaryPort;\n  }\n\n  public setPublicPort(port: string) {\n    this.sourceImage.primaryPort = port;\n  }\n\n  public assignedLicense(): string {\n\n    let lic: BuildCommand = this.fileWithDescription(\"licenses\",'Product License');\n\n    if (lic) {\n      return lic.target.replace(/\\-/g, \" \");\n    } else {\n      return null;\n    }\n  }\n\n  public isCustomImage(): boolean {\n    return this.sourceImage.isCustom;\n  }\n\n  public fileForType(type: string, name?: string): BuildCommand {\n      return Builder._fileForSource(this.buildCommands, type, name, null);\n  }\n\n  public fileWithDescription(type: string, description: string): BuildCommand {\n      return Builder._fileForSource(this.buildCommands, type, null, description);\n  }\n\n  public removeFileForType(type: string, name?: string) {\n\n      return Builder._removeFileForType(this.buildCommands, type, name);\n  }\n\n  public static _fileForSource(buildCommands: BuildCommand[], type: string, name: string, description: string): BuildCommand {\n\n      let file: BuildCommand = null;\n\n      for (var i = 0; i  {\n         d.buildCommands.push(BuildCommand.make(b));\n       });\n     }\n\n     return d;\n  }\n}\n\nexport class Port {\n\n  public publicPort: string;\n  public serviceType: string;\n\n  constructor(public internal: string, public external: string, public description: string, public type?: string) {\n\n  }\n\n  public static makeArray(array: any[]): Port[] {\n\n    let ports: Port[] = [];\n\n    array.forEach((p) => {\n      let port: Port = new Port(p.internal, p.external, p.description, p.type);\n      port.publicPort = p.publicPort;\n      port.serviceType = p.serviceType;\n\n      ports.push(port);\n    });\n\n    return ports;\n  }\n}\n\nexport class Probe {\n\n  public path: string;\n  public port: string;\n  public initialDelaySeconds: number;\n  public periodSeconds: number;\n  public timeoutSeconds: number;\n\n  public static make(data: any): Probe {\n\n    let p = new Probe();\n    p.path = data.path;\n    p.port = data.port;\n    p.initialDelaySeconds = Number(data.initialDelaySeconds);\n    p.periodSeconds = Number(data.periodSeconds);\n    p.timeoutSeconds = Number(data.timeoutSeconds);\n\n    return p;\n  }\n}\n\nexport class Container {\n\n  public name: string;\n  public names: string[];\n  public active: string;\n  public type: string;\n  public description: string;\n  public hostname: string;\n  public secure: string;\n  public image: string;\n  public build: DockerBuild;\n  public ports: Port[];\n  public env: Arg[];\n  public volumes: Arg[];\n  public readinessProbe;\n  public livenessProbe;\n  public testStatus : TestStatus;\n  public adminUser: string;\n  public adminPassword: string;\n\n  // runtime only\n\n  public id: string;\n  public state: string;\n  public status: string;\n  public created: Date;\n\n  constructor() {\n\n    this.active = \"true\";\n    this.ports = [];\n    this.env = [];\n    this.volumes = [];\n  }\n\n  public copy() {\n    return Container.make(this);\n  }\n\n  public uniqueName(usesDedicatedRepo: boolean): string {\n\n    let repo: string = this.repository();\n\n    if (repo)\n      return repo + (usesDedicatedRepo ? \"/\" : \":\") + this.imageName();\n    else\n      return this.imageName();\n  }\n\n  public repository(): string {\n\n    if (this.image.indexOf(\":\") != -1) {\n\n      return this.image.substring(0, this.image.indexOf(\":\"));\n    } else {\n      return null;\n    }\n  }\n\n  public imageName(): string {\n\n    let name: string = this.image;\n\n    let idx: number = name.indexOf(\":\");\n\n    if (idx != -1) {\n\n      let lside = name.substring(0, idx);\n      let rside = name.substring(idx+1);\n\n      if (DockerImage.isVersionNumber(rside)) {\n\n        // name is on left side\n\n         if (this.image.lastIndexOf(\"/\") != -1) {\n          let idx: number = this.image.lastIndexOf(\"/\");\n          let rdx: number = this.image.indexOf(\":\");\n\n          name = this.image.substring(idx+1, rdx);\n        }\n      } else {\n\n        // name and perhaps version is in right side\n\n        name = rside;\n\n        if (name.indexOf(\"-\") != -1) {\n\n          let idx: number = name.lastIndexOf(\"-\");\n          let b4: string = name.substring(0, idx);\n          let af: string = name.substring(idx+1, name.length);\n\n          if (DockerImage.isVersionNumber(af)) {\n            name = b4;\n          }\n        }\n      }\n    }\n\n    return name;\n  }\n\n  public preferredImageVersion(): string {\n\n    if (this.image && this.image.indexOf(\":\")) {\n\n      let version: string = this.image.substring(this.image.indexOf(\":\")+1, this.image.length);\n\n      if (version.indexOf(\"-\") != -1) {\n        let idx: number = version.lastIndexOf(\"-\");\n        version = version.substring(idx+1, version.length);\n      }\n\n      // no versioning, only a name\n\n      if (!DockerImage.isVersionNumber(version))\n          version = \"latest\";\n\n      return version;\n    } else {\n\n      return \"latest\";\n    }\n  }\n\n  public static make(data: any): Container {\n\n    let c: Container = new Container();\n    c.names = data.names;\n    if (data.names)\n      c.name = data.names[0];\n    else\n      c.name = data.name;\n\n    c.active = data.active;\n    c.description = data.description;\n    c.hostname = data.hostname;\n    c.secure  = data.secure;\n    c.image = data.image;\n    c.type = data.type;\n    c.adminUser = data.adminUser;\n    c.adminPassword = data.adminPassword;\n\n    if (data.build)\n      c.build = DockerBuild.make(data.build);\n\n    if (data.ports)\n      c.ports = Port.makeArray(data.ports);\n\n    if (data.env)\n      c.env = Arg.makeArray(data.env);\n\n    if (data.volumes)\n      c.volumes = Arg.makeArray(data.volumes);\n\n    if (data.readinessProbe)\n      c.readinessProbe = Probe.make(data.readinessProbe);\n\n    if (data.livenessProbe)\n      c.livenessProbe = Probe.make(data.livenessProbe);\n\n    return c;\n  }\n\n  public environmentVariable(id: string): Arg {\n\n    var arg: Arg = null;\n\n    for (var i = 0; i  {\n          s.tests.push(Test.make(t));\n        });\n    }\n\n    return s;\n  }\n\n  public isActive(): boolean {\n\n    return (this.apiDeployType != \"none\" && this.apiDeployType != null) || this.stop == \"true\" || (this.apiMaturity != \"none\" &&  this.apiMaturity != null) ||\n                  (this.dockerAction != \"none\"  && this.dockerAction != null) || this.dockerTag != null || this.stop != null;\n  }\n\n  public summary(): string {\n\n      var status: string = null;\n\n      if (this.apiDeployType == \"deploy\")\n          status = \"Deploy API's \";\n      else if (this.apiDeployType == \"promote\")\n        status = \"Promote API's to \" + this.apiStage;\n\n      if (this.runTests == \"true\") {\n\n        if (status != null)\n          status = status + \", run tests\";\n        else\n          status = \"Run tests\";\n      }\n\n      if (this.apiMaturity) {\n\n        if (status != null)\n            status = status + \", and set maturity to \" + this.apiMaturity;\n        else\n          status = \"Set maturity to \" + this.apiMaturity;\n      }\n\n      if (this.dockerTag) {\n\n        if (status != null)\n          status = status + \", then tag image\";\n        else\n          status = \"Tag image \";\n      }\n\n      if (this.dockerAction) {\n        if (status != null)\n          status = status + \", \" + this.dockerAction;\n        else\n          status = this.dockerAction;\n\n        status = status + \" image\";\n      }\n\n      if (this.stop == \"true\") {\n        if (status != null)\n            status = status + \" before stopping\";\n        else\n            status = \"stop containers\";\n      }\n\n      if (this.pipelineAction) {\n\n        if (status != null)\n            status = status + \", then \" + this.pipelineAction + \" pipeline\";\n        else\n            status = \"and \" + this.pipelineAction + \" pipeline execution\";\n      }\n\n      return status;\n    }\n}\n\nexport class Stage {\n\n    public id: string;\n    public name: string;\n    public containerHost: string;\n    public useKubernetes: string;\n    public buildOnStart: string;\n    public deployments: Deployment[];\n    public onStart: Action;\n    public onFail: Action;\n    public onSuccess: Action;\n\n    constructor() {\n      this.deployments = [];\n      this.useKubernetes = \"false\";\n      this.buildOnStart = \"false\";\n      this.onStart = new Action();\n      this.onSuccess = new Action();\n      this.onFail = new Action();\n    }\n\n    public copy(): Stage {\n\n      let c = Stage.make(this);\n\n      c.id = this.id + \" copy\";\n      c.name = this.name + \" copy\";\n\n      return c;\n    }\n\n    public static make(data: any): Stage {\n\n      let s: Stage = new Stage();\n\n      s.name = data.name;\n      s.id = s.name;\n      s.containerHost = data.containerHost;\n      s.useKubernetes = data.useKubernetes;\n      s.buildOnStart = data.buildOnStart;\n\n      if (data.deployments) {\n        data.deployments.forEach((c) => {\n          s.deployments.push(Deployment.make(c));\n        });\n      }\n\n      if (data.onStart) {\n        s.onStart = Action.make(data.onStart);\n      }\n\n      if (data.onSuccess) {\n        s.onSuccess = Action.make(data.onSuccess);\n      }\n\n      if (data.onFail) {\n        s.onFail = Action.make(data.onFail);\n      }\n\n      return s;\n    }\n}\n\nexport class Deployment {\n\n  public name: string;\n  public hostname: string;\n  public appName: string;\n  public apis: APIDefinition[];\n  public containers: Container[];\n  public replicas: string;\n  public serviceType: string;\n  public restartPolicy: string;\n  public requiresMonitoring: string;\n  public dependsOn: string;\n\n  constructor() {\n\n    this.containers = [];\n    this.apis = [];\n  }\n\n  public copy() {\n    return Deployment.make(this);\n  }\n\n  public static make(data: any): Deployment {\n\n    let s: Deployment = new Deployment();\n    s.name = data.name;\n    s.hostname = data.hostname;\n    s.replicas = data.replicas;\n    s.appName = data.appName;\n    s.serviceType = data.serviceType;\n    s.restartPolicy = data.restartPolicy;\n    s.requiresMonitoring = data.requiresMonitoring;\n    s.dependsOn = data.dependsOn;\n\n    if (data.apis) {\n       data.apis.forEach((a) => {\n         s.apis.push(APIDefinition.make(a));\n       });\n    }\n\n    if (data.containers) {\n       data.containers.forEach((c) => {\n         s.containers.push(Container.make(c));\n       });\n    }\n\n    return s;\n  }\n\n  public containerForType(type: string): Container {\n\n    let found: Container = null;\n\n    this.containers.forEach((c) => {\n\n      if (c.type == type) {\n        found = c;\n      }\n    });\n\n    return found;\n  }\n\n  public removeContainer(c: Container) {\n\n    var found : number = -1;\n\n    for (var i = 0; i  {\n         p.builds.push(Builder.make(i));\n       });\n    }\n\n    if (data.deployments) {\n      p.deployments = [];\n       data.deployments.forEach((i) => {\n         p.deployments.push(Deployment.make(i));\n       });\n    }\n\n    return p;\n  }\n\n  public serviceFor(id: string): Deployment {\n\n      let found: Deployment = null;\n\n      for (var z = 0; z  {\n         p.stages.push(Stage.make(s));\n       });\n    }\n\n    return p;\n  }\n}\n\nfunction stringifyReplacer(key, value) {\n  const originalObject = this[key];\n  if(originalObject instanceof Map) {\n    return {\n      dataType: 'Map',\n      value: Array.from(originalObject.entries()), // or with spread: value: [...originalObject]\n    };\n  } else {\n    return value;\n  }\n}\n\nfunction parserReviver(key, value) {\n  if(typeof value === 'object' && value !== null) {\n    if (value.dataType === 'Map') {\n      return new Map(value.value);\n    }\n  }\n  return value;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestCase.html":{"url":"classes/TestCase.html","title":"class - TestCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/test-case.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _id\n                            \n                            \n                                    Protected\n                                _requestTemplate\n                            \n                            \n                                    Protected\n                                _responseTemplate\n                            \n                            \n                                    Public\n                                api\n                            \n                            \n                                    Public\n                                apiMethod\n                            \n                            \n                                    Public\n                                apiparams\n                            \n                            \n                                    Public\n                                apiResource\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                endpoint\n                            \n                            \n                                    Public\n                                isActive\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                suiteId\n                            \n                            \n                                    Static\n                                TIMESTAMP_FORMAT\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Static\n                                make\n                            \n                            \n                                    Static\n                                makeFromJson\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/models/test-case.ts:21\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/test-case.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _requestTemplate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Payload\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/test-case.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _responseTemplate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Payload\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/test-case.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            api\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/test-case.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiMethod\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/test-case.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiparams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/test-case.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiResource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/test-case.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/test-case.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            endpoint\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/test-case.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/test-case.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/test-case.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            suiteId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/test-case.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            TIMESTAMP_FORMAT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'yyMMddHHmmss'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/test-case.ts:5\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            id\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    id()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/test-case.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            make\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    make(suiteId: string, id: string, description: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/test-case.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    suiteId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TestCase\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            makeFromJson\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    makeFromJson(json: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/test-case.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    json\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TestCase\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Payload } from \"./payload\"\n\nexport class TestCase\n{\n\tpublic static TIMESTAMP_FORMAT: string = 'yyMMddHHmmss';\n\n\tpublic suiteId: string;\n\t\n\tprotected  _id: string;\n\t\t\n\tpublic name: string;\n\tpublic description: string;\n\tpublic isActive: boolean;\n\tpublic endpoint: string;\n\tpublic api: string;\n\tpublic apiMethod: string;\n\tpublic apiResource: string;\n\tpublic apiparams: string[];\n\n\tprotected _requestTemplate: Payload;\n\tprotected _responseTemplate: Payload;\n\n\tpublic constructor() {\n\n\t}\n\n\tpublic static make(suiteId: string, id: string, description: string): TestCase {\n\t\t\t\n\t\tlet t: TestCase = new TestCase();\n\n\t\tt.suiteId = suiteId;\n\t\tt._id = id;\n\t\tt.description = description;\n\n\t\treturn t;\n\t}\n\n\tpublic static makeFromJson(json: any): TestCase\n \t{\n \t\t//let jsonObj: any = JSON.parse(json);\n\n \t\tlet t: TestCase = new TestCase();\n\n        for (let prop in json) {\n\n        \tif (prop == \"id\") {\n\n        \t\tt._id = json[prop];\n\n        \t} else if (prop == \"requestTemplate\") {\n\n        \t\tt._requestTemplate = Payload.makeFromJson(json[prop]);\n\n        \t} else if (prop == \"responseTemplate\") {\n        \t\t\n        \t\tt._responseTemplate = Payload.makeFromJson(json[prop]);\n\n        \t} else {\n\n            \tt[prop] = json[prop];\n        \t}\n        }\n\n        if (!t.name && t.description) {\n\n        \tif (t.description.length > 18)\n        \t\tt.name = t.description.substring(0, 18);\n        \telse\n        \t\tt.name = t.description;\n        }\n\n        return t;\n \t}\n\n \tpublic id(): string {\n \t\treturn this._id;\n \t}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TestCaseComponent.html":{"url":"components/TestCaseComponent.html","title":"component - TestCaseComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TestCaseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/test-case.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                test-case\n            \n\n            \n                styleUrls\n                ../templates/test-case.css\n            \n\n\n\n            \n                templateUrl\n                ../templates/test-case.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiCtrl\n                            \n                            \n                                    Public\n                                packageCtrl\n                            \n                            \n                                    Public\n                                packages\n                            \n                            \n                                    Public\n                                serviceCtrl\n                            \n                            \n                                    Public\n                                testTypeCtrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiForValue\n                            \n                            \n                                    Public\n                                apis\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                packageForValue\n                            \n                            \n                                    Public\n                                services\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                            \n                                package\n                            \n                            \n                                testCase\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                testCaseChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_formBuilder: FormBuilder, _testConfig: TestConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/test-case.component.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _testConfig\n                                                  \n                                                        \n                                                                        TestConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/test-case.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        package\n                    \n                \n                \n                    \n                        Type :         WmPackageInfo\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/test-case.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        testCase\n                    \n                \n                \n                    \n                        Type :         TestCase\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/test-case.component.ts:42\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        testCaseChanged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/test-case.component.ts:48\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            apiForValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    apiForValue(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/test-case.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            apis\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    apis()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/test-case.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     any[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/test-case.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            packageForValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    packageForValue(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/test-case.component.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            services\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    services()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/test-case.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string[]\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/test-case.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            packageCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/test-case.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            packages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WmPackageInfo[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/test-case.component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            serviceCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/test-case.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            testTypeCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/test-case.component.ts:51\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ChangeDetectorRef, EventEmitter,\n\t\t\tOnInit, OnDestroy, ViewChild, Input, Output }   from '@angular/core';\n\nimport { Router }\t\t\t\t\t\t\t\t\t  \t    from '@angular/router';\nimport {FormBuilder, FormGroup, FormControl,\n\t\t\t\t\t\t\t\tValidators} \t\t\t   \tfrom '@angular/forms';\nimport { SelectionModel }                             \t\tfrom '@angular/cdk/collections';\n\nimport { MediaMatcher }                               \t\tfrom '@angular/cdk/layout';\nimport { MatAccordion, MatStepper, MatInput, MatButton,\n\tMatDialog, MatDialogRef, MatPaginator, MAT_DIALOG_DATA }from '@angular/material';\nimport { MatTableDataSource } \t\t\t\t\t\t\t\tfrom '@angular/material/table';\n\nimport { Settings }                                   \t  \tfrom '../settings';\n\nimport { WmPackageInfo, APIDefinition }               \t  \tfrom '../models/wm-package-info';\nimport { TestSuite }\t\t\t\t\t\t\t\t\t\tfrom \"../models/test-suite\";\nimport { TestCase }\t\t\t\t\t\t\t\t\t\t\tfrom \"../models/test-case\";\n\nimport { ResourceService }                                \tfrom '../services/resources.service';\nimport { DockerService } \t\t\t\t          \t    \tfrom '../services/docker.service';\nimport { ConfigurationService }                    \t\t    from '../services/configuration.service';\nimport { PackagesService }\t\t\t\t\t\t\t\t\tfrom '../services/packages.service';\nimport { TestConfigService }\t\t\t\t\t\t\t\tfrom '../services/test-config.service';\n\nimport { ContainerTemplates }\t\t\t\t\t\t\t   \tfrom '../support/container.templates';\n\n\n\n@Component({\n  selector: 'test-case',\n  templateUrl: '../templates/test-case.html',\n  styleUrls: ['../templates/test-case.css']\n})\n\nexport class TestCaseComponent implements OnInit {\n\n\t@Input()\n\tpublic package: WmPackageInfo;\n\n\t@Input()\n\tpublic testCase: TestCase;\n\n\t@Input()\n\tpublic form: FormGroup;\n\n\t@Output()\n\tpublic testCaseChanged: EventEmitter = new EventEmitter();\n\n\tpublic packageCtrl: FormControl;\n\tpublic testTypeCtrl: FormControl;\n\tpublic serviceCtrl: FormControl;\n\tpublic apiCtrl: FormControl;\n\n\tpublic packages: WmPackageInfo[];\n\n\tpublic constructor(private _formBuilder: FormBuilder, private _testConfig: TestConfigService) {\n\n\t\t_testConfig.packages().subscribe((p) => {\n\t\t\tthis.packages = p;\n\t\t});\n\t}\n\n\tpublic ngOnInit() {\n\n\t\tthis.packageCtrl = new FormControl(this.packageForValue(this.package.name));\n\t\tthis.serviceCtrl = new FormControl(this.testCase.endpoint);\n\t\tthis.testTypeCtrl = new FormControl(this.testCase.api ? \"api\" : \"service\");\n\t\tthis.apiCtrl = new FormControl(this.apiForValue(this.testCase.api));\n\n\t\tthis.form.addControl(\"packageCtrl\", this.packageCtrl);\n\t\tthis.form.addControl(\"testTypeCtrl\", this.testTypeCtrl);\n\t\tthis.form.addControl(\"serviceCtrl\", this.serviceCtrl);\n\t\tthis.form.addControl(\"apiCtrl\", this.apiCtrl);\n\n\t\tthis.form.valueChanges.subscribe((f) => {\n\n\t\t\tif (this.packageCtrl.dirty) {\n\t\t\t\tthis.package = this.packageCtrl.value;\n\t\t\t\tthis.packageCtrl.markAsPristine();\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic services(): string[] {\n\n\t\tif (this.package) {\n\t\t\treturn this.package.services;\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tpublic apis(): any[] {\n\n\t\tif (this.package) {\n\t\t\treturn this.package.apis;\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tpublic packageForValue(value: string): any {\n\n\t\tlet found: any = null;\n\n\t\tthis.packages.forEach((p) => {\n\n\t\t\tif (p.name == value)\n\t\t\t\tfound = p;\n\t\t});\n\n\t\treturn found;\n\t}\n\n\tpublic apiForValue(value: string): any {\n\n\t\tlet found: any = null;\n\n\t\tthis.package.apis.forEach((a) => {\n\n\t\t\tif (a.swaggerEndPoint.indexOf(value) != -1)\n\t\t\t\tfound = a;\n\t\t});\n\n\t\treturn found;\n\t}\n}\n\n    \n\n    \n        \n  \n    \n   \t\t\n\t    \t{{testCase.name}}\n\t      \t{{testCase.description}}\n\t      \t{{testCase.apiResource}}\n\t      \t\n\t      \t\t\n\t        \t\t\n\t         \t \t\t{{package.name}}\n\t        \t\t\n\t      \t\t\n\t     \t\n\t     \t\n\t\t\t\tService\n\t\t\t\tAPI\n\t\t\t\n\t     \t\n\t      \t\t\n\t        \t\t\n\t         \t \t\t{{service}}\n\t        \t\t\n\t      \t\t\n\t     \t\n\t     \t\n\t      \t\t\n\t        \t\t\n\t         \t \t\t{{api.name}}\n\t        \t\t\n\t      \t\t\n\t     \t\n\t\t\n    \n  \n\n    \n\n    \n                \n                    ../templates/test-case.css\n                \n                mat-card {\n\tmin-height: 250px;\n\tpadding-bottom: 75px;\n\tbox-shadow: none !important;\n\tbackground-color: rgba(0,0,0,0.01);\n\tborder-radius: 3px;\n}\n\nmat-table {\n\tbox-shadow: none !important;\n}\n\nmat-card-actions {\n\tposition: absolute;\n\tright:10px;\n\tbottom: 0px;\n}\nmat-select-value {\n\tmargin-right: 10px;\n}\nmat-input-element: disabled {\n\tcolor: black;\n}\n.content {\n\tdisplay: flex;\n\tflex-direction: row;\n\tflex-wrap: wrap;\n\talign-content: stretch;\n\talign-items: flex-start;\n}\n.content-block {\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-content: stretch;\n\talign-items: stretch;\n}\n.info-box {\n\tfloat: right;\n\tmax-width: 200px;\n\tbackground-color: rgb(240,240,240);\n\tpadding: 10px;\n\tborder-radius: 4px;\n\ttext-align: right;\n}\n.info {\n\tfont-size: 9px;\n\tfont-color: \"light-gray\";\n\tfont-style: \"italic\";\n\tmax-width: 150px;\n}\n\n.pulseButton:before {\n  content:\"\";\n  width: 145px;\n  height: 45px;\n  position: absolute;\n  border-radius:5px;\n  z-index:-1;\n  top:50%;\n  left:50%;\n  -webkit-transform:translate(-50%,-50%);\n  transform:translate(-50%,-50%);\n  -webkit-animation-name: fadecolor;\n  -webkit-animation-duration: 2.5s;\n  -webkit-animation-iteration-count: infinite;\n}\n\n@-webkit-keyframes fadecolor {\n  from {\n    background: -webkit-gradient(linear, 0% 0%, 0% 100%, from(#EB009F), to(#DA005B))\n  }\n  40% {\n    background: -webkit-gradient(linear, 0% 0%, 0% 100%, from(#EB009F), to(#DA005B));\n    opacity: 0.25\n  }\n  50% {\n    background: -webkit-gradient(linear, 0% 0%, 0% 100%, from(#EB009F), to(#DA005B));\n    opacity: 0\n  }\n  60% {\n    background: -webkit-gradient(linear, 0% 0%, 0% 100%, from(#EB009F), to(#DA005B));\n    opacity: 0.25\n  }\n  to {\n    background: -webkit-gradient(linear, 0% 0%, 0% 100%, from(#EB009F), to(#DA005B))\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '         \t\t\t    \t{{testCase.name}}\t      \t{{testCase.description}}\t      \t{{testCase.apiResource}}\t      \t\t      \t\t\t        \t\t\t         \t \t\t{{package.name}}\t        \t\t\t      \t\t\t     \t\t     \t\t\t\t\tService\t\t\t\tAPI\t\t\t\t     \t\t      \t\t\t        \t\t\t         \t \t\t{{service}}\t        \t\t\t      \t\t\t     \t\t     \t\t      \t\t\t        \t\t\t         \t \t\t{{api.name}}\t        \t\t\t      \t\t\t     \t\t\t      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about-app'},{'name': 'ActionComponent', 'selector': 'action'},{'name': 'ApiGatewayInstallerComponent', 'selector': 'jc-apigw-install'},{'name': 'ApiMicroGatewayInstallerComponent', 'selector': 'jc-apimg-install'},{'name': 'ApiPortalInstallerComponent', 'selector': 'jc-apipr-installer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildCommandsComponent', 'selector': 'build-commands'},{'name': 'BuildComponent', 'selector': 'build'},{'name': 'BuildExeComponent', 'selector': 'build-exe'},{'name': 'BuildImageComponent', 'selector': 'build-solution'},{'name': 'BuildInstallComponent', 'selector': 'build-install'},{'name': 'BuildPackagesComponent', 'selector': 'build-package'},{'name': 'ContainerComponent', 'selector': 'container'},{'name': 'ContainersComponent', 'selector': 'app-containers'},{'name': 'DeploymentDetailsComponent', 'selector': 'jc-deployment-details'},{'name': 'DeploymentListComponent', 'selector': 'jc-k8s-deployments'},{'name': 'DockerImageChooserComponent', 'selector': 'docker-image-chooser'},{'name': 'DockerImageListComponent', 'selector': 'jc-docker-images'},{'name': 'DockerImageVersionsComponent', 'selector': 'jc-docker-image-versions'},{'name': 'EditContainerComponent', 'selector': 'edit-container'},{'name': 'GitSourcesComponent', 'selector': 'git-source'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'InstallerComponent', 'selector': 'jc-install'},{'name': 'MicroServiceBuilderComponent', 'selector': 'jc-msc-configure'},{'name': 'MicroServiceInstallerComponent', 'selector': 'jc-msc-install'},{'name': 'PodsListComponent', 'selector': 'jc-pods'},{'name': 'RuntimeContainersComponent', 'selector': 'runtime-containers'},{'name': 'RuntimeDeployComponent', 'selector': 'runtime-deploy'},{'name': 'RuntimeDetailsComponent', 'selector': ''},{'name': 'RuntimeK8sComponent', 'selector': 'runtime'},{'name': 'RuntimeScaleComponent', 'selector': 'jc-runtime-scale'},{'name': 'RuntimeStageComponent', 'selector': 'runtime-stage'},{'name': 'RuntimeUpdateComponent', 'selector': ''},{'name': 'SagImageAlerterComponent', 'selector': 'sag-image-alerter'},{'name': 'ServicePropertiesComponent', 'selector': 'k8s-props'},{'name': 'SettingsComponent', 'selector': 'home'},{'name': 'SimpleNameComponent', 'selector': 'name-dialog'},{'name': 'StagingComponent', 'selector': 'staging'},{'name': 'TestCaseComponent', 'selector': 'test-case'},{'name': 'TestDefinitionComponent', 'selector': 'test-definitions'},{'name': 'TestHistoryComponent', 'selector': 'test-history'},{'name': 'TestRunComponent', 'selector': 'test-reun'},{'name': 'UMInstallerComponent', 'selector': 'jc-um-install'},{'name': 'UploadButtonComponent', 'selector': 'file-uploader-button'}];\n    var DIRECTIVES = [{'name': 'BuildImageChooseDirective', 'selector': '[builder]'},{'name': 'CancelCdkDrag', 'selector': '[appCancelCdkDrag]'},{'name': 'NgFileDrop', 'selector': '[ng-file-drop]'},{'name': 'NgFileSelect', 'selector': '[ng-file-select]'},{'name': 'RuntimeActionsDirective', 'selector': '[runtime-actions]'}];\n    var ACTUAL_COMPONENT = {'name': 'TestCaseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TestConfigService.html":{"url":"injectables/TestConfigService.html","title":"injectable - TestConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TestConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/test-config.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                TESTSUITE_URL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getTestSuiteDefinition\n                            \n                            \n                                    Public\n                                packageDetails\n                            \n                            \n                                    Public\n                                packages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/test-config.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTestSuiteDefinition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTestSuiteDefinition(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/test-config.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            packageDetails\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    packageDetails(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/test-config.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            packages\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    packages()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/test-config.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            TESTSUITE_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : Settings.SERVER_API + \"/rad/jc.devops:api\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/test-config.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Injector } \t           \tfrom '@angular/core';\nimport { Observable }                         from 'rxjs';\nimport { switchMap, map } \t\t\t\t\t\t        from 'rxjs/operators';\n\nimport { HttpClient, HttpHeaders }            from '@angular/common/http';\n\nimport { Settings }\t\t\t\t\t\t\t\t            from '../settings';\n\nimport { WmPackageInfo }\t\t\t\t\t\t          from '../models/wm-package-info';\nimport { TestSuite }\t\t\t\t\t\t\t            from \"../models/test-suite\";\nimport { TestCase }\t\t\t\t\t\t\t\t            from \"../models/test-case\";\n\n@Injectable()\nexport class TestConfigService {\n  \n    public static TESTSUITE_URL: string = Settings.SERVER_API + \"/rad/jc.devops:api\";\n\n    constructor(private _http: HttpClient) {        \n    }\n \n \tpublic getTestSuiteDefinition(id: string): Observable {\n\n \t\tlet url: string = TestConfigService.TESTSUITE_URL + \"/test?testSuiteId=\" + id;\n\n      \tlet headers: HttpHeaders = new HttpHeaders()\n      \t.set('Content-Type', 'application/json')\n      \t.set('Accept', 'application/json')\n      \t.set('server', Settings.DEV_SERVER_API);\n\n \t\treturn this._http.get(url, { headers }).pipe(map((responseData: any) => {\n\n \t\t\tlet tests: TestSuite[] = [];\n\n \t\t\tresponseData.tests.forEach((t) => {\n\n \t\t\t\ttests.push(TestSuite.makeFromJson(t));\n \t\t\t});\n\n \t\t\treturn tests;\n \t\t}, error => {\n \t\t\treturn null;\n \t\t}));\n \t}\n\n \tpublic packages(): Observable {\n\n      let url: string = TestConfigService.TESTSUITE_URL + \"/package\";\n\n      let headers = new HttpHeaders()\n        .set('Content-Type', 'application/json')\n        .set('Accept', 'application/json')\n        .set('server', Settings.DEV_SERVER_API);\n\n      return this._http.get(url, { headers }).pipe(map( (responseData) => {\n\n          let packages: WmPackageInfo[] = [];\n\n          ( responseData).packages.forEach((p) => {\n            packages.push(WmPackageInfo.make(p));\n          });\n\n           return packages;\n        },\n        error => {\n            return [];\n        }));\n    }\n\n     public packageDetails(name: string): Observable {\n\n      let url: string = TestConfigService.TESTSUITE_URL + \"/package/\" + name \n\n      let headers = new HttpHeaders()\n        .set('Content-Type', 'application/json')\n        .set('Accept', 'application/json')\n        .set('server', Settings.DEV_SERVER_API);\n     \n      return this._http.get(url, { headers }).pipe(map( (responseData) => {\n\n           return WmPackageInfo.make(( responseData).packages[0]);\n        },\n        error => {\n            return null;\n        }));\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TestHistoryComponent.html":{"url":"components/TestHistoryComponent.html","title":"component - TestHistoryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TestHistoryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/test-history.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                test-history\n            \n\n            \n                styleUrls\n                ../templates/test-history.css\n            \n\n\n\n            \n                templateUrl\n                ../templates/test-history.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _div\n                            \n                            \n                                    Private\n                                _frame\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                checkIfLoaded\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Private\n                                reportError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_router: Router, _settings: Settings, _dockerService: DockerService, _dialog: MatDialog, _formBuilder: FormBuilder, _resources: ResourceService, _configService: ConfigurationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/test-history.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _settings\n                                                  \n                                                        \n                                                                        Settings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _dockerService\n                                                  \n                                                        \n                                                                        DockerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _resources\n                                                  \n                                                        \n                                                                        ResourceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                        ConfigurationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            checkIfLoaded\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfLoaded()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/test-history.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/test-history.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            reportError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reportError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/test-history.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _div\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('testframewrapper')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/test-history.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _frame\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('testframe')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/test-history.component.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ChangeDetectorRef, ViewChild,\n\t\t\tOnInit, OnDestroy, ElementRef }   \t\t\t\tfrom '@angular/core';\n\nimport { Router }\t\t\t\t\t\t\t\t\t  \t    from '@angular/router';\nimport {FormBuilder, FormGroup, FormControl,\n\t\t\t\t\t\t\t\tValidators} \t\t\t   \tfrom '@angular/forms';\nimport { SelectionModel }                             \t\tfrom '@angular/cdk/collections';\n\nimport { MediaMatcher }                               \t\tfrom '@angular/cdk/layout';\nimport { MatAccordion }                               \t\tfrom '@angular/material';\nimport { MatInput, MatButton }\t\t\t\t\t\t\t   \tfrom '@angular/material';\nimport { MatDialog, MatDialogRef,\n\t\t\t\t\tMAT_DIALOG_DATA }\t  \t\t\t\t \tfrom '@angular/material';\n\nimport { Settings }                                   \t  \tfrom '../settings';\n\nimport { DockerImage } \t\t\t\t\t\t\t\t   \t \tfrom '../models/docker-image';\nimport { ResourceService }                                \tfrom '../services/resources.service';\n\nimport { DockerService } \t\t\t\t          \t    \tfrom '../services/docker.service';\nimport { Source }                                     \t  \tfrom '../models/git-source';\nimport { RunSet, Builder, DeploymentSet,\n  Probe, Port, Arg, Stage, Container }       \t\t\t\tfrom '../models/project';\nimport { WmPackageInfo, APIDefinition }               \t  \tfrom '../models/wm-package-info';\nimport { ConfigurationService }                    \t\t    from '../services/configuration.service';\nimport { ContainerTemplates }\t\t\t\t\t\t\t   \tfrom '../support/container.templates';\n\n@Component({\n  selector: 'test-history',\n  templateUrl: '../templates/test-history.html',\n  styleUrls: ['../templates/test-history.css']\n})\n\nexport class TestHistoryComponent implements OnInit {\n\n\t@ViewChild('testframe')\n\tprivate _frame: ElementRef;\n\n\t@ViewChild('testframewrapper')\n\tprivate _div: ElementRef;\n\n\tpublic constructor(private _router: Router, private _settings: Settings, private _dockerService: DockerService, private _dialog: MatDialog,\n\t\tprivate _formBuilder: FormBuilder, private _resources: ResourceService, private _configService: ConfigurationService) {\n\n\t}\n\n\tpublic ngOnInit() {\n\n\t\tconsole.log(\"on init\");\n\n\t\tlet ref: TestHistoryComponent = this;\n\t\tsetTimeout(() => {\n\t\t\tref.checkIfLoaded();\n\t\t}, 500);\n\t}\n\n\tpublic checkIfLoaded() {\n\n\t\t try{\n\t\t    if (this._frame.nativeElement.contentDocument.location.pathname == 'blank') {\n\t\t    \tconsole.log(\"path is blank\");\n\n\t\t    \tthis.reportError();\n\t\t    }\n\t\t }\n\t\t catch(err){\n\n\t\t    console.log('******** err:'+err);\n\n\t\t\tthis.reportError();\n\t\t}\n\t}\n\n\tprivate reportError() {\n\n\t\tthis._div.nativeElement.innerHTML = \"Cannot load TestSuite DashboardEnsure that you have your local Designer Workstation Server running on port 5555 and that you have imported the package JcTestSuite.Also ensure that your local development server allows iframes by setting the extended property 'watt.server.http.x-frame-options' to 'ALLOWALL'Click here to check, then navigate to Settings -> Extended -> Show And Hide Keys, search on 'frame-options', click the checkbox and scroll to the bottom to save changes. Click 'edit extended settings' and set the value to 'ALLOWALL'NOTE: Please don't this on a production environment as it could expose you to scripting attacks!!\";\n\t}\n}\n\n    \n\n    \n        \n\t\n\t\t\n\t\n\n\n\n    \n\n    \n                \n                    ../templates/test-history.css\n                \n                \n.mat-expansion-panel-body {\n\tmargin-top: -30px !important;\n}\n\ndiv.mat-expansion-panel-body {\n\tmargin-top: -30px !important;\n}\n\n.simple {\n\tbackground-color: rgba(255,255,255, 0.3); \n\tborder-radius: 0px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about-app'},{'name': 'ActionComponent', 'selector': 'action'},{'name': 'ApiGatewayInstallerComponent', 'selector': 'jc-apigw-install'},{'name': 'ApiMicroGatewayInstallerComponent', 'selector': 'jc-apimg-install'},{'name': 'ApiPortalInstallerComponent', 'selector': 'jc-apipr-installer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildCommandsComponent', 'selector': 'build-commands'},{'name': 'BuildComponent', 'selector': 'build'},{'name': 'BuildExeComponent', 'selector': 'build-exe'},{'name': 'BuildImageComponent', 'selector': 'build-solution'},{'name': 'BuildInstallComponent', 'selector': 'build-install'},{'name': 'BuildPackagesComponent', 'selector': 'build-package'},{'name': 'ContainerComponent', 'selector': 'container'},{'name': 'ContainersComponent', 'selector': 'app-containers'},{'name': 'DeploymentDetailsComponent', 'selector': 'jc-deployment-details'},{'name': 'DeploymentListComponent', 'selector': 'jc-k8s-deployments'},{'name': 'DockerImageChooserComponent', 'selector': 'docker-image-chooser'},{'name': 'DockerImageListComponent', 'selector': 'jc-docker-images'},{'name': 'DockerImageVersionsComponent', 'selector': 'jc-docker-image-versions'},{'name': 'EditContainerComponent', 'selector': 'edit-container'},{'name': 'GitSourcesComponent', 'selector': 'git-source'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'InstallerComponent', 'selector': 'jc-install'},{'name': 'MicroServiceBuilderComponent', 'selector': 'jc-msc-configure'},{'name': 'MicroServiceInstallerComponent', 'selector': 'jc-msc-install'},{'name': 'PodsListComponent', 'selector': 'jc-pods'},{'name': 'RuntimeContainersComponent', 'selector': 'runtime-containers'},{'name': 'RuntimeDeployComponent', 'selector': 'runtime-deploy'},{'name': 'RuntimeDetailsComponent', 'selector': ''},{'name': 'RuntimeK8sComponent', 'selector': 'runtime'},{'name': 'RuntimeScaleComponent', 'selector': 'jc-runtime-scale'},{'name': 'RuntimeStageComponent', 'selector': 'runtime-stage'},{'name': 'RuntimeUpdateComponent', 'selector': ''},{'name': 'SagImageAlerterComponent', 'selector': 'sag-image-alerter'},{'name': 'ServicePropertiesComponent', 'selector': 'k8s-props'},{'name': 'SettingsComponent', 'selector': 'home'},{'name': 'SimpleNameComponent', 'selector': 'name-dialog'},{'name': 'StagingComponent', 'selector': 'staging'},{'name': 'TestCaseComponent', 'selector': 'test-case'},{'name': 'TestDefinitionComponent', 'selector': 'test-definitions'},{'name': 'TestHistoryComponent', 'selector': 'test-history'},{'name': 'TestRunComponent', 'selector': 'test-reun'},{'name': 'UMInstallerComponent', 'selector': 'jc-um-install'},{'name': 'UploadButtonComponent', 'selector': 'file-uploader-button'}];\n    var DIRECTIVES = [{'name': 'BuildImageChooseDirective', 'selector': '[builder]'},{'name': 'CancelCdkDrag', 'selector': '[appCancelCdkDrag]'},{'name': 'NgFileDrop', 'selector': '[ng-file-drop]'},{'name': 'NgFileSelect', 'selector': '[ng-file-select]'},{'name': 'RuntimeActionsDirective', 'selector': '[runtime-actions]'}];\n    var ACTUAL_COMPONENT = {'name': 'TestHistoryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TestRunComponent.html":{"url":"components/TestRunComponent.html","title":"component - TestRunComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TestRunComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/test-run.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                test-reun\n            \n\n            \n                styleUrls\n                ../templates/test-run.css\n            \n\n\n\n            \n                templateUrl\n                ../templates/test-run.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_router: Router, _settings: Settings, _dockerService: DockerService, _dialog: MatDialog, _formBuilder: FormBuilder, _resources: ResourceService, _configService: ConfigurationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/test-run.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _settings\n                                                  \n                                                        \n                                                                        Settings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _dockerService\n                                                  \n                                                        \n                                                                        DockerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _resources\n                                                  \n                                                        \n                                                                        ResourceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _configService\n                                                  \n                                                        \n                                                                        ConfigurationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/test-run.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, ChangeDetectorRef,\n\t\t\tOnInit, OnDestroy }   \t\t\t\t\t\t    from '@angular/core';\n\nimport { Router }\t\t\t\t\t\t\t\t\t  \t\tfrom '@angular/router';\nimport {FormBuilder, FormGroup, FormControl,\n\t\t\t\t\t\t\t\tValidators} \t\t\t  \tfrom '@angular/forms';\nimport { SelectionModel }                             \t\tfrom '@angular/cdk/collections';\n\nimport { MediaMatcher }                               \t\tfrom '@angular/cdk/layout';\nimport { MatAccordion }                               \t\tfrom '@angular/material';\nimport { MatInput, MatButton }\t\t\t\t\t\t\t\tfrom '@angular/material';\nimport { MatDialog, MatDialogRef,\n\t\t\t\t\tMAT_DIALOG_DATA }\t  \t\t\t\t   \tfrom '@angular/material';\n\nimport { Settings }                                   \t  \tfrom '../settings';\n\nimport { DockerImage } \t\t\t\t\t\t\t\t   \t    from '../models/docker-image';\nimport { ResourceService }                                \tfrom '../services/resources.service';\n\nimport { DockerService } \t\t\t\t          \t      \tfrom '../services/docker.service';\nimport { Source }                                     \t  \tfrom '../models/git-source';\nimport { RunSet, Builder, DeploymentSet,\n  Probe, Port, Arg, Stage, Container }       \t\t\t\tfrom '../models/project';\nimport { WmPackageInfo, APIDefinition }               \t  \tfrom '../models/wm-package-info';\nimport { ConfigurationService }                    \t\t    from '../services/configuration.service';\nimport { ContainerTemplates }\t\t\t\t\t\t\t   \tfrom '../support/container.templates';\n\n@Component({\n  selector: 'test-reun',\n  templateUrl: '../templates/test-run.html',\n  styleUrls: ['../templates/test-run.css']\n})\n\nexport class TestRunComponent implements OnInit {\n\n\tpublic constructor(private _router: Router, private _settings: Settings, private _dockerService: DockerService, private _dialog: MatDialog,\n\t\tprivate _formBuilder: FormBuilder, private _resources: ResourceService, private _configService: ConfigurationService) {\n\n\n\t}\n\n\tpublic ngOnInit() {\n\n\n\t}\n}\n\n    \n\n    \n        \n\n  Test\n  \n    \n     \n    \n  \n\n\n    \n\n    \n                \n                    ../templates/test-run.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Test                 '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about-app'},{'name': 'ActionComponent', 'selector': 'action'},{'name': 'ApiGatewayInstallerComponent', 'selector': 'jc-apigw-install'},{'name': 'ApiMicroGatewayInstallerComponent', 'selector': 'jc-apimg-install'},{'name': 'ApiPortalInstallerComponent', 'selector': 'jc-apipr-installer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildCommandsComponent', 'selector': 'build-commands'},{'name': 'BuildComponent', 'selector': 'build'},{'name': 'BuildExeComponent', 'selector': 'build-exe'},{'name': 'BuildImageComponent', 'selector': 'build-solution'},{'name': 'BuildInstallComponent', 'selector': 'build-install'},{'name': 'BuildPackagesComponent', 'selector': 'build-package'},{'name': 'ContainerComponent', 'selector': 'container'},{'name': 'ContainersComponent', 'selector': 'app-containers'},{'name': 'DeploymentDetailsComponent', 'selector': 'jc-deployment-details'},{'name': 'DeploymentListComponent', 'selector': 'jc-k8s-deployments'},{'name': 'DockerImageChooserComponent', 'selector': 'docker-image-chooser'},{'name': 'DockerImageListComponent', 'selector': 'jc-docker-images'},{'name': 'DockerImageVersionsComponent', 'selector': 'jc-docker-image-versions'},{'name': 'EditContainerComponent', 'selector': 'edit-container'},{'name': 'GitSourcesComponent', 'selector': 'git-source'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'InstallerComponent', 'selector': 'jc-install'},{'name': 'MicroServiceBuilderComponent', 'selector': 'jc-msc-configure'},{'name': 'MicroServiceInstallerComponent', 'selector': 'jc-msc-install'},{'name': 'PodsListComponent', 'selector': 'jc-pods'},{'name': 'RuntimeContainersComponent', 'selector': 'runtime-containers'},{'name': 'RuntimeDeployComponent', 'selector': 'runtime-deploy'},{'name': 'RuntimeDetailsComponent', 'selector': ''},{'name': 'RuntimeK8sComponent', 'selector': 'runtime'},{'name': 'RuntimeScaleComponent', 'selector': 'jc-runtime-scale'},{'name': 'RuntimeStageComponent', 'selector': 'runtime-stage'},{'name': 'RuntimeUpdateComponent', 'selector': ''},{'name': 'SagImageAlerterComponent', 'selector': 'sag-image-alerter'},{'name': 'ServicePropertiesComponent', 'selector': 'k8s-props'},{'name': 'SettingsComponent', 'selector': 'home'},{'name': 'SimpleNameComponent', 'selector': 'name-dialog'},{'name': 'StagingComponent', 'selector': 'staging'},{'name': 'TestCaseComponent', 'selector': 'test-case'},{'name': 'TestDefinitionComponent', 'selector': 'test-definitions'},{'name': 'TestHistoryComponent', 'selector': 'test-history'},{'name': 'TestRunComponent', 'selector': 'test-reun'},{'name': 'UMInstallerComponent', 'selector': 'jc-um-install'},{'name': 'UploadButtonComponent', 'selector': 'file-uploader-button'}];\n    var DIRECTIVES = [{'name': 'BuildImageChooseDirective', 'selector': '[builder]'},{'name': 'CancelCdkDrag', 'selector': '[appCancelCdkDrag]'},{'name': 'NgFileDrop', 'selector': '[ng-file-drop]'},{'name': 'NgFileSelect', 'selector': '[ng-file-select]'},{'name': 'RuntimeActionsDirective', 'selector': '[runtime-actions]'}];\n    var ACTUAL_COMPONENT = {'name': 'TestRunComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestSuite.html":{"url":"classes/TestSuite.html","title":"class - TestSuite","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestSuite\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/test-suite.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Public\n                                isActive\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                postprocessorService\n                            \n                            \n                                    Public\n                                preprocessorService\n                            \n                            \n                                    Public\n                                serverAlias\n                            \n                            \n                                    Public\n                                tests\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Static\n                                make\n                            \n                            \n                                    Static\n                                makeFromJson\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/models/test-suite.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/test-suite.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/test-suite.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/test-suite.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            postprocessorService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/test-suite.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            preprocessorService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/test-suite.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            serverAlias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/test-suite.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tests\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/test-suite.ts:14\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            id\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    id()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/test-suite.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            make\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    make(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/test-suite.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TestSuite\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            makeFromJson\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    makeFromJson(json: JSON)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/test-suite.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    json\n                                    \n                                            JSON\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TestSuite\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TestCase } from \"./test-case\"\n\nexport class TestSuite\n{\n\tprivate _id: string;\n\t\n\tpublic name: string;\n\tpublic isActive: boolean;\n\t\n\tpublic serverAlias: string;\n\tpublic preprocessorService: string;\n\tpublic postprocessorService: string;\n\t\n\tpublic tests: Map;\n\n\tpublic constructor() {\n\n\t\tthis.tests = new Map();\n\t}\n\n\tpublic static make(id: string) {\n\n\t\tlet t: TestSuite = new TestSuite();\n\n\t\tt._id = id;\n\n\t\treturn t;\n\t}\n\n\tpublic static makeFromJson(json: JSON): TestSuite\n \t{\n \t\t//let jsonObj: any = JSON.parse(json);\n\n \t\tlet ts: TestSuite = new TestSuite();\n\n        for (let prop in json) {\n\n        \tif (prop == \"id\") {\n\n        \t\tts._id = json[prop];\n\n        \t} else if (prop == \"tests\") {\n        \t\t\n        \t\tlet tests: any[] = json[prop];\n        \t\ttests.forEach((t) => {\n\n        \t\t\tlet tc: TestCase = TestCase.makeFromJson(t);\n\n        \t\t\tts.tests.set(tc.id(), tc);\n        \t\t});\n\n        \t} else {\n\n            \tts[prop] = json[prop];\n        \t}\n        }\n\n        return ts;\n \t}\n\n\tpublic id(): string {\n\n\t\treturn this._id;\n\t}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TestTraceService.html":{"url":"injectables/TestTraceService.html","title":"injectable - TestTraceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TestTraceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/test-trace.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _dockerHost\n                            \n                            \n                                    Static\n                                TEST_URL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                checkTestStatus\n                            \n                            \n                                    Private\n                                headers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient, _settings: Settings)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/test-trace.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _settings\n                                                  \n                                                        \n                                                                        Settings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            checkTestStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkTestStatus(runName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/test-trace.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    runName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            headers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    headers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/test-trace.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         HttpHeaders\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _dockerHost\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/test-trace.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            TEST_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : Settings.SERVER_API + \"/rad/jc.devops:api/test\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/test-trace.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Injector } \t           \tfrom '@angular/core';\nimport { Observable, ObservableInput, of, \n\t\t\t\t\t\t\t\t\tEMPTY }      from 'rxjs';\nimport { switchMap, map, catchError } \t\t\t from 'rxjs/operators';\n\nimport { HttpClient, HttpHeaders,\n\t\t\tHttpErrorResponse }             \tfrom '@angular/common/http';\n\nimport { Settings }\t\t\t\t\t\t\t\tfrom '../settings';\nimport { TestStatus }\t\t\t\t\t\t\tfrom '../models/docker-image';\n\n@Injectable()\nexport class TestTraceService {\n  \n    public static TEST_URL: string = Settings.SERVER_API + \"/rad/jc.devops:api/test\";\n\n    private _dockerHost: string;\n\n    constructor(private _http: HttpClient, private _settings: Settings) {  \n\n    \tthis._settings.values().subscribe((v) => {\n          this._dockerHost = v.dockerHost;\n        });\n    }\n\n    public checkTestStatus(runName: string): Observable {\n\n \t\tlet url: string = TestTraceService.TEST_URL + \"/status/\" + runName;\n\n    let headers: HttpHeaders = this.headers();\n\n \t\treturn this._http.get(url, { headers }).pipe(map((responseData: any) => {\n\n \t\t\tlet status: string = responseData.status;\n\n \t\t\tif (status == 'success')\n\t\t\t\treturn TestStatus.passed;\n\t\t\telse if (status == 'fail')\n\t\t\t\treturn TestStatus.failed;\n\t\t\telse if (status == 'todo')\n\t\t\t\treturn TestStatus.todo;\n\t\t\telse if (status == 'running')\n\t\t\t\treturn TestStatus.running;\n\t\t\telse\n\t\t\t\treturn TestStatus.none;\n\n \t\t}), catchError((error: HttpErrorResponse) => {\n \t\t\treturn of(TestStatus.none);\n \t\t}));\n \t}\n\n \tprivate headers(): HttpHeaders {\n\n      return new HttpHeaders()\n          .append('Content-Type', 'application/json')\n          .append('Accept', 'application/json')\n          .append('Cache-Control', 'no-cache')\n          .append('Cache-Control', 'no-store')\n          .append('Pragma','no-cache')\n          .append('Expires', '0')\n          .append('Accept', 'application/json')\n          .append('dockerHost', this._dockerHost);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UMInstallerComponent.html":{"url":"components/UMInstallerComponent.html","title":"component - UMInstallerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UMInstallerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/plugins/um-installer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    BuilderComponent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                jc-um-install\n            \n\n\n\n\n            \n                templateUrl\n                ../../templates/plugins/um-install.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dataSource\n                            \n                            \n                                    Public\n                                formGroup\n                            \n                            \n                                    Public\n                                owner\n                            \n                            \n                                    Public\n                                realmCtrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                flagChanges\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                refreshBuildCommands\n                            \n                            \n                                    Private\n                                setDefaults\n                            \n                            \n                                    Public\n                                setLicenseFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            flagChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    flagChanges(realm: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/plugins/um-installer.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    realm\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/plugins/um-installer.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refreshBuildCommands\n                        \n                        \n                    \n                \n            \n            \n                \nrefreshBuildCommands(show: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/plugins/um-installer.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    show\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setDefaults\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDefaults()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/plugins/um-installer.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setLicenseFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setLicenseFile(license: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/plugins/um-installer.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    license\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BuildParams\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/plugins/um-installer.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/plugins/um-installer.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            owner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PropertiesChangedOwner\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/plugins/um-installer.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            realmCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/plugins/um-installer.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ChangeDetectorRef, Input,\n\t\t\tOnInit, OnDestroy, ViewChild }   \tfrom '@angular/core';\nimport { FormBuilder, FormGroup, FormControl } \tfrom '@angular/forms';\n\nimport { BuilderComponent, BuilderProperties,\n\t\t\t\tPropertiesChangedOwner }\t\tfrom '../elements/build-image-choose.directive';\n\nimport { BuildParams, BuildCommand }       \t\tfrom '../../models/project';\n\n@Component({\n  selector: 'jc-um-install',\n  templateUrl: '../../templates/plugins/um-install.html'\n})\n\nexport class UMInstallerComponent implements OnInit, BuilderComponent {\n\n\tpublic formGroup: FormGroup;\n\tpublic owner: PropertiesChangedOwner;\n\tpublic dataSource: BuildParams;\n\n\tpublic realmCtrl: FormControl;\n\n\tpublic ngOnInit() {\n\n\t\tthis.dataSource = this.owner.initialProperties();\n\n\t\tthis.setDefaults();\n\n\t\tthis.realmCtrl = new FormControl(this.dataSource.args.get(\"realm\"));\n\t\tthis.formGroup.addControl(\"realmCtrl\", this.realmCtrl);\n\n\t\tthis.flagChanges(this.realmCtrl.value);\n\n\t\tthis.formGroup.valueChanges.subscribe((v) => {\n\t\t\tthis.dataSource.args.set('realm', this.realmCtrl.value);\n\t\t\tthis.dataSource.args.set('env_realm', this.realmCtrl.value);\n\n\t\t\tthis.flagChanges(this.realmCtrl.value)\n\t\t});\n\t}\n\n\tprivate setDefaults() {\n\n\t\tthis.dataSource.hostName = \"wm-um\";\n\n\t\tif (!this.dataSource.args.get(\"realm\")) {\n\t\t\tthis.dataSource.args.set(\"realm\", \"umserver\");\n\t\t\tthis.dataSource.args.set('env_realm', \"umserver\");\n\t\t}\n\t}\n\n\tpublic setLicenseFile(license: string) {\n\n    let file: BuildCommand = this.dataSource.fileForType(\"licenses\");\n\n      if (!file) {\n          file = new BuildCommand();\n          file.commandType = \"file\"\n          file.fileType = \"licenses\";\n          file.description = \"License file\"\n          file.target = \"/opt/softwareag/UniversalMessaging/server/umserver/license.xml\";\n\n          //ensures that the build-components view gets updated\n          this.dataSource.buildCommands = Object.assign([], this.dataSource.buildCommands);\n\n          this.dataSource.buildCommands.push(file);\n      }\n\n      file.source = license.replace(/\\s/g, \"-\");\n   }\n\n\tprivate flagChanges(realm: string) {\n\n\t\tlet props: Map = new Map();\n\n    \tif (realm)\n\t\t  props.set(\"Realm\", [new BuilderProperties(\"name\", [realm])]);\n\n\t\tthis.owner.propertiesChangedInBuilder(\"um\", props, this.dataSource);\n\t}\n\n  refreshBuildCommands(show: boolean) {\n  }\n}\n\n    \n\n    \n        \n\n  Realm Details\n  \n    \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Realm Details                  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about-app'},{'name': 'ActionComponent', 'selector': 'action'},{'name': 'ApiGatewayInstallerComponent', 'selector': 'jc-apigw-install'},{'name': 'ApiMicroGatewayInstallerComponent', 'selector': 'jc-apimg-install'},{'name': 'ApiPortalInstallerComponent', 'selector': 'jc-apipr-installer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildCommandsComponent', 'selector': 'build-commands'},{'name': 'BuildComponent', 'selector': 'build'},{'name': 'BuildExeComponent', 'selector': 'build-exe'},{'name': 'BuildImageComponent', 'selector': 'build-solution'},{'name': 'BuildInstallComponent', 'selector': 'build-install'},{'name': 'BuildPackagesComponent', 'selector': 'build-package'},{'name': 'ContainerComponent', 'selector': 'container'},{'name': 'ContainersComponent', 'selector': 'app-containers'},{'name': 'DeploymentDetailsComponent', 'selector': 'jc-deployment-details'},{'name': 'DeploymentListComponent', 'selector': 'jc-k8s-deployments'},{'name': 'DockerImageChooserComponent', 'selector': 'docker-image-chooser'},{'name': 'DockerImageListComponent', 'selector': 'jc-docker-images'},{'name': 'DockerImageVersionsComponent', 'selector': 'jc-docker-image-versions'},{'name': 'EditContainerComponent', 'selector': 'edit-container'},{'name': 'GitSourcesComponent', 'selector': 'git-source'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'InstallerComponent', 'selector': 'jc-install'},{'name': 'MicroServiceBuilderComponent', 'selector': 'jc-msc-configure'},{'name': 'MicroServiceInstallerComponent', 'selector': 'jc-msc-install'},{'name': 'PodsListComponent', 'selector': 'jc-pods'},{'name': 'RuntimeContainersComponent', 'selector': 'runtime-containers'},{'name': 'RuntimeDeployComponent', 'selector': 'runtime-deploy'},{'name': 'RuntimeDetailsComponent', 'selector': ''},{'name': 'RuntimeK8sComponent', 'selector': 'runtime'},{'name': 'RuntimeScaleComponent', 'selector': 'jc-runtime-scale'},{'name': 'RuntimeStageComponent', 'selector': 'runtime-stage'},{'name': 'RuntimeUpdateComponent', 'selector': ''},{'name': 'SagImageAlerterComponent', 'selector': 'sag-image-alerter'},{'name': 'ServicePropertiesComponent', 'selector': 'k8s-props'},{'name': 'SettingsComponent', 'selector': 'home'},{'name': 'SimpleNameComponent', 'selector': 'name-dialog'},{'name': 'StagingComponent', 'selector': 'staging'},{'name': 'TestCaseComponent', 'selector': 'test-case'},{'name': 'TestDefinitionComponent', 'selector': 'test-definitions'},{'name': 'TestHistoryComponent', 'selector': 'test-history'},{'name': 'TestRunComponent', 'selector': 'test-reun'},{'name': 'UMInstallerComponent', 'selector': 'jc-um-install'},{'name': 'UploadButtonComponent', 'selector': 'file-uploader-button'}];\n    var DIRECTIVES = [{'name': 'BuildImageChooseDirective', 'selector': '[builder]'},{'name': 'CancelCdkDrag', 'selector': '[appCancelCdkDrag]'},{'name': 'NgFileDrop', 'selector': '[ng-file-drop]'},{'name': 'NgFileSelect', 'selector': '[ng-file-select]'},{'name': 'RuntimeActionsDirective', 'selector': '[runtime-actions]'}];\n    var ACTUAL_COMPONENT = {'name': 'UMInstallerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UploadButtonComponent.html":{"url":"components/UploadButtonComponent.html","title":"component - UploadButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UploadButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/elements/upload-button.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                file-uploader-button\n            \n\n\n\n            \n                template\n                 {{title}}\n\t\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                buttonClass\n                            \n                            \n                                    Public\n                                style\n                            \n                            \n                                    Public\n                                uploader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                upload\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alias\n                            \n                            \n                                disabled\n                            \n                            \n                                small\n                            \n                            \n                                title\n                            \n                            \n                                titleColor\n                            \n                            \n                                type\n                            \n                            \n                                uploadURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onCompletion\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/elements/upload-button.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alias\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/elements/upload-button.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/elements/upload-button.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        small\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/elements/upload-button.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/elements/upload-button.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        titleColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/elements/upload-button.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/elements/upload-button.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        uploadURL\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/elements/upload-button.component.ts:22\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onCompletion\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/elements/upload-button.component.ts:43\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/elements/upload-button.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            upload\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upload(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/elements/upload-button.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            buttonClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"mat-raised-button mat-accent\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/elements/upload-button.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            style\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {\"color\": \"white\"}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/elements/upload-button.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uploader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FileUploader\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/elements/upload-button.component.ts:45\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ChangeDetectorRef, \n\t\tEventEmitter, Inject, OnInit, OnChanges, \n\t\tOnDestroy, Input, Output }   \t\t\t\t\tfrom '@angular/core';\n\nimport { FormBuilder, FormGroup, FormControl, \n\t\t AbstractControl, Validators} \t\t\t\t\tfrom '@angular/forms';\n\nimport { FileUploader, FileSelectDirective } \t\t\tfrom 'ng2-file-upload/ng2-file-upload';\n\n@Component({\n  selector: 'file-uploader-button',\n  template: `\n\t {{title}}\n\t\t\n\t\n`\n})\n\nexport class UploadButtonComponent implements OnInit {\n\t\n\t@Input()\n\tpublic uploadURL: string;\n\n\t@Input()\n\tpublic alias: string;\n\n\t@Input()\n\tpublic small: boolean;\n\n\t@Input()\n\tpublic type: string;\n\n\t@Input()\n\tpublic title: string;\n\n\t@Input()\n\tpublic titleColor: string;\n\n\t@Input()\n\tpublic disabled: boolean;\n\n\t@Output()\n\tpublic onCompletion: EventEmitter = new EventEmitter();\n\n  \tpublic uploader: FileUploader;\n\n  \tpublic buttonClass: string = \"mat-raised-button mat-accent\";\n  \tpublic style: any = {\"color\": \"white\"};\n\n\tpublic constructor(private _formBuilder: FormBuilder) {\n\t\t\n\t}\n\n\tpublic ngOnInit() {\n\n\t\tif (this.small) {\n\t\t\tthis.buttonClass = \"small-button\";\n\t\t\tthis.style[\"font-size\"] = \"9px\";\n\t\t}\n\n\t\tif (this.titleColor) {\n\t\t\tthis.style[\"color\"] = this.titleColor;\n\t\t}\n\n\t\tlet url: string = this.uploadURL;\n\n\t\tif (this.type)\n\t\t\turl += \"?type=\" + this.type;\n\n\t\tthis.uploader = new FileUploader({url: url, itemAlias: this.alias});\n\n\t\tthis.uploader.onAfterAddingFile = (file) => { file.withCredentials = false; };\n    \tthis.uploader.onCompleteItem = (item: any, response: any, status: any, headers: any) => {\n        \n        \tif (status == 200) {\n        \t\talert('File uploaded successfully');\n\n        \t\tthis.onCompletion.emit(JSON.parse(response).filename);\n        \t} else {\n        \t\talert('File upload failed');\n        \t}\n     };\n\t}\n\n\tpublic upload(event: any) {\n\n\t\tthis.uploader.uploadAll();\n\t}\n}\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' {{title}}\t'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'about-app'},{'name': 'ActionComponent', 'selector': 'action'},{'name': 'ApiGatewayInstallerComponent', 'selector': 'jc-apigw-install'},{'name': 'ApiMicroGatewayInstallerComponent', 'selector': 'jc-apimg-install'},{'name': 'ApiPortalInstallerComponent', 'selector': 'jc-apipr-installer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildCommandsComponent', 'selector': 'build-commands'},{'name': 'BuildComponent', 'selector': 'build'},{'name': 'BuildExeComponent', 'selector': 'build-exe'},{'name': 'BuildImageComponent', 'selector': 'build-solution'},{'name': 'BuildInstallComponent', 'selector': 'build-install'},{'name': 'BuildPackagesComponent', 'selector': 'build-package'},{'name': 'ContainerComponent', 'selector': 'container'},{'name': 'ContainersComponent', 'selector': 'app-containers'},{'name': 'DeploymentDetailsComponent', 'selector': 'jc-deployment-details'},{'name': 'DeploymentListComponent', 'selector': 'jc-k8s-deployments'},{'name': 'DockerImageChooserComponent', 'selector': 'docker-image-chooser'},{'name': 'DockerImageListComponent', 'selector': 'jc-docker-images'},{'name': 'DockerImageVersionsComponent', 'selector': 'jc-docker-image-versions'},{'name': 'EditContainerComponent', 'selector': 'edit-container'},{'name': 'GitSourcesComponent', 'selector': 'git-source'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'InstallerComponent', 'selector': 'jc-install'},{'name': 'MicroServiceBuilderComponent', 'selector': 'jc-msc-configure'},{'name': 'MicroServiceInstallerComponent', 'selector': 'jc-msc-install'},{'name': 'PodsListComponent', 'selector': 'jc-pods'},{'name': 'RuntimeContainersComponent', 'selector': 'runtime-containers'},{'name': 'RuntimeDeployComponent', 'selector': 'runtime-deploy'},{'name': 'RuntimeDetailsComponent', 'selector': ''},{'name': 'RuntimeK8sComponent', 'selector': 'runtime'},{'name': 'RuntimeScaleComponent', 'selector': 'jc-runtime-scale'},{'name': 'RuntimeStageComponent', 'selector': 'runtime-stage'},{'name': 'RuntimeUpdateComponent', 'selector': ''},{'name': 'SagImageAlerterComponent', 'selector': 'sag-image-alerter'},{'name': 'ServicePropertiesComponent', 'selector': 'k8s-props'},{'name': 'SettingsComponent', 'selector': 'home'},{'name': 'SimpleNameComponent', 'selector': 'name-dialog'},{'name': 'StagingComponent', 'selector': 'staging'},{'name': 'TestCaseComponent', 'selector': 'test-case'},{'name': 'TestDefinitionComponent', 'selector': 'test-definitions'},{'name': 'TestHistoryComponent', 'selector': 'test-history'},{'name': 'TestRunComponent', 'selector': 'test-reun'},{'name': 'UMInstallerComponent', 'selector': 'jc-um-install'},{'name': 'UploadButtonComponent', 'selector': 'file-uploader-button'}];\n    var DIRECTIVES = [{'name': 'BuildImageChooseDirective', 'selector': '[builder]'},{'name': 'CancelCdkDrag', 'selector': '[appCancelCdkDrag]'},{'name': 'NgFileDrop', 'selector': '[ng-file-drop]'},{'name': 'NgFileSelect', 'selector': '[ng-file-select]'},{'name': 'RuntimeActionsDirective', 'selector': '[runtime-actions]'}];\n    var ACTUAL_COMPONENT = {'name': 'UploadButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UploadedFile.html":{"url":"classes/UploadedFile.html","title":"class - UploadedFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UploadedFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/extras/services/ng2-uploader.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                abort\n                            \n                            \n                                done\n                            \n                            \n                                error\n                            \n                            \n                                id\n                            \n                            \n                                originalName\n                            \n                            \n                                progress\n                            \n                            \n                                response\n                            \n                            \n                                size\n                            \n                            \n                                status\n                            \n                            \n                                statusText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onFinished\n                            \n                            \n                                setAbort\n                            \n                            \n                                setError\n                            \n                            \n                                setProgres\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, originalName: string, size: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/extras/services/ng2-uploader.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        originalName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        size\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            abort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/extras/services/ng2-uploader.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            done\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/extras/services/ng2-uploader.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/extras/services/ng2-uploader.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/extras/services/ng2-uploader.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            originalName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/extras/services/ng2-uploader.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            progress\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/extras/services/ng2-uploader.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            response\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/extras/services/ng2-uploader.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/extras/services/ng2-uploader.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/extras/services/ng2-uploader.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            statusText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/extras/services/ng2-uploader.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onFinished\n                        \n                        \n                    \n                \n            \n            \n                \nonFinished(status: number, statusText: string, response: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/extras/services/ng2-uploader.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    statusText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setAbort\n                        \n                        \n                    \n                \n            \n            \n                \nsetAbort()\n                \n            \n\n\n            \n                \n                    Defined in src/app/extras/services/ng2-uploader.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setError\n                        \n                        \n                    \n                \n            \n            \n                \nsetError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/extras/services/ng2-uploader.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setProgres\n                        \n                        \n                    \n                \n            \n            \n                \nsetProgres(progress: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/extras/services/ng2-uploader.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    progress\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable, EventEmitter} from '@angular/core';\n\nexport class UploadedFile {\n  id: string;\n  status: number;\n  statusText: string;\n  progress: Object;\n  originalName: string;\n  size: number;\n  response: string;\n  done: boolean;\n  error: boolean;\n  abort: boolean;\n\n  constructor(id: string, originalName: string, size: number) {\n    this.id = id;\n    this.originalName = originalName;\n    this.size = size;\n    this.progress = {\n      loaded: 0,\n      total: 0,\n      percent: 0\n    };\n    this.done = false;\n    this.error = false;\n    this.abort = false;\n  }\n\n  setProgres(progress: Object): void {\n    this.progress = progress;\n  }\n\n  setError(): void {\n    this.error = true;\n    this.done = true;\n  }\n\n  setAbort(): void {\n    this.abort = true;\n    this.done = true;\n  }\n\n  onFinished(status: number, statusText: string, response: string): void {\n    this.status = status;\n    this.statusText = statusText;\n    this.response = response;\n    this.done = true;\n  }\n}\n\n@Injectable()\nexport class Ng2Uploader {\n  url: string;\n  cors: boolean = false;\n  withCredentials: boolean = false;\n  multiple: boolean = false;\n  maxUploads: number = 3;\n  allowedExtensions: string[] = [];\n  maxSize: boolean = false;\n  data: Object = {};\n  noParams: boolean = true;\n  autoUpload: boolean = true;\n  multipart: boolean = true;\n  method: string = 'POST';\n  debug: boolean = false;\n  customHeaders: any = {};\n  encodeHeaders: boolean = true;\n  authTokenPrefix: string = \"Bearer\";\n  authToken: string = undefined;\n  fieldName: string = \"file\";\n\n  _queue: any[] = [];\n  _emitter: EventEmitter = new EventEmitter(true);\n\n  setOptions(options: any): void {\n\n    this.url = options.url != null ? options.url : this.url;\n    this.cors = options.cors != null ? options.cors : this.cors;\n    this.withCredentials = options.withCredentials != null ? options.withCredentials : this.withCredentials;\n    this.multiple = options.multiple != null ? options.multiple : this.multiple;\n    this.maxUploads = options.maxUploads != null ? options.maxUploads : this.maxUploads;\n    this.allowedExtensions = options.allowedExtensions != null ? options.allowedExtensions : this.allowedExtensions;\n    this.maxSize = options.maxSize != null ? options.maxSize : this.maxSize;\n    this.data = options.data != null ? options.data : this.data;\n    this.noParams = options.noParams != null ? options.noParams : this.noParams;\n    this.autoUpload = options.autoUpload != null ? options.autoUpload : this.autoUpload;\n    this.multipart = options.multipart != null ? options.multipart : this.multipart;\n    this.method = options.method != null ? options.method : this.method;\n    this.debug = options.debug != null ? options.debug : this.debug;\n    this.customHeaders = options.customHeaders != null ? options.customHeaders : this.customHeaders;\n    this.encodeHeaders = options.encodeHeaders != null ? options.encodeHeaders : this.encodeHeaders;\n    this.authTokenPrefix = options.authTokenPrefix != null ? options.authTokenPrefix : this.authTokenPrefix;\n    this.authToken = options.authToken != null ? options.authToken : this.authToken;\n    this.fieldName = options.fieldName != null ? options.fieldName : this.fieldName;\n\n    if (!this.multiple) {\n      this.maxUploads = 1;\n    }\n  }\n\n  uploadFilesInQueue(): void {\n    let newFiles = this._queue.filter((f) => { return !f.uploading; });\n    newFiles.forEach((f) => {\n      this.uploadFile(f);\n    });\n  };\n\n  uploadFile(file: any): void {\n    let xhr = new XMLHttpRequest();\n    let form = new FormData();\n    form.append(this.fieldName, file, file.name);\n\n    let uploadingFile = new UploadedFile(\n        this.generateRandomIndex(),\n        file.name,\n        file.size\n    );\n\n    let queueIndex = this._queue.indexOf(file);\n\n    xhr.upload.onprogress = (e: ProgressEvent) => {\n      if (e.lengthComputable) {\n        let percent = Math.round(e.loaded / e.total * 100);\n        uploadingFile.setProgres({\n          total: e.total,\n          loaded: e.loaded,\n          percent: percent\n        });\n\n        this._emitter.emit(uploadingFile);\n      }\n    };\n\n    xhr.upload.onabort = (e: Event) => {\n      uploadingFile.setAbort();\n      this._emitter.emit(uploadingFile);\n    };\n\n    xhr.upload.onerror = (e: Event) => {\n      uploadingFile.setError();\n      this._emitter.emit(uploadingFile);\n    };\n\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === XMLHttpRequest.DONE) {\n        uploadingFile.onFinished(\n            xhr.status,\n            xhr.statusText,\n            xhr.response\n        );\n        this.removeFileFromQueue(queueIndex);\n        this._emitter.emit(uploadingFile);\n      }\n    };\n\n    xhr.open(this.method, this.url, true);\n    xhr.withCredentials = this.withCredentials;\n\n    if (this.customHeaders) {\n      Object.keys(this.customHeaders).forEach((key) => {\n        xhr.setRequestHeader(key, this.customHeaders[key]);\n      });\n    }\n\n    if (this.authToken) {\n      xhr.setRequestHeader(\"Authorization\", `${this.authTokenPrefix} ${this.authToken}`);\n    }\n\n    xhr.send(form);\n  }\n\n  addFilesToQueue(files: FileList): void {\n    let index: number, file: File;\n\n    for (index = 0; index  { return f === file; });\n    return fileInQueue.length ? true : false;\n  }\n\n  isFile(file: any): boolean {\n    return file !== null && (file instanceof Blob || (file.name && file.size));\n  }\n\n  log(msg: any): void {\n    if (!this.debug) {\n      return;\n    }\n  }\n\n  generateRandomIndex(): string {\n    return Math.random().toString(36).substring(7);\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Values.html":{"url":"classes/Values.html","title":"class - Values","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Values\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/settings.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dockerEmail\n                            \n                            \n                                    Public\n                                dockerHost\n                            \n                            \n                                    Public\n                                dockerPassword\n                            \n                            \n                                    Public\n                                dockerUserId\n                            \n                            \n                                    Public\n                                empowerEncryptedPassword\n                            \n                            \n                                    Public\n                                empowerPassword\n                            \n                            \n                                    Public\n                                empowerUserId\n                            \n                            \n                                    Public\n                                gitAPIUrl\n                            \n                            \n                                    Public\n                                gitIsPACPassword\n                            \n                            \n                                    Public\n                                gitName\n                            \n                            \n                                    Public\n                                gitPassword\n                            \n                            \n                                    Public\n                                gitRepos\n                            \n                            \n                                    Public\n                                gitType\n                            \n                            \n                                    Public\n                                gitUri\n                            \n                            \n                                    Public\n                                gitUser\n                            \n                            \n                                    Public\n                                imagePrefix\n                            \n                            \n                                    Public\n                                k8sNamespace\n                            \n                            \n                                    Public\n                                k8sToken\n                            \n                            \n                                    Public\n                                k8sUrl\n                            \n                            \n                                    Public\n                                lastViewedPage\n                            \n                            \n                                    Public\n                                lastViewedPageArg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                repoForName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dockerEmail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dockerHost\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dockerPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dockerUserId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            empowerEncryptedPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            empowerPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            empowerUserId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gitAPIUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"https://api.github.com\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gitIsPACPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"true\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gitName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gitPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gitRepos\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RepoSettings[]\n\n                        \n                    \n                    \n                        \n                            Default value : [new RepoSettings(\"wm\", \"/packages\", \"/config\")]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gitType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GitType\n\n                        \n                    \n                    \n                        \n                            Default value : GitType.github\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gitUri\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"https://github.com/\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gitUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            imagePrefix\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            k8sNamespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            k8sToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            k8sUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"https://localhost:6443\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lastViewedPage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lastViewedPageArg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings.ts:34\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            repoForName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    repoForName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         RepoSettings\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } \t           \t \t\t\t\t\tfrom '@angular/core';\nimport { Router }\t\t\t\t\t   \t\t\t\t\tfrom '@angular/router';\nimport { HttpClient, HttpHeaders, HttpParams }  \t\tfrom '@angular/common/http';\nimport { Observable, of }               \t\t      \tfrom 'rxjs';\nimport { switchMap, map, catchError, share } \t\t\tfrom 'rxjs/operators';\n\nexport class RepoSettings {\n\n\tconstructor(public name: string, public packages: string, public configuration: string) {\n\n\t}\n}\n\nexport enum GitType {\n  github,\n  gitlab\n}\n\nexport class Values {\n\n\tpublic gitUri: string = \"https://github.com/\";\n\tpublic gitAPIUrl: string = \"https://api.github.com\";\n\tpublic gitType: GitType = GitType.github;\n\tpublic gitName: string;\n\tpublic gitUser: string //= \"johnpcarter\";\n\tpublic gitIsPACPassword: string = \"true\";\n\tpublic gitPassword: string// = \"jaghuc-cupWeq-hohve3\";\n\tpublic gitRepos: RepoSettings[] = [new RepoSettings(\"wm\", \"/packages\", \"/config\")];\n\n\tpublic dockerHost: string = null;\n\tpublic imagePrefix: string// = \"jc\";\n\n\tpublic lastViewedPage: string = null;\n\tpublic lastViewedPageArg: string = null;\n\n\tpublic k8sUrl: string = \"https://localhost:6443\"\n\tpublic k8sNamespace: string = null;\n\tpublic k8sToken: string = null;\n\n\tpublic dockerEmail: string = null;\n\tpublic dockerUserId: string = null;\n\tpublic dockerPassword: string = null;\n\n\tpublic empowerUserId: string = null;\n\tpublic empowerPassword: string = null;\n\tpublic empowerEncryptedPassword: string = null;\n\n\tpublic repoForName(name: string): RepoSettings {\n\n\t\tlet found: RepoSettings = null;\n\n\t\tthis.gitRepos.forEach((r) => {\n\n\t\t\tif (r.name == name) {\n\t\t\t\tfound = r;\n\t\t\t}\n\t\t});\n\n\t\treturn found;\n\t}\n}\n\n@Injectable()\nexport class Settings {\n\n\t// Use if running in Dockerised Integration Server\n\tpublic static SERVER_API = \"\";\n\tpublic static DEV_SERVER_API = \"http://host.docker.internal:5555\";\n\n\t// Use if running in separate container on local machine\n  // public static SERVER_API = \"http://localhost:5555\";\n\t// public static DEV_SERVER_API = \"http://localhost:5555\";\n\n\tpublic static WS_SERVER = \"ws://localhost:9191\";\n\n\t// runtime prefs\n\n\tpublic currentRuntime: string;\n \tpublic gitExpander: boolean;\n  \tpublic dockerExpander: boolean;\n  \tpublic gatewayExpander: boolean;\n\n  \t// server managed settings\n\n  \tprivate _values: Values;\n  \tprivate _valuesLoaded: boolean;\n\n\tprivate static CONFIG: string = Settings.SERVER_API + \"/rad/jc.devops:api/configuration/user\";\n\n\tpublic constructor(private _http: HttpClient) {\n\n\t\tthis._values = new Values();\n\n\t\tthis.values();\n\t}\n\n\tpublic values(): Observable {\n\n\t\tif (this._valuesLoaded) {\n\n\t\t\tconsole.log(\"getting preloaded settings\");\n\n\t\t\treturn of(this._values);\n\t\t}\n\t\telse {\n\t\t\tconsole.log(\"restoring settings\");\n\n\t\t\treturn this._restore().pipe(share());\n\t\t}\n\t}\n\n\tpublic setCurrentPage(page: string, arg?: string) {\n\n\t\tif (this._values.lastViewedPage != page) {\n\t\t\tthis._values.lastViewedPage = page;\n\t\t\tthis._values.lastViewedPageArg = arg;\n\t\t\tthis.saveChanges();\n\t\t}\n\t}\n\n\tpublic setCurrentNamespace(namespace: string) {\n\n\t\tif (this._values.k8sNamespace != namespace) {\n\t\t\tthis._values.k8sNamespace = namespace;\n\t\t\tthis.saveChanges();\n\t\t}\n\t}\n\n\tpublic gotoLastViewedPage(router: Router) {\n\n\t\tif (this._values.lastViewedPage) {\n\n\t\t\tif (this._values.lastViewedPageArg)\n   \t\t\t\trouter.navigate([this._values.lastViewedPage, this._values.lastViewedPageArg]);\n   \t\t\telse\n   \t\t\t\trouter.navigate([this._values.lastViewedPage]);\n\n   \t\t\tthis._values.lastViewedPage = null;\n\t\t}\n\t}\n\n\tpublic _restore(): Observable {\n\n\t\tlet url: string = Settings.CONFIG;\n    \tlet headers = new HttpHeaders()\n                    .append('Content-Type', 'application/json')\n                    .append('Accept', 'application/json')\n                    .append('Cache-Control', 'no-cache')\n                    .append('Cache-Control', 'no-store')\n                    .append('Pragma','no-cache')\n                    .append('Expires', '0')\n                    .append('Accept', 'application/json');\n\n        let options: any = { headers };\n\n        return this._http.get(url, options).pipe(map((response) => {\n\n        \treturn this._cacheValues(( response).User);\n        }));\n\t}\n\n\tpublic saveChanges() {\n\n\t\tlet url: string = Settings.CONFIG;\n    \tlet headers = new HttpHeaders()\n                    .append('Content-Type', 'application/json')\n                    .append('Accept', 'application/json')\n                    .append('Cache-Control', 'no-cache')\n                    .append('Cache-Control', 'no-store')\n                    .append('Pragma','no-cache')\n                    .append('Expires', '0')\n                    .append('Accept', 'application/json');\n\n        let options: any = { headers };\n\n        let body: string = JSON.stringify(this._values);\n\n        return this._http.post(url, this._values, options).subscribe((response) => {\n\n        \tconsole.log(\"response is \" + response);\n        },\n        error => {return new Values()});\n\t}\n\n\tprivate _cacheValues(data: any): Values {\n\n\t\tif (data) {\n\n\t\t\tif (data.gitUri) {\n\t\t\t\tthis._values.gitUri = data.gitUri;\n\n\t\t\t\tthis._values.gitType = data.gitType == 0 ? GitType.github : GitType.gitlab;\n\n\t\t\t\tif (this._values.gitType == GitType.github) {\n\t\t\t\t\tlet protoMarker: number = data.gitUri.indexOf(\"//\");\n\t\t\t\t\tthis._values.gitAPIUrl = data.gitUri.substring(0, protoMarker) + \"//api.\" + data.gitUri.substring(protoMarker + 2);\n\t\t\t\t} else {\n\t\t\t\t\tthis._values.gitAPIUrl = this._values.gitUri;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//if (data.gitAPIUrl)\n\t\t\t//\tthis._values.gitAPIUrl = data.gitAPIUrl;\n\n\t\t\tif (data.gitUser)\n\t\t\t\tthis._values.gitUser = data.gitUser;\n\n\t\t\tif (data.gitName)\n\t\t\t\tthis._values.gitName = data.gitName;\n\n\t\t\tif (data.gitPassword)\n\t\t\t\tthis._values.gitPassword = data.gitPassword;\n\n\t\t\tif (data.gitType)\n\t\t\t  this._values.gitType = data.gitType == 0 ? GitType.github : GitType.gitlab;\n\n\t\t\tif (data.gitIsPACPassword)\n\t\t\t\tthis._values.gitIsPACPassword = data.gitIsPACPassword;\n\n\t\t\tif (data.gitRepos) {\n\n\t\t\t\tthis._values.gitRepos = [];\n\n\t\t\t\tdata.gitRepos.forEach((r) => {\n\t\t\t\t\tthis._values.gitRepos.push(new RepoSettings(r.name, r.packages, r.configuration));\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (data.dockerHost)\n\t\t\t\tthis._values.dockerHost = data.dockerHost;\n\n\t\t\tif (data.imagePrefix)\n\t\t\t\tthis._values.imagePrefix = data.imagePrefix;\n\n\t\t\tif (data.k8sUrl)\n\t\t\t\tthis._values.k8sUrl = data.k8sUrl;\n\n\t\t\tif (data.k8sNamespace)\n\t\t\t\tthis._values.k8sNamespace = data.k8sNamespace;\n\n\t\t\tif (data.k8sToken)\n\t\t\t\tthis._values.k8sToken = data.k8sToken;\n\n\t\t\tif (data.dockerEmail)\n\t\t\t\tthis._values.dockerEmail = data.dockerEmail;\n\n\t\t\tif (data.dockerUserId)\n\t\t\t\tthis._values.dockerUserId = data.dockerUserId;\n\n\t\t\tif (data.dockerPassword)\n\t\t\t\tthis._values.dockerPassword = data.dockerPassword;\n\n\t\t\tif (data.empowerUserId)\n\t\t\t\tthis._values.empowerUserId = data.empowerUserId;\n\n\t\t\tif (data.empowerPassword)\n\t\t\t\tthis._values.empowerPassword = data.empowerPassword;\n\n\t\t\tif (data.empowerEncryptedPassword)\n\t\t\t\tthis._values.empowerEncryptedPassword = data.empowerEncryptedPassword;\n\n\t\t\tif (data.lastViewedPage)\n\t\t\t\tthis._values.lastViewedPage = data.lastViewedPage;\n\n\t\t\tif (data.lastViewedPageArg)\n\t\t\t\tthis._values.lastViewedPageArg = data.lastViewedPageArg;\n\t\t}\n\n\t\tconsole.log(\"loaded settings: \" + this._values.dockerHost);\n\n\t\tthis._valuesLoaded = true;\n\n\t\treturn this._values;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WebSocketService.html":{"url":"classes/WebSocketService.html","title":"class - WebSocketService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WebSocketService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/websocket.service.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            OnDestroy\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                __webSocketService\n                            \n                            \n                                    Private\n                                _arg\n                            \n                            \n                                    Private\n                                _ws\n                            \n                            \n                                    Public\n                                path\n                            \n                            \n                                    Static\n                                URL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _send\n                            \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Static\n                                closeDefault\n                            \n                            \n                                    Static\n                                default\n                            \n                            \n                                    Public\n                                isActive\n                            \n                            \n                                    Public\n                                listen\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(path: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/websocket.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            __webSocketService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WebSocketService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/websocket.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _arg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/websocket.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _ws\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     WebSocket\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/websocket.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/websocket.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : Settings.WS_SERVER\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/websocket.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _send\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _send(message: string, retries: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/websocket.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    retries\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            close\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    close()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/websocket.service.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            closeDefault\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    closeDefault()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/websocket.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            default\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    default(path: string, arg?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/websocket.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    arg\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         WebSocketService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isActive\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isActive()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/websocket.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            listen\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listen(completionObserver?: Observable)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/websocket.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    completionObserver\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/websocket.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            send\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    send(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/websocket.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { OnDestroy }                            from '@angular/core'\nimport { Observer, Observable, of, Subject }    from 'rxjs';\n\nimport { Settings }                             from '../settings';\n\nexport class WebSocketService implements OnDestroy{\n\n  public static URL: string = Settings.WS_SERVER;\n\n  private static __webSocketService: WebSocketService;\n\n  public path: string;\n  private _arg: string;\n  private _ws: WebSocket;\n\n  constructor(path: string) {\n\n    this.path = path;\n\n    if (!path.startsWith(\"/\"))\n      path = \"/\" + path;\n\n    let url: string = WebSocketService.URL + path;\n\n    console.log(\"connecting to web-socket at: \" + url);\n\n    this._ws = new WebSocket(url);\n  }\n\n  public ngOnDestroy() {\n\n    if (this._ws != null)\n      this._ws.close();\n  }\n\n  public static default(path: string, arg?: string): WebSocketService {\n\n    if (!this.__webSocketService || !this.__webSocketService.isActive() || this.__webSocketService.path != path || this.__webSocketService._arg != arg) {\n\n      if (this.__webSocketService && this.__webSocketService.isActive())\n        this.__webSocketService.close();\n\n      this.__webSocketService = new WebSocketService(path);\n    }\n\n    return this.__webSocketService;\n  }\n\n  public static closeDefault() {\n\n    if (this.__webSocketService && this.__webSocketService.isActive())\n        this.__webSocketService.close();\n  }\n\n  public isActive(): boolean {\n\n    if (this._ws) {\n      console.log(\"ws state is \" + this._ws.readyState + \" == \" + WebSocket.OPEN + \" or \" + WebSocket.CONNECTING + \" or \" + WebSocket.CLOSING);\n\n      return this._ws.readyState == WebSocket.OPEN;\n    } else {\n      return false;\n    }\n  }\n\n  public send(message: string): Observable {\n\n     return this._send(message, 0);\n  }\n\n  private _send(message: string, retries: number): Observable {\n\n      if (this.isActive()) {\n        this._ws.send(message)\n        return of(true);\n      } else if (retries ) => {\n\n          setTimeout(() => {\n            ref._send(message, retries++);\n            observer.next(true);\n            observer.complete();\n          }, 200);\n        });\n      } else {\n        return of(false);\n      }\n  }\n\n  public listen(completionObserver?: Observable): Observable {\n\n    return Observable.create((observer: Observer) => {\n\n      this._ws.onmessage = function (evt) {\n        observer.next(evt.data);\n      }\n\n      this._ws.onclose = function() {\n        observer.next(\"Log closed by server\");\n        observer.next(null);\n        observer.complete();\n      }\n\n      this._ws.onerror = function(err) {\n        observer.next(err);\n        observer.next(null);\n        observer.error(err);\n      }\n\n      if (completionObserver) {\n\n        completionObserver.subscribe((info) => {\n\n          observer.next(info);\n          observer.next(null);\n\n          setTimeout(() => {\n            observer.complete();\n          }, 500);\n          }, (error) => {\n            observer.next(error.message);\n            observer.next(null);\n\n            setTimeout(() => {\n              observer.complete();\n            }, 500);\n          });\n       }\n    });\n  }\n\n  public close() {\n    this._ws.close();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WmPackageInfo.html":{"url":"classes/WmPackageInfo.html","title":"class - WmPackageInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WmPackageInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/wm-package-info.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apis\n                            \n                            \n                                    Public\n                                build\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                requires\n                            \n                            \n                                    Public\n                                services\n                            \n                            \n                                    Public\n                                shutdown\n                            \n                            \n                                    Public\n                                startup\n                            \n                            \n                                    Public\n                                testStatus\n                            \n                            \n                                    Public\n                                version\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                make\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/wm-package-info.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apis\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     APIDefinition[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/wm-package-info.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            build\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/wm-package-info.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/wm-package-info.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/wm-package-info.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            requires\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WmPackageInfo[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/wm-package-info.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            services\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/wm-package-info.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            shutdown\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/wm-package-info.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            startup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/wm-package-info.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            testStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TestStatus\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/wm-package-info.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/wm-package-info.ts:37\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            make\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    make(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/wm-package-info.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         WmPackageInfo\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TestStatus } \t\t\t\t\t\t\tfrom '../models/docker-image';\n\nexport class APIDefinition {\n\n\tpublic package: string;\n\tpublic name: string;\n\tpublic swaggerEndPoint: string;\n\tpublic endPoint: string;\n\tpublic deployment: string;\n\t\n\tpublic static make(data: any) {\n\n\t\tlet api = new APIDefinition();\n\t\tapi.package = data.package;\n\t\tapi.name = data.name;\n\t\tapi.swaggerEndPoint = data.swaggerEndPoint;\n\t\tapi.endPoint = data.endPoint;\n\n\t\treturn api;\n\t}\n\n\tpublic static makeArray(array: any): APIDefinition[] {\n\n    let apis: APIDefinition[] = [];\n\n    array.foreach((p) => {\n      apis.push(APIDefinition. make(p));\n    });\n\n    return apis;\n  }\n}\n\nexport class WmPackageInfo {\n\n\tpublic name: string;\n\tpublic version: number;\n\tpublic build: number;\n\tpublic description: string;\n\tpublic requires: WmPackageInfo[];\n\tpublic startup: string;\n\tpublic shutdown: string;\n\tpublic testStatus: TestStatus;\n\tpublic services: string[];\n\tpublic apis: APIDefinition[];\n\n\tconstructor(name: string) {\n\t\tthis.name = name;\n\t}\n\n\tpublic static make(data: any): WmPackageInfo {\n\n\t\tlet pck: WmPackageInfo = new WmPackageInfo(data.name);\n\n\t\tpck.apis = [];\n\t\tpck.version = data.version;\n\t\tpck.build = data.version;\n\t\tpck.description = data.description;\n\t\tpck.startup = data.startup;\n\t\tpck.shutdown = data.shutdown;\n\n\t\tif (data.testStatus == \"success\")\n\t\t\tpck.testStatus = TestStatus.passed;\n\t\telse if (data.testStatus == \"failed\")\n\t\t\tpck.testStatus = TestStatus.failed;\n\t\telse if (data.testStatus == \"running\")\n\t\t\tpck.testStatus = TestStatus.running;\n\t\telse if (data.testStatus == \"todo\")\n\t\t\tpck.testStatus = TestStatus.todo;\n\t\telse\n\t\t\tpck.testStatus = TestStatus.none;\n\n\t\tpck.services = data.services;\n\t\t\n\t\tif (data.apis) {\n\t\t\tdata.apis.forEach((a) => {\n\n\t\t\t\tlet api: APIDefinition = new APIDefinition();\n\t\t\t\tapi.package = pck.name;\n\t\t\t\tapi.name = a.name;\n\t\t\t\tapi.swaggerEndPoint = a.swaggerEndPoint;\n\t\t\t\tapi.endPoint = a.endPoint;\n\t\t\t\tpck.apis.push(api);\n\t\t\t});\n\t\t}\n\n\t\tpck.requires = [];\n\n\t\tif (data.requires) {\n\n\t\t\tif (data.requires instanceof String)  {\n\n\t\t\t\tlet array: string[] = data.required.split(\",\");\n\n\t\t\t\tarray.forEach((r) => {\n\t\t\t\t\tpck.requires.push(new WmPackageInfo(r));\n\n\t\t\t\t});\n\t\t\t} else {\n\n\t\t\t\tdata.requires.forEach((r) => {\n\t\t\t\t\tpck.requires.push(WmPackageInfo.make(r));\n\n\t\t\t\t});\n\n\t\t\t}\n\t\t}\n\n\t\treturn pck;\n\t}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/31)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            _sideNavMenuSetup\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/about.component.ts\n            \n            component\n            AboutComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/action.component.ts\n            \n            component\n            ActionComponent\n            \n                0 %\n                (0/29)\n            \n        \n        \n            \n                \n                src/app/components/build-commands.component.ts\n            \n            component\n            BuildCommandsComponent\n            \n                0 %\n                (0/34)\n            \n        \n        \n            \n                \n                src/app/components/build-exe.component.ts\n            \n            component\n            BuildExeComponent\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/app/components/build-image.component.ts\n            \n            component\n            BuildImageComponent\n            \n                0 %\n                (0/84)\n            \n        \n        \n            \n                \n                src/app/components/build-image.component.ts\n            \n            component\n            SagImageAlerterComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/build-install.component.ts\n            \n            component\n            BuildInstallComponent\n            \n                0 %\n                (0/94)\n            \n        \n        \n            \n                \n                src/app/components/build-packages.component.ts\n            \n            component\n            BuildPackagesComponent\n            \n                3 %\n                (2/55)\n            \n        \n        \n            \n                \n                src/app/components/build.component.ts\n            \n            component\n            BuildComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/components/container.component.ts\n            \n            component\n            ContainerComponent\n            \n                0 %\n                (0/70)\n            \n        \n        \n            \n                \n                src/app/components/containers.component.ts\n            \n            component\n            ContainersComponent\n            \n                0 %\n                (0/29)\n            \n        \n        \n            \n                \n                src/app/components/elements/build-image-choose.directive.ts\n            \n            directive\n            BuildImageChooseDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/elements/build-image-choose.directive.ts\n            \n            class\n            BuilderProperties\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/elements/build-image-choose.directive.ts\n            \n            interface\n            BuilderComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/elements/build-image-choose.directive.ts\n            \n            interface\n            PropertiesChangedOwner\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/elements/docker-image-chooser.component.ts\n            \n            component\n            DockerImageChooserComponent\n            \n                0 %\n                (0/39)\n            \n        \n        \n            \n                \n                src/app/components/elements/docker-image-versions.component.ts\n            \n            component\n            DockerImageVersionsComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/components/elements/docker-images-list.component.ts\n            \n            component\n            DockerImageListComponent\n            \n                0 %\n                (0/49)\n            \n        \n        \n            \n                \n                src/app/components/elements/docker-images-list.component.ts\n            \n            class\n            Action\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/elements/git-sources.component.ts\n            \n            component\n            GitSourcesComponent\n            \n                4 %\n                (2/45)\n            \n        \n        \n            \n                \n                src/app/components/elements/git-sources.component.ts\n            \n            class\n            GitSelectionModel\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/elements/git-sources.component.ts\n            \n            class\n            SourceWrapper\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/elements/simple-name.component.ts\n            \n            component\n            SimpleNameComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/elements/upload-button.component.ts\n            \n            component\n            UploadButtonComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/components/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/components/k8s/deployment-details.component.ts\n            \n            component\n            DeploymentDetailsComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/k8s/deployment-list.component.ts\n            \n            component\n            DeploymentListComponent\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/app/components/k8s/pods-list.component.ts\n            \n            component\n            PodsListComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/components/k8s/pods-list.component.ts\n            \n            variable\n            PODS_LIST_REFRESH_INTERVAL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/k8s/runtime-actions.directive.ts\n            \n            directive\n            RuntimeActionsDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/k8s/runtime-actions.directive.ts\n            \n            interface\n            ActionsComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/k8s/runtime-details.component.ts\n            \n            component\n            RuntimeDetailsComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/components/k8s/runtime-k8s.component.ts\n            \n            component\n            RuntimeK8sComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/k8s/runtime-scale.component.ts\n            \n            component\n            RuntimeScaleComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/k8s/runtime-update.component.ts\n            \n            component\n            RuntimeUpdateComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/k8s/service-properties.component.ts\n            \n            component\n            ServicePropertiesComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/components/plugins/apigw-installer.component.ts\n            \n            component\n            ApiGatewayInstallerComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/components/plugins/apimg-installer.component.ts\n            \n            component\n            ApiMicroGatewayInstallerComponent\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                src/app/components/plugins/apipr-installer.component.ts\n            \n            component\n            ApiPortalInstallerComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/components/plugins/installer.component.ts\n            \n            component\n            InstallerComponent\n            \n                0 %\n                (0/40)\n            \n        \n        \n            \n                \n                src/app/components/plugins/micro-service-builder.component.ts\n            \n            component\n            MicroServiceBuilderComponent\n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                src/app/components/plugins/micro-service-installer.component.ts\n            \n            component\n            MicroServiceInstallerComponent\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/components/plugins/um-installer.component.ts\n            \n            component\n            UMInstallerComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/runtime-containers.component.ts\n            \n            component\n            RuntimeContainersComponent\n            \n                0 %\n                (0/51)\n            \n        \n        \n            \n                \n                src/app/components/runtime-deploy.component.ts\n            \n            component\n            RuntimeDeployComponent\n            \n                1 %\n                (2/118)\n            \n        \n        \n            \n                \n                src/app/components/runtime-stage.component.ts\n            \n            component\n            RuntimeStageComponent\n            \n                0 %\n                (0/55)\n            \n        \n        \n            \n                \n                src/app/components/settings.component.ts\n            \n            component\n            SettingsComponent\n            \n                0 %\n                (0/41)\n            \n        \n        \n            \n                \n                src/app/components/staging.component.ts\n            \n            component\n            EditContainerComponent\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/components/staging.component.ts\n            \n            component\n            StagingComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/components/test-case.component.ts\n            \n            component\n            TestCaseComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/components/test-definition.component.ts\n            \n            component\n            TestDefinitionComponent\n            \n                0 %\n                (0/50)\n            \n        \n        \n            \n                \n                src/app/components/test-definition.component.ts\n            \n            class\n            ServiceInfo\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/test-history.component.ts\n            \n            component\n            TestHistoryComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/test-run.component.ts\n            \n            component\n            TestRunComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/extras/directives/CancelCdkDrag.directive.ts\n            \n            directive\n            CancelCdkDrag\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/extras/directives/ng-file-drop.ts\n            \n            directive\n            NgFileDrop\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/extras/directives/ng-file-select.ts\n            \n            directive\n            NgFileSelect\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/extras/ng2-uploader.ts\n            \n            variable\n            UPLOAD_DIRECTIVES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/extras/services/ng2-uploader.ts\n            \n            class\n            UploadedFile\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/extras/services/ng2-uploader.ts\n            \n            injectable\n            Ng2Uploader\n            \n                0 %\n                (0/32)\n            \n        \n        \n            \n                \n                src/app/models/build-image.ts\n            \n            class\n            BuildImage\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/docker-container.ts\n            \n            class\n            DockerContainer\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/models/docker-image.ts\n            \n            class\n            DockerImage\n            \n                0 %\n                (0/49)\n            \n        \n        \n            \n                \n                src/app/models/git-source.ts\n            \n            class\n            Source\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/models/k8s-deployment-definition.ts\n            \n            class\n            K8sDeploymentDefinition\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/models/k8s-deployment.ts\n            \n            class\n            K8sDeployment\n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                src/app/models/k8s-pod.ts\n            \n            class\n            K8sPod\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/models/payload.ts\n            \n            class\n            Payload\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/models/project.ts\n            \n            class\n            Action\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/models/project.ts\n            \n            class\n            Arg\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/models/project.ts\n            \n            class\n            ArgDisplayType\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/models/project.ts\n            \n            class\n            Authentication\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/models/project.ts\n            \n            class\n            BuildCommand\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/models/project.ts\n            \n            class\n            Builder\n            \n                0 %\n                (0/29)\n            \n        \n        \n            \n                \n                src/app/models/project.ts\n            \n            class\n            Container\n            \n                0 %\n                (0/32)\n            \n        \n        \n            \n                \n                src/app/models/project.ts\n            \n            class\n            Deployment\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/models/project.ts\n            \n            class\n            DeploymentSet\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/models/project.ts\n            \n            class\n            DockerBuild\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/models/project.ts\n            \n            class\n            Installer\n            \n                0 %\n                (0/29)\n            \n        \n        \n            \n                \n                src/app/models/project.ts\n            \n            class\n            Port\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/models/project.ts\n            \n            class\n            Probe\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/project.ts\n            \n            class\n            Project\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/models/project.ts\n            \n            class\n            RunSet\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/models/project.ts\n            \n            class\n            Server\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/project.ts\n            \n            class\n            Stage\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/models/project.ts\n            \n            class\n            Test\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/project.ts\n            \n            interface\n            BuildParams\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/models/project.ts\n            \n            function\n            parserReviver\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/models/project.ts\n            \n            function\n            stringifyReplacer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/models/test-case.ts\n            \n            class\n            TestCase\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/models/test-suite.ts\n            \n            class\n            TestSuite\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/models/wm-package-info.ts\n            \n            class\n            APIDefinition\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/models/wm-package-info.ts\n            \n            class\n            WmPackageInfo\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/services/api-gateway.service.ts\n            \n            class\n            API\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/api-gateway.service.ts\n            \n            class\n            APIPolicy\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/api-gateway.service.ts\n            \n            class\n            Scope\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/api-gateway.service.ts\n            \n            class\n            SearchObj\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/api-gateway.service.ts\n            \n            injectable\n            APIGatewayService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/configuration.service.ts\n            \n            injectable\n            ConfigurationService\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/app/services/docker.service.ts\n            \n            class\n            Result\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/docker.service.ts\n            \n            injectable\n            DockerService\n            \n                0 %\n                (0/49)\n            \n        \n        \n            \n                \n                src/app/services/docker.service.ts\n            \n            function\n            stringifyReplacer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/git-source-control.service.ts\n            \n            class\n            CommitInfo\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/git-source-control.service.ts\n            \n            class\n            FileInfo\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/git-source-control.service.ts\n            \n            class\n            GitRepo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/git-source-control.service.ts\n            \n            injectable\n            GitSourceService\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                src/app/services/k8s.service.ts\n            \n            injectable\n            K8sService\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/services/packages.service.ts\n            \n            class\n            DependencyWrapper\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/packages.service.ts\n            \n            class\n            Sources\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/packages.service.ts\n            \n            injectable\n            PackagesService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/resources.service.ts\n            \n            injectable\n            ResourceService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/test-config.service.ts\n            \n            injectable\n            TestConfigService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/test-trace.service.ts\n            \n            injectable\n            TestTraceService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/websocket.service.ts\n            \n            class\n            WebSocketService\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/settings.ts\n            \n            class\n            RepoSettings\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/settings.ts\n            \n            class\n            Values\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/settings.ts\n            \n            injectable\n            Settings\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/support/container.templates.ts\n            \n            injectable\n            ContainerTemplates\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/support/live-pods.ts\n            \n            class\n            LivePods\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/support/live-pods.ts\n            \n            class\n            LivePodsCount\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.2.15\n        \n            @angular/cdk : ^7.3.7\n        \n            @angular/common : ^7.2.15\n        \n            @angular/compiler : ^7.2.15\n        \n            @angular/core : ^7.2.15\n        \n            @angular/forms : ^7.2.15\n        \n            @angular/material : ^7.3.7\n        \n            @angular/platform-browser : ^7.2.15\n        \n            @angular/platform-browser-dynamic : ^7.2.15\n        \n            @angular/router : ^7.2.15\n        \n            @fortawesome/angular-fontawesome : ^0.3.0\n        \n            @fortawesome/fontawesome-svg-core : ^1.2.22\n        \n            @fortawesome/free-brands-svg-icons : ^5.10.2\n        \n            @fortawesome/free-regular-svg-icons : ^5.10.2\n        \n            @fortawesome/free-solid-svg-icons : ^5.10.2\n        \n            core-js : ^2.6.9\n        \n            font-awesome : ^4.7.0\n        \n            hammerjs : ^2.0.8\n        \n            jquery : ^3.4.1\n        \n            moment : ^2.24.0\n        \n            ng-drag-drop : ^5.0.0\n        \n            ng2-file-upload : ^1.3.0\n        \n            ngx-xml2json : ^1.0.2\n        \n            rxjs : ~6.5.3\n        \n            rxjs-compat : ^6.5.3\n        \n            tslib : ^1.10.0\n        \n            zone.js : ^0.8.29\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            APIType   (src/.../api-gateway.service.ts)\n                        \n                        \n                            Condition   (src/.../api-gateway.service.ts)\n                        \n                        \n                            ContainerStatus   (src/.../docker-container.ts)\n                        \n                        \n                            DeploymentStatus   (src/.../k8s-deployment.ts)\n                        \n                        \n                            DisplayType   (src/.../project.ts)\n                        \n                        \n                            DockerFilterType   (src/.../docker.service.ts)\n                        \n                        \n                            FileStatus   (src/.../git-source-control.service.ts)\n                        \n                        \n                            GitType   (src/.../settings.ts)\n                        \n                        \n                            ImageStatus   (src/.../docker-image.ts)\n                        \n                        \n                            Maturity   (src/.../api-gateway.service.ts)\n                        \n                        \n                            PayloadContentType   (src/.../payload.ts)\n                        \n                        \n                            PayloadOrigin   (src/.../payload.ts)\n                        \n                        \n                            PodStatus   (src/.../k8s-pod.ts)\n                        \n                        \n                            TestStatus   (src/.../docker-image.ts)\n                        \n                        \n                            Type   (src/.../api-gateway.service.ts)\n                        \n                        \n                            VersionType   (src/.../docker-image.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/api-gateway.service.ts\n    \n        \n            \n                \n                    \n                        \n                        APIType\n                    \n                \n                        \n                            \n                                 REST\n                            \n                        \n                        \n                            \n                                Value : REST\n                            \n                        \n                        \n                            \n                                 SOAP\n                            \n                        \n                        \n                            \n                                Value : SOAP\n                            \n                        \n                        \n                            \n                                 SOCKET\n                            \n                        \n                        \n                            \n                                Value : Web Socket\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Condition\n                    \n                \n                        \n                            \n                                 or\n                            \n                        \n                        \n                            \n                                Value : or\n                            \n                        \n                        \n                            \n                                 and\n                            \n                        \n                        \n                            \n                                Value : and\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Maturity\n                    \n                \n                        \n                            \n                                 Beta\n                            \n                        \n                        \n                            \n                                Value : Beta\n                            \n                        \n                        \n                            \n                                 Deprecated\n                            \n                        \n                        \n                            \n                                Value : Deprecated\n                            \n                        \n                        \n                            \n                                 Experimental\n                            \n                        \n                        \n                            \n                                Value : Experimental\n                            \n                        \n                        \n                            \n                                 Production\n                            \n                        \n                        \n                            \n                                Value : Production\n                            \n                        \n                        \n                            \n                                 Test\n                            \n                        \n                        \n                            \n                                Value : Test\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Type\n                    \n                \n                        \n                            \n                                 api\n                            \n                        \n                        \n                            \n                                Value : api\n                            \n                        \n                        \n                            \n                                 application\n                            \n                        \n                        \n                            \n                                Value : application\n                            \n                        \n                        \n                            \n                                 alias\n                            \n                        \n                        \n                            \n                                Value : application\n                            \n                        \n                        \n                            \n                                 user\n                            \n                        \n                        \n                            \n                                Value : user\n                            \n                        \n                        \n                            \n                                 group\n                            \n                        \n                        \n                            \n                                Value : group\n                            \n                        \n                        \n                            \n                                 policy\n                            \n                        \n                        \n                            \n                                Value : policy\n                            \n                        \n            \n        \n\n    src/app/models/docker-container.ts\n    \n        \n            \n                \n                    \n                        \n                        ContainerStatus\n                    \n                \n                        \n                            \n                                 New\n                            \n                        \n                        \n                            \n                                Value : New\n                            \n                        \n                        \n                            \n                                 Starting\n                            \n                        \n                        \n                            \n                                Value : Starting\n                            \n                        \n                        \n                            \n                                 Running\n                            \n                        \n                        \n                            \n                                Value : Running\n                            \n                        \n                        \n                            \n                                 Terminating\n                            \n                        \n                        \n                            \n                                Value : Terminated\n                            \n                        \n                        \n                            \n                                 Terminated\n                            \n                        \n                        \n                            \n                                Value : Terminated\n                            \n                        \n                        \n                            \n                                 Removed\n                            \n                        \n                        \n                            \n                                Value : Removed\n                            \n                        \n            \n        \n\n    src/app/models/k8s-deployment.ts\n    \n        \n            \n                \n                    \n                        \n                        DeploymentStatus\n                    \n                \n                        \n                            \n                                 unknown\n                            \n                        \n                        \n                            \n                                Value : unknown\n                            \n                        \n                        \n                            \n                                 running\n                            \n                        \n                        \n                            \n                                Value : running\n                            \n                        \n                        \n                            \n                                 updating\n                            \n                        \n                        \n                            \n                                Value : updating\n                            \n                        \n                        \n                            \n                                 suspended\n                            \n                        \n                        \n                            \n                                Value : suspended\n                            \n                        \n                        \n                            \n                                 stopped\n                            \n                        \n                        \n                            \n                                Value : stopped\n                            \n                        \n                        \n                            \n                                 unavailable\n                            \n                        \n                        \n                            \n                                Value : unavailable\n                            \n                        \n                        \n                            \n                                 new\n                            \n                        \n                        \n                            \n                                Value : new\n                            \n                        \n            \n        \n\n    src/app/models/project.ts\n    \n        \n            \n                \n                    \n                        \n                        DisplayType\n                    \n                \n                        \n                            \n                                 hidden\n                            \n                        \n                        \n                            \n                                Value : hidden\n                            \n                        \n                        \n                            \n                                 readonly\n                            \n                        \n                        \n                            \n                                Value : readonly\n                            \n                        \n                        \n                            \n                                 editable\n                            \n                        \n                        \n                            \n                                Value : editable\n                            \n                        \n                        \n                            \n                                 password\n                            \n                        \n                        \n                            \n                                Value : password\n                            \n                        \n                        \n                            \n                                 file\n                            \n                        \n                        \n                            \n                                Value : file\n                            \n                        \n                        \n                            \n                                 dropdown\n                            \n                        \n                        \n                            \n                                Value : dropdown\n                            \n                        \n                        \n                            \n                                 yesno\n                            \n                        \n                        \n                            \n                                Value : yesno\n                            \n                        \n            \n        \n\n    src/app/services/docker.service.ts\n    \n        \n            \n                \n                    \n                        \n                        DockerFilterType\n                    \n                \n                        \n                            \n                                 all\n                            \n                        \n                        \n                            \n                                 sag\n                            \n                        \n                        \n                            \n                                 custom\n                            \n                        \n            \n        \n\n    src/app/services/git-source-control.service.ts\n    \n        \n            \n                \n                    \n                        \n                        FileStatus\n                    \n                \n                        \n                            \n                                 added\n                            \n                        \n                        \n                            \n                                 removed\n                            \n                        \n                        \n                            \n                                 changed\n                            \n                        \n            \n        \n\n    src/app/settings.ts\n    \n        \n            \n                \n                    \n                        \n                        GitType\n                    \n                \n                        \n                            \n                                 github\n                            \n                        \n                        \n                            \n                                 gitlab\n                            \n                        \n            \n        \n\n    src/app/models/docker-image.ts\n    \n        \n            \n                \n                    \n                        \n                        ImageStatus\n                    \n                \n                        \n                            \n                                 new\n                            \n                        \n                        \n                            \n                                 deployed\n                            \n                        \n                        \n                            \n                                 running\n                            \n                        \n                        \n                            \n                                 failed\n                            \n                        \n                        \n                            \n                                 deprecated\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TestStatus\n                    \n                \n                        \n                            \n                                 none\n                            \n                        \n                        \n                            \n                                 unknown\n                            \n                        \n                        \n                            \n                                 passed\n                            \n                        \n                        \n                            \n                                 failed\n                            \n                        \n                        \n                            \n                                 todo\n                            \n                        \n                        \n                            \n                                 running\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        VersionType\n                    \n                \n                        \n                            \n                                 major\n                            \n                        \n                        \n                            \n                                 minor\n                            \n                        \n                        \n                            \n                                 patch\n                            \n                        \n            \n        \n\n    src/app/models/payload.ts\n    \n        \n            \n                \n                    \n                        \n                        PayloadContentType\n                    \n                \n                        \n                            \n                                 empty\n                            \n                        \n                        \n                            \n                                 json\n                            \n                        \n                        \n                            \n                                 xml\n                            \n                        \n                        \n                            \n                                 string\n                            \n                        \n                        \n                            \n                                 object\n                            \n                        \n                        \n                            \n                                 idata\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        PayloadOrigin\n                    \n                \n                        \n                            \n                                 none\n                            \n                        \n                        \n                            \n                                 file\n                            \n                        \n                        \n                            \n                                 url\n                            \n                        \n                        \n                            \n                                 service\n                            \n                        \n                        \n                            \n                                 error\n                            \n                        \n            \n        \n\n    src/app/models/k8s-pod.ts\n    \n        \n            \n                \n                    \n                        \n                        PodStatus\n                    \n                \n                        \n                            \n                                 Pending\n                            \n                        \n                        \n                            \n                                Value : Pending\n                            \n                        \n                        \n                            \n                                 Starting\n                            \n                        \n                        \n                            \n                                Value : Starting\n                            \n                        \n                        \n                            \n                                 Running\n                            \n                        \n                        \n                            \n                                Value : Running\n                            \n                        \n                        \n                            \n                                 Stopping\n                            \n                        \n                        \n                            \n                                Value : Stopping\n                            \n                        \n                        \n                            \n                                 Terminated\n                            \n                        \n                        \n                            \n                                Value : Terminated\n                            \n                        \n                        \n                            \n                                 Removed\n                            \n                        \n                        \n                            \n                                Value : Removed\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            parserReviver   (src/.../project.ts)\n                        \n                        \n                            stringifyReplacer   (src/.../project.ts)\n                        \n                        \n                            stringifyReplacer   (src/.../docker.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/models/project.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            parserReviver\n                        \n                        \n                    \n                \n            \n            \n                \nparserReviver(key, value)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            stringifyReplacer\n                        \n                        \n                    \n                \n            \n            \n                \nstringifyReplacer(key, value)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/services/docker.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            stringifyReplacer\n                        \n                        \n                    \n                \n            \n            \n                \nstringifyReplacer(key, value)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nWmDevopsConsole\nThis project was generated with Angular CLI version 7.1.2.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nActionComponent\n\nActionComponent\n\nAppModule -->\n\nActionComponent->AppModule\n\n\n\n\n\nApiGatewayInstallerComponent\n\nApiGatewayInstallerComponent\n\nAppModule -->\n\nApiGatewayInstallerComponent->AppModule\n\n\n\n\n\nApiMicroGatewayInstallerComponent\n\nApiMicroGatewayInstallerComponent\n\nAppModule -->\n\nApiMicroGatewayInstallerComponent->AppModule\n\n\n\n\n\nApiPortalInstallerComponent\n\nApiPortalInstallerComponent\n\nAppModule -->\n\nApiPortalInstallerComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBuildCommandsComponent\n\nBuildCommandsComponent\n\nAppModule -->\n\nBuildCommandsComponent->AppModule\n\n\n\n\n\nBuildComponent\n\nBuildComponent\n\nAppModule -->\n\nBuildComponent->AppModule\n\n\n\n\n\nBuildExeComponent\n\nBuildExeComponent\n\nAppModule -->\n\nBuildExeComponent->AppModule\n\n\n\n\n\nBuildImageChooseDirective\n\nBuildImageChooseDirective\n\nAppModule -->\n\nBuildImageChooseDirective->AppModule\n\n\n\n\n\nBuildImageComponent\n\nBuildImageComponent\n\nAppModule -->\n\nBuildImageComponent->AppModule\n\n\n\n\n\nBuildInstallComponent\n\nBuildInstallComponent\n\nAppModule -->\n\nBuildInstallComponent->AppModule\n\n\n\n\n\nBuildPackagesComponent\n\nBuildPackagesComponent\n\nAppModule -->\n\nBuildPackagesComponent->AppModule\n\n\n\n\n\nCancelCdkDrag\n\nCancelCdkDrag\n\nAppModule -->\n\nCancelCdkDrag->AppModule\n\n\n\n\n\nContainerComponent\n\nContainerComponent\n\nAppModule -->\n\nContainerComponent->AppModule\n\n\n\n\n\nContainersComponent\n\nContainersComponent\n\nAppModule -->\n\nContainersComponent->AppModule\n\n\n\n\n\nDeploymentDetailsComponent\n\nDeploymentDetailsComponent\n\nAppModule -->\n\nDeploymentDetailsComponent->AppModule\n\n\n\n\n\nDeploymentListComponent\n\nDeploymentListComponent\n\nAppModule -->\n\nDeploymentListComponent->AppModule\n\n\n\n\n\nDockerImageChooserComponent\n\nDockerImageChooserComponent\n\nAppModule -->\n\nDockerImageChooserComponent->AppModule\n\n\n\n\n\nDockerImageListComponent\n\nDockerImageListComponent\n\nAppModule -->\n\nDockerImageListComponent->AppModule\n\n\n\n\n\nDockerImageVersionsComponent\n\nDockerImageVersionsComponent\n\nAppModule -->\n\nDockerImageVersionsComponent->AppModule\n\n\n\n\n\nEditContainerComponent\n\nEditContainerComponent\n\nAppModule -->\n\nEditContainerComponent->AppModule\n\n\n\n\n\nGitSourcesComponent\n\nGitSourcesComponent\n\nAppModule -->\n\nGitSourcesComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nInstallerComponent\n\nInstallerComponent\n\nAppModule -->\n\nInstallerComponent->AppModule\n\n\n\n\n\nMicroServiceBuilderComponent\n\nMicroServiceBuilderComponent\n\nAppModule -->\n\nMicroServiceBuilderComponent->AppModule\n\n\n\n\n\nMicroServiceInstallerComponent\n\nMicroServiceInstallerComponent\n\nAppModule -->\n\nMicroServiceInstallerComponent->AppModule\n\n\n\n\n\nNgFileDrop\n\nNgFileDrop\n\nAppModule -->\n\nNgFileDrop->AppModule\n\n\n\n\n\nNgFileSelect\n\nNgFileSelect\n\nAppModule -->\n\nNgFileSelect->AppModule\n\n\n\n\n\nPodsListComponent\n\nPodsListComponent\n\nAppModule -->\n\nPodsListComponent->AppModule\n\n\n\n\n\nRuntimeActionsDirective\n\nRuntimeActionsDirective\n\nAppModule -->\n\nRuntimeActionsDirective->AppModule\n\n\n\n\n\nRuntimeContainersComponent\n\nRuntimeContainersComponent\n\nAppModule -->\n\nRuntimeContainersComponent->AppModule\n\n\n\n\n\nRuntimeDeployComponent\n\nRuntimeDeployComponent\n\nAppModule -->\n\nRuntimeDeployComponent->AppModule\n\n\n\n\n\nRuntimeDetailsComponent\n\nRuntimeDetailsComponent\n\nAppModule -->\n\nRuntimeDetailsComponent->AppModule\n\n\n\n\n\nRuntimeK8sComponent\n\nRuntimeK8sComponent\n\nAppModule -->\n\nRuntimeK8sComponent->AppModule\n\n\n\n\n\nRuntimeScaleComponent\n\nRuntimeScaleComponent\n\nAppModule -->\n\nRuntimeScaleComponent->AppModule\n\n\n\n\n\nRuntimeStageComponent\n\nRuntimeStageComponent\n\nAppModule -->\n\nRuntimeStageComponent->AppModule\n\n\n\n\n\nRuntimeUpdateComponent\n\nRuntimeUpdateComponent\n\nAppModule -->\n\nRuntimeUpdateComponent->AppModule\n\n\n\nAppModule -->\n\nRuntimeUpdateComponent->AppModule\n\n\n\n\n\nSagImageAlerterComponent\n\nSagImageAlerterComponent\n\nAppModule -->\n\nSagImageAlerterComponent->AppModule\n\n\n\n\n\nServicePropertiesComponent\n\nServicePropertiesComponent\n\nAppModule -->\n\nServicePropertiesComponent->AppModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nAppModule -->\n\nSettingsComponent->AppModule\n\n\n\n\n\nSimpleNameComponent\n\nSimpleNameComponent\n\nAppModule -->\n\nSimpleNameComponent->AppModule\n\n\n\n\n\nStagingComponent\n\nStagingComponent\n\nAppModule -->\n\nStagingComponent->AppModule\n\n\n\n\n\nTestCaseComponent\n\nTestCaseComponent\n\nAppModule -->\n\nTestCaseComponent->AppModule\n\n\n\n\n\nTestDefinitionComponent\n\nTestDefinitionComponent\n\nAppModule -->\n\nTestDefinitionComponent->AppModule\n\n\n\n\n\nTestHistoryComponent\n\nTestHistoryComponent\n\nAppModule -->\n\nTestHistoryComponent->AppModule\n\n\n\n\n\nTestRunComponent\n\nTestRunComponent\n\nAppModule -->\n\nTestRunComponent->AppModule\n\n\n\n\n\nUMInstallerComponent\n\nUMInstallerComponent\n\nAppModule -->\n\nUMInstallerComponent->AppModule\n\n\n\n\n\nUploadButtonComponent\n\nUploadButtonComponent\n\nAppModule -->\n\nUploadButtonComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nConfigurationService\n\nConfigurationService\n\nAppModule -->\n\nConfigurationService->AppModule\n\n\n\n\n\nContainerTemplates\n\nContainerTemplates\n\nAppModule -->\n\nContainerTemplates->AppModule\n\n\n\n\n\nDockerService\n\nDockerService\n\nAppModule -->\n\nDockerService->AppModule\n\n\n\n\n\nGitSourceService\n\nGitSourceService\n\nAppModule -->\n\nGitSourceService->AppModule\n\n\n\n\n\nK8sService\n\nK8sService\n\nAppModule -->\n\nK8sService->AppModule\n\n\n\n\n\nPackagesService\n\nPackagesService\n\nAppModule -->\n\nPackagesService->AppModule\n\n\n\n\n\nResourceService\n\nResourceService\n\nAppModule -->\n\nResourceService->AppModule\n\n\n\n\n\nSettings\n\nSettings\n\nAppModule -->\n\nSettings->AppModule\n\n\n\n\n\nTestConfigService\n\nTestConfigService\n\nAppModule -->\n\nTestConfigService->AppModule\n\n\n\n\n\nTestTraceService\n\nTestTraceService\n\nAppModule -->\n\nTestTraceService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    44 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    52 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            _sideNavMenuSetup   (src/.../app.module.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            PODS_LIST_REFRESH_INTERVAL   (src/.../pods-list.component.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            UPLOAD_DIRECTIVES   (src/.../ng2-uploader.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            _sideNavMenuSetup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map([\n\n     [\"home\", {\n       \"label\": \"Home\",\n       \"icon\": \"home\",\n       \"iconClass\": \"fas\",\n       \"isTop\": true\n     }\n     ],\n     [\"build\", {\n       \"label\": \"Build\",\n       \"icon\": \"box\",\n       \"iconClass\": \"fas\",\n       \"isTop\": true,\n       \"children\": [\n         \"install\",\n         \"package\",\n         \"image\"\n       ]\n     }\n     ],\n     [\"deploy\", {\n       \"label\": \"Deploy\",\n       \"icon\": \"rocket\",\n       \"iconClass\": \"fas\",\n       \"isTop\": true,\n       \"children\": [\n         \"run\",\n         \"stage\"\n       ]\n     }\n     ],\n     [\"test\", {\n       \"label\": \"Test\",\n       \"icon\": \"vial\",\n       \"isTop\": true,\n       \"children\": [\n         \"testDefinition\",\n         \"testRun\"\n       ]\n     }\n     ],\n     [\"k8s\", {\n       \"label\": \"Kubernetes\",\n       \"iconClass\": \"img\",\n       \"icon\": \"assets/_images/k8s-logo.png\",\n       \"isTop\": true,\n       \"children\": [\n         \"scale\",\n         \"update\"\n       ]\n     },\n     ],\n     [\"settings\", {\n       \"label\": \"Preferences\",\n       \"icon\": \"cog\",\n       \"isTop\": true\n     }],\n     [\"scale\", {\n       \"label\": \"Scale\"\n     }],\n     [\"update\", {\n       \"label\": \"Update Version\"\n     }],\n     [\"install\", {\n       \"label\": \"Install\"\n     }],\n     [\"package\", {\n       \"label\": \"Source\"\n     }],\n     [\"image\", {\n       \"label\": \"Make\"\n     }],\n     [\"run\", {\n       \"label\": \"Run\"\n     }],\n     [\"stage\", {\n       \"label\": \"Staging\"\n     }],\n     [\"deployment\", {\n       \"label\": \"Define Deployment\"\n     }],\n     [\"deployRun\", {\n       \"label\": \"Deploy\"\n     }],\n      [\"testDefinition\", {\n       \"label\": \"Test Setup\"\n     }],\n      [\"testRun\", {\n       \"label\": \"Run Test suite\"\n     }]\n ])\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/components/k8s/pods-list.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            PODS_LIST_REFRESH_INTERVAL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 5000\n                        \n                    \n\n\n            \n        \n\n    src/app/extras/ng2-uploader.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UPLOAD_DIRECTIVES\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [NgFileSelect, NgFileDrop]\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
